import {
  $,
  $s,
  A,
  Ae,
  Ao,
  Ar,
  B,
  Be,
  C,
  Ce,
  Co,
  De,
  Do,
  Ee,
  F,
  Fe,
  G,
  H,
  I,
  Ie,
  Io,
  Ir,
  Je,
  Jr,
  Js,
  K,
  Ks,
  L,
  Le,
  M,
  Me,
  Mo,
  N,
  Ne,
  No,
  Nr,
  O,
  Oe,
  P,
  Ps,
  Q,
  Qe,
  R,
  S,
  Sr,
  To,
  Ue,
  V,
  Vr,
  W,
  We,
  Ws,
  X,
  Xr,
  Y,
  Ye,
  Yr,
  Ze,
  Zs,
  _,
  _e,
  _o,
  _s,
  a,
  ao,
  as,
  be,
  c,
  ce,
  co,
  d,
  de,
  eo,
  es,
  et,
  f,
  fe,
  fo,
  g,
  ge,
  he,
  ho,
  hs,
  i,
  ie,
  io,
  it,
  j,
  k,
  ke,
  ko,
  kr,
  l,
  le,
  me,
  mr,
  n,
  no,
  ns,
  nt,
  o,
  oe,
  oo,
  os,
  p,
  pe,
  po,
  q,
  qe,
  qs,
  r,
  re,
  ro,
  s,
  se,
  so,
  st,
  t,
  te,
  to,
  ts,
  tt,
  u,
  uo,
  v,
  ve,
  w,
  xe,
  xo,
  xr,
  y,
  ye,
  z,
  zr
} from "./chunk-SPC6F3KB.js";
import {
  BROWSER_SUPPORT_MIME_TYPE_LIST,
  CACHED_MESSAGE_TEMPLATES_KEY,
  CACHED_MESSAGE_TEMPLATES_TOKEN_KEY,
  DEFAULT_MULTIPLE_FILES_MESSAGE_LIMIT,
  DEFAULT_UPLOAD_SIZE_LIMIT,
  DELIVERY_RECEIPT,
  MESSAGE_TEMPLATE_KEY,
  META_ARRAY_MESSAGE_TYPE_KEY,
  META_ARRAY_MESSAGE_TYPE_VALUE__VOICE,
  META_ARRAY_VOICE_DURATION_KEY,
  ONE_MiB,
  SCROLL_BOTTOM_DELAY_FOR_FETCH,
  SCROLL_BOTTOM_DELAY_FOR_SEND,
  SCROLL_BUFFER,
  SLIDER_BUTTON_ICON_SIDE_LENGTH,
  VOICE_MESSAGE_FILE_NAME,
  VOICE_MESSAGE_FILE_NAME__XM4A,
  VOICE_MESSAGE_MIME_TYPE,
  VOICE_MESSAGE_MIME_TYPE__XM4A,
  VOICE_PLAYER_AUDIO_ID,
  VOICE_PLAYER_ROOT_ID,
  VOICE_RECORDER_AUDIO_BIT_RATE,
  VOICE_RECORDER_CLICK_BUFFER_TIME,
  VOICE_RECORDER_DEFAULT_MAX,
  VOICE_RECORDER_DEFAULT_MIN
} from "./chunk-LUIH7L4M.js";
import {
  require_react_dom
} from "./chunk-QT63QQJV.js";
import {
  require_react
} from "./chunk-RLJ2RCJQ.js";
import {
  __toESM
} from "./chunk-DC5AMYBS.js";

// node_modules/@sendbird/uikit-react/chunks/bundle-XQWyv823.js
var extendStatics = function(d5, b6) {
  extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d6, b7) {
    d6.__proto__ = b7;
  } || function(d6, b7) {
    for (var p4 in b7) if (Object.prototype.hasOwnProperty.call(b7, p4)) d6[p4] = b7[p4];
  };
  return extendStatics(d5, b6);
};
function __extends(d5, b6) {
  if (typeof b6 !== "function" && b6 !== null)
    throw new TypeError("Class extends value " + String(b6) + " is not a constructor or null");
  extendStatics(d5, b6);
  function __() {
    this.constructor = d5;
  }
  d5.prototype = b6 === null ? Object.create(b6) : (__.prototype = b6.prototype, new __());
}
var __assign = function() {
  __assign = Object.assign || function __assign2(t7) {
    for (var s6, i4 = 1, n3 = arguments.length; i4 < n3; i4++) {
      s6 = arguments[i4];
      for (var p4 in s6) if (Object.prototype.hasOwnProperty.call(s6, p4)) t7[p4] = s6[p4];
    }
    return t7;
  };
  return __assign.apply(this, arguments);
};
function __rest(s6, e4) {
  var t7 = {};
  for (var p4 in s6) if (Object.prototype.hasOwnProperty.call(s6, p4) && e4.indexOf(p4) < 0)
    t7[p4] = s6[p4];
  if (s6 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i4 = 0, p4 = Object.getOwnPropertySymbols(s6); i4 < p4.length; i4++) {
      if (e4.indexOf(p4[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s6, p4[i4]))
        t7[p4[i4]] = s6[p4[i4]];
    }
  return t7;
}
function __awaiter(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e4) {
        reject(e4);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e4) {
        reject(e4);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _2 = { label: 0, sent: function() {
    if (t7[0] & 1) throw t7[1];
    return t7[1];
  }, trys: [], ops: [] }, f4, y6, t7, g4 = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
  return g4.next = verb(0), g4["throw"] = verb(1), g4["return"] = verb(2), typeof Symbol === "function" && (g4[Symbol.iterator] = function() {
    return this;
  }), g4;
  function verb(n3) {
    return function(v5) {
      return step([n3, v5]);
    };
  }
  function step(op) {
    if (f4) throw new TypeError("Generator is already executing.");
    while (g4 && (g4 = 0, op[0] && (_2 = 0)), _2) try {
      if (f4 = 1, y6 && (t7 = op[0] & 2 ? y6["return"] : op[0] ? y6["throw"] || ((t7 = y6["return"]) && t7.call(y6), 0) : y6.next) && !(t7 = t7.call(y6, op[1])).done) return t7;
      if (y6 = 0, t7) op = [op[0] & 2, t7.value];
      switch (op[0]) {
        case 0:
        case 1:
          t7 = op;
          break;
        case 4:
          _2.label++;
          return { value: op[1], done: false };
        case 5:
          _2.label++;
          y6 = op[1];
          op = [0];
          continue;
        case 7:
          op = _2.ops.pop();
          _2.trys.pop();
          continue;
        default:
          if (!(t7 = _2.trys, t7 = t7.length > 0 && t7[t7.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _2 = 0;
            continue;
          }
          if (op[0] === 3 && (!t7 || op[1] > t7[0] && op[1] < t7[3])) {
            _2.label = op[1];
            break;
          }
          if (op[0] === 6 && _2.label < t7[1]) {
            _2.label = t7[1];
            t7 = op;
            break;
          }
          if (t7 && _2.label < t7[2]) {
            _2.label = t7[2];
            _2.ops.push(op);
            break;
          }
          if (t7[2]) _2.ops.pop();
          _2.trys.pop();
          continue;
      }
      op = body.call(thisArg, _2);
    } catch (e4) {
      op = [6, e4];
      y6 = 0;
    } finally {
      f4 = t7 = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __spreadArray(to2, from, pack) {
  if (pack || arguments.length === 2) for (var i4 = 0, l3 = from.length, ar3; i4 < l3; i4++) {
    if (ar3 || !(i4 in from)) {
      if (!ar3) ar3 = Array.prototype.slice.call(from, 0, i4);
      ar3[i4] = from[i4];
    }
  }
  return to2.concat(ar3 || Array.prototype.slice.call(from));
}

// node_modules/@sendbird/uikit-react/SendbirdProvider.js
var import_react27 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-tools/dist/esm/uikitConfiguration/internal/context.js
var import_react12 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-tools/dist/esm/constants/applicationAttributes.js
var applicationAttributes = {
  reactions: "reactions",
  message_search_v3: "message_search_v3",
  enable_og_tag: "enable_og_tag",
  enable_message_threading: "enable_message_threading",
  allow_broadcast_channel: "allow_broadcast_channel",
  allow_super_group_channel: "allow_super_group_channel"
};

// node_modules/@sendbird/uikit-tools/dist/esm/constants/premiumFeatures.js
var premiumFeatures = {
  reactions: "reactions",
  moderation_group: "moderation_group",
  message_search_v3: "message_search_v3",
  data_export: "data_export",
  migration: "migration",
  delivery_receipt: "delivery_receipt",
  auto_thumbnail: "auto_thumbnail",
  image_moderation: "image_moderation",
  super_group_channel: "super_group_channel",
  announcement: "announcement",
  moderation_open: "moderation_open",
  desk: "desk",
  bot_interface: "bot_interface",
  auto_trans: "auto_trans"
};

// node_modules/@sendbird/chat/lib/__bundle-e1a5e3f1.js
var Ce2;
var Oe2 = function() {
  function r4(e4, t7, n3) {
    var r5, i4;
    this.width = 0, this.height = 0, this.realWidth = 0, this.realHeight = 0, this._requireAuth = false, this._iid = e4, this.plainUrl = t7.url, this.width = t7.width, this.height = t7.height, this.realWidth = null !== (r5 = t7.real_width) && void 0 !== r5 ? r5 : t7.width, this.realHeight = null !== (i4 = t7.real_height) && void 0 !== i4 ? i4 : t7.height, this._requireAuth = n3;
  }
  return r4.payloadify = function(n3) {
    return re(se(n3 instanceof r4 ? { url: n3.plainUrl, width: n3.width, height: n3.height, real_width: n3.realWidth, real_height: n3.realHeight } : { url: "", width: n3.maxWidth, height: n3.maxHeight, real_width: 0, real_height: 0 }));
  }, Object.defineProperty(r4.prototype, "url", { get: function() {
    var e4 = Ws.of(this._iid).sessionManager;
    return this._requireAuth && e4.ekey ? "".concat(this.plainUrl, "?auth=").concat(e4.ekey) : this.plainUrl;
  }, enumerable: false, configurable: true }), r4;
}();
var Pe = function(t7) {
  function n3(n4) {
    var r4 = t7.call(this) || this;
    if (r4.method = oe.POST, r4.path = "".concat(le), r4.params = re({ file: n4.file, channel_url: n4.channelUrl }), n4.thumbnailSizes) for (var a5 = 0; a5 < n4.thumbnailSizes.length; a5++) {
      var o3 = n4.thumbnailSizes[a5], u4 = o3.maxWidth, c4 = o3.maxHeight;
      r4.params["thumbnail".concat(a5 + 1)] = "".concat(u4, ",").concat(c4);
    }
    return r4.requestId = n4.requestId, r4;
  }
  return t(n3, t7), n3;
}(xe);
var ke2 = function(e4) {
  function t7(t8, n3) {
    var r4, i4, s6, a5, o3 = this;
    return (o3 = e4.call(this, t8, n3) || this).url = n3.url, o3.fileSize = null !== (r4 = n3.file_size) && void 0 !== r4 ? r4 : 0, o3.thumbnails = null !== (s6 = null === (i4 = n3.thumbnails) || void 0 === i4 ? void 0 : i4.map(function(e5) {
      return new Oe2(t8, e5, false);
    })) && void 0 !== s6 ? s6 : [], o3.requireAuth = null !== (a5 = n3.require_auth) && void 0 !== a5 && a5, o3;
  }
  return t(t7, e4), t7;
}(Ue);
var Re = function(n3) {
  function i4(e4, t7) {
    var r4, i5, s6, a5, o3, u4 = this;
    return (u4 = n3.call(this, e4) || this).replyCount = 0, u4.memberCount = 0, u4.lastRepliedAt = 0, u4.updatedAt = 0, u4.replyCount = null !== (r4 = t7.reply_count) && void 0 !== r4 ? r4 : 0, u4.memberCount = null !== (i5 = t7.member_count) && void 0 !== i5 ? i5 : 0, u4.mostRepliedUsers = t7.most_replies && N("object", t7.most_replies) ? t7.most_replies.map(function(e5) {
      return new es(u4._iid, e5);
    }) : [], u4.unreadReplyCount = null !== (s6 = t7.unread_message_count) && void 0 !== s6 ? s6 : 0, u4.isPushNotificationEnabled = "number" == typeof t7.push_enabled ? t7.push_enabled > 0 : void 0, u4.lastRepliedAt = null !== (a5 = t7.last_replied_at) && void 0 !== a5 ? a5 : 0, u4.updatedAt = null !== (o3 = t7.updated_at) && void 0 !== o3 ? o3 : 0, u4;
  }
  return t(i4, n3), i4.payloadify = function(r4) {
    return re(se(n(n({}, n3.payloadify.call(this, r4)), { reply_count: r4.replyCount, unread_message_count: r4.unreadReplyCount, member_count: r4.memberCount, most_replies: Array.isArray(r4.mostRepliedUsers) ? r4.mostRepliedUsers.map(function(e4) {
      return es.payloadify(e4);
    }) : [], push_enabled: "boolean" == typeof r4.isPushNotificationEnabled ? r4.isPushNotificationEnabled ? 1 : 0 : void 0, last_replied_at: r4.lastRepliedAt, updated_at: r4.updatedAt })));
  }, Object.defineProperty(i4.prototype, "_isUpdateRequired", { get: function() {
    return void 0 === this.unreadReplyCount || void 0 === this.isPushNotificationEnabled;
  }, enumerable: false, configurable: true }), i4.prototype._updateFrom = function(e4) {
    var t7, n4;
    this.unreadReplyCount = null !== (t7 = e4.unreadReplyCount) && void 0 !== t7 ? t7 : this.unreadReplyCount, this.isPushNotificationEnabled = null !== (n4 = e4.isPushNotificationEnabled) && void 0 !== n4 ? n4 : this.isPushNotificationEnabled;
  }, i4;
}(zr);
!function(e4) {
  e4.ADD = "add", e4.DELETE = "delete";
}(Ce2 || (Ce2 = {}));
var xe2;
var De2 = function(e4) {
  this.messageId = 0, this.operation = null, this.updatedAt = 0;
  var t7 = w("string", e4.msg_id) ? parseInt(e4.msg_id) : e4.msg_id, n3 = e4.user_id, r4 = e4.operation ? e4.operation.toLowerCase() : null, i4 = e4.reaction, s6 = e4.updated_at;
  t7 && w("string", n3) && w("string", r4) && S(Ce2, r4) && w("string", i4) && i4 && w("number", s6) && (this.messageId = t7, this.userId = n3, this.key = i4, this.operation = r4, this.updatedAt = s6);
};
var Le2 = function() {
  function n3(e4) {
    var t7, n4, r4, i4 = e4.key, s6 = null !== (r4 = c([], a(e4.user_ids), false)) && void 0 !== r4 ? r4 : [], a5 = e4.updated_at;
    w("string", i4) && i4 && N("string", s6) && s6.length > 0 && w("number", a5) && (this.key = i4, this.userIds = s6, this.updatedAt = a5);
    var o3 = {};
    try {
      for (var u4 = o(this.userIds), c4 = u4.next(); !c4.done; c4 = u4.next()) {
        o3[c4.value] = this.updatedAt;
      }
    } catch (e5) {
      t7 = { error: e5 };
    } finally {
      try {
        c4 && !c4.done && (n4 = u4.return) && n4.call(u4);
      } finally {
        if (t7) throw t7.error;
      }
    }
    this._version = o3;
  }
  return Object.defineProperty(n3.prototype, "isEmpty", { get: function() {
    return 0 === this.userIds.length;
  }, enumerable: false, configurable: true }), n3.payloadify = function(n4) {
    return re(se({ key: n4.key, user_ids: n4.userIds, updated_at: n4.updatedAt }));
  }, n3.prototype.applyEvent = function(e4) {
    if (e4.key === this.key && this.updatedAt <= e4.updatedAt) {
      if (!this._version[e4.userId] || this._version[e4.userId] <= e4.updatedAt) {
        var t7 = this.userIds.indexOf(e4.userId);
        switch (e4.operation) {
          case Ce2.ADD:
            t7 < 0 && this.userIds.push(e4.userId);
            break;
          case Ce2.DELETE:
            t7 >= 0 && this.userIds.splice(t7, 1);
        }
        this._version[e4.userId] = e4.updatedAt;
      }
      this.updatedAt = Math.max(this.updatedAt, e4.updatedAt);
    }
  }, n3;
}();
var Fe2 = function() {
  function n3(e4) {
    this.secureUrl = null, this.type = null, this.width = 0, this.height = 0, this.alt = null, this.url = e4.url, e4.secure_url && (this.secureUrl = e4.secure_url), e4.type && (this.type = e4.type), e4.width && (this.width = e4.width), e4.height && (this.height = e4.height), e4.alt && (this.alt = e4.alt);
  }
  return n3.payloadify = function(n4) {
    var r4, i4;
    return re(se({ url: n4.url, secure_url: n4.secureUrl, type: n4.type, width: null !== (r4 = n4.width) && void 0 !== r4 ? r4 : 0, height: null !== (i4 = n4.height) && void 0 !== i4 ? i4 : 0, alt: n4.alt }));
  }, n3;
}();
var qe2 = function() {
  function n3(e4) {
    this.title = null, this.url = null, this.description = null, this.defaultImage = null, e4["og:title"] && (this.title = e4["og:title"]), e4["og:url"] && (this.url = e4["og:url"]), e4["og:description"] && (this.description = e4["og:description"]), e4["og:image"] && (this.defaultImage = new Fe2(e4["og:image"]));
  }
  return n3.payloadify = function(n4) {
    return re(se({ "og:title": n4.title, "og:url": n4.url, "og:description": n4.description, "og:image": n4.defaultImage ? Fe2.payloadify(n4.defaultImage) : null }));
  }, n3;
}();
var ze = function() {
  function n3(e4) {
    var t7, n4;
    this.volume = 0, this.name = null !== (t7 = e4.name) && void 0 !== t7 ? t7 : "default", this.volume = null !== (n4 = e4.volume) && void 0 !== n4 ? n4 : 1;
  }
  return n3.prototype.serialize = function() {
    return { name: this.name, volume: this.volume };
  }, n3.payloadify = function(n4) {
    return re(se({ name: n4.name, volume: n4.volume }));
  }, n3;
}();
!function(e4) {
  e4.GOOD = "good", e4.BAD = "bad";
}(xe2 || (xe2 = {}));
var Be2 = function() {
  function n3(e4) {
    this.id = e4.id, this.rating = e4.rating, this.comment = e4.comment;
  }
  return n3._getStatus = function(e4) {
    return e4 ? "id" in e4 ? "SUBMITTED" : "NO_FEEDBACK" : "NOT_APPLICABLE";
  }, n3._isSubmitted = function(e4) {
    return "SUBMITTED" === n3._getStatus(e4);
  }, n3._getPayloadByStatus = function(e4) {
    return "NO_FEEDBACK" === e4 ? {} : null;
  }, n3.payloadify = function(n4) {
    return re(se({ id: n4.id, rating: n4.rating, comment: n4.comment }));
  }, n3;
}();
var Ke = function(n3) {
  function i4(e4, t7) {
    var r4, i5 = this;
    return (i5 = n3.call(this, e4, t7) || this).isBlockedByMe = false, i5.role = S(V, t7.role) ? t7.role : V.NONE, i5.isBlockedByMe = null !== (r4 = t7.is_blocked_by_me) && void 0 !== r4 && r4, i5;
  }
  return t(i4, n3), i4.payloadify = function(r4) {
    return re(se(n(n({}, n3.payloadify.call(this, r4)), { role: r4.role, is_blocked_by_me: r4.isBlockedByMe })));
  }, i4;
}(es);
var je = function() {
  function n3(e4) {
    this.key = e4.key, this.value = N("string", e4.value) ? c([], a(e4.value), false) : [];
  }
  return n3.payloadify = function(n4) {
    var r4;
    return re(se({ key: n4.key, value: null !== (r4 = n4.value) && void 0 !== r4 ? r4 : [] }));
  }, n3;
}();
var Qe2 = function(e4) {
  switch (e4) {
    case z.BASE:
      return "";
    case z.USER:
      return "MESG";
    case z.FILE:
      return "FILE";
    case z.ADMIN:
      return "ADMM";
  }
};
var Ge = function(n3) {
  function i4(e4, t7) {
    var r4, i5, s6, a5, o3, u4, l3, d5, h4, p4 = this;
    (p4 = n3.call(this, e4) || this).channelType = q.BASE, p4.messageType = z.BASE, p4.mentionType = null, p4.mentionedUsers = null, p4.mentionedUserIds = null, p4.mentionedMessageTemplate = void 0, p4.metaArrays = [], p4.extendedMessage = {}, p4.createdAt = 0, p4.updatedAt = 0, p4.channelUrl = t7.channel_url, p4.channelType = S(q, t7.channel_type) ? t7.channel_type : q.GROUP, t7.channel && (t7.channel.channel_url && (p4.channelUrl = t7.channel.channel_url), t7.channel.channel_type && (p4.channelType = t7.channel.channel_type)), p4.data = null !== (r4 = t7.data) && void 0 !== r4 ? r4 : "", p4.customType = null !== (i5 = t7.custom_type) && void 0 !== i5 ? i5 : "", p4.mentionType = S(K, t7.mention_type) ? t7.mention_type : null, p4.mentionedUsers = t7.mentioned_users ? t7.mentioned_users.map(function(e5) {
      return new es(p4._iid, e5);
    }) : null, p4.mentionedUserIds = null !== (s6 = t7.mentioned_user_ids) && void 0 !== s6 ? s6 : null, p4.mentionedUsers && !p4.mentionedUserIds && (p4.mentionedUserIds = p4.mentionedUsers.map(function(e5) {
      return e5.userId;
    })), p4.mentionedMessageTemplate = t7.mentioned_message_template;
    var m5 = null !== (a5 = t7.metaarray) && void 0 !== a5 ? a5 : {}, v5 = null !== (o3 = t7.metaarray_key_order) && void 0 !== o3 ? o3 : Object.keys(m5).sort(function(e5, t8) {
      return e5.localeCompare(t8);
    });
    p4.metaArrays = [];
    for (var y6 = 0; y6 < v5.length; y6++) {
      var _2 = v5[y6];
      p4.metaArrays.push(new je({ key: _2, value: m5[_2] || [] }));
    }
    return t7.sorted_metaarray && (p4.metaArrays = t7.sorted_metaarray.map(function(e5) {
      return new je(e5);
    })), p4.extendedMessage = null !== (u4 = t7.extended_message) && void 0 !== u4 ? u4 : {}, p4.extendedMessagePayload = t7.extended_message_payload, p4.createdAt = null !== (d5 = null !== (l3 = t7.created_at) && void 0 !== l3 ? l3 : t7.ts) && void 0 !== d5 ? d5 : 0, p4.updatedAt = null !== (h4 = t7.updated_at) && void 0 !== h4 ? h4 : 0, p4;
  }
  return t(i4, n3), i4.payloadify = function(r4) {
    var i5, s6;
    return re(se(n(n({}, n3.payloadify.call(this, r4)), { channel_url: r4.channelUrl, channel_type: r4.channelType, type: Qe2(r4.messageType), data: r4.data, custom_type: r4.customType, mention_type: r4.mentionType, mentioned_user_ids: r4.mentionedUserIds, mentioned_users: null === (i5 = r4.mentionedUsers) || void 0 === i5 ? void 0 : i5.map(function(e4) {
      return es.payloadify(e4);
    }), mentioned_message_template: r4.mentionedMessageTemplate, sorted_metaarray: null === (s6 = r4.metaArrays) || void 0 === s6 ? void 0 : s6.map(function(e4) {
      return je.payloadify(e4);
    }), extended_message: r4.extendedMessage, extended_message_payload: r4.extendedMessagePayload, created_at: r4.createdAt, updated_at: r4.updatedAt })));
  }, i4.prototype.isIdentical = function(e4) {
    return true;
  }, i4.prototype.isEqual = function(e4) {
    return y(this, e4);
  }, i4.prototype.isUserMessage = function() {
    return this.messageType === z.USER;
  }, i4.prototype.isFileMessage = function() {
    return this.messageType === z.FILE && !Object.prototype.hasOwnProperty.call(this, "fileInfoList");
  }, i4.prototype.isMultipleFilesMessage = function() {
    return this.messageType === z.FILE && Object.prototype.hasOwnProperty.call(this, "fileInfoList");
  }, i4.prototype.isAdminMessage = function() {
    return this.messageType === z.ADMIN;
  }, i4.prototype.serialize = function() {
    return Yr(this);
  }, i4.prototype.getMetaArraysByKeys = function(e4) {
    return this.metaArrays.filter(function(t7) {
      return e4.includes(t7.key);
    });
  }, i4;
}(zr);
var Ve = function(e4) {
  function t7(t8, n3) {
    var r4, i4, s6 = this;
    return (s6 = e4.call(this, t8) || this).channelUrl = null !== (r4 = n3.channel_url) && void 0 !== r4 ? r4 : "", s6.channelType = null !== (i4 = n3.channel_type) && void 0 !== i4 ? i4 : q.GROUP, s6.reader = new es(s6._iid, n3.user), s6.readAt = n3.ts, s6;
  }
  return t(t7, e4), t7;
}(zr);
var He = function(e4) {
  function t7(t8) {
    var n3 = t8.channelUrl;
    return e4.call(this, { code: "READ", ackRequired: true, payload: { channel_url: n3 } }) || this;
  }
  return t(t7, e4), t7;
}(qe);
var We2 = function(n3) {
  function s6(r4) {
    var s7 = n3.call(this) || this, a5 = r4.channelUrl, o3 = r4.channelType, u4 = r4.userId, c4 = r4.notificationIds;
    return s7.method = oe.PUT, s7.path = "".concat(Ie(o3), "/").concat(encodeURIComponent(a5), "/messages/mark_as_read"), s7.params = re(se({ user_id: u4, message_ids: c4 })), s7;
  }
  return t(s6, n3), s6;
}(xe);
var Ye2 = function(e4) {
  function t7(t8, n3, r4) {
    var i4 = e4.call(this, t8, "READ", r4) || this;
    return i4.readStatus = new Ve(t8, r4), i4;
  }
  return t(t7, e4), t7;
}(Fe);
var Je2 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.readAt = n3.ts, r4.unreadMessageCount = n3.unread_message_count, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Xe = function(e4) {
  function t7(t8) {
    var n3 = t8.channelUrl, r4 = t8.messageId;
    return e4.call(this, { code: "READ", ackRequired: true, payload: { channel_url: n3, parent_message_id: r4 } }) || this;
  }
  return t(t7, e4), t7;
}(qe);
var Ze2 = function(e4) {
  function t7(t8) {
    var n3 = t8.channelType, r4 = t8.channelUrl, s6 = t8.messageId, a5 = t8.pushEnabled, o3 = e4.call(this) || this;
    return o3.method = oe.PUT, o3.path = "".concat(Ie(n3), "/").concat(encodeURIComponent(r4), "/messages/").concat(s6, "/thread_push"), o3.params = { push_enabled: a5 }, o3;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7(t8, n3) {
    return e4.call(this, t8, n3) || this;
  }
  t(t7, e4);
}(Ue);
var $e = function(e4) {
  function t7(t8) {
    var n3 = t8.channelType, r4 = t8.channelUrl, s6 = t8.messageId, a5 = t8.rating, o3 = t8.comment, u4 = e4.call(this) || this;
    return u4.method = oe.POST, u4.path = "".concat(Ie(n3), "/").concat(encodeURIComponent(r4), "/messages/").concat(s6, "/feedbacks"), u4.params = { rating: a5, comment: o3 }, u4;
  }
  return t(t7, e4), t7;
}(xe);
var et2 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.feedback = new Be2(n3), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var tt2 = function(e4) {
  function t7(t8) {
    var n3 = t8.channelType, r4 = t8.channelUrl, s6 = t8.messageId, a5 = t8.feedbackId, o3 = t8.rating, u4 = t8.comment, c4 = e4.call(this) || this;
    return c4.method = oe.PUT, c4.path = "".concat(Ie(n3), "/").concat(encodeURIComponent(r4), "/messages/").concat(s6, "/feedbacks/").concat(a5), c4.params = { rating: o3, comment: u4 }, c4;
  }
  return t(t7, e4), t7;
}(xe);
var nt2 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.feedback = new Be2(n3), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var rt = function(e4) {
  function t7(t8) {
    var n3 = t8.channelType, r4 = t8.channelUrl, s6 = t8.messageId, a5 = t8.feedbackId, o3 = e4.call(this) || this;
    return o3.method = oe.DELETE, o3.path = "".concat(Ie(n3), "/").concat(encodeURIComponent(r4), "/messages/").concat(s6, "/feedbacks/").concat(a5), o3;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.feedback = new Be2(n3), r4;
  }
  t(t7, e4);
}(Ue);
var it2;
var st2;
var at = function(i4) {
  function s6(e4, t7) {
    var n3, r4, s7, a5, o3, c4 = this;
    return (c4 = i4.call(this, e4) || this).plainUrl = "", c4.fileName = null, c4.mimeType = null, c4.fileSize = 0, c4.thumbnails = [], c4._requireAuth = false, c4.plainUrl = null !== (n3 = t7.url) && void 0 !== n3 ? n3 : "", c4.fileName = null !== (r4 = t7.file_name) && void 0 !== r4 ? r4 : null, c4.mimeType = null !== (s7 = t7.file_type) && void 0 !== s7 ? s7 : null, c4.fileSize = null !== (a5 = t7.file_size) && void 0 !== a5 ? a5 : 0, c4._requireAuth = null !== (o3 = t7.require_auth) && void 0 !== o3 && o3, c4.thumbnails = t7.thumbnails ? t7.thumbnails.map(function(e5) {
      var t8;
      return new Oe2(c4._iid, "string" == typeof e5 ? { url: e5, width: 0, height: 0 } : n(n({}, e5), { url: (null !== (t8 = e5.url) && void 0 !== t8 ? t8 : "").split("auth=")[0] }), c4._requireAuth);
    }) : [], c4;
  }
  return t(s6, i4), s6.payloadify = function(n3) {
    var r4;
    return re(se({ url: n3.plainUrl, file_name: n3.fileName, file_type: n3.mimeType, file_size: n3.fileSize, thumbnails: null === (r4 = n3.thumbnails) || void 0 === r4 ? void 0 : r4.map(function(e4) {
      var t7;
      return { url: (null !== (t7 = e4.plainUrl) && void 0 !== t7 ? t7 : "").split("auth=")[0], width: e4.width, height: e4.height, real_width: e4.realWidth, real_height: e4.realHeight };
    }), require_auth: n3._requireAuth }));
  }, Object.defineProperty(s6.prototype, "url", { get: function() {
    var e4 = Ws.of(this._iid).sessionManager;
    return this._requireAuth && e4.ekey ? "".concat(this.plainUrl, "?auth=").concat(e4.ekey) : this.plainUrl;
  }, enumerable: false, configurable: true }), s6;
}(zr);
var ot = function(e4) {
  var t7 = e4.channelUrl, n3 = e4.channelType, r4 = e4.parentMessage;
  this.channelUrl = t7, this.channelType = n3, this.parentMessage = r4;
};
!function(e4) {
  e4.NUMBER = "number", e4.ENUM = "enum", e4.TEXT = "text", e4.REGEX = "regex", e4.DECIMAL_PLACE = "decimal_place";
}(it2 || (it2 = {})), function(e4) {
  e4.TEXT = "text", e4.TEXTAREA = "textarea", e4.NUMBER = "number", e4.PHONE = "phone", e4.EMAIL = "email", e4.CHIP = "chip";
}(st2 || (st2 = {}));
var ut;
var ct;
var lt = function() {
  function n3(e4, t7) {
    var n4 = t7.id, r4 = t7.name, i4 = t7.items, s6 = t7.version, a5 = t7.is_submitted;
    this.messageId = e4, this.id = n4, this.name = r4, this.items = i4.map(function(e5) {
      return new dt(e5);
    }).sort(function(e5, t8) {
      return e5.sortOrder - t8.sortOrder;
    }), this.version = null != s6 ? s6 : 1, this._isSubmitted = a5;
  }
  return Object.defineProperty(n3.prototype, "isSubmitted", { get: function() {
    var e4;
    return null !== (e4 = this._isSubmitted) && void 0 !== e4 ? e4 : this.items.some(function(e5) {
      return Array.isArray(e5.submittedValues);
    });
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "isSubmittable", { get: function() {
    return this.items.every(function(e4) {
      return e4.required ? !!(Array.isArray(e4.draftValues) && e4.draftValues.length > 0) && e4.isValid(e4.draftValues) : !(Array.isArray(e4.draftValues) && e4.draftValues.length > 0) || e4.isValid(e4.draftValues);
    });
  }, enumerable: false, configurable: true }), n3.payloadify = function(n4) {
    return re(se({ id: n4.id, name: n4.name, items: n4.items.map(function(e4) {
      return dt.payloadify(e4);
    }), version: n4.version, is_submitted: n4._isSubmitted }));
  }, n3.isMessageFormPayload = function(e4) {
    return Boolean(null == e4 ? void 0 : e4.message_form);
  }, n3;
}();
var dt = function() {
  function n3(t7) {
    var n4 = t7.id, r4 = t7.name, i4 = t7.required, s6 = t7.sort_order, a5 = t7.placeholder, o3 = t7.style, u4 = t7.item_type, c4 = t7.validators, l3 = t7.value, d5 = t7.values;
    this.id = n4, this.name = r4, this.required = i4, this.sortOrder = s6, this.placeholder = a5, 0 === Object.keys(o3).length ? this.style = { layout: u4 } : this.style = re({ layout: o3.layout, options: o3.options, defaultOptions: o3.default_options, resultCount: o3.result_count }), d5 ? this.submittedValues = d5 : l3 && (this.submittedValues = [l3]), this._validators = c4;
  }
  return n3.prototype.isValid = function(e4) {
    var t7 = this;
    return e4.every(function(e5) {
      var n4 = function(e6, t8) {
        return t8.every(function(t9) {
          switch (t9.key) {
            case it2.NUMBER:
              var n5 = Number(e6);
              return !(isNaN(n5) || t9.min && "number" != typeof t9.min || t9.max && "number" != typeof t9.max || "number" == typeof t9.min && n5 < t9.min || "number" == typeof t9.max && n5 > t9.max);
            case it2.ENUM:
              return "string" == typeof e6 && (!(t9.enums && Array.isArray(t9.enums) && t9.enums.length > 0 && !t9.enums.includes(e6)) || t9.allow_other);
            case it2.TEXT:
              return !("string" != typeof e6 || "number" == typeof t9.min_length && e6.length < t9.min_length || "number" == typeof t9.max_length && e6.length > t9.max_length);
            case it2.REGEX:
              if ("string" != typeof e6) return false;
              if (t9.regex) {
                if ("string" != typeof t9.regex) return false;
                if (!new RegExp(t9.regex).test(e6)) return false;
              }
              return true;
            case it2.DECIMAL_PLACE:
              return 0 !== e6.length && (n5 = Number(e6), !(isNaN(n5) || (!t9.max_decimal_place || "number" == typeof t9.max_decimal_place) && t9.max_decimal_place && !function(e7, t10) {
                var n6 = e7.toString(), r4 = n6.indexOf(".");
                return -1 === r4 || n6.slice(r4 + 1).length <= t10;
              }(n5, t9.max_decimal_place)));
            default:
              return true;
          }
        });
      }(e5, t7._validators);
      return n4;
    });
  }, n3.payloadify = function(n4) {
    return re(se({ id: n4.id, name: n4.name, required: n4.required, sort_order: n4.sortOrder, placeholder: n4.placeholder, style: re({ layout: n4.style.layout, options: n4.style.options, default_options: n4.style.defaultOptions, result_count: n4.style.resultCount }), item_type: n4.style.layout, validators: n4._validators, values: n4.submittedValues }));
  }, n3;
}();
var ht = function(t7) {
  function n3(n4) {
    var r4 = t7.call(this) || this;
    return r4.method = oe.POST, r4.path = "".concat(Ae, "/").concat(n4.formId, "/submit"), r4.params = re({ message_id: n4.messageId, items: n4.items }), r4;
  }
  return t(n3, t7), n3;
}(xe);
!function(e4) {
  e4.PENDING = "pending", e4.SENT = "sent", e4.FAILED = "failed", e4.CANCELED = "canceled";
}(ut || (ut = {})), function(e4) {
  e4.PENDING = "pending", e4.IN_QUEUE = "in_queue", e4.SENT = "sent", e4.FAILED = "failed", e4.CANCELED = "canceled", e4.REMOVED = "removed";
}(ct || (ct = {}));
var ft;
var pt = function(i4) {
  function s6(e4, t7) {
    var n3, r4, s7, a5, o3, u4, c4, l3, d5 = this;
    return (d5 = i4.call(this, e4, t7) || this).parentMessage = null, d5.silent = false, d5.isOperatorMessage = false, d5.threadInfo = null, d5.reactions = [], d5.appleCriticalAlertOptions = null, d5.scheduledInfo = null, d5.suggestedReplies = null, d5.myFeedback = null, d5.myFeedbackStatus = "NOT_APPLICABLE", d5.messageForm = null, d5._isContinuousMessages = false, d5._scheduledStatus = null, d5.messageId = null !== (r4 = null !== (n3 = t7.msg_id) && void 0 !== n3 ? n3 : t7.message_id) && void 0 !== r4 ? r4 : 0, d5.parentMessageId = null !== (s7 = "string" == typeof t7.parent_message_id ? parseInt(t7.parent_message_id) : t7.parent_message_id) && void 0 !== s7 ? s7 : 0, d5.threadInfo = t7.thread_info ? new Re(d5._iid, t7.thread_info) : null, d5.reactions = t7.reactions ? t7.reactions.map(function(e5) {
      return new Le2(e5);
    }) : [], d5.ogMetaData = t7.og_tag ? new qe2(t7.og_tag) : null, d5.silent = null !== (a5 = t7.silent) && void 0 !== a5 && a5, d5.isOperatorMessage = null !== (o3 = t7.is_op_msg) && void 0 !== o3 && o3, d5.appleCriticalAlertOptions = t7.apple_critical_alert_options ? new ze(t7.apple_critical_alert_options) : null, "number" == typeof t7.scheduled_message_id && "number" == typeof t7.scheduled_at && t7.scheduled_status && (d5.scheduledInfo = { scheduledMessageId: t7.scheduled_message_id, scheduledAt: t7.scheduled_at }, d5._scheduledStatus = t7.scheduled_status), d5._isContinuousMessages = null !== (u4 = t7.is_continuous_messages) && void 0 !== u4 && u4, d5.myFeedback = Be2._isSubmitted(t7.feedback) ? new Be2(t7.feedback) : null, d5.myFeedbackStatus = Be2._getStatus(t7.feedback), d5.suggestedReplies = null !== (l3 = null === (c4 = t7.extended_message_payload) || void 0 === c4 ? void 0 : c4.suggested_replies) && void 0 !== l3 ? l3 : null, d5.messageForm = lt.isMessageFormPayload(t7.extended_message_payload) ? new lt(d5.messageId, t7.extended_message_payload.message_form) : null, d5;
  }
  return t(s6, i4), s6.payloadify = function(n3) {
    var r4, s7;
    return re(se(n(n({}, i4.payloadify.call(this, n3)), { message_id: n3.messageId, parent_message_id: n3.parentMessageId, thread_info: n3.threadInfo ? Re.payloadify(n3.threadInfo) : null, reactions: n3.reactions.map(function(e4) {
      return Le2.payloadify(e4);
    }), og_tag: n3.ogMetaData ? qe2.payloadify(n3.ogMetaData) : null, silent: n3.silent, is_op_msg: n3.isOperatorMessage, apple_critical_alert_options: n3.appleCriticalAlertOptions ? ze.payloadify(n3.appleCriticalAlertOptions) : null, scheduled_message_id: null === (r4 = n3.scheduledInfo) || void 0 === r4 ? void 0 : r4.scheduledMessageId, scheduled_at: null === (s7 = n3.scheduledInfo) || void 0 === s7 ? void 0 : s7.scheduledAt, scheduled_status: n3._scheduledStatus, feedback: n3.myFeedback ? Be2.payloadify(n3.myFeedback) : Be2._getPayloadByStatus(n3.myFeedbackStatus) })));
  }, s6._getParentMessageInfoPayload = function(n3) {
    return re(se({ type: Qe2(n3.messageType), ts: n3.createdAt, user: n3.sender ? Ke.payloadify(n3.sender) : null, message: n3.message, file: { url: n3.plainUrl, name: n3.name, type: n3.type, require_auth: n3.requireAuth }, files: Array.isArray(n3.fileInfoList) ? n3.fileInfoList.map(function(e4) {
      return at.payloadify(e4);
    }) : null }));
  }, s6.prototype.isIdentical = function(e4) {
    return this.messageId === e4.messageId;
  }, s6.prototype.applyThreadInfoUpdateEvent = function(e4) {
    return this.messageId === e4.targetMessageId && (e4.threadInfo._isUpdateRequired && this.threadInfo && e4.threadInfo._updateFrom(this.threadInfo), this.threadInfo = e4.threadInfo, true);
  }, s6.prototype.applyReactionEvent = function(e4) {
    if (this.messageId === e4.messageId) {
      for (var t7 = false, n3 = 0; n3 < this.reactions.length; n3++) if (this.reactions[n3].key === e4.key) {
        this.reactions[n3].applyEvent(e4), this.reactions[n3].isEmpty && this.reactions.splice(n3, 1), t7 = true;
        break;
      }
      t7 || "add" !== e4.operation || this.reactions.push(new Le2(Le2.payloadify({ key: e4.key, userIds: [e4.userId], updatedAt: e4.updatedAt })));
    }
  }, s6.prototype.applyParentMessage = function(e4) {
    if (!this.parentMessage) return this.parentMessage = e4, true;
    if (this.parentMessageId === e4.messageId) {
      var t7 = this.parentMessage.updatedAt;
      if (e4.updatedAt >= t7) return this.parentMessage = e4, true;
    }
    return false;
  }, s6.prototype._triggerThreadInfoUpdatedEvent = function() {
    return r(this, void 0, void 0, function() {
      var e4;
      return s(this, function(t7) {
        return (e4 = Ws.of(this._iid).dispatcher).dispatch(new ot({ channelType: q.GROUP, channelUrl: this.channelUrl, parentMessage: this })), e4.dispatch(new $s({ messages: [this], source: Ks.EVENT_MESSAGE_THREADINFO_UPDATED })), [2];
      });
    });
  }, s6.prototype.markThreadAsRead = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return e4 = Ws.of(this._iid).requestQueue, t7 = new Xe({ channelUrl: this.channelUrl, messageId: this.messageId }), [4, e4.send(t7)];
          case 1:
            return r4.sent(), this.threadInfo && 0 !== this.threadInfo.unreadReplyCount ? (this.threadInfo.unreadReplyCount = 0, [4, this._triggerThreadInfoUpdatedEvent()]) : [3, 3];
          case 2:
            r4.sent(), r4.label = 3;
          case 3:
            return [2];
        }
      });
    });
  }, s6.prototype.setPushNotificationEnabled = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4;
      return s(this, function(i5) {
        switch (i5.label) {
          case 0:
            return t7 = Ws.of(this._iid).requestQueue, r4 = new Ze2({ channelUrl: this.channelUrl, channelType: this.channelType, messageId: this.messageId, pushEnabled: e4 }), [4, t7.send(r4)];
          case 1:
            return i5.sent(), this.threadInfo && this.threadInfo.isPushNotificationEnabled !== e4 && (this.threadInfo.isPushNotificationEnabled = e4), [2];
        }
      });
    });
  }, s6.prototype.submitMessageForm = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4, i5, s7, a5;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            if (t7 = Ws.of(this._iid).requestQueue, r4 = null, i5 = null, s7 = this.messageForm, !e4 && s7) {
              if (!s7.isSubmittable) throw new v({ code: u.INVALID_PARAMETER, message: "The form is not submittable. Please check all form items are valid before submitting." });
              if (s7.isSubmitted) throw new v({ code: u.INVALID_PARAMETER, message: "The form has already been submitted." });
              r4 = s7.id, i5 = s7.items.reduce(function(e5, t8) {
                return e5.push({ form_item_id: t8.id, values: Array.isArray(t8.draftValues) ? t8.draftValues : [] }), e5;
              }, []);
            } else e4 && (r4 = e4.formId, i5 = Object.entries(e4.answers).reduce(function(e5, t8) {
              var n3 = a(t8, 2), r5 = n3[0], i6 = n3[1], s8 = Number(r5);
              if (Number.isNaN(s8)) throw new v({ code: u.INVALID_PARAMETER, message: "Keys in answers must be numeric string." });
              return e5.push({ form_item_id: s8, value: i6 }), e5;
            }, []));
            if (!r4 || !i5) throw new v({ code: u.INVALID_PARAMETER, message: "Missing one or more required inputs: formId, answers." });
            return a5 = new ht({ messageId: this.messageId, formId: r4, items: i5 }), [4, t7.send(a5)];
          case 1:
            return o3.sent(), [2];
        }
      });
    });
  }, s6.prototype.submitFeedback = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4, i5, s7, a5, o3;
      return s(this, function(u4) {
        switch (u4.label) {
          case 0:
            return t7 = Ws.of(this._iid), r4 = t7.requestQueue, i5 = t7.dispatcher, s7 = new $e({ channelUrl: this.channelUrl, channelType: this.channelType, messageId: this.messageId, rating: e4.rating, comment: e4.comment }), [4, r4.send(s7)];
          case 1:
            return a5 = u4.sent(), o3 = a5.as(et2), this.myFeedback = o3.feedback, this.myFeedbackStatus = "SUBMITTED", i5.dispatch(new $s({ messages: [this], source: Ks.EVENT_MESSAGE_FEEDBACK_ADDED })), [2];
        }
      });
    });
  }, s6.prototype.updateFeedback = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4, i5, s7, a5, o3;
      return s(this, function(u4) {
        switch (u4.label) {
          case 0:
            return t7 = Ws.of(this._iid), r4 = t7.requestQueue, i5 = t7.dispatcher, s7 = new tt2({ channelUrl: this.channelUrl, channelType: this.channelType, messageId: this.messageId, feedbackId: e4.id, rating: e4.rating, comment: e4.comment }), [4, r4.send(s7)];
          case 1:
            return a5 = u4.sent(), o3 = a5.as(nt2), this.myFeedback = o3.feedback, this.myFeedbackStatus = "SUBMITTED", i5.dispatch(new $s({ messages: [this], source: Ks.EVENT_MESSAGE_FEEDBACK_UPDATED })), [2];
        }
      });
    });
  }, s6.prototype.deleteFeedback = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4, i5, s7;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return t7 = Ws.of(this._iid), r4 = t7.requestQueue, i5 = t7.dispatcher, s7 = new rt({ channelUrl: this.channelUrl, channelType: this.channelType, messageId: this.messageId, feedbackId: e4 }), [4, r4.send(s7)];
          case 1:
            return a5.sent(), this.myFeedback = null, this.myFeedbackStatus = "NO_FEEDBACK", i5.dispatch(new $s({ messages: [this], source: Ks.EVENT_MESSAGE_FEEDBACK_DELETED })), [2];
        }
      });
    });
  }, s6;
}(Ge);
var mt = function(n3) {
  function i4(e4, t7) {
    var r4, i5, s6, a5, o3 = this;
    if ((o3 = n3.call(this, e4, t7) || this).reqId = "", o3.replyToChannel = false, o3.errorCode = 0, o3.sender = t7.user ? new Ke(o3._iid, t7.user) : t7.sender_id, o3.reqId = null !== (i5 = null !== (r4 = t7.req_id) && void 0 !== r4 ? r4 : t7.request_id) && void 0 !== i5 ? i5 : "", o3.replyToChannel = null !== (s6 = t7.is_reply_to_channel) && void 0 !== s6 && s6, t7.request_state && S(W, t7.request_state) && (o3.sendingStatus = t7.request_state), !o3.sendingStatus) if (o3.messageId > 0) o3.sendingStatus = W.SUCCEEDED;
    else if (o3.scheduledInfo) switch (t7.scheduled_status && (o3._scheduledStatus = t7.scheduled_status), t7.scheduled_status) {
      case ct.SENT:
      case ct.IN_QUEUE:
        o3.sendingStatus = W.SUCCEEDED;
        break;
      case ct.PENDING:
        o3.sendingStatus = W.SCHEDULED;
        break;
      case ct.FAILED:
      case ct.REMOVED:
        o3.sendingStatus = W.FAILED;
        break;
      case ct.CANCELED:
        o3.sendingStatus = W.CANCELED;
    }
    else o3.sendingStatus = W.PENDING;
    return o3.errorCode = null !== (a5 = t7.error_code) && void 0 !== a5 ? a5 : 0, o3._messageToken = t7.mesg_token, o3;
  }
  return t(i4, n3), i4.payloadify = function(r4) {
    return re(se(n(n({}, n3.payloadify.call(this, r4)), { user: Ke.payloadify(r4.sender), req_id: r4.reqId, is_reply_to_channel: r4.replyToChannel, request_state: r4.sendingStatus, error_code: r4.errorCode, mesg_token: r4._messageToken })));
  }, Object.defineProperty(i4.prototype, "isResendable", { get: function() {
    return (this.sendingStatus === W.FAILED || this.sendingStatus === W.CANCELED) && A(this.errorCode);
  }, enumerable: false, configurable: true }), i4.prototype.isIdentical = function(e4) {
    return this.messageId > 0 && e4.messageId > 0 ? this.messageId === e4.messageId : this.reqId === e4.reqId;
  }, i4;
}(pt);
var vt = { prevResultSize: 0, nextResultSize: 0, isInclusive: false, reverse: false, messageTypeFilter: G.ALL, customTypesFilter: void 0, senderUserIdsFilter: void 0, includeReactions: false, includeMetaArray: false, includeParentMessageInfo: false };
var yt = function(e4) {
  return w("number", e4.prevResultSize) && w("number", e4.nextResultSize) && w("boolean", e4.isInclusive) && w("boolean", e4.reverse) && w("string", e4.messageTypeFilter) && S(G, e4.messageTypeFilter) && N("string", e4.customTypesFilter, true) && N("string", e4.senderUserIdsFilter, true) && w("boolean", e4.includeMetaArray) && w("boolean", e4.includeReactions) && w("boolean", e4.includeParentMessageInfo);
};
var _t = function(n3) {
  function i4(r4, i5) {
    var s6, a5, o3, c4, l3 = this;
    if ((l3 = n3.call(this, r4, i5) || this).translations = {}, l3.message = null !== (s6 = i5.message) && void 0 !== s6 ? s6 : "", l3.messageType = z.ADMIN, l3.translations = null !== (a5 = i5.translations) && void 0 !== a5 ? a5 : {}, i5.parent_message_info) {
      var d5 = i5.parent_message_info;
      l3.parentMessage = Mt(r4, re(se(n(n({}, d5), { message_id: l3.parentMessageId, channel_url: l3.channelUrl, channel_type: l3.channelType, file: d5.file, url: null === (o3 = d5.file) || void 0 === o3 ? void 0 : o3.url, require_auth: null === (c4 = d5.file) || void 0 === c4 ? void 0 : c4.require_auth }))));
    }
    return l3;
  }
  return t(i4, n3), i4.payloadify = function(r4) {
    return re(se(n(n({}, n3.payloadify.call(this, r4)), { message: r4.message, translations: r4.translations, parent_message_info: r4.parentMessage ? n3._getParentMessageInfoPayload.call(this, r4.parentMessage) : null })));
  }, i4.prototype.getThreadedMessagesByTimestamp = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var n4;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return n4 = n(n({}, vt), t7), Jr(this.messageId > 0 && w("number", e4) && yt(n4)).throw(v.invalidParameters), [4, ea.of(this._iid).getThreadedMessagesByTimestamp(this, e4, n4)];
          case 1:
            return [2, r4.sent()];
        }
      });
    });
  }, i4;
}(pt);
var gt = function() {
  function n3(e4) {
    var t7, n4;
    this.detail = {}, this.type = null !== (t7 = e4.type) && void 0 !== t7 ? t7 : "", this.vendor = null !== (n4 = e4.vendor) && void 0 !== n4 ? n4 : "", e4.detail && w("object", e4.detail) && !Array.isArray(e4.detail) && (this.detail = e4.detail);
  }
  return n3.payloadify = function(n4) {
    return re(se({ type: n4.type, vendor: n4.vendor, detail: n4.detail }));
  }, n3;
}();
var bt = function() {
  function t7(e4) {
    this.status = e4.status, e4.original_message_info && (this.originalMessageInfo = { createdAt: e4.original_message_info.ts, messageId: e4.original_message_info.id });
  }
  return t7.payloadify = function(t8) {
    return re({ status: t8.status, original_message_info: t8.originalMessageInfo ? { id: t8.originalMessageInfo.messageId, ts: t8.originalMessageInfo.createdAt } : void 0 });
  }, t7;
}();
var It = function(n3) {
  function i4(r4, i5) {
    var s6, a5, o3, c4, l3, d5, h4, f4 = this;
    if ((f4 = n3.call(this, r4, i5) || this).message = "", f4.messageParams = null, f4.translations = {}, f4.translationTargetLanguages = [], f4.messageSurvivalSeconds = -1, f4.plugins = [], f4._poll = null, f4.message = i5.message, f4.messageType = z.USER, f4.translations = null !== (o3 = i5.translations) && void 0 !== o3 ? o3 : {}, f4.translationTargetLanguages = null !== (c4 = i5.target_langs) && void 0 !== c4 ? c4 : [], 0 === Object.keys(f4.translations).length && f4.translationTargetLanguages.length > 0) try {
      for (var p4 = o(f4.translationTargetLanguages), m5 = p4.next(); !m5.done; m5 = p4.next()) {
        var y6 = m5.value;
        f4.translations[y6] = "";
      }
    } catch (e4) {
      s6 = { error: e4 };
    } finally {
      try {
        m5 && !m5.done && (a5 = p4.return) && a5.call(p4);
      } finally {
        if (s6) throw s6.error;
      }
    }
    if (f4.messageSurvivalSeconds = null !== (l3 = i5.message_survival_seconds) && void 0 !== l3 ? l3 : -1, f4.plugins = i5.plugins ? i5.plugins.map(function(e4) {
      return new gt(e4);
    }) : [], f4._poll = i5.poll ? new ho(f4._iid, i5.poll) : null, i5.parent_message_info) {
      var _2 = i5.parent_message_info;
      f4.parentMessage = Mt(r4, re(se(n(n({}, _2), { created_at: _2.ts, message_id: f4.parentMessageId, channel_url: f4.channelUrl, channel_type: f4.channelType, file: _2.file, url: null === (d5 = _2.file) || void 0 === d5 ? void 0 : d5.url, require_auth: null === (h4 = _2.file) || void 0 === h4 ? void 0 : h4.require_auth }))));
    }
    return i5.review_info && (f4.messageReviewInfo = new bt(i5.review_info)), f4;
  }
  return t(i4, n3), i4.payloadify = function(r4) {
    return re(se(n(n({}, n3.payloadify.call(this, r4)), { message: r4.message, translations: r4.translations, message_survival_seconds: r4.messageSurvivalSeconds, plugins: r4.plugins.map(function(e4) {
      return gt.payloadify(e4);
    }), poll: r4._poll ? ho.payloadify(r4._poll) : null, parent_message_info: r4.parentMessage ? n3._getParentMessageInfoPayload.call(this, r4.parentMessage) : null, review_info: r4.messageReviewInfo ? bt.payloadify(r4.messageReviewInfo) : void 0 })));
  }, i4.prototype.getThreadedMessagesByTimestamp = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var n4;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return n4 = n(n({}, vt), t7), Jr(this.messageId > 0 && w("number", e4) && yt(n4)).throw(v.invalidParameters), [4, ea.of(this._iid).getThreadedMessagesByTimestamp(this, e4, n4)];
          case 1:
            return [2, r4.sent()];
        }
      });
    });
  }, i4.prototype.applyPoll = function(e4) {
    return !(this._poll && this._poll.id === e4.id && this._poll.updatedAt > e4.updatedAt) && (this._poll = e4, true);
  }, Object.defineProperty(i4.prototype, "poll", { get: function() {
    return this._poll;
  }, enumerable: false, configurable: true }), i4;
}(mt);
var Et = function(n3) {
  function i4(r4, i5) {
    var s6, a5, o3, c4, l3, d5, h4, f4, p4 = this;
    if ((p4 = n3.call(this, r4, i5) || this).messageParams = null, p4.fileInfoList = [], p4.messageSurvivalSeconds = -1, p4.messageType = z.FILE, p4.data = null !== (o3 = null !== (a5 = null === (s6 = i5.file) || void 0 === s6 ? void 0 : s6.data) && void 0 !== a5 ? a5 : i5.custom) && void 0 !== o3 ? o3 : "", p4.fileInfoList = null !== (l3 = null === (c4 = i5.files) || void 0 === c4 ? void 0 : c4.map(function(e4) {
      return new at(r4, e4);
    })) && void 0 !== l3 ? l3 : [], p4.messageSurvivalSeconds = null !== (d5 = i5.message_survival_seconds) && void 0 !== d5 ? d5 : -1, i5.parent_message_info) {
      var m5 = i5.parent_message_info;
      p4.parentMessage = Mt(r4, re(se(n(n({}, m5), { created_at: m5.ts, message_id: p4.parentMessageId, channel_url: p4.channelUrl, channel_type: p4.channelType, file: m5.file, url: null === (h4 = m5.file) || void 0 === h4 ? void 0 : h4.url, require_auth: null === (f4 = m5.file) || void 0 === f4 ? void 0 : f4.require_auth }))));
    }
    return p4;
  }
  return t(i4, n3), i4.prototype.getThreadedMessagesByTimestamp = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var n4;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return n4 = n(n({}, vt), t7), Jr(this.messageId > 0 && w("number", e4) && yt(n4)).throw(v.invalidParameters), [4, ea.of(this._iid).getThreadedMessagesByTimestamp(this, e4, n4)];
          case 1:
            return [2, r4.sent()];
        }
      });
    });
  }, i4.payloadify = function(r4) {
    var i5, s6, a5, o3, c4, l3;
    return re(se(n(n({}, n3.payloadify.call(this, r4)), { file: { name: null !== (s6 = null === (i5 = r4.fileInfoList[0]) || void 0 === i5 ? void 0 : i5.fileName) && void 0 !== s6 ? s6 : "", size: null !== (o3 = null === (a5 = r4.fileInfoList[0]) || void 0 === a5 ? void 0 : a5.fileSize) && void 0 !== o3 ? o3 : 0, type: null !== (l3 = null === (c4 = r4.fileInfoList[0]) || void 0 === c4 ? void 0 : c4.mimeType) && void 0 !== l3 ? l3 : "", data: r4.data }, files: Array.isArray(r4.fileInfoList) ? r4.fileInfoList.map(function(e4) {
      return at.payloadify(e4);
    }) : null, message_survival_seconds: r4.messageSurvivalSeconds, parent_message_info: r4.parentMessage ? n3._getParentMessageInfoPayload.call(this, r4.parentMessage) : null })));
  }, i4._isMultipleFilesMessagePayload = function(e4) {
    var t7 = e4.files;
    return Array.isArray(t7) && t7.length >= 2;
  }, i4._isMultipleFilesMessageSerializedData = function(e4) {
    var t7 = e4.fileInfoList;
    return Array.isArray(t7);
  }, i4;
}(mt);
!function(e4) {
  e4.SENT = "SENT", e4.READ = "READ";
}(ft || (ft = {}));
var Tt = function(n3) {
  function i4(e4, t7) {
    var r4, i5, s6 = this;
    if ((s6 = n3.call(this, e4, t7) || this).notificationData = null, s6.notificationId = t7.notification_message_id, s6.messageType = z.ADMIN, s6.messageStatus = null !== (r4 = t7.message_status) && void 0 !== r4 ? r4 : ft.SENT, s6.priority = null !== (i5 = t7.priority) && void 0 !== i5 ? i5 : Y.NORMAL, s6.notificationEventDeadline = t7.notification_event_deadline, 0 === s6.extendedMessage.sub_type) try {
      var a5 = JSON.parse(s6.extendedMessage.sub_data), o3 = a5.label, u4 = a5.tags, c4 = void 0 === u4 ? [] : u4, l3 = a5.template_key, d5 = a5.template_variables;
      s6.notificationData = { label: o3, tags: c4, templateKey: l3, templateVariables: d5 };
    } catch (e5) {
    }
    return s6;
  }
  return t(i4, n3), i4.payloadify = function(r4) {
    return re(se(n(n({}, n3.payloadify.call(this, r4)), { notification_message_id: r4.notificationId, message_status: r4.messageStatus, priority: r4.priority, notification_event_deadline: r4.notificationEventDeadline })));
  }, i4.prototype.isIdentical = function(e4) {
    return this.notificationId === e4.notificationId;
  }, i4;
}(Ge);
var wt = function(e4) {
  if (e4.notificationId) return Tt.payloadify(e4);
  switch (e4.messageType) {
    case z.USER:
      return It.payloadify(e4);
    case z.FILE:
      return e4.fileInfoList ? Et.payloadify(e4) : St.payloadify(e4);
    case z.ADMIN:
      return _t.payloadify(e4);
    default:
      throw v.unknown;
  }
};
var Mt = function(e4, t7) {
  if (t7.notification_message_id) return new Tt(e4, t7);
  switch (t7.type) {
    case "MESG":
      return new It(e4, t7);
    case "FILE":
      return Et._isMultipleFilesMessagePayload(t7) ? new Et(e4, t7) : new St(e4, t7);
    case "ADMM":
    case "BRDM":
      return new _t(e4, t7);
    default:
      return null;
  }
};
var St = function(i4) {
  function s6(n3, r4) {
    var s7, a5, o3, c4, l3, d5, h4, f4, p4, m5, v5, y6, _2, b6, I5 = this;
    (I5 = i4.call(this, n3, r4) || this).messageParams = null, I5.plainUrl = "", I5.requireAuth = false, I5.thumbnails = [], I5.messageSurvivalSeconds = -1, I5.messageType = z.FILE;
    var E4 = r4.file;
    if (I5.plainUrl = (null !== (a5 = null !== (s7 = null == E4 ? void 0 : E4.url) && void 0 !== s7 ? s7 : r4.url) && void 0 !== a5 ? a5 : "").split("?auth=")[0], I5.name = null !== (c4 = null !== (o3 = null == E4 ? void 0 : E4.name) && void 0 !== o3 ? o3 : r4.name) && void 0 !== c4 ? c4 : "File", I5.size = null !== (d5 = null !== (l3 = null == E4 ? void 0 : E4.size) && void 0 !== l3 ? l3 : r4.size) && void 0 !== d5 ? d5 : 0, I5.data = null !== (f4 = null !== (h4 = null == E4 ? void 0 : E4.data) && void 0 !== h4 ? h4 : r4.custom) && void 0 !== f4 ? f4 : "", I5.type = E4 ? null !== (p4 = E4.type) && void 0 !== p4 ? p4 : "" : null !== (m5 = r4.type) && void 0 !== m5 ? m5 : "", I5.requireAuth = null !== (v5 = r4.require_auth) && void 0 !== v5 && v5, I5.thumbnails = r4.thumbnails ? r4.thumbnails.map(function(e4) {
      var t7;
      return new Oe2(I5._iid, "string" == typeof e4 ? { url: e4, width: 0, height: 0 } : n(n({}, e4), { url: (null !== (t7 = e4.url) && void 0 !== t7 ? t7 : "").split("auth=")[0] }), I5.requireAuth);
    }) : [], I5.messageSurvivalSeconds = null !== (y6 = r4.message_survival_seconds) && void 0 !== y6 ? y6 : -1, r4.parent_message_info) {
      var T4 = r4.parent_message_info;
      I5.parentMessage = Mt(n3, re(se(n(n({}, T4), { created_at: T4.ts, message_id: I5.parentMessageId, channel_url: I5.channelUrl, channel_type: I5.channelType, file: T4.file, url: null === (_2 = T4.file) || void 0 === _2 ? void 0 : _2.url, require_auth: null === (b6 = T4.file) || void 0 === b6 ? void 0 : b6.require_auth }))));
    }
    return I5;
  }
  return t(s6, i4), s6.payloadify = function(n3) {
    var r4;
    return re(se(n(n({}, i4.payloadify.call(this, n3)), { url: n3.plainUrl, require_auth: n3.requireAuth, file: { name: n3.name, size: n3.size, type: n3.type, data: n3.data }, thumbnails: null === (r4 = n3.thumbnails) || void 0 === r4 ? void 0 : r4.map(function(e4) {
      return { url: e4.plainUrl, width: e4.width, height: e4.height, real_width: e4.realWidth, real_height: e4.realHeight };
    }), message_survival_seconds: n3.messageSurvivalSeconds, parent_message_info: n3.parentMessage ? i4._getParentMessageInfoPayload.call(this, n3.parentMessage) : null })));
  }, Object.defineProperty(s6.prototype, "url", { get: function() {
    var e4 = Ws.of(this._iid).sessionManager;
    return this.requireAuth && e4.ekey ? "".concat(this.plainUrl, "?auth=").concat(e4.ekey) : this.plainUrl;
  }, enumerable: false, configurable: true }), s6.prototype.getThreadedMessagesByTimestamp = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var n3;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return n3 = n(n({}, vt), t7), Jr(this.messageId > 0 && w("number", e4) && yt(n3)).throw(v.invalidParameters), [4, ea.of(this._iid).getThreadedMessagesByTimestamp(this, e4, n3)];
          case 1:
            return [2, r4.sent()];
        }
      });
    });
  }, s6;
}(mt);
var At = function(e4) {
  function t7(t8, n3) {
    var r4 = n3.file, i4 = n3.fileUrl, s6 = n3.fileName, a5 = n3.fileSize, o3 = n3.mimeType, u4 = n3.thumbnailSizes, c4 = n3._uploadedMetaData, l3 = n3._thumbnails, d5 = e4.call(this, t8) || this;
    return d5._plainUrl = i4, d5.file = r4, d5.fileName = s6, d5.fileSize = a5, d5.mimeType = o3, d5.thumbnailSizes = u4, d5._uploadedMetaData = c4, d5._thumbnails = l3, d5;
  }
  return t(t7, e4), t7.getPlainUrl = function(e5) {
    return e5 instanceof t7 ? e5._plainUrl : e5.fileUrl;
  }, Object.defineProperty(t7.prototype, "fileUrl", { get: function() {
    var e5, t8 = Ws.of(this._iid).sessionManager;
    return this._plainUrl && (null === (e5 = this._uploadedMetaData) || void 0 === e5 ? void 0 : e5.requireAuth) && t8.ekey ? "".concat(this._plainUrl, "?auth=").concat(t8.ekey) : this._plainUrl;
  }, set: function(e5) {
    this._plainUrl = e5;
  }, enumerable: false, configurable: true }), t7.prototype.toJSON = function() {
    return { file: this.file, fileUrl: this._plainUrl, fileName: this.fileName, fileSize: this.fileSize, mimeType: this.mimeType, thumbnailSizes: this.thumbnailSizes, _thumbnails: this._thumbnails, _uploadedMetaData: this._uploadedMetaData };
  }, t7;
}(zr);
var Ut = function(n3) {
  function i4(r4) {
    var i5, s6, a5, o3, u4 = [];
    return r4.mentionType === K.USERS && (r4.mentionedUserIds ? u4 = r4.mentionedUserIds : r4.mentionedUsers && (u4 = r4.mentionedUsers.map(function(e4) {
      return e4.userId;
    }))), n3.call(this, { code: "FILE", ackRequired: true, payload: re(se({ channel_url: r4.channelUrl, files: r4.files ? Pt(r4.files) : null, url: r4.url, name: null !== (i5 = r4.fileName) && void 0 !== i5 ? i5 : "", type: null !== (s6 = r4.mimeType) && void 0 !== s6 ? s6 : "", size: null !== (a5 = r4.fileSize) && void 0 !== a5 ? a5 : 0, custom: r4.data, custom_type: r4.customType, thumbnails: null === (o3 = r4._thumbnails) || void 0 === o3 ? void 0 : o3.map(function(e4) {
      return Oe2.payloadify(e4);
    }), require_auth: r4.requireAuth, metaarray: r4.metaArrays, mention_type: r4.mentionType, mentioned_user_ids: u4, push_option: r4.pushNotificationDeliveryOption && r4.pushNotificationDeliveryOption !== Q.DEFAULT ? r4.pushNotificationDeliveryOption : void 0, apple_critical_alert_options: r4.appleCriticalAlertOptions ? ze.payloadify(r4.appleCriticalAlertOptions) : null, silent: r4.silent, reply_to_channel: r4.isReplyToChannel, parent_message_id: r4.parentMessageId ? r4.parentMessageId : null, req_id: r4.reqId, pin_message: r4.isPinnedMessage })) }) || this;
  }
  return t(i4, n3), i4;
}(qe);
var Nt = function(n3) {
  function s6(r4) {
    var s7, a5, o3 = this;
    o3 = n3.call(this) || this;
    var u4 = [];
    return r4.mentionType === K.USERS && (r4.mentionedUserIds ? u4 = r4.mentionedUserIds : r4.mentionedUsers && (u4 = r4.mentionedUsers.map(function(e4) {
      return e4.userId;
    }))), o3.method = oe.POST, o3.path = "".concat(Ie(r4.channelType), "/").concat(encodeURIComponent(r4.channelUrl), "/messages"), o3.params = re(se({ message_type: z.FILE, user_id: r4.userId, files: r4.files ? Pt(r4.files) : null, url: r4.fileUrl, mention_type: r4.mentionType, mentioned_user_ids: u4, file_name: r4.fileName, file_size: r4.fileSize, file_type: r4.mimeType, data: r4.data, custom_type: r4.customType, thumbnails: null === (s7 = r4._thumbnails) || void 0 === s7 ? void 0 : s7.map(function(e4) {
      return Oe2.payloadify(e4);
    }), require_auth: r4.requireAuth, sorted_metaarray: null === (a5 = r4.metaArrays) || void 0 === a5 ? void 0 : a5.map(function(e4) {
      return je.payloadify(e4);
    }), push_option: r4.pushNotificationDeliveryOption, parent_message_id: r4.parentMessageId ? r4.parentMessageId : null, apple_critical_alert_options: r4.appleCriticalAlertOptions ? ze.payloadify(r4.appleCriticalAlertOptions) : null, reply_to_channel: r4.isReplyToChannel, req_id: r4.reqId, pin_message: r4.isPinnedMessage })), o3;
  }
  return t(s6, n3), s6;
}(xe);
var Ct = function(e4) {
  function t7(t8, r4, i4) {
    var s6, a5, o3, u4, c4 = this;
    (c4 = e4.call(this, t8, "FILE", i4) || this).message = i4.files && i4.files.length >= 2 ? new Et(t8, i4) : new St(t8, i4);
    var l3 = Ws.of(t8).sdkState;
    return c4.isMentioned = Oe(c4.message.mentionType, null !== (o3 = null !== (s6 = c4.message.mentionedUserIds) && void 0 !== s6 ? s6 : null === (a5 = c4.message.mentionedUsers) || void 0 === a5 ? void 0 : a5.map(function(e5) {
      return e5.userId;
    })) && void 0 !== o3 ? o3 : [], l3.userId), c4.forceUpdateLastMessage = null !== (u4 = i4.force_update_last_message) && void 0 !== u4 && u4, c4;
  }
  return t(t7, e4), t7;
}(Fe);
var Ot = function(e4) {
  function t7(t8, r4) {
    var i4, s6, a5, o3, u4 = this;
    (u4 = e4.call(this, t8, r4) || this).message = r4.files && r4.files.length >= 2 ? new Et(t8, r4) : new St(t8, r4);
    var c4 = Ws.of(t8).sdkState;
    return u4.isMentioned = Oe(u4.message.mentionType, null !== (a5 = null !== (i4 = u4.message.mentionedUserIds) && void 0 !== i4 ? i4 : null === (s6 = u4.message.mentionedUsers) || void 0 === s6 ? void 0 : s6.map(function(e5) {
      return e5.userId;
    })) && void 0 !== a5 ? a5 : [], c4.userId), u4.forceUpdateLastMessage = null !== (o3 = r4.force_update_last_message) && void 0 !== o3 && o3, u4;
  }
  return t(t7, e4), t7;
}(Ue);
function Pt(n3) {
  return n3.map(function(n4) {
    var r4, i4;
    return re(se({ url: At.getPlainUrl(n4), file_name: n4.fileName, file_type: n4.mimeType, file_size: n4.fileSize, thumbnails: null === (r4 = n4._thumbnails) || void 0 === r4 ? void 0 : r4.map(function(e4) {
      return Oe2.payloadify(e4);
    }), require_auth: null === (i4 = n4._uploadedMetaData) || void 0 === i4 ? void 0 : i4.requireAuth }));
  });
}
var kt;
!function(e4) {
  e4[e4.PENDING = 0] = "PENDING", e4[e4.UPLOADING = 1] = "UPLOADING", e4[e4.UPLOADED = 2] = "UPLOADED", e4[e4.SENDING = 3] = "SENDING", e4[e4.FAILED = 4] = "FAILED";
}(kt || (kt = {}));
var Rt = function() {
  function e4(e5, t7) {
    var n3 = t7.sdkState, r4 = t7.dispatcher, i4 = t7.requestQueue, s6 = t7.onlineDetector, a5 = t7.cacheContext, o3 = this;
    this._queueMap = /* @__PURE__ */ new Map(), this._iid = e5, this._sdkState = n3, this._requestQueue = i4, this._cacheContext = a5, this._dispatcher = r4, this._dispatcher.on(function(e6) {
      e6 instanceof kr && (o3._connectionState = e6.stateType);
    }), this._onlineDetector = s6;
  }
  return Object.defineProperty(e4.prototype, "_shouldSendThroughWebSocket", { get: function() {
    return this._connectionState === Sr.CONNECTED || this._connectionState === Sr.CONNECTING || this._connectionState === Sr.RECONNECTING;
  }, enumerable: false, configurable: true }), e4.prototype._sendFileMessage = function(e5, t7) {
    return r(this, void 0, void 0, function() {
      var n3, r4, i4;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return n3 = this._createSendFileMessageRequestParams(e5, t7), this._shouldSendThroughWebSocket ? (r4 = new Ut(n3), [4, this._requestQueue.send(r4)]) : [3, 2];
          case 1:
            return i4 = s6.sent(), [2, i4.as(Ct).message];
          case 2:
            return r4 = new Nt(n(n({}, n3), { userId: this._sdkState.userId })), [4, this._requestQueue.send(r4)];
          case 3:
            return i4 = s6.sent(), [2, i4.as(Ot).message];
        }
      });
    });
  }, e4.prototype._createSendFileMessageRequestParams = function(e5, t7) {
    var n3 = n(n({}, t7.params), { channelUrl: e5.url, channelType: e5.channelType, reqId: t7.requestId, url: "" });
    if (t7.multipleFileUploadInfo) {
      var r4 = t7.params;
      n3.files = r4.fileInfoList;
    } else {
      r4 = t7.params;
      n3.url = r4.fileUrl, n3.requireAuth = r4.requireAuth;
    }
    return n3;
  }, e4.prototype._resolveMessageQueue = function(e5) {
    var t7;
    return r(this, void 0, void 0, function() {
      var n3, r4, i4, s6, a5, o3, u4, c4, l3, d5, h4, f4, p4;
      return s(this, function(m5) {
        switch (m5.label) {
          case 0:
            if (!(n3 = this._queueMap.get(e5.url))) return [3, 21];
            if (n3.isResolving) return [3, 20];
            n3.isResolving = true, r4 = [], i4 = true, m5.label = 1;
          case 1:
            m5.trys.push([1, 15, 16, 17]), s6 = o(n3.messageQueue), a5 = s6.next(), m5.label = 2;
          case 2:
            if (a5.done) return [3, 14];
            switch (o3 = a5.value, o3.state) {
              case kt.PENDING:
              case kt.UPLOADING:
                return [3, 3];
              case kt.UPLOADED:
                return [3, 4];
              case kt.FAILED:
                return [3, 12];
            }
            return [3, 13];
          case 3:
            return i4 = false, r4.push(o3), [3, 13];
          case 4:
            if (!i4) return [3, 10];
            m5.label = 5;
          case 5:
            return m5.trys.push([5, 8, , 9]), o3.state = kt.SENDING, [4, this._sendFileMessage(e5, o3)];
          case 6:
            return u4 = m5.sent(), o3.deferred.resolve(u4), [4, hs(100)];
          case 7:
            return m5.sent(), [3, 9];
          case 8:
            return c4 = m5.sent(), o3.deferred.reject(c4), [3, 9];
          case 9:
            return [3, 11];
          case 10:
            r4.push(o3), m5.label = 11;
          case 11:
            return [3, 13];
          case 12:
            return l3 = null !== (t7 = o3.error) && void 0 !== t7 ? t7 : v.unknown, o3.deferred.reject(l3.code === u.REQUEST_CANCELED ? v.fileUploadCanceled : l3), [3, 13];
          case 13:
            return a5 = s6.next(), [3, 2];
          case 14:
            return [3, 17];
          case 15:
            return d5 = m5.sent(), f4 = { error: d5 }, [3, 17];
          case 16:
            try {
              a5 && !a5.done && (p4 = s6.return) && p4.call(s6);
            } finally {
              if (f4) throw f4.error;
            }
            return [7];
          case 17:
            return h4 = n3.isResolveRequestPending, n3.messageQueue = r4, n3.isResolving = false, n3.isResolveRequestPending = false, h4 ? [4, this._resolveMessageQueue(e5)] : [3, 19];
          case 18:
            m5.sent(), m5.label = 19;
          case 19:
            return [3, 21];
          case 20:
            n3.isResolveRequestPending = true, m5.label = 21;
          case 21:
            return [2];
        }
      });
    });
  }, e4.prototype._uploadNextPendingItem = function(e5) {
    var t7;
    return r(this, void 0, void 0, function() {
      var n3, r4, i4, s6, a5, o3, u4, c4, l3, d5;
      return s(this, function(h4) {
        switch (h4.label) {
          case 0:
            return (n3 = this._queueMap.get(e5.url)) && (r4 = n3.messageQueue.find(function(e6) {
              return e6.state === kt.PENDING;
            })) ? r4.multipleFileUploadInfo ? (i4 = r4.multipleFileUploadInfo, s6 = i4.uploadIndex, a5 = i4.uploadCount, o3 = i4.requestHandler, d5 = r4.params, u4 = d5.fileInfoList[s6], !k(u4.file) || (null === (t7 = u4._uploadedMetaData) || void 0 === t7 ? void 0 : t7.isUploaded) ? [3, 2] : [4, this._tryUploadNextItemAndUpdateItemState(e5, n3, r4)]) : [3, 4] : [3, 9];
          case 1:
            return h4.sent(), [3, 3];
          case 2:
            r4.state = s6 < a5 - 1 ? kt.PENDING : kt.UPLOADED, h4.label = 3;
          case 3:
            return c4 = d5.fileInfoList[s6], l3 = r4.multipleFileUploadInfo.uploadIndex++, r4.multipleFileUploadInfo.isCopy || null == o3 || o3._triggerOnFileUploaded(r4.requestId, l3, c4, r4.error), [3, 7];
          case 4:
            return d5 = r4.params, k(d5.file) ? [4, this._tryUploadNextItemAndUpdateItemState(e5, n3, r4)] : [3, 6];
          case 5:
            return h4.sent(), [3, 7];
          case 6:
            d5.thumbnailSizes = [], r4.state = kt.UPLOADED, h4.label = 7;
          case 7:
            return this._uploadNextPendingItem(e5), [4, this._resolveMessageQueue(e5)];
          case 8:
            h4.sent(), h4.label = 9;
          case 9:
            return [2];
        }
      });
    });
  }, e4.prototype._tryUploadNextItemAndUpdateItemState = function(e5, t7, r4) {
    return r(this, void 0, void 0, function() {
      var i4, s6, a5, o3, u4, c4;
      return s(this, function(l3) {
        switch (l3.label) {
          case 0:
            return [4, this._onlineDetector.isOnline()];
          case 1:
            if (i4 = l3.sent(), !Ws.of(this._iid).sessionManager.currentUser || !i4) return r4.error = v.connectionRequired, r4.state = kt.FAILED, [2];
            if (!(t7.uploadQueue.length < 6)) return [3, 9];
            r4.state = kt.UPLOADING, t7.uploadQueue.push(r4), l3.label = 2;
          case 2:
            return l3.trys.push([2, 7, , 8]), r4.multipleFileUploadInfo ? (s6 = r4.multipleFileUploadInfo, a5 = s6.uploadIndex, o3 = s6.uploadCount, u4 = r4.params, [4, this._uploadNextFileForMultipleFilesItemAndUpdateParams(e5, r4, u4)]) : [3, 4];
          case 3:
            return l3.sent(), r4.state = a5 < o3 - 1 ? kt.PENDING : kt.UPLOADED, [3, 6];
          case 4:
            return u4 = r4.params, [4, this._uploadNextFileForSingleFileItemAndUpdateParams(e5, r4, u4)];
          case 5:
            l3.sent(), r4.state = kt.UPLOADED, l3.label = 6;
          case 6:
            return [3, 8];
          case 7:
            switch ((c4 = l3.sent()).code) {
              case u.REQUEST_FAILED:
                r4.error = new v({ code: u.NETWORK_ERROR, message: "Failed to upload a file." });
                break;
              case u.REQUEST_CANCELED:
                r4.error = v.fileUploadCanceled;
                break;
              default:
                r4.error = c4;
            }
            return r4.state = kt.FAILED, [3, 8];
          case 8:
            this._dequeueUploadItem(t7, r4), l3.label = 9;
          case 9:
            return [2];
        }
      });
    });
  }, e4.prototype._dequeueUploadItem = function(e5, t7) {
    var n3 = e5.uploadQueue.findIndex(function(e6) {
      return e6.requestId === t7.requestId;
    });
    n3 >= 0 && e5.uploadQueue.splice(n3, 1);
  }, e4.prototype._uploadNextFileForSingleFileItemAndUpdateParams = function(e5, t7, n3) {
    var r4, i4, s6;
    return r(this, void 0, void 0, function() {
      var a5, o3, u4, c4, l3, d5, h4, f4, p4, m5;
      return s(this, function(v5) {
        switch (v5.label) {
          case 0:
            return a5 = new Pe({ file: n3.file, channelUrl: e5.url, thumbnailSizes: n3.thumbnailSizes, requestId: t7.requestId }), [4, this._requestQueue.send(a5)];
          case 1:
            return o3 = v5.sent(), u4 = o3.as(ke2), c4 = u4.url, l3 = u4.fileSize, d5 = void 0 === l3 ? n3.fileSize : l3, h4 = u4.thumbnails, f4 = void 0 === h4 ? [] : h4, p4 = u4.requireAuth, m5 = void 0 !== p4 && p4, n3.fileName = null !== (r4 = n3.fileName) && void 0 !== r4 ? r4 : n3.file.name, n3.mimeType = null !== (i4 = n3.mimeType) && void 0 !== i4 ? i4 : n3.file.type, n3.fileSize = null !== (s6 = n3.fileSize) && void 0 !== s6 ? s6 : n3.file.size, n3.fileUrl = c4, n3.fileSize = d5, n3.requireAuth = m5, n3._thumbnails = f4, [2];
        }
      });
    });
  }, e4.prototype._uploadNextFileForMultipleFilesItemAndUpdateParams = function(e5, t7, n3) {
    var r4, i4, s6;
    return r(this, void 0, void 0, function() {
      var a5, o3, c4, l3, d5, h4, f4, p4, m5, v5, y6;
      return s(this, function(_2) {
        switch (_2.label) {
          case 0:
            return a5 = t7.multipleFileUploadInfo.uploadIndex, o3 = n3.fileInfoList[a5], c4 = new Pe({ file: o3.file, channelUrl: e5.url, thumbnailSizes: o3.thumbnailSizes, requestId: t7.requestId }), [4, this._requestQueue.send(c4)];
          case 1:
            return l3 = _2.sent(), d5 = l3.as(ke2), h4 = d5.url, f4 = d5.fileSize, p4 = void 0 === f4 ? o3.fileSize : f4, m5 = d5.thumbnails, v5 = d5.requireAuth, y6 = void 0 !== v5 && v5, o3.fileName = null !== (r4 = o3.fileName) && void 0 !== r4 ? r4 : o3.file.name, o3.mimeType = null !== (i4 = o3.mimeType) && void 0 !== i4 ? i4 : o3.file.type, o3.fileSize = null !== (s6 = o3.fileSize) && void 0 !== s6 ? s6 : o3.file.size, o3.file = void 0, o3.fileUrl = h4, o3.fileSize = p4, o3._thumbnails = m5, o3._uploadedMetaData = n(n({}, o3._uploadedMetaData), { requireAuth: y6, isUploaded: true }), o3 instanceof At || (n3.fileInfoList[a5] = new At(this._iid, o3)), [2];
        }
      });
    });
  }, e4.prototype.request = function(e5, t7, n3, r4) {
    return void 0 === r4 && (r4 = {}), r(this, void 0, void 0, function() {
      var i4, s6, a5, o3, c4;
      return s(this, function(l3) {
        return this._queueMap.has(e5.url) || (i4 = { messageQueue: [], uploadQueue: [], isResolving: false, isResolveRequestPending: false }, this._queueMap.set(e5.url, i4)), s6 = this._queueMap.get(e5.url), a5 = new et(), o3 = { requestId: t7, params: n3, state: kt.PENDING, deferred: a5 }, function(e6) {
          return "fileInfoList" in e6;
        }(n3) && (c4 = n({ uploadIndex: 0, uploadCount: n3.fileInfoList.length }, r4), o3.multipleFileUploadInfo = c4), s6.messageQueue.push(o3), this._uploadNextPendingItem(e5), [2, a5.promise];
      });
    });
  }, e4.prototype.cancel = function(e5, t7) {
    var n3, r4, i4 = this._queueMap.get(e5.url);
    if (i4) {
      var s6 = t7 ? [i4.messageQueue.find(function(e6) {
        return e6.requestId === t7;
      })] : c([], a(i4.messageQueue), false);
      try {
        for (var a5 = o(s6), o3 = a5.next(); !o3.done; o3 = a5.next()) {
          var u4 = o3.value;
          if (u4) switch (u4.state) {
            case kt.PENDING:
              if (u4.state = kt.FAILED, u4.error = v.requestCanceled, u4.multipleFileUploadInfo && !u4.multipleFileUploadInfo.isCopy) {
                var c4 = u4.multipleFileUploadInfo, l3 = c4.uploadIndex, d5 = c4.requestHandler, h4 = u4.params.fileInfoList[l3];
                null == d5 || d5._triggerOnFileUploaded(u4.requestId, l3, h4, v.fileUploadCanceled);
              }
              this._resolveMessageQueue(e5);
              break;
            case kt.UPLOADING:
              this._requestQueue.cancel(u4.requestId), this._dispatcher.dispatch(new tt({ requestId: u4.requestId }));
          }
        }
      } catch (e6) {
        n3 = { error: e6 };
      } finally {
        try {
          o3 && !o3.done && (r4 = a5.return) && r4.call(a5);
        } finally {
          if (n3) throw n3.error;
        }
      }
    } else t7 && (this._requestQueue.cancel(t7), this._dispatcher.dispatch(new tt({ requestId: t7 })));
  }, e4;
}();
var xt;
var Dt = { prevResultSize: 0, nextResultSize: 0, isInclusive: false, reverse: false, messageTypeFilter: G.ALL, customTypesFilter: void 0, senderUserIdsFilter: void 0, replyType: B.NONE, includeReactions: false, includeMetaArray: false, includeParentMessageInfo: false, includeThreadInfo: false, showSubchannelMessagesOnly: false };
var Lt = function(e4) {
  return w("number", e4.prevResultSize) && w("number", e4.nextResultSize) && w("boolean", e4.isInclusive) && w("boolean", e4.reverse) && w("string", e4.messageTypeFilter) && S(G, e4.messageTypeFilter) && N("string", e4.customTypesFilter, true) && N("string", e4.senderUserIdsFilter, true) && S(B, e4.replyType) && w("boolean", e4.includeMetaArray) && w("boolean", e4.includeReactions) && w("boolean", e4.includeParentMessageInfo) && w("boolean", e4.includeThreadInfo) && w("boolean", e4.showSubchannelMessagesOnly);
};
var Ft = { replyType: B.NONE, includeReactions: false, includeThreadInfo: false, includeMetaArray: false, includeParentMessageInfo: false };
var qt = function(e4) {
  return S(B, e4.replyType) && w("boolean", e4.includeReactions) && w("boolean", e4.includeMetaArray) && w("boolean", e4.includeParentMessageInfo) && w("boolean", e4.includeThreadInfo);
};
var zt = function(e4) {
  function t7(t8) {
    var n3 = t8.channelType, r4 = t8.channelUrl, s6 = t8.messageId, a5 = t8.includeMetaArray, o3 = t8.includeReactions, u4 = t8.includeThreadInfo, c4 = t8.includeParentMessageInfo, l3 = e4.call(this) || this;
    return l3.method = oe.GET, l3.path = "".concat(Ie(n3), "/").concat(encodeURIComponent(r4), "/messages/").concat(encodeURIComponent(s6)), l3.params = { is_sdk: true, with_sorted_meta_array: a5, include_reactions: o3, include_thread_info: u4, include_parent_message_info: c4, include_poll_details: true }, l3;
  }
  return t(t7, e4), t7;
}(xe);
var Bt = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.message = n3 ? Mt(t8, n({}, n3)) : null, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Kt = function(n3) {
  function s6(r4) {
    var s7 = r4.channelType, a5 = r4.channelUrl, o3 = r4.timestamp, u4 = r4.token, c4 = r4.prevResultSize, l3 = r4.nextResultSize, d5 = r4.isInclusive, h4 = r4.reverse, f4 = r4.messageTypeFilter, p4 = r4.customTypesFilter, m5 = r4.senderUserIdsFilter, v5 = r4.replyType, y6 = r4.includeMetaArray, _2 = r4.includeReactions, g4 = r4.parentMessageId, b6 = r4.includeThreadInfo, I5 = r4.includeParentMessageInfo, E4 = r4.showSubchannelMessagesOnly, T4 = r4.checkingHasNext, M5 = r4.checkingContinuousMessages, S6 = n3.call(this) || this;
    return S6.method = oe.GET, S6.path = "".concat(Ie(s7), "/").concat(encodeURIComponent(a5), "/messages"), S6.params = re(se({ is_sdk: true, prev_limit: c4, next_limit: l3, include: d5, reverse: h4, message_ts: o3, message_id: u4, message_type: null != f4 ? f4 : null, custom_types: p4, sender_ids: m5, include_reply_type: v5, with_sorted_meta_array: y6, include_reactions: _2, parent_message_id: g4, include_thread_info: b6, include_parent_message_info: I5, show_subchannel_message_only: E4, include_poll_details: true, checking_has_next: T4, checking_continuous_messages: M5 })), S6;
  }
  return t(s6, n3), s6;
}(xe);
var jt = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return void 0 !== n3.is_continuous_messages && (r4.isContinuousMessages = n3.is_continuous_messages), void 0 !== n3.has_next && (r4.hasNext = n3.has_next), r4.messages = n3.messages.map(function(e5) {
      return Mt(t8, e5);
    }), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Qt = function(e4) {
  function t7(t8) {
    var n3 = t8.channelType, r4 = t8.channelUrl, s6 = t8.timestamp, a5 = t8.token, o3 = t8.replyType, u4 = t8.includeMetaArray, c4 = t8.includeReactions, l3 = t8.includeThreadInfo, d5 = t8.includeParentMessageInfo, h4 = e4.call(this) || this;
    return h4.method = oe.GET, h4.path = "".concat(Ie(n3), "/").concat(encodeURIComponent(r4), "/messages/changelogs"), h4.params = { change_ts: s6, token: a5, with_sorted_meta_array: u4, include_reactions: c4, include_thread_info: l3, include_reply_type: o3, include_parent_message_info: d5, include_poll_details: true }, h4;
  }
  return t(t7, e4), t7;
}(xe);
var Gt = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.updatedMessages = n3.updated.map(function(e5) {
      return Mt(t8, e5);
    }), r4.deletedMessagesInfo = n3.deleted.map(function(e5) {
      return { messageId: e5.message_id, deletedAt: e5.deleted_at };
    }), r4.hasMore = n3.has_more, r4.nextToken = n3.next, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Vt = function(e4) {
  function t7(t8) {
    var n3 = t8.channelUrl, r4 = t8.scheduledMessageId, s6 = e4.call(this) || this;
    return s6.method = oe.GET, s6.path = "".concat(he, "/").concat(encodeURIComponent(n3), "/scheduled_messages/").concat(encodeURIComponent(r4)), s6.params = {}, s6;
  }
  return t(t7, e4), t7;
}(xe);
var Ht = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.message = n3 ? Mt(t8, n({}, n3)) : null, r4;
  }
  return t(t7, e4), t7;
}(Ue);
!function(e4) {
  e4.MUTED = "muted", e4.BANNED = "banned";
}(xt || (xt = {}));
var Wt = function() {
  function n3(e4) {
    var t7, n4, r4, i4;
    this.restrictionType = null, S(xt, e4.restriction_type) && (this.restrictionType = e4.restriction_type), this.description = null !== (t7 = e4.description) && void 0 !== t7 ? t7 : null, this.endAt = null !== (r4 = null !== (n4 = e4.end_at) && void 0 !== n4 ? n4 : e4.muted_end_at) && void 0 !== r4 ? r4 : -1, this.remainingDuration = null !== (i4 = e4.remaining_duration) && void 0 !== i4 ? i4 : -1;
  }
  return n3.payloadify = function(n4) {
    return re(se({ restriction_type: n4.restrictionType, description: n4.description, end_at: n4.endAt, remaining_duration: n4.remainingDuration }));
  }, n3;
}();
var Yt = function(n3) {
  function i4(e4, t7) {
    var r4 = n3.call(this, e4, t7) || this;
    return r4.restrictionInfo = new Wt(t7), r4;
  }
  return t(i4, n3), i4.payloadify = function(r4) {
    return re(se(n(n({}, n3.payloadify.call(this, r4)), Wt.payloadify(r4.restrictionInfo))));
  }, i4;
}(es);
var Jt = function(e4) {
  function t7(t8, n3) {
    var r4, i4 = this;
    return (i4 = e4.call(this, t8, n3) || this).isMuted = false, i4.isMuted = null !== (r4 = n3.is_muted) && void 0 !== r4 && r4, i4;
  }
  return t(t7, e4), t7;
}(es);
var Xt = function() {
  function e4() {
    this._onPending = st, this._onFailed = st, this._onSucceeded = st;
  }
  return e4.prototype._trigger = function(e5) {
    switch (null == e5 ? void 0 : e5.sendingStatus) {
      case W.PENDING:
        0 === e5.errorCode && this._onPending(e5);
        break;
      case W.SCHEDULED:
      case W.SUCCEEDED:
        this._onSucceeded(e5);
    }
  }, e4.prototype._triggerFailed = function(e5, t7) {
    switch (null == t7 ? void 0 : t7.sendingStatus) {
      case W.FAILED:
      case W.CANCELED:
        this._onFailed(e5, t7.scheduledInfo ? null : t7);
    }
  }, e4.prototype.onPending = function(e5) {
    return this._onPending = e5, this;
  }, e4.prototype.onFailed = function(e5) {
    return this._onFailed = e5, this;
  }, e4.prototype.onSucceeded = function(e5) {
    return this._onSucceeded = e5, this;
  }, e4;
}();
var Zt = { data: void 0, customType: void 0, mentionType: K.USERS, mentionedUserIds: void 0, mentionedUsers: void 0, mentionedMessageTemplate: void 0, metaArrays: void 0, parentMessageId: void 0, isReplyToChannel: false, pushNotificationDeliveryOption: void 0, appleCriticalAlertOptions: void 0, isPinnedMessage: false };
var $t = function(e4) {
  return w("string", e4.data, true) && w("string", e4.customType, true) && S(K, e4.mentionType) && N("string", e4.mentionedUserIds, true) && N(es, e4.mentionedUsers, true) && w("string", e4.mentionedMessageTemplate, true) && N(je, e4.metaArrays, true) && w("number", e4.parentMessageId, true) && w("boolean", e4.isReplyToChannel) && S(Q, e4.pushNotificationDeliveryOption, true) && w(ze, e4.appleCriticalAlertOptions, true) && w("boolean", e4.isPinnedMessage, true);
};
var en = function(e4) {
  return { isReplyToChannel: e4.isReplyToChannel, pushNotificationDeliveryOption: e4.pushNotificationDeliveryOption, pollId: e4.pollId };
};
var tn = n(n({}, Zt), { message: "", translationTargetLanguages: void 0, pollId: void 0, extendedMessagePayload: void 0 });
function nn(e4) {
  var n3, r4, i4;
  return null !== (n3 = e4.messageParams) && void 0 !== n3 ? n3 : se(n(n({}, e4), { mentionType: e4.mentionType, mentionedUserIds: null !== (r4 = e4.mentionedUserIds) && void 0 !== r4 ? r4 : null === (i4 = e4.mentionedUsers) || void 0 === i4 ? void 0 : i4.map(function(e5) {
    return e5.userId;
  }), translationTargetLanguages: Object.keys(e4.translations), pushNotificationDeliveryOption: Q.DEFAULT, parentMessageId: null, isReplyToChannel: false, isPinnedMessage: false }));
}
var rn;
var sn = function(n3) {
  var r4;
  return re(se({ data: n3.data, customType: n3.customType, mentionType: n3.mentionType, mentionedUsers: n3.mentionedUsers, mentionedUserIds: n3.mentionedUserIds, mentionedMessageTemplate: n3.mentionedMessageTemplate, metaArrays: n3.metaArrays, pollId: null === (r4 = n3.poll) || void 0 === r4 ? void 0 : r4.id, parentMessageId: n3.parentMessageId, appleCriticalAlertOptions: n3.appleCriticalAlertOptions, message: n3.message, translationTargetLanguages: Object.keys(n3.translations), extendedMessagePayload: n3.extendedMessagePayload }));
};
var an = function(e4) {
  return $t(e4) && w("string", e4.message) && N("string", e4.translationTargetLanguages, true) && w("number", e4.pollId, true) && w("object", e4.extendedMessagePayload, true);
};
!function(e4) {
  e4.FILE = "file", e4.BLOB = "blob", e4.BLOB_LIKE_OBJECT = "blobLikeObject", e4.URL = "url";
}(rn || (rn = {}));
var on = function(e4) {
  return "undefined" != typeof window && "Blob" in window && "undefined" != typeof Blob && e4 instanceof Blob;
};
var un = function(e4) {
  return e4 === rn.BLOB || e4 === rn.FILE;
};
var cn = function(e4) {
  return { file: e4.file, fileKey: e4.fileKey, fileType: e4.fileType, isReplyToChannel: e4.isReplyToChannel, pushNotificationDeliveryOption: e4.pushNotificationDeliveryOption };
};
var ln = n(n({}, Zt), { file: void 0, fileKey: void 0, fileUrl: void 0, fileName: void 0, fileType: void 0, fileSize: void 0, mimeType: void 0, thumbnailSizes: void 0, requireAuth: false });
function dn(e4) {
  var n3, r4, i4, s6;
  return null !== (n3 = e4.messageParams) && void 0 !== n3 ? n3 : se(n(n({}, e4), { fileUrl: e4.plainUrl, fileName: e4.name, fileSize: e4.size, mimeType: e4.type, mentionType: e4.mentionType, mentionedUserIds: null !== (r4 = e4.mentionedUserIds) && void 0 !== r4 ? r4 : null === (i4 = e4.mentionedUsers) || void 0 === i4 ? void 0 : i4.map(function(e5) {
    return e5.userId;
  }), pushNotificationDeliveryOption: Q.DEFAULT, parentMessageId: null, isReplyToChannel: false, thumbnailSizes: null === (s6 = e4.thumbnails) || void 0 === s6 ? void 0 : s6.map(function(e5) {
    return { maxWidth: e5.width, maxHeight: e5.height };
  }), requireAuth: e4.requireAuth, isPinnedMessage: false, _thumbnails: e4.thumbnails }));
}
var hn;
var fn = function(n3, r4) {
  var i4;
  return n3.messageParams ? (!n3.url && k(r4) && (n3.messageParams.file = r4), n3.messageParams) : re(se({ data: n3.data, customType: n3.customType, mentionType: n3.mentionType, mentionedUsers: n3.mentionedUsers, mentionedUserIds: n3.mentionedUserIds, metaArrays: n3.metaArrays, parentMessageId: n3.parentMessageId, appleCriticalAlertOptions: n3.appleCriticalAlertOptions, file: r4, fileUrl: n3.url, fileName: n3.name, fileSize: n3.size, mimeType: n3.type, thumbnailSizes: null === (i4 = n3.thumbnails) || void 0 === i4 ? void 0 : i4.map(function(e4) {
    return { maxWidth: e4.width, maxHeight: e4.height };
  }) }));
};
var pn = function(e4) {
  return $t(e4) && (k(e4.file) || w("string", e4.fileUrl)) && w("string", e4.fileName, true) && w("string", e4.mimeType, true) && w("number", e4.fileSize, true) && (null === e4.thumbnailSizes || void 0 === e4.thumbnailSizes || Array.isArray(e4.thumbnailSizes) && e4.thumbnailSizes.every(function(e5) {
    return w("object", e5) && e5.maxWidth > 0 && e5.maxHeight > 0;
  }));
};
var mn = { data: void 0, customType: void 0, mentionType: K.USERS, mentionedUserIds: void 0, mentionedUsers: void 0, mentionedMessageTemplate: void 0, metaArrays: void 0, pushNotificationDeliveryOption: void 0, appleCriticalAlertOptions: void 0 };
var vn = function(e4) {
  return w("string", e4.data, true) && w("string", e4.customType, true) && S(K, e4.mentionType) && N("string", e4.mentionedUserIds, true) && N(es, e4.mentionedUsers, true) && w("string", e4.mentionedMessageTemplate, true) && N(je, e4.metaArrays, true) && S(Q, e4.pushNotificationDeliveryOption, true) && w(ze, e4.appleCriticalAlertOptions, true);
};
var yn = n(n({}, mn), { message: void 0, translationTargetLanguages: void 0, pollId: void 0 });
var _n = function(e4) {
  return vn(e4) && w("string", e4.message, true) && N("string", e4.translationTargetLanguages, true) && w("number", e4.pollId, true);
};
var gn = n({}, mn);
var bn = function(e4) {
  function t7(t8) {
    var n3 = t8.channelUrl, r4 = t8.channelType, s6 = t8.token, a5 = t8.limit, o3 = e4.call(this) || this;
    return o3.method = oe.GET, o3.path = "".concat(Ie(r4), "/").concat(encodeURIComponent(n3), "/operators"), o3.params = { token: s6, limit: a5 }, o3;
  }
  return t(t7, e4), t7;
}(xe);
var In = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.operators = n3.operators.map(function(e5) {
      return new es(t8, e5);
    }), r4.token = n3.next, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var En = function(e4) {
  function t7(t8, n3, r4, i4) {
    return e4.call(this, t8, n3, r4, i4) || this;
  }
  return t(t7, e4), t7.prototype._validate = function() {
    return e4.prototype._validate.call(this);
  }, t7.prototype.next = function() {
    return r(this, void 0, void 0, function() {
      var e5, t8, r4, i4, s6, a5, o3;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : (e5 = [], this._hasNext ? (this._isLoading = true, t8 = Ws.of(this._iid).requestQueue, r4 = new bn(n(n({}, this), { channelUrl: this.channelUrl, token: this._token })), [4, t8.send(r4)]) : [3, 2]) : [3, 5];
          case 1:
            return i4 = c4.sent(), s6 = i4.as(In), a5 = s6.operators, o3 = s6.token, this._token = o3, this._hasNext = !!o3, this._isLoading = false, [2, a5];
          case 2:
            return [2, e5];
          case 3:
            throw v.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw v.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, t7;
}(fo);
var Tn = function(e4) {
  function n3(t7, n4, r4, i4) {
    var s6, a5, o3, u4, c4, l3, d5, h4, f4, p4, m5 = this;
    return (m5 = e4.call(this, t7, n4, r4, i4) || this).reverse = false, m5.messageTypeFilter = G.ALL, m5.customTypesFilter = null, m5.senderUserIdsFilter = null, m5.replyType = B.NONE, m5.includeMetaArray = false, m5.includeReactions = false, m5.includeParentMessageInfo = false, m5.includeThreadInfo = false, m5.showSubchannelMessagesOnly = false, m5._edge = Number.MAX_SAFE_INTEGER, m5.reverse = null !== (s6 = i4.reverse) && void 0 !== s6 && s6, m5.messageTypeFilter = null !== (a5 = i4.messageTypeFilter) && void 0 !== a5 ? a5 : G.ALL, m5.customTypesFilter = null !== (o3 = i4.customTypesFilter) && void 0 !== o3 ? o3 : null, m5.senderUserIdsFilter = null !== (u4 = i4.senderUserIdsFilter) && void 0 !== u4 ? u4 : null, m5.replyType = null !== (c4 = i4.replyType) && void 0 !== c4 ? c4 : B.NONE, m5.includeMetaArray = null !== (l3 = i4.includeMetaArray) && void 0 !== l3 && l3, m5.includeReactions = null !== (d5 = i4.includeReactions) && void 0 !== d5 && d5, m5.includeParentMessageInfo = null !== (h4 = i4.includeParentMessageInfo) && void 0 !== h4 && h4, m5.includeThreadInfo = null !== (f4 = i4.includeThreadInfo) && void 0 !== f4 && f4, m5.showSubchannelMessagesOnly = null !== (p4 = i4.showSubchannelMessagesOnly) && void 0 !== p4 && p4, m5;
  }
  return t(n3, e4), n3.prototype._validate = function() {
    return e4.prototype._validate.call(this) && w("boolean", this.reverse) && S(G, this.messageTypeFilter) && S(B, this.replyType) && N("string", this.customTypesFilter, true) && N("string", this.senderUserIdsFilter, true) && w("boolean", this.includeMetaArray) && w("boolean", this.includeReactions) && w("boolean", this.includeParentMessageInfo) && w("boolean", this.includeThreadInfo) && w("boolean", this.showSubchannelMessagesOnly);
  }, n3.prototype.load = function() {
    return r(this, void 0, void 0, function() {
      var e5;
      return s(this, function(n4) {
        switch (n4.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, [4, ea.of(this._iid).getMessagesByTimestamp(this.channelUrl, this.channelType, this._edge, se({ prevResultSize: this.limit, nextResultSize: 0, isInclusive: false, reverse: this.reverse, messageTypeFilter: this.messageTypeFilter, customTypesFilter: this.customTypesFilter, replyType: this.replyType, senderUserIdsFilter: this.senderUserIdsFilter, includeReactions: this.includeReactions, includeMetaArray: this.includeMetaArray, includeParentMessageInfo: this.includeParentMessageInfo, includeThreadInfo: this.includeThreadInfo, showSubchannelMessagesOnly: this.showSubchannelMessagesOnly }))]) : [3, 2] : [3, 5];
          case 1:
            return e5 = n4.sent(), this._edge = Math.min.apply(Math, c([Number.MAX_SAFE_INTEGER], a(e5.map(function(e6) {
              return e6.createdAt;
            })), false)), this._hasNext = e5.length >= this.limit, this._isLoading = false, [2, e5];
          case 2:
            return [2, []];
          case 3:
            throw v.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw v.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, n3;
}(fo);
var wn = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.limit, o3 = t8.token;
    return (n3 = e4.call(this) || this).method = oe.GET, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/mute"), n3.params = { limit: a5, token: o3 }, n3;
  }
  return t(t7, e4), t7;
}(xe);
var Mn = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    r4.mutedUsers = [];
    var i4 = n3.next, s6 = n3.muted_list;
    return r4.token = i4, s6 && s6.length > 0 && (r4.mutedUsers = s6.map(function(e5) {
      return new Yt(t8, e5);
    })), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Sn = function(e4) {
  function t7(t8, n3, r4, i4) {
    return e4.call(this, t8, n3, r4, i4) || this;
  }
  return t(t7, e4), t7.prototype.next = function() {
    return r(this, void 0, void 0, function() {
      var e5, t8, r4, i4, s6, a5;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e5 = Ws.of(this._iid).requestQueue, t8 = new wn(n(n({}, this), { token: this._token })), [4, e5.send(t8)]) : [3, 2] : [3, 5];
          case 1:
            return r4 = o3.sent(), i4 = r4.as(Mn), s6 = i4.mutedUsers, a5 = i4.token, this._token = a5, this._hasNext = !!a5, this._isLoading = false, [2, s6];
          case 2:
            return [2, []];
          case 3:
            throw v.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw v.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, t7;
}(fo);
var An = function(t7) {
  function n3(n4) {
    var r4 = this, s6 = n4.channelUrl, a5 = n4.channelType, o3 = n4.limit, u4 = n4.token;
    return (r4 = t7.call(this) || this).method = oe.GET, r4.path = "".concat(Ie(a5), "/").concat(encodeURIComponent(s6), "/ban"), r4.params = re({ limit: o3, token: u4 }), r4;
  }
  return t(n3, t7), n3;
}(xe);
var Un = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    r4.bannedUsers = [];
    var i4 = n3.next, s6 = n3.banned_list;
    return r4.token = i4, s6 && s6.length > 0 && (r4.bannedUsers = s6.map(function(e5) {
      return new Yt(t8, e5.user);
    })), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Nn = function(e4) {
  function t7(t8, n3, r4, i4) {
    return e4.call(this, t8, n3, r4, i4) || this;
  }
  return t(t7, e4), t7.prototype._validate = function() {
    return e4.prototype._validate.call(this);
  }, t7.prototype.next = function() {
    return r(this, void 0, void 0, function() {
      var e5, t8, r4, i4, s6, a5;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e5 = Ws.of(this._iid).requestQueue, t8 = new An(n(n({}, this), { token: this._token })), [4, e5.send(t8)]) : [3, 2] : [3, 5];
          case 1:
            return r4 = o3.sent(), i4 = r4.as(Un), s6 = i4.bannedUsers, a5 = i4.token, this._token = a5, this._hasNext = !!a5, this._isLoading = false, [2, s6];
          case 2:
            return [2, []];
          case 3:
            throw v.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw v.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, t7;
}(fo);
!function(e4) {
  e4.SPAM = "spam", e4.HARASSING = "harassing", e4.SUSPICIOUS = "suspicious", e4.INAPPROPRIATE = "inappropriate";
}(hn || (hn = {}));
var Cn = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.operatorUserIds;
    return (n3 = e4.call(this) || this).method = oe.POST, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/operators"), n3.params = { operator_ids: a5 }, n3;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7() {
    return null !== e4 && e4.apply(this, arguments) || this;
  }
  t(t7, e4);
}(Ue);
var On = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.operatorUserIds;
    return (n3 = e4.call(this) || this).method = oe.DELETE, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/operators"), n3.params = { operator_ids: a5 }, n3;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7(t8, n3) {
    return e4.call(this, t8, n3) || this;
  }
  t(t7, e4);
}(Ue);
var Pn = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.userId;
    return (n3 = e4.call(this) || this).method = oe.GET, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/mute/").concat(a5), n3;
  }
  return t(t7, e4), t7;
}(xe);
var kn = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    r4.isMuted = false, r4.startAt = 0, r4.endAt = 0;
    var i4 = n3.is_muted, s6 = n3.start_at, a5 = n3.end_at, o3 = n3.remaining_duration, u4 = n3.description;
    return r4.isMuted = i4, r4.startAt = s6, r4.endAt = a5, r4.remainingDuration = o3, r4.description = u4, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Rn = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.keys;
    return (n3 = e4.call(this) || this).method = oe.GET, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/metadata"), n3.params = { keys: a5, include_ts: true }, n3;
  }
  return t(t7, e4), t7;
}(xe);
var xn = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this, i4 = n3.metadata, s6 = n3.ts;
    return r4.metadata = i4, r4.ts = s6, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Dn = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.metadata;
    return (n3 = e4.call(this) || this).method = oe.POST, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/metadata"), n3.params = { metadata: a5, include_ts: true }, n3;
  }
  return t(t7, e4), t7;
}(xe);
var Ln = function(e4) {
  function t7(t8, n3) {
    var r4, i4, s6 = this;
    return (s6 = e4.call(this, t8, n3) || this).metaData = null !== (r4 = n3.metadata) && void 0 !== r4 ? r4 : {}, s6.ts = null !== (i4 = n3.ts) && void 0 !== i4 ? i4 : null, s6;
  }
  return t(t7, e4), t7;
}(Ue);
var Fn = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.metadata, o3 = t8.upsert;
    return (n3 = e4.call(this) || this).method = oe.PUT, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/metadata"), n3.params = { metadata: a5, include_ts: true, upsert: null != o3 && o3 }, n3;
  }
  return t(t7, e4), t7;
}(xe);
var qn = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this, i4 = n3.metadata, s6 = n3.ts;
    return r4.metadata = i4, r4.ts = s6, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var zn = function(e4) {
  function t7(t8, n3, r4) {
    var i4 = e4.call(this, t8, "SYEV", r4) || this;
    return r4.data && (i4.created = r4.data.created, i4.updated = r4.data.updated, i4.deleted = r4.data.deleted), i4;
  }
  return t(t7, e4), t7;
}(Fe);
var Bn = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.key;
    return (n3 = e4.call(this) || this).method = oe.DELETE, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/metadata/").concat(a5), n3.params = { include_ts: true }, n3;
  }
  return t(t7, e4), t7;
}(xe);
var Kn = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this, i4 = n3.ts;
    return r4.ts = i4, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var jn = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType;
    return (n3 = e4.call(this) || this).method = oe.DELETE, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/metadata"), n3.params = { include_ts: true }, n3;
  }
  return t(t7, e4), t7;
}(xe);
var Qn = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this, i4 = n3.ts;
    return r4.ts = i4, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Gn = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.keys;
    return (n3 = e4.call(this) || this).method = oe.GET, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/metacounter"), n3.params = { keys: a5 }, n3;
  }
  return t(t7, e4), t7;
}(xe);
var Vn = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.metaCounter = n3, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Hn = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.metaCounter;
    return (n3 = e4.call(this) || this).method = oe.POST, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/metacounter"), n3.params = { metacounter: a5 }, n3;
  }
  return t(t7, e4), t7;
}(xe);
var Wn = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.metaCounter = n3, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Yn = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.metaCounter, o3 = t8.upsert, u4 = void 0 !== o3 && o3, c4 = t8.mode, l3 = void 0 === c4 ? "set" : c4;
    return (n3 = e4.call(this) || this).method = oe.PUT, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/metacounter"), n3.params = { metacounter: a5, upsert: u4, mode: l3 }, n3;
  }
  return t(t7, e4), t7;
}(xe);
var Jn = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.metaCounter = n3, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Xn = function(e4) {
  function t7(t8, n3, r4) {
    var i4 = e4.call(this, t8, "SYEV", r4) || this;
    return r4.data && (i4.created = r4.data.created, i4.updated = r4.data.updated, i4.deleted = r4.data.deleted), i4;
  }
  return t(t7, e4), t7;
}(Fe);
var Zn = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.key;
    return (n3 = e4.call(this) || this).method = oe.DELETE, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/metacounter/").concat(a5), n3.params = {}, n3;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7(t8, n3) {
    return e4.call(this, t8, n3) || this;
  }
  t(t7, e4);
}(Ue);
var $n = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType;
    return (n3 = e4.call(this) || this).method = oe.DELETE, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/metacounter"), n3.params = {}, n3;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7() {
    return null !== e4 && e4.apply(this, arguments) || this;
  }
  t(t7, e4);
}(Ue);
var er = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.userId, o3 = t8.seconds, u4 = t8.description;
    return (n3 = e4.call(this) || this).method = oe.POST, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/mute"), n3.params = { user_id: a5, seconds: o3, description: u4 }, n3;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7(t8, n3) {
    return e4.call(this, t8, n3) || this;
  }
  t(t7, e4);
}(Ue);
var tr = function(e4) {
  function t7(t8, n3, r4) {
    var i4 = e4.call(this, t8, "SYEV", r4) || this;
    return i4.user = new Yt(t8, r4.data), i4;
  }
  return t(t7, e4), t7;
}(Fe);
var nr = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.userId;
    return (n3 = e4.call(this) || this).method = oe.DELETE, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/mute/").concat(encodeURIComponent(a5)), n3;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7() {
    return null !== e4 && e4.apply(this, arguments) || this;
  }
  t(t7, e4);
}(Ue);
var rr = function(e4) {
  function t7(t8, n3, r4) {
    var i4 = e4.call(this, t8, "SYEV", r4) || this;
    return i4.user = new Yt(t8, r4.data), i4;
  }
  return t(t7, e4), t7;
}(Fe);
var ir = function(t7) {
  function n3(n4) {
    var r4 = this, s6 = n4.channelUrl, a5 = n4.channelType, o3 = n4.userId, u4 = n4.seconds, c4 = n4.description;
    return (r4 = t7.call(this) || this).method = oe.POST, r4.path = "".concat(Ie(a5), "/").concat(encodeURIComponent(s6), "/ban"), r4.params = re({ user_id: o3, seconds: u4, description: c4 }), r4;
  }
  return t(n3, t7), n3;
}(xe);
!function(e4) {
  function t7() {
    return null !== e4 && e4.apply(this, arguments) || this;
  }
  t(t7, e4);
}(Ue);
var sr = function(e4) {
  function t7(t8, n3, r4) {
    var i4 = e4.call(this, t8, "SYEV", r4) || this;
    return i4.user = new Yt(t8, r4.data), r4.data.member_count && (i4.memberCount = r4.data.member_count), r4.data.joined_member_count && (i4.joinedMemberCount = r4.data.joined_member_count), i4;
  }
  return t(t7, e4), t7;
}(Fe);
var ar = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.userId;
    return (n3 = e4.call(this) || this).method = oe.DELETE, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/ban/").concat(encodeURIComponent(a5)), n3;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7() {
    return null !== e4 && e4.apply(this, arguments) || this;
  }
  t(t7, e4);
}(Ue);
var or = function(e4) {
  function t7(t8, n3, r4) {
    var i4 = e4.call(this, t8, "SYEV", r4) || this;
    return i4.user = new Yt(t8, r4.data), i4;
  }
  return t(t7, e4), t7;
}(Fe);
var ur = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.freezing;
    return (n3 = e4.call(this) || this).method = oe.PUT, n3.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/freeze"), n3.params = { freeze: a5 }, n3;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7() {
    return null !== e4 && e4.apply(this, arguments) || this;
  }
  t(t7, e4);
}(Ue);
var cr = function(e4) {
  function t7(t8, n3, r4) {
    var i4 = e4.call(this, t8, "SYEV", r4) || this;
    return i4.freeze = r4.data.freeze, i4;
  }
  return t(t7, e4), t7;
}(Fe);
var lr = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.category, o3 = t8.userId, u4 = t8.description;
    return (n3 = e4.call(this) || this).method = oe.POST, n3.path = "".concat(ke(s6), "/").concat(encodeURIComponent(r4)), n3.params = { report_category: a5, reporting_user_id: o3, report_description: u4 }, n3;
  }
  return t(t7, e4), t7;
}(xe);
var dr = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.channelUrl, s6 = t8.channelType, a5 = t8.category, o3 = t8.userId, u4 = t8.offendingUserId, c4 = t8.description;
    return (n3 = e4.call(this) || this).method = oe.POST, n3.path = "".concat(Ee, "/users/").concat(u4), n3.params = { channel_url: r4, channel_type: s6 === q.OPEN ? "open_channels" : "group_channels", report_category: a5, reporting_user_id: o3, report_description: c4 }, n3;
  }
  return t(t7, e4), t7;
}(xe);
var hr = function(t7) {
  function n3(n4) {
    var r4 = this, s6 = n4.channelUrl, a5 = n4.channelType, o3 = n4.category, u4 = n4.userId, c4 = n4.offendingUserId, l3 = n4.messageId, d5 = n4.description, h4 = n4.messageToken;
    return (r4 = t7.call(this) || this).method = oe.POST, r4.path = "".concat(ke(a5), "/").concat(encodeURIComponent(s6), "/messages/").concat(l3), r4.params = re({ report_category: o3, reporting_user_id: u4, report_description: d5, offending_user_id: c4, mesg_token: h4 }), r4;
  }
  return t(n3, t7), n3;
}(xe);
var fr = function(n3) {
  function i4(r4) {
    var i5 = [];
    return r4.mentionType === K.USERS && (r4.mentionedUserIds ? i5 = r4.mentionedUserIds : r4.mentionedUsers && (i5 = r4.mentionedUsers.map(function(e4) {
      return e4.userId;
    }))), n3.call(this, { code: "MESG", ackRequired: true, payload: re(se({ channel_url: r4.channelUrl, message: r4.message, data: r4.data, custom_type: r4.customType, metaarray: r4.metaArrays, mention_type: r4.mentionType, mentioned_user_ids: i5, mentioned_message_template: r4.mentionedMessageTemplate, target_langs: r4.translationTargetLanguages, push_option: r4.pushNotificationDeliveryOption && r4.pushNotificationDeliveryOption !== Q.DEFAULT ? r4.pushNotificationDeliveryOption : void 0, apple_critical_alert_options: r4.appleCriticalAlertOptions, silent: r4.silent, reply_to_channel: r4.isReplyToChannel, parent_message_id: r4.parentMessageId ? r4.parentMessageId : null, req_id: r4.reqId, poll_id: r4.pollId, pin_message: r4.isPinnedMessage, extended_message_payload: r4.extendedMessagePayload })) }) || this;
  }
  return t(i4, n3), i4;
}(qe);
var pr = function(e4) {
  function t7(t8, r4, i4) {
    var s6, a5, o3, u4, c4 = this;
    (c4 = e4.call(this, t8, "MESG", i4) || this).message = new It(t8, i4);
    var l3 = Ws.of(t8).sdkState;
    return c4.isMentioned = Oe(c4.message.mentionType, null !== (o3 = null !== (s6 = c4.message.mentionedUserIds) && void 0 !== s6 ? s6 : null === (a5 = c4.message.mentionedUsers) || void 0 === a5 ? void 0 : a5.map(function(e5) {
      return e5.userId;
    })) && void 0 !== o3 ? o3 : [], l3.userId), c4.forceUpdateLastMessage = null !== (u4 = i4.force_update_last_message) && void 0 !== u4 && u4, c4;
  }
  return t(t7, e4), t7;
}(Fe);
var mr2 = function(n3) {
  function i4(r4) {
    var i5 = null;
    return r4.mentionType === K.USERS && (r4.mentionedUserIds ? i5 = r4.mentionedUserIds : r4.mentionedUsers && (i5 = r4.mentionedUsers.map(function(e4) {
      return e4.userId;
    }))), n3.call(this, { code: "MEDI", ackRequired: true, payload: re(se({ channel_url: r4.channelUrl, msg_id: r4.messageId, message: r4.message, data: r4.data, custom_type: r4.customType, metaarray: r4.metaArrayParams, mention_type: r4.mentionType, mentioned_user_ids: i5, mentioned_message_template: r4.mentionedMessageTemplate, apple_critical_alert_options: r4.appleCriticalAlertOptions ? ze.payloadify(r4.appleCriticalAlertOptions) : null, poll_id: r4.pollId })) }) || this;
  }
  return t(i4, n3), i4;
}(qe);
var vr = function(e4) {
  function i4(r4, i5, s6) {
    var a5, o3, u4, c4, l3, d5 = this;
    (d5 = e4.call(this, r4, "MEDI", s6) || this).message = new It(r4, s6);
    var h4 = Ws.of(r4).sdkState;
    return d5.mentionCountChange = De({ mentionType: null === (a5 = s6.old_values) || void 0 === a5 ? void 0 : a5.mention_type, mentionedUserIds: null !== (u4 = null === (o3 = s6.old_values) || void 0 === o3 ? void 0 : o3.mentioned_user_ids) && void 0 !== u4 ? u4 : [] }, se({ mentionType: d5.message.mentionType, mentionedUserIds: null !== (c4 = d5.message.mentionedUserIds) && void 0 !== c4 ? c4 : null === (l3 = d5.message.mentionedUsers) || void 0 === l3 ? void 0 : l3.map(function(e5) {
      return e5.userId;
    }) }), h4.userId), d5;
  }
  return t(i4, e4), i4;
}(Fe);
var yr = function(n3) {
  function i4(r4) {
    var i5 = null;
    return r4.mentionType === K.USERS && (r4.mentionedUserIds ? i5 = r4.mentionedUserIds : r4.mentionedUsers && (i5 = r4.mentionedUsers.map(function(e4) {
      return e4.userId;
    }))), n3.call(this, { code: "FEDI", ackRequired: true, payload: re(se({ channel_url: r4.channelUrl, msg_id: r4.messageId, data: r4.data, custom_type: r4.customType, metaarray: r4.metaArrayParams, mention_type: r4.mentionType, mentioned_user_ids: i5, apple_critical_alert_options: r4.appleCriticalAlertOptions })) }) || this;
  }
  return t(i4, n3), i4;
}(qe);
var _r = function(e4) {
  function i4(r4, i5, s6) {
    var a5, o3, u4, c4, l3, d5 = this;
    (d5 = e4.call(this, r4, "FEDI", s6) || this).message = new St(r4, s6);
    var h4 = Ws.of(r4).sdkState;
    return d5.mentionCountChange = De({ mentionType: null === (a5 = s6.old_values) || void 0 === a5 ? void 0 : a5.mention_type, mentionedUserIds: null !== (u4 = null === (o3 = s6.old_values) || void 0 === o3 ? void 0 : o3.mentioned_user_ids) && void 0 !== u4 ? u4 : [] }, se({ mentionType: d5.message.mentionType, mentionedUserIds: null !== (c4 = d5.message.mentionedUserIds) && void 0 !== c4 ? c4 : null === (l3 = d5.message.mentionedUsers) || void 0 === l3 ? void 0 : l3.map(function(e5) {
      return e5.userId;
    }) }), h4.userId), d5;
  }
  return t(i4, e4), i4;
}(Fe);
var gr = function(e4) {
  function t7(t8) {
    var n3 = t8.channelType, r4 = t8.channelUrl, s6 = t8.messageId, a5 = t8.reactionKey, o3 = e4.call(this) || this;
    return o3.method = oe.POST, o3.path = "".concat(Ie(n3), "/").concat(encodeURIComponent(r4), "/messages/").concat(s6, "/reactions"), o3.params = { reaction: a5 }, o3;
  }
  return t(t7, e4), t7;
}(xe);
var br = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.reactionEvent = new De2(n3), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Ir2 = function(e4) {
  function t7(t8) {
    var n3 = t8.channelType, r4 = t8.channelUrl, s6 = t8.messageId, a5 = t8.reactionKey, o3 = e4.call(this) || this;
    return o3.method = oe.DELETE, o3.path = "".concat(Ie(n3), "/").concat(encodeURIComponent(r4), "/messages/").concat(s6, "/reactions"), o3.params = { reaction: a5 }, o3;
  }
  return t(t7, e4), t7;
}(xe);
var Er = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.reactionEvent = new De2(n({}, n3)), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Tr = function(e4) {
  function t7(t8) {
    var n3 = t8.channelType, r4 = t8.channelUrl, s6 = t8.messageId, a5 = t8.translationTargetLanguages, o3 = e4.call(this) || this;
    return o3.method = oe.POST, o3.path = "".concat(Ie(n3), "/").concat(encodeURIComponent(r4), "/messages/").concat(encodeURIComponent(s6), "/translation"), o3.params = { target_langs: a5 }, o3;
  }
  return t(t7, e4), t7;
}(xe);
var wr = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.message = new It(t8, n3), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Mr = function(n3) {
  function s6(r4) {
    var s7, a5 = this;
    a5 = n3.call(this) || this;
    var o3 = [];
    r4.mentionType === K.USERS && (r4.mentionedUserIds ? o3 = r4.mentionedUserIds : r4.mentionedUsers && (o3 = r4.mentionedUsers.map(function(e4) {
      return e4.userId;
    })));
    var u4 = r4.channelType, c4 = r4.channelUrl;
    return a5.method = oe.POST, a5.path = "".concat(Ie(u4), "/").concat(encodeURIComponent(c4), "/scheduled_messages"), a5.params = re(se({ req_id: r4.reqId, scheduled_at: r4.scheduledAt, message_type: j.USER, message: r4.message, custom_type: r4.customType, data: r4.data, mention_type: r4.mentionType, mentioned_user_ids: o3, sorted_metaarray: null === (s7 = r4.metaArrays) || void 0 === s7 ? void 0 : s7.map(function(e4) {
      return je.payloadify(e4);
    }), apple_critical_alert_options: r4.appleCriticalAlertOptions ? ze.payloadify(r4.appleCriticalAlertOptions) : null, target_langs: r4.translationTargetLanguages, push_option: r4.pushNotificationDeliveryOption })), a5;
  }
  return t(s6, n3), s6;
}(xe);
var Sr2 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.message = new It(t8, n3), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Ar2 = function(e4) {
  function n3(n4) {
    var r4, s6, a5 = this;
    a5 = e4.call(this) || this;
    var o3 = [];
    n4.mentionType === K.USERS && (n4.mentionedUserIds ? o3 = n4.mentionedUserIds : n4.mentionedUsers && (o3 = n4.mentionedUsers.map(function(e5) {
      return e5.userId;
    })));
    var u4 = n4.channelType, c4 = n4.channelUrl;
    return a5.method = oe.POST, a5.path = "".concat(Ie(u4), "/").concat(encodeURIComponent(c4), "/scheduled_messages"), a5.params = se({ req_id: n4.reqId, scheduled_at: n4.scheduledAt, message_type: j.FILE, url: n4.fileUrl, file_name: n4.fileName, file_size: n4.fileSize, file_type: n4.mimeType, thumbnails: null === (r4 = n4._thumbnails) || void 0 === r4 ? void 0 : r4.map(function(e5) {
      return Oe2.payloadify(e5);
    }), custom_type: n4.customType, data: n4.data, require_auth: n4.requireAuth, mention_type: n4.mentionType, mentioned_user_ids: o3, sorted_metaarray: null === (s6 = n4.metaArrays) || void 0 === s6 ? void 0 : s6.map(function(e5) {
      return je.payloadify(e5);
    }), apple_critical_alert_options: n4.appleCriticalAlertOptions ? ze.payloadify(n4.appleCriticalAlertOptions) : null, push_option: n4.pushNotificationDeliveryOption }), a5;
  }
  return t(n3, e4), n3;
}(xe);
var Ur = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.message = new St(t8, n3), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Nr2 = function(e4) {
  function t7(t8) {
    var n3 = t8.pollId, r4 = t8.title, s6 = t8.data, a5 = t8.allowUserSuggestion, o3 = t8.allowMultipleVotes, u4 = t8.closeAt, c4 = e4.call(this) || this;
    return c4.method = oe.PUT, c4.path = "".concat(be, "/").concat(encodeURIComponent(n3)), c4.params = { title: r4, data: s6, allow_user_suggestion: a5, allow_multiple_votes: o3, close_at: u4 }, c4;
  }
  return t(t7, e4), t7;
}(xe);
var Cr = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.poll = new ho(t8, n3), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Or = function(e4) {
  function t7(t8) {
    var n3 = t8.pollId, r4 = e4.call(this) || this;
    return r4.method = oe.DELETE, r4.path = "".concat(be, "/").concat(encodeURIComponent(n3)), r4;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7() {
    return null !== e4 && e4.apply(this, arguments) || this;
  }
  t(t7, e4);
}(Ue);
var Pr = function(e4) {
  function t7(t8) {
    var n3 = t8.pollId, r4 = e4.call(this) || this;
    return r4.method = oe.PUT, r4.path = "".concat(be, "/").concat(encodeURIComponent(n3), "/close"), r4;
  }
  return t(t7, e4), t7;
}(xe);
var kr2 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.poll = new ho(t8, n3), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Rr = function(e4) {
  function t7(t8) {
    var n3 = t8.channelUrl, r4 = t8.channelType, s6 = t8.pollId, a5 = t8.optionText, o3 = e4.call(this) || this;
    return o3.method = oe.POST, o3.path = "".concat(be, "/").concat(encodeURIComponent(s6), "/options"), o3.params = { channel_url: n3, channel_type: r4, text: a5 }, o3;
  }
  return t(t7, e4), t7;
}(xe);
var xr2 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.poll = new ho(t8, n3), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Dr = function(e4) {
  function t7(t8) {
    var n3 = t8.pollId, r4 = t8.pollOptionId, s6 = t8.optionText, a5 = e4.call(this) || this;
    return a5.method = oe.PUT, a5.path = "".concat(be, "/").concat(encodeURIComponent(n3), "/options/").concat(encodeURIComponent(r4)), a5.params = { text: s6 }, a5;
  }
  return t(t7, e4), t7;
}(xe);
var Lr = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.poll = new ho(t8, n3), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Fr = function(e4) {
  function t7(t8) {
    var n3 = t8.pollId, r4 = t8.pollOptionId, s6 = e4.call(this) || this;
    return s6.method = oe.DELETE, s6.path = "".concat(be, "/").concat(encodeURIComponent(n3), "/options/").concat(encodeURIComponent(r4)), s6;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7() {
    return null !== e4 && e4.apply(this, arguments) || this;
  }
  t(t7, e4);
}(Ue);
var qr = function(t7) {
  function n3(n4) {
    var r4 = n4.reqId, i4 = n4.channelType, s6 = n4.channelUrl, a5 = n4.pollId, o3 = n4.pollOptionIds;
    return t7.call(this, { code: "VOTE", ackRequired: true, payload: re({ req_id: r4, channel_type: i4 === q.OPEN ? "open_channels" : "group_channels", channel_url: s6, poll_id: a5, option_ids: o3 }) }) || this;
  }
  return t(n3, t7), n3;
}(qe);
var zr2 = function(e4) {
  function t7(t8, n3, r4) {
    var i4 = e4.call(this, t8, "VOTE", r4) || this;
    return i4.event = new po(r4), i4.channelUrl = r4.channel_url, i4.channelType = r4.channel_type, i4;
  }
  return t(t7, e4), t7;
}(Fe);
var Br = 100;
var Kr = "GroupChannel";
var jr = "url";
var Qr = 100;
var Gr = "Message";
var Vr2 = "messageId";
var Wr = "NotificationMessage";
var Yr2 = "notificationId";
var Jr2 = "Poll";
var Xr2 = "pollId";
var $r = "FeedChannel";
var ei = "url";
function ti(e4) {
  var n3, r4, i4;
  return null !== (n3 = e4.messageParams) && void 0 !== n3 ? n3 : se(n(n({}, e4), { isReplyToChannel: false, mentionedUserIds: null !== (r4 = e4.mentionedUserIds) && void 0 !== r4 ? r4 : null === (i4 = e4.mentionedUsers) || void 0 === i4 ? void 0 : i4.map(function(e5) {
    return e5.userId;
  }), pushNotificationDeliveryOption: Q.DEFAULT, isPinnedMessage: false, fileInfoList: e4.fileInfoList.map(function(e5) {
    var t7;
    return { fileUrl: e5.plainUrl, fileName: e5.fileName, fileSize: e5.fileSize, mimeType: e5.mimeType, thumbnailSizes: null === (t7 = e5.thumbnails) || void 0 === t7 ? void 0 : t7.map(function(e6) {
      return { maxWidth: e6.width, maxHeight: e6.height };
    }), _thumbnails: e5.thumbnails, _uploadedMetaData: { requireAuth: e5._requireAuth, isUploaded: true } };
  }) }));
}
var ni = n(n({}, Zt), { fileInfoList: [] });
var ri = function(e4) {
  return (k(e4.file) || w("string", e4.fileUrl)) && w("string", e4.fileName, true) && w("string", e4.mimeType, true) && w("number", e4.fileSize, true) && (void 0 === e4.thumbnailSizes || Array.isArray(e4.thumbnailSizes) && e4.thumbnailSizes.every(function(e5) {
    return e5.maxWidth > 0 && e5.maxHeight > 0;
  }));
};
var ii = function(e4) {
  function t7() {
    var t8 = null !== e4 && e4.apply(this, arguments) || this;
    return t8._onFileUploaded = st, t8;
  }
  return t(t7, e4), t7.prototype._triggerOnFileUploaded = function(e5, t8, n3, r4) {
    this._onFileUploaded(e5, t8, n3, r4);
  }, t7.prototype.onFileUploaded = function(e5) {
    return this._onFileUploaded = e5, this;
  }, t7.prototype.onPending = function(t8) {
    return e4.prototype.onPending.call(this, t8), this;
  }, t7.prototype.onFailed = function(t8) {
    return e4.prototype.onFailed.call(this, t8), this;
  }, t7.prototype.onSucceeded = function(t8) {
    return e4.prototype.onSucceeded.call(this, t8), this;
  }, t7;
}(Xt);
var si = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8) || this;
    return r4.message = null, r4.message = Mt(t8, n3.message), r4;
  }
  return t(t7, e4), t7;
}(zr);
var ai = function(t7) {
  function n3(n4) {
    var r4 = this, s6 = n4.channelType, a5 = n4.channelUrl, o3 = n4.limit, u4 = n4.token, c4 = n4.includeReactions, l3 = n4.includeMetaArray, d5 = n4.includeParentMessageInfo, h4 = n4.includeThreadInfo, f4 = n4.includePollDetails;
    return (r4 = t7.call(this) || this).method = oe.GET, r4.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(a5), "/pinned_messages"), r4.params = re({ limit: o3, token: u4, include_reactions: c4, with_sorted_meta_array: l3, include_thread_info: h4, include_parent_message_info: d5, include_poll_details: f4 }), r4;
  }
  return t(n3, t7), n3;
}(xe);
var oi = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this, i4 = n3.pinned_messages, s6 = n3.has_more, a5 = n3.next;
    return r4.pinnedMessages = i4.map(function(e5) {
      return new si(t8, e5);
    }), r4.hasMore = s6, r4.token = a5, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var ui = function(e4) {
  function t7(t8, n3, r4, i4) {
    var s6 = e4.call(this, t8, n3, r4, i4) || this;
    return s6.includeMetaArray = i4.includeMetaArray, s6.includeReactions = i4.includeReactions, s6.includeParentMessageInfo = i4.includeParentMessageInfo, s6.includeThreadInfo = i4.includeThreadInfo, s6.includePollDetails = i4.includePollDetails, s6;
  }
  return t(t7, e4), t7.prototype._validate = function() {
    return e4.prototype._validate.call(this) && w("boolean", this.includeMetaArray, true) && w("boolean", this.includeReactions, true) && w("boolean", this.includeParentMessageInfo, true) && w("boolean", this.includeThreadInfo, true) && w("boolean", this.includePollDetails, true);
  }, t7.prototype.next = function() {
    return r(this, void 0, void 0, function() {
      var e5, t8, r4, i4, s6, a5, o3;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e5 = Ws.of(this._iid).requestQueue, t8 = new ai(n(n({}, this), { token: this._token })), [4, e5.send(t8)]) : [3, 2] : [3, 5];
          case 1:
            return r4 = c4.sent(), i4 = r4.as(oi), s6 = i4.pinnedMessages, a5 = i4.hasMore, o3 = i4.token, this._token = o3, this._hasNext = !!a5, this._isLoading = false, [2, s6];
          case 2:
            return [2, []];
          case 3:
            throw v.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw v.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, t7;
}(fo);
var ci = function(e4) {
  function t7(t8) {
    var n3 = t8.channelType, r4 = t8.channelUrl, s6 = t8.messageId, a5 = e4.call(this) || this;
    return a5.method = oe.POST, a5.path = "".concat(Ie(n3), "/").concat(encodeURIComponent(r4), "/messages/").concat(s6, "/pin"), a5;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7(t8, n3) {
    return e4.call(this, t8, n3) || this;
  }
  t(t7, e4);
}(Ue);
var li = function(e4) {
  function t7(t8) {
    var n3 = t8.channelType, r4 = t8.channelUrl, s6 = t8.messageId, a5 = e4.call(this) || this;
    return a5.method = oe.DELETE, a5.path = "".concat(Ie(n3), "/").concat(encodeURIComponent(r4), "/messages/").concat(s6, "/pin"), a5;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7(t8, n3) {
    return e4.call(this, t8, n3) || this;
  }
  t(t7, e4);
}(Ue);
var di;
var hi = 2;
!function(e4) {
  e4.SEND = "send", e4.RESEND = "resend", e4.COPY = "copy";
}(di || (di = {}));
var fi;
var pi = function(i4) {
  function s6(e4, t7) {
    var n3, r4, s7, a5, o3, u4, l3, d5 = this;
    return (d5 = i4.call(this, e4) || this)._name = "", d5._createdAt = 0, d5.pinnedMessageIds = [], d5.channelType = q.BASE, d5.coverUrl = "", d5.customType = "", d5.data = "", d5.isFrozen = false, d5.isEphemeral = false, d5.creator = null, d5._messageCollectionLastAccessedAt = 0, d5._url = t7.channel_url, d5._name = null !== (n3 = t7.name) && void 0 !== n3 ? n3 : "", d5._createdAt = 1e3 * t7.created_at, d5.coverUrl = null !== (r4 = t7.cover_url) && void 0 !== r4 ? r4 : "", d5.customType = null !== (s7 = t7.custom_type) && void 0 !== s7 ? s7 : "", d5.data = null !== (a5 = t7.data) && void 0 !== a5 ? a5 : "", d5.isFrozen = null !== (o3 = t7.freeze) && void 0 !== o3 && o3, d5.isEphemeral = null !== (u4 = t7.is_ephemeral) && void 0 !== u4 && u4, d5.creator = t7.created_by ? new es(d5._iid, t7.created_by) : null, t7.metadata && Object.keys(t7.metadata).length > 0 && t7.ts ? (d5._cachedMetaData = /* @__PURE__ */ new Map(), Object.keys(t7.metadata).forEach(function(e5) {
      d5._cachedMetaData.set(e5, { value: t7.metadata[e5], isRemoved: false, updatedAt: t7.ts });
    })) : "string" == typeof t7.metadata && (d5._cachedMetaData = new Map(Object.entries(JSON.parse(t7.metadata)))), d5.pinnedMessageIds = null !== (l3 = t7.pinned_message_ids) && void 0 !== l3 ? l3 : [], d5;
  }
  return t(s6, i4), Object.defineProperty(s6.prototype, "url", { get: function() {
    return this._url;
  }, enumerable: false, configurable: true }), Object.defineProperty(s6.prototype, "name", { get: function() {
    return this._name;
  }, set: function(e4) {
    this._name = e4;
  }, enumerable: false, configurable: true }), Object.defineProperty(s6.prototype, "createdAt", { get: function() {
    return this._createdAt;
  }, enumerable: false, configurable: true }), s6.prototype.toJSON = function() {
    return n(n({}, this), { url: this._url, name: this._name, createdAt: this._createdAt });
  }, s6.payloadify = function(n3) {
    return re(se(n(n({}, i4.payloadify.call(this, n3)), { channel_url: n3.url, name: n3.name, cover_url: n3.coverUrl, custom_type: n3.customType, data: n3.data, freeze: n3.isFrozen, is_ephemeral: n3.isEphemeral, created_by: n3.creator ? es.payloadify(n3.creator) : null, created_at: n3.createdAt / 1e3, metadata: n3.cachedMetaData, pinned_message_ids: n3.pinnedMessageIds })));
  }, s6.prototype.isGroupChannel = function() {
    return this.channelType === q.GROUP;
  }, s6.prototype.isOpenChannel = function() {
    return this.channelType === q.OPEN;
  }, s6.prototype.isFeedChannel = function() {
    return this.channelType === q.FEED;
  }, Object.defineProperty(s6.prototype, "cachedMetaData", { get: function() {
    var e4 = {};
    return this._cachedMetaData ? (this._cachedMetaData.forEach(function(t7, n3) {
      t7.isRemoved || (e4[n3] = t7.value);
    }), e4) : e4;
  }, enumerable: false, configurable: true }), Object.defineProperty(s6.prototype, "messageCollectionLastAccessedAt", { get: function() {
    return this._messageCollectionLastAccessedAt;
  }, enumerable: false, configurable: true }), s6.prototype._serializeCachedMetaData = function() {
    return this._cachedMetaData ? { cachedMetaData: JSON.stringify(Object.fromEntries(this._cachedMetaData)) } : {};
  }, s6.prototype._updateMessageCollectionLastAccessedAt = function() {
    this._messageCollectionLastAccessedAt = Date.now();
  }, s6.prototype._update = function(t7) {
    var n3 = re(t7);
    Object.assign(this, n3);
  }, s6.prototype._upsertCachedMetaData = function(e4, t7) {
    var n3 = this;
    Object.keys(e4).forEach(function(r4) {
      n3._cachedMetaData || (n3._cachedMetaData = /* @__PURE__ */ new Map());
      var i5 = n3._cachedMetaData.get(r4);
      (!i5 || i5.updatedAt <= t7) && n3._cachedMetaData.set(r4, { value: e4[r4], isRemoved: false, updatedAt: t7 });
    });
  }, s6.prototype._updateCachedMetaData = function(e4, t7) {
    var n3 = this, r4 = false;
    return this._cachedMetaData ? this._cachedMetaData.forEach(function(i5, s7) {
      var a5;
      i5.updatedAt <= t7 && (n3._cachedMetaData.set(s7, { value: null !== (a5 = e4[s7]) && void 0 !== a5 ? a5 : i5.value, isRemoved: !e4[s7], updatedAt: t7 }), r4 = true);
    }) : (this._cachedMetaData = /* @__PURE__ */ new Map(), Object.keys(e4).forEach(function(r5) {
      n3._cachedMetaData.set(r5, { value: e4[r5], isRemoved: false, updatedAt: t7 });
    }), r4 = true), { isUpdated: r4 };
  }, s6.prototype._removeFromCachedMetaData = function(e4, t7) {
    var n3 = this;
    this._cachedMetaData && e4.forEach(function(e5) {
      var r4 = n3._cachedMetaData.get(e5);
      r4 && r4.updatedAt < t7 && (r4.isRemoved = true, r4.updatedAt = t7);
    });
  }, s6.prototype._clearCachedMetaData = function() {
    this._cachedMetaData && this._cachedMetaData.clear();
  }, s6.prototype._runIfHandleableWithGroupChannel = function(e4) {
    this.isGroupChannel() ? e4(this) : this.isFeedChannel() && e4(this.groupChannel);
  }, s6.prototype._generateRequestId = function() {
    return "rq-".concat($());
  }, s6.prototype.isIdentical = function(e4) {
    return e4 && this.url === e4.url;
  }, s6.prototype.isEqual = function(e4) {
    return y(this, e4);
  }, s6.prototype.createOperatorListQuery = function(e4) {
    return void 0 === e4 && (e4 = {}), new En(this._iid, this.url, this.channelType, e4);
  }, s6.prototype.createMutedUserListQuery = function(e4) {
    return void 0 === e4 && (e4 = {}), new Sn(this._iid, this.url, this.channelType, e4);
  }, s6.prototype.createBannedUserListQuery = function(e4) {
    return void 0 === e4 && (e4 = {}), new Nn(this._iid, this.url, this.channelType, e4);
  }, s6.prototype.createPreviousMessageListQuery = function(e4) {
    return void 0 === e4 && (e4 = {}), new Tn(this._iid, this.url, this.channelType, e4);
  }, s6.prototype.createPinnedMessageListQuery = function(e4) {
    return void 0 === e4 && (e4 = {}), new ui(this._iid, this.url, this.channelType, e4);
  }, s6.prototype.addOperators = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4;
      return s(this, function(i5) {
        switch (i5.label) {
          case 0:
            return Jr(N("string", e4)).throw(v.invalidParameters), t7 = Ws.of(this._iid).requestQueue, r4 = new Cn({ channelUrl: this.url, channelType: this.channelType, operatorUserIds: e4 }), [4, t7.send(r4)];
          case 1:
            return i5.sent(), [2];
        }
      });
    });
  }, s6.prototype.removeOperators = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4;
      return s(this, function(i5) {
        switch (i5.label) {
          case 0:
            return Jr(N("string", e4)).throw(v.invalidParameters), t7 = Ws.of(this._iid).requestQueue, r4 = new On({ channelUrl: this.url, channelType: this.channelType, operatorUserIds: e4 }), [4, t7.send(r4)];
          case 1:
            return i5.sent(), [2];
        }
      });
    });
  }, s6.prototype.getMyMutedInfo = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, r4, i5, s7, a5, o3, u4, c4, l3, d5;
      return s(this, function(h4) {
        switch (h4.label) {
          case 0:
            return e4 = Ws.of(this._iid), t7 = e4.sdkState, r4 = e4.requestQueue, i5 = new Pn({ channelUrl: this.url, channelType: this.channelType, userId: t7.userId }), [4, r4.send(i5)];
          case 1:
            return s7 = h4.sent(), a5 = s7.as(kn), o3 = a5.isMuted, u4 = a5.startAt, c4 = a5.endAt, l3 = a5.remainingDuration, d5 = a5.description, [2, { isMuted: o3, startAt: u4, endAt: c4, remainingDuration: l3, description: d5 }];
        }
      });
    });
  }, s6.prototype.getMetaData = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4, i5, s7, a5, o3;
      return s(this, function(u4) {
        switch (u4.label) {
          case 0:
            return Jr(N("string", e4)).throw(v.invalidParameters), t7 = Ws.of(this._iid).requestQueue, r4 = new Rn({ channelUrl: this.url, channelType: this.channelType, keys: e4 }), [4, t7.send(r4)];
          case 1:
            return i5 = u4.sent(), s7 = i5.as(xn), a5 = s7.metadata, o3 = s7.ts, this._upsertCachedMetaData(a5, o3), [2, a5];
        }
      });
    });
  }, s6.prototype.getAllMetaData = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, r4, i5, s7, a5;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return e4 = Ws.of(this._iid).requestQueue, t7 = new Rn({ channelUrl: this.url, channelType: this.channelType, keys: [] }), [4, e4.send(t7)];
          case 1:
            return r4 = o3.sent(), i5 = r4.as(xn), s7 = i5.metadata, a5 = i5.ts, this._updateCachedMetaData(s7, a5), [2, s7];
        }
      });
    });
  }, s6.prototype.createMetaData = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4, i5, s7;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return t7 = Ws.of(this._iid).requestQueue, r4 = new Dn({ channelUrl: this.url, channelType: this.channelType, metadata: e4 }), [4, t7.send(r4)];
          case 1:
            return i5 = a5.sent(), s7 = i5.as(Ln).metaData, this._upsertCachedMetaData(s7, 0), [2, s7];
        }
      });
    });
  }, s6.prototype.updateMetaData = function(e4, t7) {
    return void 0 === t7 && (t7 = false), r(this, void 0, void 0, function() {
      var r4, i5, s7, a5, o3, u4;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return r4 = Ws.of(this._iid).requestQueue, i5 = new Fn({ channelUrl: this.url, channelType: this.channelType, metadata: e4, upsert: t7 }), [4, r4.send(i5)];
          case 1:
            return s7 = c4.sent(), a5 = s7.as(qn), o3 = a5.metadata, u4 = a5.ts, this._upsertCachedMetaData(o3, u4), [2, o3];
        }
      });
    });
  }, s6.prototype.deleteMetaData = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4, i5, s7;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return Jr(w("string", e4)).throw(v.invalidParameters), t7 = Ws.of(this._iid).requestQueue, r4 = new Bn({ channelUrl: this.url, channelType: this.channelType, key: e4 }), [4, t7.send(r4)];
          case 1:
            return i5 = a5.sent(), s7 = i5.as(Kn).ts, this._removeFromCachedMetaData([e4], s7), [2];
        }
      });
    });
  }, s6.prototype.deleteAllMetaData = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, r4, i5;
      return s(this, function(s7) {
        switch (s7.label) {
          case 0:
            return e4 = Ws.of(this._iid).requestQueue, t7 = new jn({ channelUrl: this.url, channelType: this.channelType }), [4, e4.send(t7)];
          case 1:
            return r4 = s7.sent(), i5 = r4.as(Qn).ts, this._removeFromCachedMetaData(c([], a(this._cachedMetaData.keys()), false), i5), [2];
        }
      });
    });
  }, s6.prototype.getMetaCounters = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4, i5;
      return s(this, function(s7) {
        switch (s7.label) {
          case 0:
            return Jr(N("string", e4)).throw(v.invalidParameters), t7 = Ws.of(this._iid).requestQueue, r4 = new Gn({ channelUrl: this.url, channelType: this.channelType, keys: e4 }), [4, t7.send(r4)];
          case 1:
            return i5 = s7.sent(), [2, i5.as(Vn).metaCounter];
        }
      });
    });
  }, s6.prototype.getAllMetaCounters = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, r4;
      return s(this, function(i5) {
        switch (i5.label) {
          case 0:
            return e4 = Ws.of(this._iid).requestQueue, t7 = new Gn({ channelUrl: this.url, channelType: this.channelType, keys: [] }), [4, e4.send(t7)];
          case 1:
            return r4 = i5.sent(), [2, r4.as(Vn).metaCounter];
        }
      });
    });
  }, s6.prototype.createMetaCounters = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4, i5;
      return s(this, function(s7) {
        switch (s7.label) {
          case 0:
            return t7 = Ws.of(this._iid).requestQueue, r4 = new Hn({ channelUrl: this.url, channelType: this.channelType, metaCounter: e4 }), [4, t7.send(r4)];
          case 1:
            return i5 = s7.sent(), [2, i5.as(Wn).metaCounter];
        }
      });
    });
  }, s6.prototype.updateMetaCounters = function(e4, t7) {
    return void 0 === t7 && (t7 = false), r(this, void 0, void 0, function() {
      var r4, i5, s7;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return r4 = Ws.of(this._iid).requestQueue, i5 = new Yn({ channelUrl: this.url, channelType: this.channelType, metaCounter: e4, upsert: t7 }), [4, r4.send(i5)];
          case 1:
            return s7 = a5.sent(), [2, s7.as(Jn).metaCounter];
        }
      });
    });
  }, s6.prototype.increaseMetaCounters = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4, i5;
      return s(this, function(s7) {
        switch (s7.label) {
          case 0:
            return t7 = Ws.of(this._iid).requestQueue, r4 = new Yn({ channelUrl: this.url, channelType: this.channelType, metaCounter: e4, upsert: false, mode: "increase" }), [4, t7.send(r4)];
          case 1:
            return i5 = s7.sent(), [2, i5.as(Jn).metaCounter];
        }
      });
    });
  }, s6.prototype.decreaseMetaCounters = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4, i5;
      return s(this, function(s7) {
        switch (s7.label) {
          case 0:
            return t7 = Ws.of(this._iid).requestQueue, r4 = new Yn({ channelUrl: this.url, channelType: this.channelType, metaCounter: e4, upsert: false, mode: "decrease" }), [4, t7.send(r4)];
          case 1:
            return i5 = s7.sent(), [2, i5.as(Jn).metaCounter];
        }
      });
    });
  }, s6.prototype.deleteMetaCounter = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4;
      return s(this, function(i5) {
        switch (i5.label) {
          case 0:
            return Jr(w("string", e4)).throw(v.invalidParameters), t7 = Ws.of(this._iid).requestQueue, r4 = new Zn({ channelUrl: this.url, channelType: this.channelType, key: e4 }), [4, t7.send(r4)];
          case 1:
            return i5.sent(), [2];
        }
      });
    });
  }, s6.prototype.deleteAllMetaCounters = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return e4 = Ws.of(this._iid).requestQueue, t7 = new $n({ channelUrl: this.url, channelType: this.channelType }), [4, e4.send(t7)];
          case 1:
            return r4.sent(), [2];
        }
      });
    });
  }, s6.prototype.muteUser = function(e4, t7, n3) {
    return r(this, void 0, void 0, function() {
      return s(this, function(r4) {
        return [2, this.muteUserWithUserId(e4.userId, t7, n3)];
      });
    });
  }, s6.prototype.muteUserWithUserId = function(e4, t7, r4) {
    return r(this, void 0, void 0, function() {
      var i5, s7;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return Jr(w("string", e4) && w("number", t7, true) && w("string", r4, true)).throw(v.invalidParameters), i5 = Ws.of(this._iid).requestQueue, s7 = new er({ channelUrl: this.url, channelType: this.channelType, userId: e4, seconds: t7, description: r4 }), [4, i5.send(s7)];
          case 1:
            return a5.sent(), [2];
        }
      });
    });
  }, s6.prototype.unmuteUser = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        return [2, this.unmuteUserWithUserId(e4.userId)];
      });
    });
  }, s6.prototype.unmuteUserWithUserId = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4;
      return s(this, function(i5) {
        switch (i5.label) {
          case 0:
            return Jr(w("string", e4)).throw(v.invalidParameters), t7 = Ws.of(this._iid).requestQueue, r4 = new nr({ channelUrl: this.url, channelType: this.channelType, userId: e4 }), [4, t7.send(r4)];
          case 1:
            return i5.sent(), [2];
        }
      });
    });
  }, s6.prototype.banUser = function(e4, t7, n3) {
    return r(this, void 0, void 0, function() {
      return s(this, function(r4) {
        return [2, this.banUserWithUserId(e4.userId, t7, n3)];
      });
    });
  }, s6.prototype.banUserWithUserId = function(e4, t7, r4) {
    return r(this, void 0, void 0, function() {
      var i5, s7;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return Jr(w("string", e4) && w("number", t7, true) && w("string", r4, true)).throw(v.invalidParameters), i5 = Ws.of(this._iid).requestQueue, s7 = new ir({ channelUrl: this.url, channelType: this.channelType, userId: e4, seconds: t7, description: r4 }), [4, i5.send(s7)];
          case 1:
            return a5.sent(), [2];
        }
      });
    });
  }, s6.prototype.unbanUser = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        return [2, this.unbanUserWithUserId(e4.userId)];
      });
    });
  }, s6.prototype.unbanUserWithUserId = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4;
      return s(this, function(i5) {
        switch (i5.label) {
          case 0:
            return Jr(w("string", e4)).throw(v.invalidParameters), t7 = Ws.of(this._iid).requestQueue, r4 = new ar({ channelUrl: this.url, channelType: this.channelType, userId: e4 }), [4, t7.send(r4)];
          case 1:
            return i5.sent(), [2];
        }
      });
    });
  }, s6.prototype.freeze = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return e4 = Ws.of(this._iid).requestQueue, t7 = new ur({ channelUrl: this.url, channelType: this.channelType, freezing: true }), [4, e4.send(t7)];
          case 1:
            return r4.sent(), this.isFrozen = true, [2];
        }
      });
    });
  }, s6.prototype.unfreeze = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return e4 = Ws.of(this._iid).requestQueue, t7 = new ur({ channelUrl: this.url, channelType: this.channelType, freezing: false }), [4, e4.send(t7)];
          case 1:
            return r4.sent(), this.isFrozen = false, [2];
        }
      });
    });
  }, s6.prototype.getMessagesByMessageId = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var n3;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return n3 = n(n({}, Dt), t7), Jr(w("number", e4) && Lt(n3)).throw(v.invalidParameters), [4, ea.of(this._iid).getMessagesByMessageId(this.url, this.channelType, e4, n3)];
          case 1:
            return [2, r4.sent()];
        }
      });
    });
  }, s6.prototype.getMessagesByTimestamp = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var n3;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return n3 = n(n({}, Dt), t7), Jr(w("number", e4) && Lt(n3)).throw(v.invalidParameters), [4, ea.of(this._iid).getMessagesByTimestamp(this.url, this.channelType, e4, n3)];
          case 1:
            return [2, r4.sent()];
        }
      });
    });
  }, s6.prototype.getMessageChangeLogsSinceTimestamp = function(e4, t7) {
    return void 0 === t7 && (t7 = {}), r(this, void 0, void 0, function() {
      var n3;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return n3 = n(n({}, Ft), t7), Jr(w("number", e4) && qt(n3)).throw(v.invalidParameters), [4, ea.of(this._iid).getMessageChangelogs(this.url, this.channelType, e4, n3)];
          case 1:
            return [2, r4.sent()];
        }
      });
    });
  }, s6.prototype.getMessageChangeLogsSinceToken = function(e4, t7) {
    return void 0 === t7 && (t7 = {}), r(this, void 0, void 0, function() {
      var n3;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return n3 = n(n({}, Ft), t7), Jr(w("string", e4) && qt(n3)).throw(v.invalidParameters), [4, ea.of(this._iid).getMessageChangelogs(this.url, this.channelType, e4, n3)];
          case 1:
            return [2, r4.sent()];
        }
      });
    });
  }, s6.prototype._createPendingSendableMessagePayload = function(r4, i5, s7) {
    var a5, o3 = Ws.of(this._iid).sessionManager;
    return re(se({ channel_url: this.url, channel_type: this.channelType, msg_id: 0, parent_message_id: r4.parentMessageId, data: r4.data, custom_type: r4.customType, mention_type: r4.mentionType, sorted_metaarray: r4.metaArrays ? r4.metaArrays.map(function(e4) {
      return je.payloadify(e4);
    }) : null, apple_critical_alert_options: r4.appleCriticalAlertOptions ? ze.payloadify(r4.appleCriticalAlertOptions) : null, created_at: s7, user: o3.currentUser ? Ke.payloadify(o3.currentUser) : null, req_id: i5, request_state: W.PENDING, mentioned_user_ids: r4.mentionedUserIds, mentioned_users: null === (a5 = r4.mentionedUsers) || void 0 === a5 ? void 0 : a5.map(function(e4) {
      return es.payloadify(e4);
    }) }));
  }, s6.prototype._createPendingUserMessage = function(t7, n3, r4) {
    var i5, s7, a5 = {};
    if (t7.translationTargetLanguages) try {
      for (var o3 = o(t7.translationTargetLanguages), c4 = o3.next(); !c4.done; c4 = o3.next()) {
        a5[c4.value] = "";
      }
    } catch (e4) {
      i5 = { error: e4 };
    } finally {
      try {
        c4 && !c4.done && (s7 = o3.return) && s7.call(o3);
      } finally {
        if (i5) throw i5.error;
      }
    }
    var l3 = re(n(n({}, this._createPendingSendableMessagePayload(t7, n3, r4)), { type: z.USER, message: t7.message, translations: a5, extended_message_payload: t7.extendedMessagePayload })), d5 = new It(this._iid, l3);
    return d5.messageParams = t7, d5;
  }, s6.prototype._createPendingScheduledUserMessage = function(e4, t7, n3) {
    var r4 = this._createPendingUserMessage(e4, t7, n3);
    return r4.scheduledInfo = { scheduledMessageId: 0, scheduledAt: e4.scheduledAt, scheduledMessageParams: e4 }, r4;
  }, s6.prototype._createPendingFileMessage = function(t7, n3, r4) {
    var i5, s7, a5, o3, c4, l3, d5, h4 = re(n(n({}, this._createPendingSendableMessagePayload(t7, n3, r4)), { type: z.FILE, url: t7.fileUrl, file: { name: null !== (i5 = t7.fileName) && void 0 !== i5 ? i5 : null === (s7 = t7.file) || void 0 === s7 ? void 0 : s7.name, size: null !== (a5 = t7.fileSize) && void 0 !== a5 ? a5 : null === (o3 = t7.file) || void 0 === o3 ? void 0 : o3.size, type: null !== (c4 = t7.mimeType) && void 0 !== c4 ? c4 : null === (l3 = t7.file) || void 0 === l3 ? void 0 : l3.type, data: t7.data }, thumbnails: null === (d5 = t7._thumbnails) || void 0 === d5 ? void 0 : d5.map(function(e4) {
      return Oe2.payloadify(e4);
    }) })), f4 = new St(this._iid, h4);
    return f4.messageParams = t7, f4;
  }, s6.prototype._createPendingMultipleFilesMessage = function(t7, n3, r4) {
    var i5 = re(n(n({}, this._createPendingSendableMessagePayload(t7, n3, r4)), { type: z.FILE, file: t7.fileInfoList.length > 0 ? { name: t7.fileInfoList[0].fileName, size: t7.fileInfoList[0].fileSize, type: t7.fileInfoList[0].mimeType, data: t7.data } : void 0 })), s7 = new Et(this._iid, i5);
    return s7.messageParams = t7, s7;
  }, s6.prototype._validateFailedFileMessageHasFile = function(e4, t7) {
    var n3;
    return Boolean(e4.url) || k(t7) || k(null === (n3 = e4.messageParams) || void 0 === n3 ? void 0 : n3.file);
  }, s6.prototype._createPendingScheduledFileMessage = function(e4, t7, n3) {
    var r4 = this._createPendingFileMessage(e4, t7, n3);
    return r4.scheduledInfo = { scheduledMessageId: 0, scheduledAt: e4.scheduledAt, scheduledMessageParams: e4 }, r4;
  }, s6.prototype._markMessageAsFailed = function(e4, t7, n3) {
    void 0 === n3 && (n3 = false), e4.errorCode = t7.code, t7.code === u.REQUEST_CANCELED || t7.code === u.FILE_UPLOAD_CANCEL_FAILED ? e4.sendingStatus = W.CANCELED : n3 || (e4.sendingStatus = W.FAILED);
  }, s6.prototype.sendUserMessage = function(e4) {
    var t7 = n(n({}, tn), e4);
    return Jr(an(t7)).throw(v.invalidParameters), this._sendUserMessage(t7);
  }, s6.prototype._sendUserMessage = function(e4, t7, r4) {
    var i5 = this;
    void 0 === t7 && (t7 = di.SEND);
    var s7 = Ws.of(this._iid), a5 = s7.dispatcher, o3 = s7.requestQueue, c4 = null != r4 ? r4 : this._generateRequestId(), l3 = Date.now(), d5 = new Xt();
    return hs(2).then(function() {
      var r5 = i5._createPendingUserMessage(e4, c4, l3);
      a5.dispatch(new $s({ messages: [r5], source: t7 === di.RESEND ? Ks.LOCAL_MESSAGE_RESEND_STARTED : Ks.EVENT_MESSAGE_SENT_PENDING })), os(function() {
        return r(i5, void 0, void 0, function() {
          return s(this, function(e5) {
            return [2, d5._trigger(r5)];
          });
        });
      });
      var s8 = new fr(n(n({}, e4), { channelUrl: i5.url, channelType: i5.channelType, reqId: c4 }));
      o3.send(s8).then(function(e5) {
        var t8 = e5.as(pr).message;
        a5.dispatch(new $s({ messages: [t8], source: Ks.EVENT_MESSAGE_SENT_SUCCESS })), os(function() {
          return r(i5, void 0, void 0, function() {
            return s(this, function(e6) {
              return [2, d5._trigger(t8)];
            });
          });
        });
      }).catch(function(t8) {
        if (g(t8)) throw t8;
        hs(2).then(function() {
          var r6 = i5._createPendingUserMessage(e4, c4, l3), s9 = Ws.of(i5._iid).cacheContext, o4 = s9.localCacheEnabled && s9.localCacheConfig.enableAutoResend && I(t8.code);
          i5._markMessageAsFailed(r6, t8, o4), a5.dispatch(new $s({ messages: [r6], source: r6.sendingStatus === W.PENDING ? Ks.REQUEST_RESEND_MESSAGE : Ks.EVENT_MESSAGE_SENT_FAILED })), os(function() {
            return r(i5, void 0, void 0, function() {
              return s(this, function(e5) {
                return [2, d5._triggerFailed(t8, r6)];
              });
            });
          });
        });
      });
    }), d5;
  }, s6.prototype._autoResendUserMessage = function(e4) {
    return Jr(e4 instanceof It && !!e4.messageParams).throw(v.invalidParameters), this._sendUserMessage(e4.messageParams, di.SEND, e4.reqId);
  }, s6.prototype.resendUserMessage = function(e4) {
    var t7;
    return r(this, void 0, void 0, function() {
      var n3, r4;
      return s(this, function(i5) {
        return Jr(e4 instanceof It && !e4.scheduledInfo).throw(v.invalidParameters), n3 = new et(), r4 = null !== (t7 = e4.messageParams) && void 0 !== t7 ? t7 : sn(e4), this._sendUserMessage(r4, di.RESEND, e4.reqId).onFailed(function(e5) {
          return n3.reject(e5);
        }).onSucceeded(function(e5) {
          return n3.resolve(e5);
        }), [2, n3.promise];
      });
    });
  }, s6.prototype.updateUserMessage = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var r4, i5, s7, a5;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return r4 = n(n({}, yn), t7), Jr(w("number", e4) && _n(r4)).throw(v.invalidParameters), i5 = Ws.of(this._iid).requestQueue, s7 = new mr2(n({ channelType: this.channelType, channelUrl: this.url, messageId: e4, metaArrayParams: r4.metaArrays ? { array: r4.metaArrays, mode: "add", upsert: true } : void 0 }, r4)), [4, i5.send(s7)];
          case 1:
            return a5 = o3.sent(), [2, a5.as(vr).message];
        }
      });
    });
  }, s6.prototype.copyUserMessage = function(e4, n3) {
    var r4, i5, a5;
    return r(this, void 0, void 0, function() {
      var o3, c4;
      return s(this, function(l3) {
        return Jr(e4 instanceof s6 && n3 instanceof It && n3.sendingStatus === W.SUCCEEDED && this.url === n3.channelUrl && !n3.scheduledInfo).throw(v.invalidParameters), Jr(!n3.poll).throw(v.notSupportedError), o3 = new et(), c4 = null !== (r4 = n3.messageParams) && void 0 !== r4 ? r4 : se(n(n({}, n3), { mentionType: n3.mentionType, mentionedUserIds: null !== (i5 = n3.mentionedUserIds) && void 0 !== i5 ? i5 : null === (a5 = n3.mentionedUsers) || void 0 === a5 ? void 0 : a5.map(function(e5) {
          return e5.userId;
        }), translationTargetLanguages: Object.keys(n3.translations), pushNotificationDeliveryOption: Q.DEFAULT, parentMessageId: null, isReplyToChannel: false, isPinnedMessage: false })), e4._sendUserMessage(c4).onSucceeded(function(e5) {
          o3.resolve(e5);
        }).onFailed(function(e5) {
          return o3.reject(e5);
        }), [2, o3.promise];
      });
    });
  }, s6.prototype.translateUserMessage = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var r4, i5, s7;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return Jr(e4 instanceof It && e4.messageId > 0 && N("string", t7)).throw(v.invalidParameters), r4 = Ws.of(this._iid).requestQueue, i5 = new Tr({ channelType: this.channelType, channelUrl: this.url, messageId: e4.messageId, translationTargetLanguages: t7 }), [4, r4.send(i5)];
          case 1:
            return s7 = a5.sent(), [2, s7.as(wr).message];
        }
      });
    });
  }, s6.prototype._createScheduledUserMessage = function(e4, t7) {
    var r4 = this, i5 = Ws.of(this._iid).requestQueue, s7 = Date.now(), a5 = this._generateRequestId();
    hs(2).then(function() {
      var n3 = r4._createPendingScheduledUserMessage(e4, a5, s7);
      os(function() {
        return r(r4, void 0, void 0, function() {
          return s(this, function(e5) {
            return [2, t7._trigger(n3)];
          });
        });
      });
    });
    var o3 = new Mr(n({ reqId: a5, channelType: this.channelType, channelUrl: this.url }, e4));
    i5.send(o3).then(function(e5) {
      var n3 = e5.as(Sr2).message;
      os(function() {
        return r(r4, void 0, void 0, function() {
          return s(this, function(e6) {
            return [2, t7._trigger(n3)];
          });
        });
      });
    }).catch(function(n3) {
      if (g(n3)) throw n3;
      hs(2).then(function() {
        var i6 = r4._createPendingScheduledUserMessage(e4, a5, s7);
        r4._markMessageAsFailed(i6, n3), os(function() {
          return r(r4, void 0, void 0, function() {
            return s(this, function(e5) {
              return [2, t7._triggerFailed(n3, i6)];
            });
          });
        });
      });
    });
  }, s6.prototype.sendFileMessage = function(e4) {
    var t7 = n(n({}, ln), e4);
    return Jr(pn(t7)).throw(v.invalidParameters), this._sendFileMessage(t7);
  }, s6.prototype.sendMultipleFilesMessage = function(e4) {
    var t7, r4 = n(n({}, ni), e4), i5 = Ws.of(this._iid);
    Jr(function(e5, t8) {
      return void 0 === t8 && (t8 = Vr), $t(e5) && Array.isArray(e5.fileInfoList) && e5.fileInfoList.length >= 2 && e5.fileInfoList.length <= t8 && e5.fileInfoList.every(function(e6) {
        return ri(e6);
      });
    }(r4, null === (t7 = i5.appInfo) || void 0 === t7 ? void 0 : t7.multipleFilesMessageFileCountLimit)).throw(v.invalidParameters);
    var s7 = !!e4.fileInfoList.find(function(e5) {
      var t8 = i5.appInfo.uploadSizeLimit;
      return e5.file instanceof Blob && e5.file.size > t8 || e5.fileSize > t8;
    });
    return Jr(!s7).throw(v.fileSizeLimitExceededError), this._sendMultipleFilesMessage(r4);
  }, s6.prototype._sendFileMessage = function(e4, t7, r4) {
    var i5 = this;
    void 0 === t7 && (t7 = di.SEND);
    var s7 = Ws.of(this._iid).dispatcher, a5 = ea.of(this._iid).fileMessageQueue, o3 = null != r4 ? r4 : this._generateRequestId(), u4 = Date.now(), c4 = new Xt();
    return hs(2).then(function() {
      var r5 = i5._createPendingFileMessage(e4, o3, u4);
      s7.dispatch(new $s({ messages: [r5], source: t7 === di.RESEND ? Ks.LOCAL_MESSAGE_RESEND_STARTED : Ks.EVENT_MESSAGE_SENT_PENDING })), os(function() {
        return r(i5, void 0, void 0, function() {
          return s(this, function(e5) {
            return [2, c4._trigger(r5)];
          });
        });
      }), a5.request(i5, o3, e4).then(function(e5) {
        s7.dispatch(new $s({ messages: [e5], source: Ks.EVENT_MESSAGE_SENT_SUCCESS })), os(function() {
          return r(i5, void 0, void 0, function() {
            return s(this, function(t8) {
              return [2, c4._trigger(e5)];
            });
          });
        });
      }).catch(function(t8) {
        if (g(t8)) throw t8;
        hs(2).then(function() {
          var r6 = i5._createPendingFileMessage(e4, o3, u4), a6 = Ws.of(i5._iid).cacheContext, l3 = a6.localCacheEnabled && a6.localCacheConfig.enableAutoResend && I(t8.code);
          i5._markMessageAsFailed(r6, t8, l3), s7.dispatch(new $s({ messages: [r6], source: r6.sendingStatus === W.PENDING ? Ks.REQUEST_RESEND_MESSAGE : t8.code === u.FILE_UPLOAD_CANCEL_FAILED ? Ks.LOCAL_MESSAGE_CANCELED : Ks.EVENT_MESSAGE_SENT_FAILED })), os(function() {
            return r(i5, void 0, void 0, function() {
              return s(this, function(e5) {
                return [2, c4._triggerFailed(t8, r6)];
              });
            });
          });
        });
      });
    }), c4;
  }, s6.prototype._autoResendFileMessage = function(e4) {
    Jr(e4 instanceof St && !!e4.messageParams).throw(v.invalidParameters);
    var t7 = Ws.of(this._iid).logger;
    return t7.debug("autoResendFileMessage pending", e4), this._sendFileMessage(e4.messageParams, di.SEND, e4.reqId).onFailed(function(e5) {
      t7.debug("autoResendFileMessage failed", e5);
    }).onSucceeded(function(e5) {
      t7.debug("autoResendFileMessage success", e5);
    });
  }, s6.prototype._sendMultipleFilesMessage = function(e4, t7, r4) {
    var i5 = this, s7 = Ws.of(this._iid).dispatcher, a5 = ea.of(this._iid).fileMessageQueue, o3 = null != r4 ? r4 : this._generateRequestId(), u4 = Date.now(), c4 = new ii();
    return hs(2).then(function() {
      var n3 = i5._createPendingMultipleFilesMessage(e4, o3, u4);
      s7.dispatch(new $s({ messages: [n3], source: t7 === di.RESEND ? Ks.LOCAL_MESSAGE_RESEND_STARTED : Ks.EVENT_MESSAGE_SENT_PENDING })), os(function() {
        return r(i5, void 0, void 0, function() {
          return s(this, function(e5) {
            return [2, c4._trigger(n3)];
          });
        });
      }), a5.request(i5, o3, e4, { requestHandler: c4, isCopy: t7 === di.COPY }).then(function(e5) {
        s7.dispatch(new $s({ messages: [e5], source: Ks.EVENT_MESSAGE_SENT_SUCCESS })), os(function() {
          return r(i5, void 0, void 0, function() {
            return s(this, function(t8) {
              return [2, c4._trigger(e5)];
            });
          });
        });
      }).catch(function(t8) {
        if (g(t8)) throw t8;
        hs(2).then(function() {
          var n4 = i5._createPendingMultipleFilesMessage(e4, o3, u4);
          i5._markMessageAsFailed(n4, t8), s7.dispatch(new $s({ messages: [n4], source: Ks.EVENT_MESSAGE_SENT_FAILED })), os(function() {
            return r(i5, void 0, void 0, function() {
              return s(this, function(e5) {
                return [2, c4._triggerFailed(t8, n4)];
              });
            });
          });
        });
      });
    }), c4;
  }, s6.prototype._createScheduledFileMessage = function(e4, t7, r4, i5) {
    var s7 = this, a5 = Ws.of(this._iid).requestQueue, o3 = new Ar2(n(n({ reqId: r4, channelType: this.channelType, channelUrl: this.url }, e4), { fileUrl: e4.fileUrl, requireAuth: e4.requireAuth }));
    a5.send(o3).then(function(e5) {
      var n3 = e5.as(Ur).message;
      os(function() {
        return r(s7, void 0, void 0, function() {
          return s(this, function(e6) {
            return [2, t7._trigger(n3)];
          });
        });
      });
    }).catch(function(n3) {
      if (g(n3)) throw n3;
      hs(2).then(function() {
        var a6 = s7._createPendingScheduledFileMessage(e4, r4, i5);
        s7._markMessageAsFailed(a6, n3), os(function() {
          return r(s7, void 0, void 0, function() {
            return s(this, function(e5) {
              return [2, t7._triggerFailed(n3, a6)];
            });
          });
        });
      });
    });
  }, s6.prototype.sendFileMessages = function(e4) {
    var t7, n3;
    Jr(e4.every(function(e5) {
      return pn(n(n({}, ln), e5));
    })).throw(v.invalidParameters);
    var r4 = new Xt();
    try {
      for (var i5 = o(e4), s7 = i5.next(); !s7.done; s7 = i5.next()) {
        var a5 = s7.value;
        this.sendFileMessage(a5).onPending(function(e5) {
          return r4._trigger(e5);
        }).onFailed(function(e5, t8) {
          return r4._triggerFailed(e5, t8);
        }).onSucceeded(function(e5) {
          return r4._trigger(e5);
        });
      }
    } catch (e5) {
      t7 = { error: e5 };
    } finally {
      try {
        s7 && !s7.done && (n3 = i5.return) && n3.call(i5);
      } finally {
        if (t7) throw t7.error;
      }
    }
    return r4;
  }, s6.prototype.resendFileMessage = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var n3, r4, i5;
      return s(this, function(s7) {
        return n3 = this._validateFailedFileMessageHasFile(e4, t7), Jr(e4 instanceof St && n3 && !e4.scheduledInfo).throw(v.invalidParameters), r4 = new et(), i5 = fn(e4, t7), this._sendFileMessage(i5, di.RESEND, e4.reqId).onFailed(function(e5) {
          return r4.reject(e5);
        }).onSucceeded(function(e5) {
          return r4.resolve(e5);
        }), [2, r4.promise];
      });
    });
  }, s6.prototype.resendMessage = function(e4, t7) {
    var n3, r4;
    if (Jr(e4 instanceof mt && !e4.scheduledInfo && e4.isResendable).throw(v.invalidParameters), e4.isUserMessage()) {
      var i5 = null !== (n3 = e4.messageParams) && void 0 !== n3 ? n3 : sn(e4);
      return this._sendUserMessage(i5, di.RESEND, e4.reqId);
    }
    if (e4.isFileMessage()) {
      var s7 = this._validateFailedFileMessageHasFile(e4, t7);
      Jr(s7).throw(v.invalidParameters);
      i5 = null !== (r4 = e4.messageParams) && void 0 !== r4 ? r4 : fn(e4, t7);
      return this._sendFileMessage(i5, di.RESEND, e4.reqId);
    }
    if (e4.isMultipleFilesMessage()) throw v.channelTypeNotSupportedError;
  }, s6.prototype.updateFileMessage = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var r4, i5, s7, a5;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return r4 = n(n({}, gn), t7), Jr(w("number", e4) && function(e5) {
              return vn(e5);
            }(r4)).throw(v.invalidParameters), i5 = Ws.of(this._iid).requestQueue, s7 = new yr(n({ channelType: this.channelType, channelUrl: this.url, messageId: e4, metaArrayParams: r4.metaArrays ? { array: r4.metaArrays, mode: "add", upsert: true } : void 0 }, r4)), [4, i5.send(s7)];
          case 1:
            return a5 = o3.sent(), [2, a5.as(_r).message];
        }
      });
    });
  }, s6.prototype.uploadFile = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4, i5, s7, a5, o3, u4;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return t7 = Ws.of(this._iid).requestQueue, r4 = $(), (i5 = new Pe({ file: e4.file, channelUrl: this.url, thumbnailSizes: e4.thumbnailSizes, requestId: r4 })).uploadProgressHandler = e4.progressHandler, e4.uploadStartedHandler && e4.uploadStartedHandler(r4), [4, t7.send(i5)];
          case 1:
            return s7 = c4.sent(), a5 = s7.as(ke2), o3 = a5.url, u4 = a5.thumbnails, [2, { requestId: r4, url: o3, thumbnails: u4 }];
        }
      });
    });
  }, s6.prototype.cancelUploadingFileMessage = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        return Jr(w("string", e4)).throw(v.invalidParameters), ea.of(this._iid).fileMessageQueue.cancel(this, e4), [2, true];
      });
    });
  }, s6.prototype.copyFileMessage = function(e4, n3) {
    var r4, i5, a5;
    return r(this, void 0, void 0, function() {
      var o3, c4;
      return s(this, function(l3) {
        return Jr(e4 instanceof s6 && n3 instanceof St && n3.sendingStatus === W.SUCCEEDED && this.url === n3.channelUrl && !n3.scheduledInfo).throw(v.invalidParameters), o3 = new et(), c4 = se(n(n({}, n3), { fileUrl: n3.url, fileName: n3.name, fileSize: n3.size, mimeType: n3.type, mentionType: n3.mentionType, mentionedUserIds: null !== (r4 = n3.mentionedUserIds) && void 0 !== r4 ? r4 : null === (i5 = n3.mentionedUsers) || void 0 === i5 ? void 0 : i5.map(function(e5) {
          return e5.userId;
        }), pushNotificationDeliveryOption: Q.DEFAULT, parentMessageId: null, isReplyToChannel: false, thumbnailSizes: null === (a5 = n3.thumbnails) || void 0 === a5 ? void 0 : a5.map(function(e5) {
          return { maxWidth: e5.width, maxHeight: e5.height };
        }), requireAuth: n3.requireAuth, isPinnedMessage: false })), e4._sendFileMessage(c4).onSucceeded(function(e5) {
          return o3.resolve(e5);
        }).onFailed(function(e5) {
          return o3.reject(e5);
        }), [2, o3.promise];
      });
    });
  }, s6.prototype.copyMessage = function(e4, t7) {
    Jr(e4 instanceof s6 && t7 instanceof mt && t7.sendingStatus === W.SUCCEEDED && this.url === t7.channelUrl && !t7.scheduledInfo).throw(v.invalidParameters);
    var n3 = t7, r4 = e4;
    if (n3.isUserMessage()) {
      Jr(!n3.poll).throw(v.notSupportedError);
      var i5 = nn(n3);
      return r4._sendUserMessage(i5);
    }
    if (n3.isFileMessage()) {
      i5 = dn(n3);
      return r4._sendFileMessage(i5);
    }
    if (t7.isMultipleFilesMessage()) throw v.channelTypeNotSupportedError;
  }, s6.prototype.deleteMessage = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4;
      return s(this, function(i5) {
        switch (i5.label) {
          case 0:
            return Jr(e4 instanceof pt).throw(v.invalidParameters), e4.messageId > 0 ? (t7 = Ws.of(this._iid).requestQueue, r4 = new nt({ channelType: this.channelType, channelUrl: this.url, messageId: e4.messageId, messageToken: e4 instanceof mt ? e4._messageToken : void 0 }), [4, t7.send(r4)]) : [3, 2];
          case 1:
            i5.sent(), i5.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, s6.prototype.addReaction = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var r4, i5, s7;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return Jr(e4 instanceof pt && e4.messageId > 0 && w("string", t7)).throw(v.invalidParameters), r4 = Ws.of(this._iid).requestQueue, i5 = new gr({ channelType: this.channelType, channelUrl: this.url, messageId: e4.messageId, reactionKey: t7 }), [4, r4.send(i5)];
          case 1:
            return s7 = a5.sent(), [2, s7.as(br).reactionEvent];
        }
      });
    });
  }, s6.prototype.deleteReaction = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var r4, i5, s7;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return Jr(e4 instanceof pt && e4.messageId > 0 && w("string", t7)).throw(v.invalidParameters), r4 = Ws.of(this._iid).requestQueue, i5 = new Ir2({ channelType: this.channelType, channelUrl: this.url, messageId: e4.messageId, reactionKey: t7 }), [4, r4.send(i5)];
          case 1:
            return s7 = a5.sent(), [2, s7.as(Er).reactionEvent];
        }
      });
    });
  }, s6.prototype._updateUserMessageMetaArray = function(e4, t7, r4, i5) {
    return r(this, void 0, void 0, function() {
      var s7, a5, o3, u4, c4, l3;
      return s(this, function(d5) {
        switch (d5.label) {
          case 0:
            return s7 = Ws.of(this._iid), a5 = s7.dispatcher, o3 = s7.requestQueue, u4 = new mr2({ channelType: this.channelType, channelUrl: this.url, messageId: e4, metaArrayParams: { array: t7, mode: r4, upsert: i5 } }), [4, o3.send(u4)];
          case 1:
            return c4 = d5.sent(), l3 = c4.as(vr).message, a5.dispatch(new $s({ messages: [l3], source: Ks.EVENT_MESSAGE_UPDATED })), [2, l3];
        }
      });
    });
  }, s6.prototype._updateFileMessageMetaArray = function(e4, t7, r4, i5) {
    return r(this, void 0, void 0, function() {
      var s7, a5, o3, u4, c4, l3;
      return s(this, function(d5) {
        switch (d5.label) {
          case 0:
            return s7 = Ws.of(this._iid), a5 = s7.dispatcher, o3 = s7.requestQueue, u4 = new yr({ channelType: this.channelType, channelUrl: this.url, messageId: e4, metaArrayParams: { array: t7, mode: r4, upsert: i5 } }), [4, o3.send(u4)];
          case 1:
            return c4 = d5.sent(), l3 = c4.as(_r).message, a5.dispatch(new $s({ messages: [l3], source: Ks.EVENT_MESSAGE_UPDATED })), [2, l3];
        }
      });
    });
  }, s6.prototype.createMessageMetaArrayKeys = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var n3;
      return s(this, function(r4) {
        return Jr(e4 instanceof pt && e4.messageId > 0 && N("string", t7)).throw(v.invalidParameters), n3 = t7.map(function(e5) {
          return new je({ key: e5 });
        }), e4 instanceof St ? [2, this._updateFileMessageMetaArray(e4.messageId, n3, "add", true)] : [2, this._updateUserMessageMetaArray(e4.messageId, n3, "add", true)];
      });
    });
  }, s6.prototype.deleteMessageMetaArrayKeys = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var n3;
      return s(this, function(r4) {
        return Jr(e4 instanceof pt && e4.messageId > 0 && N("string", t7)).throw(v.invalidParameters), n3 = t7.map(function(e5) {
          return new je({ key: e5 });
        }), e4 instanceof St ? [2, this._updateFileMessageMetaArray(e4.messageId, n3, "remove", true)] : [2, this._updateUserMessageMetaArray(e4.messageId, n3, "remove", true)];
      });
    });
  }, s6.prototype.addMessageMetaArrayValues = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        return Jr(e4 instanceof pt && e4.messageId > 0 && t7.every(function(e5) {
          return e5 instanceof je;
        })).throw(v.invalidParameters), e4 instanceof St ? [2, this._updateFileMessageMetaArray(e4.messageId, t7, "add", true)] : [2, this._updateUserMessageMetaArray(e4.messageId, t7, "add", true)];
      });
    });
  }, s6.prototype.removeMessageMetaArrayValues = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        return Jr(e4 instanceof pt && e4.messageId > 0 && t7.every(function(e5) {
          return e5 instanceof je;
        })).throw(v.invalidParameters), e4 instanceof St ? [2, this._updateFileMessageMetaArray(e4.messageId, t7, "remove", true)] : [2, this._updateUserMessageMetaArray(e4.messageId, t7, "remove", true)];
      });
    });
  }, s6.prototype.report = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var r4, i5, s7, a5;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return Jr(S(hn, e4) && w("string", t7)).throw(v.invalidParameters), r4 = Ws.of(this._iid), i5 = r4.sdkState, s7 = r4.requestQueue, a5 = new lr({ channelUrl: this.url, channelType: this.channelType, userId: i5.userId, category: e4, description: t7 }), [4, s7.send(a5)];
          case 1:
            return o3.sent(), [2];
        }
      });
    });
  }, s6.prototype.reportUser = function(e4, t7, r4) {
    return r(this, void 0, void 0, function() {
      var i5, s7, a5, o3;
      return s(this, function(u4) {
        switch (u4.label) {
          case 0:
            return Jr(e4 instanceof es && S(hn, t7) && w("string", r4)).throw(v.invalidParameters), i5 = Ws.of(this._iid), s7 = i5.sdkState, a5 = i5.requestQueue, o3 = new dr({ channelUrl: this.url, channelType: this.channelType, userId: s7.userId, offendingUserId: e4.userId, category: t7, description: r4 }), [4, a5.send(o3)];
          case 1:
            return u4.sent(), [2];
        }
      });
    });
  }, s6.prototype.reportMessage = function(e4, t7, r4) {
    return r(this, void 0, void 0, function() {
      var i5, s7, a5, o3;
      return s(this, function(u4) {
        switch (u4.label) {
          case 0:
            return Jr(e4 instanceof mt && S(hn, t7) && w("string", r4)).throw(v.invalidParameters), i5 = Ws.of(this._iid), s7 = i5.sdkState, a5 = i5.requestQueue, o3 = new hr({ channelUrl: this.url, channelType: this.channelType, userId: s7.userId, offendingUserId: e4.sender.userId, messageId: e4.messageId, category: t7, description: r4, messageToken: e4._messageToken }), [4, a5.send(o3)];
          case 1:
            return u4.sent(), [2];
        }
      });
    });
  }, s6.prototype.updatePoll = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var r4, i5, s7;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return Jr(w("number", e4) && function(e5) {
              return w("string", e5.title, true) && uo(e5.data) && w("boolean", e5.allowUserSuggestion, true) && w("boolean", e5.allowMultipleVotes, true) && w("number", e5.closeAt, true);
            }(t7)).throw(v.invalidParameters), r4 = Ws.of(this._iid).requestQueue, i5 = new Nr2(n({ pollId: e4 }, t7)), [4, r4.send(i5)];
          case 1:
            return s7 = a5.sent(), [2, s7.as(Cr).poll];
        }
      });
    });
  }, s6.prototype.deletePoll = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4, i5;
      return s(this, function(s7) {
        switch (s7.label) {
          case 0:
            return t7 = w("number", e4), Jr(t7).throw(v.invalidParameters), r4 = Ws.of(this._iid).requestQueue, i5 = new Or({ pollId: e4 }), [4, r4.send(i5)];
          case 1:
            return s7.sent(), [2];
        }
      });
    });
  }, s6.prototype.closePoll = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4, i5, s7;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return t7 = w("number", e4), Jr(t7).throw(v.invalidParameters), r4 = Ws.of(this._iid).requestQueue, i5 = new Pr({ pollId: e4 }), [4, r4.send(i5)];
          case 1:
            return s7 = a5.sent(), [2, s7.as(kr2).poll];
        }
      });
    });
  }, s6.prototype.addPollOption = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var r4, i5, s7, a5;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return r4 = w("number", e4) && w("string", t7) && "" !== t7.trim(), Jr(r4).throw(v.invalidParameters), i5 = Ws.of(this._iid).requestQueue, s7 = new Rr({ channelUrl: this.url, channelType: this.channelType, pollId: e4, optionText: t7 }), [4, i5.send(s7)];
          case 1:
            return a5 = o3.sent(), [2, a5.as(xr2).poll];
        }
      });
    });
  }, s6.prototype.updatePollOption = function(e4, t7, r4) {
    return r(this, void 0, void 0, function() {
      var i5, s7, a5, o3;
      return s(this, function(u4) {
        switch (u4.label) {
          case 0:
            return i5 = w("number", e4) && w("number", t7) && w("string", r4) && "" !== r4.trim(), Jr(i5).throw(v.invalidParameters), s7 = Ws.of(this._iid).requestQueue, a5 = new Dr({ pollId: e4, pollOptionId: t7, optionText: r4 }), [4, s7.send(a5)];
          case 1:
            return o3 = u4.sent(), [2, o3.as(Lr).poll];
        }
      });
    });
  }, s6.prototype.deletePollOption = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var r4, i5, s7;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return r4 = w("number", e4) && w("number", t7), Jr(r4).throw(v.invalidParameters), i5 = Ws.of(this._iid).requestQueue, s7 = new Fr({ pollId: e4, pollOptionId: t7 }), [4, i5.send(s7)];
          case 1:
            return a5.sent(), [2];
        }
      });
    });
  }, s6.prototype.votePoll = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var r4, i5, s7, a5, o3, u4, c4;
      return s(this, function(l3) {
        switch (l3.label) {
          case 0:
            return r4 = w("number", e4) && N("number", t7), Jr(r4).throw(v.invalidParameters), i5 = Ws.of(this._iid), s7 = i5.requestQueue, a5 = i5.dispatcher, o3 = new qr({ reqId: this._generateRequestId(), channelUrl: this.url, channelType: this.channelType, pollId: e4, pollOptionIds: t7 }), [4, s7.send(o3)];
          case 1:
            return u4 = l3.sent(), c4 = u4.as(zr2).event, a5.dispatch(new oo({ event: c4, source: Ks.EVENT_POLL_VOTED })), [2, c4];
        }
      });
    });
  }, s6.prototype.getPollChangeLogsSinceTimestamp = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return Jr(w("number", e4)).throw(v.invalidParameters), [4, Do.of(this._iid).getPollChangeLogs(this.url, this.channelType, e4)];
          case 1:
            return [2, t7.sent()];
        }
      });
    });
  }, s6.prototype.getPollChangeLogsSinceToken = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return Jr(w("string", e4, true)), [4, Do.of(this._iid).getPollChangeLogs(this.url, this.channelType, e4)];
          case 1:
            return [2, t7.sent()];
        }
      });
    });
  }, s6.prototype.createPollListQuery = function(e4) {
    return void 0 === e4 && (e4 = 10), new xo(this._iid, { channelUrl: this.url, channelType: this.channelType, limit: e4 });
  }, s6.prototype.createPollVoterListQuery = function(e4, t7, n3) {
    return void 0 === n3 && (n3 = 20), new Mo(this._iid, { channelUrl: this.url, channelType: this.channelType, pollId: e4, pollOptionId: t7, limit: n3 });
  }, s6.prototype.pinMessage = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4;
      return s(this, function(i5) {
        switch (i5.label) {
          case 0:
            return Jr(w("number", e4) && e4 > 0).throw(v.invalidParameters), t7 = Ws.of(this._iid).requestQueue, r4 = new ci({ channelType: this.channelType, channelUrl: this.url, messageId: e4 }), [4, t7.send(r4)];
          case 1:
            return i5.sent(), [2];
        }
      });
    });
  }, s6.prototype.unpinMessage = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, r4;
      return s(this, function(i5) {
        switch (i5.label) {
          case 0:
            return Jr(w("number", e4) && e4 > 0).throw(v.invalidParameters), t7 = Ws.of(this._iid).requestQueue, r4 = new li({ channelType: this.channelType, channelUrl: this.url, messageId: e4 }), [4, t7.send(r4)];
          case 1:
            return i5.sent(), [2];
        }
      });
    });
  }, s6;
}(zr);
var mi = function(e4) {
  function t7(t8) {
    void 0 === t8 && (t8 = {});
    var n3 = e4.call(this) || this;
    return Object.keys(t8).forEach(function(e5) {
      n3.hasOwnProperty(e5) && (n3[e5] = t8[e5]);
    }), n3;
  }
  return t(t7, e4), t7;
}(function() {
  this.onConnected = st, this.onReconnectStarted = st, this.onReconnectSucceeded = st, this.onReconnectFailed = st, this.onDisconnected = st;
});
var vi = function(e4) {
  function t7(t8) {
    void 0 === t8 && (t8 = {});
    var n3 = e4.call(this) || this;
    return Object.keys(t8).forEach(function(e5) {
      n3.hasOwnProperty(e5) && (n3[e5] = t8[e5]);
    }), n3;
  }
  return t(t7, e4), t7;
}(function() {
  this.onSessionExpired = st, this.onSessionTokenRequired = function(e4) {
    return e4(null);
  }, this.onSessionError = st, this.onSessionRefreshed = st, this.onSessionClosed = st;
});
var yi = function(e4) {
  function t7(t8) {
    void 0 === t8 && (t8 = {});
    var n3 = e4.call(this) || this;
    return Object.keys(t8).forEach(function(e5) {
      n3.hasOwnProperty(e5) && (n3[e5] = t8[e5]);
    }), n3;
  }
  return t(t7, e4), t7;
}(function() {
  this.onFriendsDiscovered = st, this.onTotalUnreadMessageCountChanged = st, this.onTotalUnreadMessageCountUpdated = st;
});
var _i = function(t7) {
  function n3(n4) {
    var r4 = n4.limit, s6 = n4.token, a5 = n4.userIdsFilter, o3 = n4.metaDataKeyFilter, u4 = n4.metaDataValuesFilter, c4 = n4.nicknameStartsWithFilter, l3 = t7.call(this) || this;
    return l3.method = oe.GET, l3.path = ce, l3.params = re({ limit: r4, token: s6, user_ids: a5, metadatakey: o3, metadatavalues_in: u4, nickname_startswith: c4 }), l3;
  }
  return t(n3, t7), n3;
}(xe);
var gi = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.users = n3.users.map(function(e5) {
      return new es(t8, e5);
    }), r4.next = n3.next, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var bi = function(e4) {
  function i4(t7, n3) {
    var r4, i5, s6, a5 = this;
    return (a5 = e4.call(this, t7, n3) || this).userIdsFilter = null, a5.metaDataKeyFilter = null, a5.metaDataValuesFilter = null, a5.nicknameStartsWithFilter = null, a5.userIdsFilter = null !== (r4 = n3.userIdsFilter) && void 0 !== r4 ? r4 : null, a5.metaDataKeyFilter = null !== (i5 = n3.metaDataKeyFilter) && void 0 !== i5 ? i5 : null, a5.metaDataValuesFilter = null !== (s6 = n3.metaDataValuesFilter) && void 0 !== s6 ? s6 : null, a5.nicknameStartsWithFilter = n3.nicknameStartsWithFilter || null, a5;
  }
  return t(i4, e4), i4.prototype._validate = function() {
    return e4.prototype._validate.call(this) && N("string", this.userIdsFilter, true) && w("string", this.metaDataKeyFilter, true) && N("string", this.metaDataValuesFilter, true) && w("string", this.nicknameStartsWithFilter, true);
  }, i4.prototype.next = function() {
    return r(this, void 0, void 0, function() {
      var e5, r4, i5, s6, a5, o3;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e5 = Ws.of(this._iid).requestQueue, r4 = new _i(se(n(n({}, this), { token: this._token }))), [4, e5.send(r4)]) : [3, 2] : [3, 5];
          case 1:
            return i5 = c4.sent(), s6 = i5.as(gi), a5 = s6.users, o3 = s6.next, this._token = o3, this._hasNext = !!o3, this._isLoading = false, [2, a5];
          case 2:
            return [2, []];
          case 3:
            throw v.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw v.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, i4;
}(_o);
var Ii = function(t7) {
  function n3(n4) {
    var r4 = n4.userId, s6 = n4.limit, a5 = n4.token, o3 = n4.userIdsFilter, u4 = t7.call(this) || this;
    return u4.method = oe.GET, u4.path = "".concat(ce, "/").concat(r4, "/block"), u4.params = re({ limit: s6, token: a5, user_ids: o3 }), u4;
  }
  return t(n3, t7), n3;
}(xe);
var Ei = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.users = n3.users.map(function(e5) {
      return new es(t8, e5);
    }), r4.next = n3.next, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Ti = function(e4) {
  function i4(t7, n3) {
    var r4, i5 = this;
    return (i5 = e4.call(this, t7, n3) || this).userIdsFilter = null, i5.userIdsFilter = null !== (r4 = n3.userIdsFilter) && void 0 !== r4 ? r4 : null, i5;
  }
  return t(i4, e4), i4.prototype._validate = function() {
    return e4.prototype._validate.call(this) && N("string", this.userIdsFilter, true);
  }, i4.prototype.next = function() {
    return r(this, void 0, void 0, function() {
      var e5, r4, i5, s6, a5, o3, c4, l3;
      return s(this, function(d5) {
        switch (d5.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e5 = Ws.of(this._iid), r4 = e5.sdkState, i5 = e5.requestQueue, s6 = new Ii(se(n(n({}, this), { userId: r4.userId, token: this._token }))), [4, i5.send(s6)]) : [3, 2] : [3, 5];
          case 1:
            return a5 = d5.sent(), o3 = a5.as(Ei), c4 = o3.users, l3 = o3.next, this._token = l3, this._hasNext = !!l3, this._isLoading = false, [2, c4];
          case 2:
            return [2, []];
          case 3:
            throw v.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw v.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, i4;
}(_o);
var wi = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.limit, s6 = t8.token, a5 = e4.call(this) || this;
    return a5.method = oe.GET, a5.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/friends"), a5.params = { limit: r4, token: s6 }, a5;
  }
  return t(t7, e4), t7;
}(xe);
var Mi = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.hasMore = n3.has_more, r4.users = n3.users.map(function(e5) {
      return new es(t8, e5);
    }), r4.next = n3.next, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Si = function(e4) {
  function t7() {
    return null !== e4 && e4.apply(this, arguments) || this;
  }
  return t(t7, e4), t7.prototype._validate = function() {
    return e4.prototype._validate.call(this);
  }, t7.prototype.next = function() {
    return r(this, void 0, void 0, function() {
      var e5, t8, r4, i4, s6, a5, o3, c4, l3;
      return s(this, function(d5) {
        switch (d5.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e5 = Ws.of(this._iid), t8 = e5.sdkState, r4 = e5.requestQueue, i4 = new wi(n(n({}, this), { userId: t8.userId, token: this._token })), [4, r4.send(i4)]) : [3, 2] : [3, 5];
          case 1:
            return s6 = d5.sent(), a5 = s6.as(Mi), o3 = a5.users, c4 = a5.hasMore, l3 = a5.next, this._token = l3, this._hasNext = c4, this._isLoading = false, [2, o3];
          case 2:
            return [2, []];
          case 3:
            throw v.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw v.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, t7;
}(_o);
var Ai = {};
var Ui = function() {
  function e4(e5) {
    var t7 = e5.dbname, n3 = e5.itemSizeLimit, r4 = void 0 === n3 ? 1048576 : n3, i4 = e5.cacheLimit, s6 = void 0 === i4 ? 256 : i4, a5 = e5.blockHashBase, o3 = void 0 === a5 ? 2 : a5, u4 = e5.blockHashMultiplier, c4 = void 0 === u4 ? 10 : u4, l3 = e5.blockHashConstant, d5 = void 0 === l3 ? 11 : l3, h4 = e5.transactionApplyDelay, f4 = void 0 === h4 ? 200 : h4, p4 = e5.disableLogger, m5 = void 0 !== p4 && p4;
    return Ai[t7] || (this.itemSizeLimit = r4, this.cacheLimit = s6, this.blockHashBase = o3, this.blockHashMultiplier = c4, this.blockHashConstant = d5, this.transactionApplyDelay = f4, this.disableLogger = m5, Ai[t7] = this), Ai[t7];
  }
  return e4.get = function(e5) {
    return Ai[e5];
  }, e4;
}();
!function(e4) {
  e4[e4.UNKNOWN_ERROR = 6e7] = "UNKNOWN_ERROR", e4[e4.STORE_NOT_DEFINED = 61001e3] = "STORE_NOT_DEFINED", e4[e4.STORE_NOT_AVAILABLE = 61001001] = "STORE_NOT_AVAILABLE", e4[e4.STORE_NOT_AVAILABLE_IN_PRIVATE_BROWSING = 61001002] = "STORE_NOT_AVAILABLE_IN_PRIVATE_BROWSING", e4[e4.STORE_IS_FULL = 61001003] = "STORE_IS_FULL", e4[e4.STORE_NOT_INITIALIZED = 61001004] = "STORE_NOT_INITIALIZED", e4[e4.STORE_INVALID_KEY_TYPE = 61002e3] = "STORE_INVALID_KEY_TYPE", e4[e4.STORE_BROKEN_INTEGRITY = 61002001] = "STORE_BROKEN_INTEGRITY", e4[e4.STORE_BROKEN_BLOB = 61002002] = "STORE_BROKEN_BLOB", e4[e4.STORE_ENCRYPTION_INVALID = 61002003] = "STORE_ENCRYPTION_INVALID", e4[e4.STORE_ITEM_SIZE_LIMIT_EXCEEDED = 61017e3] = "STORE_ITEM_SIZE_LIMIT_EXCEEDED", e4[e4.STORE_READ_FAILED = 61017001] = "STORE_READ_FAILED", e4[e4.STORE_WRITE_FAILED = 61017002] = "STORE_WRITE_FAILED", e4[e4.DATABASE_SCHEMA_NOT_ON_UPGRADE = 62002e3] = "DATABASE_SCHEMA_NOT_ON_UPGRADE", e4[e4.COLLECTION_NOT_READY = 63001e3] = "COLLECTION_NOT_READY", e4[e4.COLLECTION_KEY_NOT_MATCH = 63002e3] = "COLLECTION_KEY_NOT_MATCH", e4[e4.COLLECTION_QUERY_NOT_VALID = 63002001] = "COLLECTION_QUERY_NOT_VALID", e4[e4.COLLECTION_KEY_NOT_FOUND = 63004e3] = "COLLECTION_KEY_NOT_FOUND", e4[e4.COLLECTION_KEY_NOT_GIVEN = 63004001] = "COLLECTION_KEY_NOT_GIVEN", e4[e4.COLLECTION_INSERT_DUPLICATE = 63009e3] = "COLLECTION_INSERT_DUPLICATE", e4[e4.COLLECTION_WRITE_FAILED = 63017e3] = "COLLECTION_WRITE_FAILED", e4[e4.COLLECTION_ITEM_SIZE_LIMIT_EXCEEDED = 63017001] = "COLLECTION_ITEM_SIZE_LIMIT_EXCEEDED", e4[e4.INDEX_TABLE_IS_REQUIRED = 65001e3] = "INDEX_TABLE_IS_REQUIRED", e4[e4.INDEX_TYPE_NOT_MATCH = 65002e3] = "INDEX_TYPE_NOT_MATCH", e4[e4.COMPARE_TYPE_NOT_MATCH = 69002001] = "COMPARE_TYPE_NOT_MATCH", e4[e4.CIRCULAR_REFERENCE_FOUND = 69002002] = "CIRCULAR_REFERENCE_FOUND";
}(fi || (fi = {}));
var Ni;
var Ci = function(e4) {
  function t7(n3) {
    var r4 = n3.code, i4 = void 0 === r4 ? fi.UNKNOWN_ERROR : r4, s6 = n3.message, a5 = void 0 === s6 ? "Unknown error occurred." : s6, o3 = e4.call(this, a5) || this;
    return o3.code = i4, Object.setPrototypeOf(o3, t7.prototype), o3;
  }
  return t(t7, e4), Object.defineProperty(t7, "storeNotDefined", { get: function() {
    return new t7({ code: fi.STORE_NOT_DEFINED, message: "Store is not defined. Specify the store on NestDB()" });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "storeNotAvailable", { get: function() {
    return new t7({ code: fi.STORE_NOT_AVAILABLE, message: "Store is not available. Check your environment settings." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "storeNotAvailableInPrivateBrowsing", { get: function() {
    return new t7({ code: fi.STORE_NOT_AVAILABLE_IN_PRIVATE_BROWSING, message: "Store is not available because it is in private browsing." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "storeIsFull", { get: function() {
    return new t7({ code: fi.STORE_IS_FULL, message: "Store is full." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "storeNotInitialized", { get: function() {
    return new t7({ code: fi.STORE_NOT_INITIALIZED, message: "Store is not initialized." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "storeKeyTypeIsInvalid", { get: function() {
    return new t7({ code: fi.STORE_INVALID_KEY_TYPE, message: "Store key should be string type." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "storeBrokenIntegrity", { get: function() {
    return new t7({ code: fi.STORE_BROKEN_INTEGRITY, message: "Data should be in a store but it does not. Integrity is broken." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "storeBrokenBlob", { get: function() {
    return new t7({ code: fi.STORE_BROKEN_BLOB, message: "Data should be in a store but it does not. Blob data is broken." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "storeEncryptionInvalid", { get: function() {
    return new t7({ code: fi.STORE_ENCRYPTION_INVALID, message: "Encryption algorithm has changed. All the store should reset." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "storeItemSizeExceeded", { get: function() {
    return new t7({ code: fi.STORE_ITEM_SIZE_LIMIT_EXCEEDED, message: "The size of the item exceeds the limit that the store allows." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "storeReadFailed", { get: function() {
    return new t7({ code: fi.STORE_READ_FAILED, message: "Failed to read from store." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "storeWriteFailed", { get: function() {
    return new t7({ code: fi.STORE_WRITE_FAILED, message: "Failed to write to store." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "databaseSchemaNotOnUpgrade", { get: function() {
    return new t7({ code: fi.DATABASE_SCHEMA_NOT_ON_UPGRADE, message: "Committing schema is not allowed when upgrade is not running." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "collectionNotReady", { get: function() {
    return new t7({ code: fi.COLLECTION_NOT_READY, message: "Collection is not ready due to an error during initialization." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "collectionKeyNotMatch", { get: function() {
    return new t7({ code: fi.COLLECTION_KEY_NOT_MATCH, message: "keyName of collection could not change." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "collectionQueryNotValid", { get: function() {
    return new t7({ code: fi.COLLECTION_QUERY_NOT_VALID, message: "Query parameter is not a valid format." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "collectionInsertDuplicate", { get: function() {
    return new t7({ code: fi.COLLECTION_INSERT_DUPLICATE, message: "The key already exists." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "collectionKeyNotFound", { get: function() {
    return new t7({ code: fi.COLLECTION_KEY_NOT_FOUND, message: "The key is not found." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "collectionKeyNotGiven", { get: function() {
    return new t7({ code: fi.COLLECTION_KEY_NOT_GIVEN, message: "The item should contain [keyName] property." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "collectionWriteFailed", { get: function() {
    return new t7({ code: fi.COLLECTION_WRITE_FAILED, message: "Failed to write an item." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "collectionItemSizeExceeded", { get: function() {
    return new t7({ code: fi.COLLECTION_ITEM_SIZE_LIMIT_EXCEEDED, message: "The size of the item exceeds the limit that a collection allows." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "indexTableIsRequired", { get: function() {
    return new t7({ code: fi.INDEX_TABLE_IS_REQUIRED, message: "Index table is required." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "indexTypesNotMatch", { get: function() {
    return new t7({ code: fi.INDEX_TYPE_NOT_MATCH, message: "Indexed column should have primitive type." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "compareTypesNotMatch", { get: function() {
    return new t7({ code: fi.COMPARE_TYPE_NOT_MATCH, message: "Values to compare have different types." });
  }, enumerable: false, configurable: true }), Object.defineProperty(t7, "circularReferenceFound", { get: function() {
    return new t7({ code: fi.CIRCULAR_REFERENCE_FOUND, message: "Cannot handle circular referenced object." });
  }, enumerable: false, configurable: true }), t7;
}(Error);
!function(e4) {
  e4.INIT = "init", e4.READY = "ready", e4.CLOSED = "closed";
}(Ni || (Ni = {}));
var Oi;
var Pi = function(e4, t7) {
  if (void 0 === t7 && (t7 = /* @__PURE__ */ new WeakMap()), "object" == typeof e4 && null !== e4) {
    if (t7.has(e4)) throw Ci.circularReferenceFound;
    t7.set(e4, true);
    var n3 = void 0;
    if (Array.isArray(e4)) n3 = e4.map(function(e5) {
      return Pi(e5, t7);
    });
    else if (e4 instanceof RegExp) n3 = e4;
    else if (e4 instanceof Date) n3 = e4;
    else for (var r4 in n3 = {}, e4) n3[r4] = Pi(e4[r4], t7);
    return t7.delete(e4), n3;
  }
  return e4;
};
var ki = function(e4, t7) {
  if (null == t7) return 1;
  if (null == e4) return -1;
  if (typeof e4 != typeof t7) throw Ci.compareTypesNotMatch;
  var n3 = 0;
  switch (typeof e4) {
    case "boolean":
    case "number":
      n3 = e4 - t7;
      break;
    case "string":
      n3 = e4.localeCompare(t7);
  }
  return n3;
};
var Ri = function(e4, t7) {
  for (var n3 = 0, r4 = 0; r4 < e4.length; r4++) n3 = e4.charCodeAt(r4) + (n3 << 6) + (n3 << 16) - n3;
  return (n3 >>> 0) % t7;
};
var xi = function(e4) {
  return new Promise(function(t7) {
    setTimeout(function() {
      return t7();
    }, e4);
  });
};
var Di = function(e4, t7) {
  if (!t7) return false;
  if ("function" != typeof e4) {
    for (var n3 in e4) {
      if (["/and", "&&"].includes(n3)) {
        if (e4[n3].some(function(e5) {
          return !Di(e5, t7);
        })) return false;
      } else if (["/or", "||"].includes(n3)) {
        if (e4[n3].every(function(e5) {
          return !Di(e5, t7);
        })) return false;
      } else if ("/where" === n3) {
        if (!(0, e4[n3])(t7)) return false;
      } else {
        var r4 = n3;
        if ("object" == typeof e4[r4]) {
          var i4 = e4[r4];
          for (var s6 in i4) switch (s6) {
            case "/eq":
            case "=":
              if ((a5 = t7[r4]) !== (o3 = i4[s6])) return false;
              break;
            case "/neq":
            case "!=":
              if ((a5 = t7[r4]) === (o3 = i4[s6])) return false;
              break;
            case "/gt":
            case ">":
              var a5 = t7[r4], o3 = i4[s6];
              if (!(ki(a5, o3) > 0)) return false;
              break;
            case "/gte":
            case ">=":
              a5 = t7[r4], o3 = i4[s6];
              if (!(ki(a5, o3) >= 0)) return false;
              break;
            case "/lt":
            case "<":
              a5 = t7[r4], o3 = i4[s6];
              if (!(ki(a5, o3) < 0)) return false;
              break;
            case "/lte":
            case "<=":
              a5 = t7[r4], o3 = i4[s6];
              if (!(ki(a5, o3) <= 0)) return false;
              break;
            case "/in":
              a5 = t7[r4];
              if (!(o3 = i4[s6]).includes(a5)) return false;
              break;
            case "/nin":
              a5 = t7[r4];
              if ((o3 = i4[s6]).includes(a5)) return false;
              break;
            case "/contain":
              a5 = t7[r4], o3 = i4[s6];
              if (!a5.includes(o3)) return false;
              break;
            case "/regex":
              a5 = t7[r4];
              if (!(o3 = i4[s6]).test(a5)) return false;
              break;
            case "/where":
              a5 = t7[r4];
              if (!(0, i4[s6])(a5)) return false;
          }
        } else if ("function" == typeof e4[r4]) {
          if (!e4[r4](t7[r4])) return false;
        } else if (e4[r4] !== t7[r4]) return false;
      }
    }
    return true;
  }
  return e4(t7);
};
var Li = function() {
};
var Fi = function() {
  return Promise.resolve();
};
var qi = function(e4) {
  return e4;
};
var zi = function(e4, t7) {
  t7();
};
!function(e4) {
  e4[e4.FORWARD = 0] = "FORWARD", e4[e4.BACKWARD = 1] = "BACKWARD";
}(Oi || (Oi = {}));
var Bi;
var Ki;
var ji;
var Qi = function() {
  function e4(e5) {
    var t7 = e5.initialPrevValue, n3 = void 0 === t7 ? null : t7, r4 = e5.initialNextValue, i4 = void 0 === r4 ? null : r4, s6 = e5.iterator, a5 = e5.map, o3 = void 0 === a5 ? qi : a5, u4 = e5.backward, c4 = void 0 === u4 ? Fi : u4, l3 = e5.forward, d5 = void 0 === l3 ? Fi : l3, h4 = e5.complete, f4 = void 0 === h4 ? Li : h4;
    this._prevValue = n3, this._nextValue = i4, this._error = null, this._map = o3, this._backward = c4, this._forward = d5, this._iterator = s6, this._complete = f4;
  }
  return Object.defineProperty(e4.prototype, "prevValue", { get: function() {
    return this._map(this._prevValue);
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "nextValue", { get: function() {
    return this._map(this._nextValue);
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "error", { get: function() {
    return this._error;
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "hasPrevious", { get: function() {
    return !!this._prevValue;
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "hasNext", { get: function() {
    return !!this._nextValue;
  }, enumerable: false, configurable: true }), e4.prototype.prev = function() {
    return r(this, void 0, void 0, function() {
      var e5, t7, n3;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            if (!this.hasPrevious) return [3, 6];
            r4.label = 1;
          case 1:
            return r4.trys.push([1, 3, , 4]), e5 = this._prevValue, t7 = this, [4, this._backward()];
          case 2:
            return t7._prevValue = r4.sent() || null, this._nextValue = e5, [3, 4];
          case 3:
            return n3 = r4.sent(), this._error = n3, [3, 4];
          case 4:
            return [4, this._iterator(this)];
          case 5:
            return [2, r4.sent()];
          case 6:
            this._complete(), r4.label = 7;
          case 7:
            return [2];
        }
      });
    });
  }, e4.prototype.next = function() {
    return r(this, void 0, void 0, function() {
      var e5, t7, n3;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            if (!this.hasNext) return [3, 6];
            r4.label = 1;
          case 1:
            return r4.trys.push([1, 3, , 4]), e5 = this._nextValue, t7 = this, [4, this._forward()];
          case 2:
            return t7._nextValue = r4.sent() || null, this._prevValue = e5, [3, 4];
          case 3:
            return n3 = r4.sent(), this._error = n3, [3, 4];
          case 4:
            return [4, this._iterator(this)];
          case 5:
            return [2, r4.sent()];
          case 6:
            this._complete(), r4.label = 7;
          case 7:
            return [2];
        }
      });
    });
  }, e4.prototype.stop = function() {
    this._prevValue = null, this._nextValue = null, this._complete();
  }, e4;
}();
var Gi = function() {
  function e4(e5) {
    var t7 = e5.condition, n3 = void 0 === t7 ? {} : t7, r4 = e5.backward, i4 = void 0 !== r4 && r4, s6 = e5.blockManager, a5 = e5.indexer;
    this.condition = n3, this.backward = i4, this._blockManager = s6, this._indexer = a5;
  }
  return e4.prototype.findOptimizedStartPosition = function() {
    var e5 = this, t7 = ["=", "/eq", ">", ">=", "/gt", "/gte"], n3 = ["=", "/eq", "<", "<=", "/lt", "/lte"];
    if (this.backward) {
      var r4 = this._indexer.origin.length - 1;
      if ("function" != typeof this.condition) for (var i4 in this._indexer.fields) {
        var s6 = this._indexer.fields[i4], a5 = 1;
        if ("-" === s6[0] && (s6 = s6.slice(1), a5 = -1), this.condition[s6]) {
          if ("object" == typeof this.condition[s6]) {
            var o3 = a5 > 0 ? n3 : t7;
            for (var u4 in this.condition[s6]) if (o3.includes(u4)) {
              for (var c4 = r4; c4 >= 0; c4--) if (a5 * ki(this._indexer.origin[c4].columnValues[i4], this.condition[s6][u4]) <= 0) {
                r4 = c4;
                break;
              }
            }
          } else for (c4 = r4; c4 >= 0; c4--) if (a5 * ki(this._indexer.origin[c4].columnValues[i4], this.condition[s6]) <= 0) {
            r4 = c4;
            break;
          }
        }
      }
      return Math.min(r4 + 1, this._indexer.origin.length - 1);
    }
    var l3 = 0;
    if ("function" != typeof this.condition) for (var d5 = function(r5) {
      var i5 = h4._indexer.fields[r5], s7 = 1;
      if ("-" === i5[0] && (i5 = i5.slice(1), s7 = -1), h4.condition[i5]) {
        if ("object" == typeof h4.condition[i5]) Object.keys(h4.condition[i5]).forEach(function(a7) {
          if ((s7 > 0 ? t7 : n3).includes(a7)) {
            for (var o4 = l3; o4 < e5._indexer.origin.length; o4++) if (s7 * ki(e5._indexer.origin[o4].columnValues[r5], e5.condition[i5][a7]) >= 0) {
              l3 = o4;
              break;
            }
          }
        });
        else for (var a6 = l3; a6 < h4._indexer.origin.length; a6++) if (s7 * ki(h4._indexer.origin[a6].columnValues[r5], h4.condition[i5]) >= 0) {
          l3 = a6;
          break;
        }
      }
    }, h4 = this, i4 = 0; i4 < this._indexer.fields.length; i4++) d5(i4);
    return Math.max(l3 - 1, 0);
  }, e4.prototype.each = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, i4, s6, a5, o3, u4 = this;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            if (t7 = this.findOptimizedStartPosition(), n3 = 0, this.backward && this._indexer.origin[t7] && (n3 = this._indexer.origin[t7].keys.length - 1), r4 = function() {
              if (u4._indexer.origin[t7]) {
                if (!u4._indexer.origin[t7].keys[++n3]) {
                  if (!u4._indexer.origin[++t7]) return false;
                  n3 = 0;
                }
                return true;
              }
              return false;
            }, i4 = function() {
              if (u4._indexer.origin[t7]) {
                if (!u4._indexer.origin[t7].keys[--n3]) {
                  if (!u4._indexer.origin[--t7]) return false;
                  n3 = u4._indexer.origin[t7].keys.length - 1;
                }
                return true;
              }
              return false;
            }, s6 = null, !this._indexer.origin[t7]) return [3, 4];
            a5 = this.backward ? i4 : r4, c4.label = 1;
          case 1:
            return [4, this._blockManager.getFromBlock(this._indexer.origin[t7].keys[n3])];
          case 2:
            if ((o3 = c4.sent()) && Di(this.condition, o3)) return s6 = o3, [3, 4];
            c4.label = 3;
          case 3:
            if (a5()) return [3, 1];
            c4.label = 4;
          case 4:
            return [4, new Promise(function(a6) {
              var o4 = new Qi({ initialNextValue: Pi(s6), iterator: e5, forward: function() {
                return r(u4, void 0, void 0, function() {
                  var e6, s7;
                  return s(this, function(a7) {
                    switch (a7.label) {
                      case 0:
                        e6 = this.backward ? i4 : r4, a7.label = 1;
                      case 1:
                        return e6() ? [4, this._blockManager.getFromBlock(this._indexer.origin[t7].keys[n3])] : [3, 3];
                      case 2:
                        return (s7 = a7.sent()) && Di(this.condition, s7) ? [2, Pi(s7)] : [3, 1];
                      case 3:
                        return [2, null];
                    }
                  });
                });
              }, backward: function() {
                return r(u4, void 0, void 0, function() {
                  var e6, s7;
                  return s(this, function(a7) {
                    switch (a7.label) {
                      case 0:
                        e6 = this.backward ? r4 : i4, a7.label = 1;
                      case 1:
                        return e6() ? [4, this._blockManager.getFromBlock(this._indexer.origin[t7].keys[n3])] : [3, 3];
                      case 2:
                        return (s7 = a7.sent()) && Di(this.condition, s7) ? [2, Pi(s7)] : [3, 1];
                      case 3:
                        return [2, null];
                    }
                  });
                });
              }, complete: a6 });
              e5(o4);
            })];
          case 5:
            return [2, c4.sent()];
        }
      });
    });
  }, e4;
}();
var Vi = function() {
  function e4(e5) {
    var t7 = e5.condition, n3 = void 0 === t7 ? {} : t7, r4 = e5.backward, i4 = void 0 !== r4 && r4, s6 = e5.mutex, a5 = e5.blockManager, o3 = e5.indexer;
    this._mutex = s6, this._iterator = new Gi({ condition: n3, backward: i4, blockManager: a5, indexer: o3 });
  }
  return e4.prototype.fetch = function(e5) {
    return void 0 === e5 && (e5 = {}), r(this, void 0, void 0, function() {
      var t7, n3, r4, i4, s6 = this;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            if (t7 = Math.max(e5.offset || 0, 0), 0 === (n3 = "number" == typeof e5.limit ? e5.limit : Number.MAX_SAFE_INTEGER)) return [2, []];
            if (n3 < 0) throw Ci.collectionQueryNotValid;
            a5.label = 1;
          case 1:
            return a5.trys.push([1, 4, , 5]), r4 = [], [4, this._mutex.lock()];
          case 2:
            return a5.sent(), [4, this._iterator.each(function(e6) {
              return r(s6, void 0, void 0, function() {
                return s(this, function(i5) {
                  return e6.error ? e6.stop() : e6.hasNext ? 0 === t7 ? (r4.push(e6.nextValue), 0 < n3 && n3 <= r4.length ? e6.stop() : e6.next()) : (t7--, e6.next()) : e6.stop(), [2];
                });
              });
            })];
          case 3:
            return a5.sent(), this._mutex.unlock(), [2, r4];
          case 4:
            throw i4 = a5.sent(), this._mutex.unlock(), i4;
          case 5:
            return [2];
        }
      });
    });
  }, e4.prototype.count = function() {
    return r(this, void 0, void 0, function() {
      var e5, t7, n3 = this;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return r4.trys.push([0, 3, , 4]), e5 = 0, [4, this._mutex.lock()];
          case 1:
            return r4.sent(), [4, this._iterator.each(function(t8) {
              return r(n3, void 0, void 0, function() {
                return s(this, function(n4) {
                  return t8.error ? t8.stop() : t8.hasNext ? (e5++, t8.next()) : t8.stop(), [2];
                });
              });
            })];
          case 2:
            return r4.sent(), this._mutex.unlock(), [2, e5];
          case 3:
            throw t7 = r4.sent(), this._mutex.unlock(), t7;
          case 4:
            return [2];
        }
      });
    });
  }, e4;
}();
var Hi = function(e4) {
  return "".concat("nest", "@").concat(e4);
};
var Wi = function(e4, t7) {
  return "".concat(Hi(e4), "/").concat(t7);
};
var Yi = function(e4, t7) {
  return "".concat(Wi(e4, t7), ".metadata");
};
var Ji = function(e4, t7) {
  return "".concat(Wi(e4, t7), "/block.");
};
var Xi = function(e4, t7) {
  return "".concat(Wi(e4, t7), "/blob.");
};
var Zi = function() {
  function e4(e5) {
    var t7 = e5.dbname, n3 = e5.collectionName, r4 = e5.store;
    this.dbname = t7, this.collectionName = n3, this.store = r4;
  }
  return e4.prototype.get = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, i4, s6, a5, o3, u4, c4;
      return s(this, function(l3) {
        switch (l3.label) {
          case 0:
            return [4, this.store.get(e5)];
          case 1:
            return (t7 = l3.sent()) ? (n3 = t7.data, r4 = t7.type, "undefined" == typeof fetch ? [3, 4] : [4, fetch(n3)]) : [3, 5];
          case 2:
            return [4, l3.sent().blob()];
          case 3:
            return [2, l3.sent()];
          case 4:
            for (i4 = [], s6 = atob(n3.split(",")[1]), a5 = 0; a5 < s6.length; a5 += 512) {
              for (o3 = s6.slice(a5, a5 + 512), u4 = new Array(o3.length), c4 = 0; c4 < o3.length; c4++) u4[c4] = o3.charCodeAt(c4);
              i4.push(new Uint8Array(u4));
            }
            return [2, new Blob(i4, { type: r4 })];
          case 5:
            return [2, null];
        }
      });
    });
  }, e4.prototype.save = function(e5, t7) {
    return void 0 === t7 && (t7 = "".concat(Date.now())), r(this, void 0, void 0, function() {
      var n3, r4, i4, s6, a5 = this;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return [4, new Promise(function(n4) {
              var r5 = function(e6, t8, n5, r6) {
                return void 0 === r6 && (r6 = 0), "".concat(Xi(e6, t8)).concat(n5, ".").concat(r6);
              }(a5.dbname, a5.collectionName, t7), i5 = new FileReader();
              i5.onload = function() {
                n4({ blobId: r5, data: i5.result, type: e5.type });
              }, i5.readAsDataURL(e5);
            })];
          case 1:
            return n3 = o3.sent(), r4 = n3.blobId, i4 = n3.data, s6 = n3.type, [4, this.store.set({ key: r4, value: { data: i4, type: s6 } })];
          case 2:
            return o3.sent(), [2, r4];
        }
      });
    });
  }, e4.prototype.remove = function(e5) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return [4, this.store.remove(e5)];
          case 1:
            return t7.sent(), [2];
        }
      });
    });
  }, e4.prototype.clear = function() {
    return r(this, void 0, void 0, function() {
      var e5, t7, n3 = this;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return e5 = Xi(this.dbname, this.collectionName), [4, this.store.getAllKeys()];
          case 1:
            return t7 = r4.sent(), [4, Promise.all(t7.filter(function(t8) {
              return t8.startsWith(e5);
            }).map(function(e6) {
              return r(n3, void 0, void 0, function() {
                return s(this, function(t8) {
                  switch (t8.label) {
                    case 0:
                      return [4, this.store.remove(e6)];
                    case 1:
                      return [2, t8.sent()];
                  }
                });
              });
            }))];
          case 2:
            return r4.sent(), [2];
        }
      });
    });
  }, e4;
}();
!function(e4) {
  e4[e4.COMMIT = 0] = "COMMIT", e4[e4.WRITE = 1] = "WRITE", e4[e4.ERROR = 2] = "ERROR";
}(Bi || (Bi = {})), function(e4) {
  e4.PENDING = "pending", e4.PERSISTENT = "persistent", e4.VOLATILE = "volatile";
}(Ki || (Ki = {})), function(e4) {
  e4[e4.NO_CACHE = 0] = "NO_CACHE", e4[e4.DEFAULT = 1] = "DEFAULT", e4[e4.PERSISTENT = 2] = "PERSISTENT";
}(ji || (ji = {}));
var $i;
var es2;
var ts2 = [Ki.PENDING, Ki.VOLATILE];
var ns2 = {};
var rs = function() {
  function e4(e5) {
    var t7 = e5.dbname, n3 = e5.limit, r4 = void 0 === n3 ? 256 : n3;
    return ns2[t7] || (this.dbname = t7, this._items = [], this._limit = r4, ns2[t7] = this), ns2[t7];
  }
  return e4.get = function(e5) {
    return ns2[e5];
  }, Object.defineProperty(e4.prototype, "items", { get: function() {
    return this._items;
  }, enumerable: false, configurable: true }), e4.prototype.find = function(e5, t7, n3) {
    return void 0 === n3 && (n3 = ji.DEFAULT), r(this, void 0, void 0, function() {
      var r4, i4;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return (r4 = this.get(t7)) ? [3, 2] : [4, e5.get(t7)];
          case 1:
            return (i4 = s6.sent()) && (r4 = { key: t7, value: i4, state: n3 === ji.PERSISTENT ? Ki.PERSISTENT : Ki.VOLATILE }, this.put(r4)), [3, 3];
          case 2:
            n3 === ji.PERSISTENT && (r4.state = Ki.PERSISTENT), s6.label = 3;
          case 3:
            return [2, r4];
        }
      });
    });
  }, e4.prototype.get = function(e5, t7) {
    void 0 === t7 && (t7 = ji.DEFAULT);
    var n3 = this._items.map(function(e6) {
      return e6.key;
    }).indexOf(e5);
    if (n3 > -1) {
      var r4 = this._items[n3];
      return t7 === ji.PERSISTENT && (r4.state = Ki.PERSISTENT), t7 !== ji.NO_CACHE && this.put(r4), r4;
    }
    return null;
  }, e4.prototype.put = function(e5) {
    var t7, n3;
    if (this._limit > 0) {
      var r4 = this._items.map(function(e6) {
        return e6.key;
      }).indexOf(e5.key);
      if (r4 > -1) ts2.includes(this._items[r4].state) && ts2.includes(e5.state) ? (this._items.splice(r4, 1), this._items.push(e5)) : (this._items[r4].state = e5.state, this._items[r4].value = e5.value);
      else {
        this._items.push(e5);
        var i4 = this._items.filter(function(e6) {
          return e6.state === Ki.VOLATILE;
        }), s6 = i4.length - this._limit;
        if (s6 > 0) {
          var a5 = [];
          try {
            for (var o3 = o(this._items), u4 = o3.next(); !u4.done; u4 = o3.next()) {
              var c4 = u4.value;
              c4.state === Ki.VOLATILE && s6 > 0 ? s6-- : a5.push(c4);
            }
          } catch (e6) {
            t7 = { error: e6 };
          } finally {
            try {
              u4 && !u4.done && (n3 = o3.return) && n3.call(o3);
            } finally {
              if (t7) throw t7.error;
            }
          }
          this._items = a5;
        }
      }
    }
  }, e4.prototype.remove = function(e5) {
    var t7 = this._items.map(function(e6) {
      return e6.key;
    }).indexOf(e5);
    t7 > -1 && this._items.splice(t7, 1);
  }, e4.prototype.clearByCondition = function(e5) {
    this._items = this._items.filter(function(t7) {
      return !e5(t7);
    });
  }, e4.prototype.clearForDatabase = function(e5) {
    this.clearByCondition(function(t7) {
      return t7.key.startsWith(Hi(e5));
    });
  }, e4.prototype.clear = function(e5) {
    void 0 === e5 && (e5 = false), this._items = e5 ? [] : this._items.filter(function(e6) {
      return e6.state !== Ki.VOLATILE;
    });
  }, e4;
}();
var is = function() {
  function e4(e5) {
    var t7 = e5.dbname, n3 = e5.collectionName, r4 = e5.store;
    this._requests = [], this._onCommit = /* @__PURE__ */ new Map(), this._onWrite = /* @__PURE__ */ new Map(), this._onError = /* @__PURE__ */ new Map(), this.dbname = t7, this.collectionName = n3, this.metadataKey = function(e6, t8) {
      return "".concat(Wi(e6, t8), "/trans.metadata");
    }(t7, n3), this.recordsetKey = function(e6, t8) {
      return "".concat(Wi(e6, t8), "/trans.recordset");
    }(t7, n3), this._store = r4;
  }
  return Object.defineProperty(e4.prototype, "generation", { get: function() {
    return this._metadata ? this._metadata.generation : 0;
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "requestCount", { get: function() {
    return this._requests.length;
  }, enumerable: false, configurable: true }), e4.prototype._getReducedRecordset = function(e5) {
    return void 0 === e5 && (e5 = []), r(this, void 0, void 0, function() {
      var t7;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._store.get(this.recordsetKey)];
          case 1:
            return (t7 = n3.sent() || []).push.apply(t7, c([], a(e5), false)), [2, this._reduceRecordSet(t7)];
        }
      });
    });
  }, e4.prototype._reduceRecordSet = function(e5) {
    for (var t7 = [], n3 = {}, r4 = e5.length - 1; r4 >= 0; r4--) {
      for (var i4 = e5[r4], s6 = [], a5 = i4.requests.length - 1; a5 >= 0; a5--) {
        var o3 = i4.requests[a5], u4 = o3.data;
        n3[u4.key] || (s6.unshift(o3), n3[u4.key] = true);
      }
      s6.length > 0 && (i4.requests = s6, t7.unshift(i4));
    }
    return t7;
  }, e4.prototype._applyRecord = function(e5, t7) {
    return r(this, void 0, void 0, function() {
      var n3, r4, i4, s6, a5, o3, c4, l3, d5;
      return s(this, function(h4) {
        switch (h4.label) {
          case 0:
            n3 = rs.get(this.dbname), r4 = t7.generation, i4 = t7.requests, s6 = null, h4.label = 1;
          case 1:
            return h4.trys.push([1, 3, , 4]), [4, this._store.setMany(i4.map(function(e6) {
              return n(n({}, e6.data), { generation: r4 });
            }))];
          case 2:
            for (a5 = h4.sent(), o3 = 0; o3 < i4.length; o3++) a5[o3] instanceof Error && (s6 || (s6 = a5[o3]), c4 = i4[o3].data, n3.put(n(n({}, c4), { state: Ki.PERSISTENT })));
            return [3, 4];
          case 3:
            return l3 = h4.sent(), s6 = l3, [3, 4];
          case 4:
            return s6 ? [3, 6] : (d5 = e5.filter(function(e6) {
              return e6.generation !== r4;
            }), [4, this._store.set({ key: this.recordsetKey, value: d5 })]);
          case 5:
            return h4.sent(), this._onWrite.forEach(function(e6) {
              e6(i4.map(function(e7) {
                return e7.data;
              }));
            }), [3, 7];
          case 6:
            this._onError.forEach(function(e6) {
              s6 && e6(s6);
            }), h4.label = 7;
          case 7:
            return [2];
        }
      });
    });
  }, e4.prototype.init = function() {
    return r(this, void 0, void 0, function() {
      var e5, t7, n3, r4, i4, s6, a5, o3;
      return s(this, function(u4) {
        switch (u4.label) {
          case 0:
            return e5 = this, [4, this._store.get(this.metadataKey)];
          case 1:
            return e5._metadata = u4.sent() || { generation: 1 }, [4, this._getReducedRecordset()];
          case 2:
            t7 = u4.sent(), u4.label = 3;
          case 3:
            u4.trys.push([3, 8, 9, 10]), n3 = o(t7), r4 = n3.next(), u4.label = 4;
          case 4:
            return r4.done ? [3, 7] : (i4 = r4.value, [4, this._applyRecord(t7, i4)]);
          case 5:
            u4.sent(), u4.label = 6;
          case 6:
            return r4 = n3.next(), [3, 4];
          case 7:
            return [3, 10];
          case 8:
            return s6 = u4.sent(), a5 = { error: s6 }, [3, 10];
          case 9:
            try {
              r4 && !r4.done && (o3 = n3.return) && o3.call(n3);
            } finally {
              if (a5) throw a5.error;
            }
            return [7];
          case 10:
            return [2];
        }
      });
    });
  }, e4.prototype.on = function(e5, t7, n3) {
    switch (e5) {
      case Bi.COMMIT:
        this._onCommit.set(t7, n3);
        break;
      case Bi.WRITE:
        this._onWrite.set(t7, n3);
        break;
      case Bi.ERROR:
        this._onError.set(t7, n3);
    }
  }, e4.prototype.requestWrite = function(e5, t7) {
    this._requests.push({ data: e5, options: t7 }), rs.get(this.dbname).put(n({ state: Ki.PENDING }, e5));
  }, e4.prototype.requestMultipleWrite = function(e5, t7) {
    var n3, r4, i4 = rs.get(this.dbname);
    try {
      for (var s6 = o(e5), a5 = s6.next(); !a5.done; a5 = s6.next()) {
        var o3 = a5.value;
        this._requests.push({ data: o3, options: t7 }), i4.put(n({ state: Ki.PENDING }, o3));
      }
    } catch (e6) {
      n3 = { error: e6 };
    } finally {
      try {
        a5 && !a5.done && (r4 = s6.return) && r4.call(s6);
      } finally {
        if (n3) throw n3.error;
      }
    }
  }, e4.prototype.clear = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        return rs.get(this.dbname).clearByCondition(function(e6) {
          return e6.state === Ki.PENDING;
        }), this._requests = [], [2];
      });
    });
  }, e4.prototype.commit = function() {
    return r(this, void 0, void 0, function() {
      var e5, t7, n3, r4, i4, s6, a5, o3, c4, l3, d5, h4, f4 = this;
      return s(this, function(p4) {
        switch (p4.label) {
          case 0:
            if (!((e5 = this._requests).length > 0)) return [3, 4];
            for (t7 = [], n3 = {}, o3 = e5.length - 1; o3 >= 0; o3--) r4 = e5[o3], l3 = r4.data, n3[l3.key] || (n3[l3.key] = true, t7.unshift(r4));
            return i4 = { generation: this.generation, requests: t7 }, [4, this._getReducedRecordset([i4])];
          case 1:
            return s6 = p4.sent(), [4, this._store.set({ key: this.recordsetKey, value: s6 })];
          case 2:
            return p4.sent(), this._metadata.generation++, [4, this._store.set({ key: this.metadataKey, value: this._metadata })];
          case 3:
            for (p4.sent(), a5 = rs.get(this.dbname), o3 = 0; o3 < t7.length; o3++) c4 = t7[o3], l3 = c4.data, d5 = c4.options, a5.put(n(n({}, l3), { state: d5 && d5.persistent ? Ki.PERSISTENT : Ki.VOLATILE }));
            this._requests = [], this._onCommit.forEach(function(t8) {
              t8(e5.map(function(e6) {
                return e6.data;
              }));
            }), h4 = Ui.get(this.dbname), setTimeout(function() {
              try {
                f4._applyRecord(s6, i4);
              } catch (e6) {
                f4._onError.forEach(function(t8) {
                  return t8(e6);
                });
              }
            }, h4.transactionApplyDelay), p4.label = 4;
          case 4:
            return [2];
        }
      });
    });
  }, e4;
}();
var ss = function() {
  function e4(e5) {
    var t7 = e5.blockId, n3 = e5.keyName, r4 = e5.items, i4 = void 0 === r4 ? [] : r4, s6 = e5.limit;
    this.blockId = t7, this.keyName = n3, this.limit = s6, this._items = c([], a(i4), false);
  }
  return e4.createFromCacheItem = function(t7) {
    return t7 ? new e4(t7.value) : null;
  }, Object.defineProperty(e4.prototype, "isEmpty", { get: function() {
    return 0 === this._items.length;
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "items", { get: function() {
    return this._items;
  }, enumerable: false, configurable: true }), e4.prototype.serialize = function() {
    return { blockId: this.blockId, keyName: this.keyName, limit: this.limit, items: this._items };
  }, e4.prototype.getItemByKey = function(e5) {
    var t7 = this, n3 = this._items.find(function(n4) {
      var r4 = n4[t7.keyName];
      return e5 === r4;
    });
    return null != n3 ? n3 : null;
  }, e4.prototype.has = function(e5) {
    var t7 = this;
    return this._items.map(function(e6) {
      return e6[t7.keyName];
    }).includes(e5);
  }, e4.prototype.add = function(e5) {
    var t7 = this, n3 = this._items.map(function(e6) {
      return e6[t7.keyName];
    }).indexOf(e5[this.keyName]);
    return n3 < 0 ? this._items.length < this.limit && (this._items.push(e5), true) : (this._items[n3] = e5, true);
  }, e4.prototype.remove = function(e5) {
    for (var t7 in this._items) if (this._items[t7][this.keyName] === e5) return this._items.splice(parseInt(t7), 1), true;
    return false;
  }, e4.prototype.clear = function() {
    this._items = [];
  }, e4;
}();
var as2 = function() {
  function e4(e5) {
    var t7 = e5.dbname, n3 = e5.collectionName, r4 = e5.metadata, i4 = e5.hashFunction, s6 = void 0 === i4 ? Ri : i4, a5 = e5.transaction, o3 = e5.store;
    this.dbname = t7, this.collectionName = n3, this.hashFunction = s6, this.metadata = r4, this._transaction = a5, this._store = o3;
  }
  return Object.defineProperty(e4.prototype, "keyName", { get: function() {
    return this.metadata.keyName;
  }, enumerable: false, configurable: true }), e4.prototype.createBlockId = function(e5, t7) {
    return void 0 === t7 && (t7 = this.metadata.blockLevel), n3 = this.dbname, r4 = this.collectionName, i4 = t7, s6 = "".concat(function(e6, t8, n4) {
      var r5 = n4.base * Math.pow(n4.multiplier, t8) + n4.constant;
      return (n4.hashFunction || Ri)(e6, r5);
    }(e5, t7, { hashFunction: this.hashFunction, base: this.metadata.blockHashBase, multiplier: this.metadata.blockHashMultiplier, constant: this.metadata.blockHashConstant })), "".concat(Ji(n3, r4)).concat(i4, ".").concat(s6);
    var n3, r4, i4, s6;
  }, e4.prototype._findBlock = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, i4, s6;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            t7 = rs.get(this.dbname), n3 = this.metadata.blockLevel, a5.label = 1;
          case 1:
            return n3 > 0 ? (r4 = this.createBlockId(e5, n3), [4, t7.find(this._store, r4)]) : [3, 4];
          case 2:
            if ((i4 = a5.sent()) && (s6 = ss.createFromCacheItem(i4), null == s6 ? void 0 : s6.getItemByKey(e5))) return [2, s6];
            a5.label = 3;
          case 3:
            return n3--, [3, 1];
          case 4:
            return [2, null];
        }
      });
    });
  }, e4.prototype.getFromBlock = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._findBlock(e5)];
          case 1:
            return [2, (t7 = n3.sent()) ? t7.getItemByKey(e5) : null];
        }
      });
    });
  }, e4.prototype.putToBlock = function(e5, t7) {
    return r(this, void 0, void 0, function() {
      var n3, r4, i4, s6, a5;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return n3 = Ui.get(this.dbname), r4 = this.createBlockId(e5), i4 = Math.floor(this._store.itemSizeLimit / n3.itemSizeLimit), [4, rs.get(this.dbname).find(this._store, r4)];
          case 1:
            return s6 = o3.sent(), (null == (a5 = s6 ? ss.createFromCacheItem(s6) : new ss({ blockId: r4, keyName: this.keyName, items: [], limit: i4 })) ? void 0 : a5.add(t7)) ? (this._transaction.requestWrite({ key: a5.blockId, value: a5.serialize() }), [2, true]) : [2, false];
        }
      });
    });
  }, e4.prototype.removeFromBlock = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._findBlock(e5)];
          case 1:
            return (t7 = n3.sent()) && t7.remove(e5) ? (this._transaction.requestWrite({ key: t7.blockId, value: t7.serialize() }), [2, true]) : [2, false];
        }
      });
    });
  }, e4.prototype.clearAllBlocks = function() {
    return r(this, void 0, void 0, function() {
      var e5, t7, n3;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return e5 = Ji(this.dbname, this.collectionName), [4, this._store.getAllKeys()];
          case 1:
            return t7 = r4.sent(), n3 = t7.filter(function(t8) {
              return t8.startsWith(e5);
            }), [4, this._store.removeMany(n3)];
          case 2:
            return r4.sent(), [4, this._transaction.clear()];
          case 3:
            return r4.sent(), rs.get(this.dbname).clearByCondition(function(t8) {
              return t8.key.startsWith(e5);
            }), [2];
        }
      });
    });
  }, e4;
}();
var os2 = {};
var us = function() {
  function e4(e5) {
    var t7 = e5.dbname, n3 = e5.collectionName, r4 = e5.keyName, i4 = e5.fields, s6 = e5.transaction, a5 = e5.store, o3 = this;
    this._origin = [], this._table = [];
    var u4 = function(e6, t8, n4) {
      return "".concat(Wi(e6, t8), "/index.").concat(n4);
    }(t7, n3, i4.join(">"));
    return os2[u4] || (this.dbname = t7, this.collectionName = n3, this.keyName = r4, this.fields = i4, this.indexerKey = u4, this._transaction = s6, this._store = a5, this._transaction.on(Bi.COMMIT, this.indexerKey, function() {
      return o3.commit();
    }), this._transaction.on(Bi.ERROR, this.indexerKey, function() {
      return o3.abort();
    })), os2[u4];
  }
  return e4.createKey = function(e5) {
    return e5.join(">");
  }, e4.parseKey = function(e5) {
    return e5.split(">");
  }, e4.clearIndexerMap = function() {
    for (var e5 in os2) delete os2[e5];
  }, e4.prototype._addItem = function(e5) {
    var t7 = e5[this.keyName], n3 = this.getColumnValues(e5), r4 = a(this.indexOf(n3), 2), i4 = r4[0];
    return r4[1] ? !this._table[i4].keys.includes(t7) && (this._table[i4].keys.push(t7), true) : (this._table.splice(i4, 0, { columnValues: n3, keys: [t7] }), true);
  }, e4.prototype._removeItem = function(e5) {
    var t7 = e5[this.keyName], n3 = this.getColumnValues(e5), r4 = a(this.indexOf(n3), 2), i4 = r4[0];
    if (r4[1]) {
      var s6 = this._table[i4].keys.indexOf(t7);
      if (s6 > -1) return this._table[i4].keys.splice(s6, 1), 0 === this._table[i4].keys.length && this._table.splice(i4, 1), true;
    }
    return false;
  }, Object.defineProperty(e4.prototype, "origin", { get: function() {
    return this._origin;
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "table", { get: function() {
    return this._table;
  }, enumerable: false, configurable: true }), e4.prototype.getColumnValues = function(e5) {
    var t7, n3, r4, i4, s6 = [];
    try {
      for (var a5 = o(this.fields), o3 = a5.next(); !o3.done; o3 = a5.next()) {
        var u4 = o3.value;
        if ("-" === u4[0] && (u4 = u4.slice(1)), r4 = e5[u4], i4 = void 0, i4 = typeof r4, null !== r4 && "undefined" !== i4 && "boolean" !== i4 && "number" !== i4 && "string" !== i4) throw Ci.indexTypesNotMatch;
        s6.push(e5[u4]);
      }
    } catch (e6) {
      t7 = { error: e6 };
    } finally {
      try {
        o3 && !o3.done && (n3 = a5.return) && n3.call(a5);
      } finally {
        if (t7) throw t7.error;
      }
    }
    return s6;
  }, e4.prototype.diff = function(e5, t7) {
    for (var n3 in this.fields) {
      var r4 = "-" === this.fields[n3][0] ? -1 : 1, i4 = ki(e5[n3], t7[n3]);
      if (0 !== i4) return r4 * i4;
    }
    return 0;
  }, e4.prototype.indexOf = function(e5) {
    if (this._table.length > 0) {
      for (var t7 = 0, n3 = this._table.length - 1; t7 <= n3; ) {
        var r4 = Math.floor((t7 + n3) / 2), i4 = this.diff(e5, this._table[r4].columnValues);
        if (i4 > 0) t7 = r4 + 1;
        else {
          if (!(i4 < 0)) return [r4, true];
          n3 = r4 - 1;
        }
      }
      return [t7, false];
    }
    return [0, false];
  }, e4.prototype.ensure = function() {
    return r(this, void 0, void 0, function() {
      var e5, t7, n3, r4, i4, s6, a5, o3, u4, c4, l3, d5, h4, f4, p4, m5, y6;
      return s(this, function(_2) {
        switch (_2.label) {
          case 0:
            return [4, (e5 = rs.get(this.dbname)).find(this._store, this.indexerKey, ji.PERSISTENT)];
          case 1:
            return (t7 = _2.sent()) ? [3, 11] : (n3 = Ji(this.dbname, this.collectionName), [4, this._store.getAllKeys()]);
          case 2:
            r4 = _2.sent(), _2.label = 3;
          case 3:
            _2.trys.push([3, 8, 9, 10]), i4 = o(r4), s6 = i4.next(), _2.label = 4;
          case 4:
            return s6.done ? [3, 7] : (a5 = s6.value).startsWith(n3) ? [4, e5.find(this._store, a5, ji.NO_CACHE)] : [3, 6];
          case 5:
            if (o3 = _2.sent(), u4 = ss.createFromCacheItem(o3)) try {
              for (m5 = void 0, c4 = o(u4.items), l3 = c4.next(); !l3.done; l3 = c4.next()) d5 = l3.value, this._addItem(d5);
            } catch (e6) {
              m5 = { error: e6 };
            } finally {
              try {
                l3 && !l3.done && (y6 = c4.return) && y6.call(c4);
              } finally {
                if (m5) throw m5.error;
              }
            }
            _2.label = 6;
          case 6:
            return s6 = i4.next(), [3, 4];
          case 7:
            return [3, 10];
          case 8:
            return h4 = _2.sent(), f4 = { error: h4 }, [3, 10];
          case 9:
            try {
              s6 && !s6.done && (p4 = i4.return) && p4.call(i4);
            } finally {
              if (f4) throw f4.error;
            }
            return [7];
          case 10:
            return this._transaction.requestWrite({ key: this.indexerKey, value: this._table }, { persistent: true }), [3, 12];
          case 11:
            this._origin = t7.value, this._table = Pi(this._origin), _2.label = 12;
          case 12:
            return os2[this.indexerKey] = this, [2];
        }
      });
    });
  }, e4.prototype.drop = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        switch (e5.label) {
          case 0:
            return rs.get(this.dbname).remove(this.indexerKey), [4, this._store.remove(this.indexerKey)];
          case 1:
            return e5.sent(), delete os2[this.indexerKey], [2];
        }
      });
    });
  }, e4.prototype.addItem = function(e5) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        return this._addItem(e5) && this._transaction.requestWrite({ key: this.indexerKey, value: this._table }, { persistent: true }), [2];
      });
    });
  }, e4.prototype.removeItem = function(e5) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        return this._removeItem(e5) && this._transaction.requestWrite({ key: this.indexerKey, value: this._table }, { persistent: true }), [2];
      });
    });
  }, e4.prototype.clear = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        return this._table = [], this._transaction.requestWrite({ key: this.indexerKey, value: this._table }, { persistent: true }), [2];
      });
    });
  }, e4.prototype.commit = function() {
    this._origin = this._table, this._table = Pi(this._origin);
  }, e4.prototype.abort = function() {
    this._table = Pi(this._origin);
  }, e4;
}();
var cs = function() {
  return "undefined" != typeof document && "undefined" != typeof navigator && "ReactNative" !== navigator.product;
};
var ls = function() {
  var e4 = (/* @__PURE__ */ new Date()).getTime();
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(t7) {
    var n3 = (e4 + 16 * Math.random()) % 16 | 0;
    return e4 = Math.floor(e4 / 16), ("x" === t7 ? n3 : 3 & n3 | 8).toString(16);
  });
};
!function(e4) {
  e4[e4.PROCESSING = 0] = "PROCESSING", e4[e4.DONE = 1] = "DONE";
}($i || ($i = {})), function(e4) {
  e4.NEWNODE = "newnode", e4.REMOVENODE = "removenode", e4.CLAIM_HOST = "claimhost", e4.SYNC_HOST = "synchost", e4.REQUEST_LOCK = "requestlock", e4.ACQUIRE_LOCK = "acquirelock", e4.RELEASE_LOCK = "releaselock";
}(es2 || (es2 = {}));
var ds;
var hs2 = {};
var fs = function() {
  function e4(e5, t7) {
    void 0 === t7 && (t7 = {});
    var n3 = this;
    return this._state = $i.PROCESSING, this._queue = [], this._activationQueue = [], hs2[e5] && !t7.forceCreate || (this.nodeId = ls(), this.key = e5, cs() && (t7.startAsInvisible ? this.registerNode() : "visible" === document.visibilityState ? this.claimHost() : this.registerNode(), document.addEventListener("visibilitychange", function() {
      "visible" === document.visibilityState && n3.claimHost();
    }), window.addEventListener("message", function(e6) {
      var t8, r4, i4 = e6.data;
      if (null == i4 ? void 0 : i4.isNestDbMessage) {
        var s6 = i4.nodeId, a5 = i4.requestId, o3 = i4.key, u4 = i4.op, c4 = i4.data;
        if (s6 !== n3.nodeId && o3 === n3.key) switch (u4) {
          case es2.NEWNODE:
            n3._sendSync();
            break;
          case es2.CLAIM_HOST:
            n3._sendSync(), n3._hostId = s6;
            break;
          case es2.SYNC_HOST:
            if (!n3.isInSync) {
              n3._activationTimeout && clearTimeout(n3._activationTimeout);
              var l3 = c4, d5 = l3.currentItemRequestId, h4 = l3.queue, f4 = function(e7) {
                var t9 = n3._queue.findIndex(function(t10) {
                  return t10.requestId === e7.requestId;
                });
                t9 < 0 && n3._requestLock({ isNestDbMessage: true, nodeId: e7.nodeId, requestId: e7.requestId, key: n3.key, op: es2.REQUEST_LOCK, ts: e7.ts });
              };
              try {
                for (var p4 = o(h4), m5 = p4.next(); !m5.done; m5 = p4.next()) {
                  f4(m5.value);
                }
              } catch (e7) {
                t8 = { error: e7 };
              } finally {
                try {
                  m5 && !m5.done && (r4 = p4.return) && r4.call(p4);
                } finally {
                  if (t8) throw t8.error;
                }
              }
              n3._currentItem = n3._queue.find(function(e7) {
                return e7.requestId === d5;
              }), n3._completeSync();
            }
            break;
          case es2.REMOVENODE:
            n3._queue = n3._queue.filter(function(e7) {
              return e7.nodeId !== i4.nodeId;
            }), n3._currentItem && n3._currentItem.nodeId === i4.nodeId && (n3._currentItem = void 0, n3._acquire(n3._queue[0]));
            break;
          case es2.REQUEST_LOCK:
            n3._requestLock(i4);
            break;
          case es2.ACQUIRE_LOCK:
            var y6 = n3._queue.find(function(e7) {
              return e7.requestId === a5;
            });
            n3._acquire(y6);
            break;
          case es2.RELEASE_LOCK:
            n3._release(a5);
        }
      }
    }), window.addEventListener("beforeunload", function() {
      n3._send(es2.REMOVENODE);
    })), hs2[e5] = this), hs2[e5];
  }
  return Object.defineProperty(e4.prototype, "locked", { get: function() {
    return !!this._currentItem;
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "isHost", { get: function() {
    return this._hostId === this.nodeId;
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "isInSync", { get: function() {
    return this._state == $i.DONE;
  }, enumerable: false, configurable: true }), e4.prototype._send = function(e5, t7) {
    var n3;
    void 0 === t7 && (t7 = {});
    var r4 = { isNestDbMessage: true, nodeId: this.nodeId, requestId: null !== (n3 = null == t7 ? void 0 : t7.requestId) && void 0 !== n3 ? n3 : ls(), key: this.key, op: e5, data: t7.data, ts: Date.now() };
    return cs() && window.postMessage(r4, "*"), r4;
  }, e4.prototype._acquire = function(e5) {
    e5 ? (this._currentItem = e5, this._currentItem.onAcquired && this._currentItem.onAcquired(e5.requestId)) : this._currentItem = void 0;
  }, e4.prototype._release = function(e5) {
    if (this._currentItem && this._currentItem.requestId === e5) {
      var t7 = this._currentItem;
      this._currentItem = void 0, t7.nodeId === this.nodeId && this._send(es2.RELEASE_LOCK, { requestId: t7.requestId });
      var n3 = this._queue.findIndex(function(t8) {
        return t8.requestId === e5;
      });
      n3 > -1 && this._queue.splice(n3, 1), t7.onReleased && t7.onReleased(e5);
    }
  }, e4.prototype._requestLock = function(e5) {
    var t7 = this;
    return new Promise(function(n3) {
      var r4 = { nodeId: e5.nodeId, requestId: e5.requestId, ts: e5.ts, onAcquired: function(e6) {
        t7.isHost && t7._send(es2.ACQUIRE_LOCK, { requestId: e6 }), n3();
      }, onReleased: function() {
        t7._acquire(t7._queue[0]);
      } }, i4 = false;
      for (var s6 in t7._queue) if (t7._queue[s6].ts > r4.ts) {
        t7._queue.splice(parseInt(s6), 0, r4), i4 = true;
        break;
      }
      i4 || t7._queue.push(r4), t7._currentItem || t7._acquire(t7._queue[0]);
    });
  }, e4.prototype._sendSync = function() {
    var e5;
    this.isHost && this._send(es2.SYNC_HOST, { data: { currentItemRequestId: null === (e5 = this._currentItem) || void 0 === e5 ? void 0 : e5.requestId, queue: this._queue.map(function(e6) {
      return { nodeId: e6.nodeId, requestId: e6.requestId, ts: e6.ts };
    }) } });
  }, e4.prototype._waitUntilSyncCompleted = function() {
    return r(this, void 0, void 0, function() {
      var e5 = this;
      return s(this, function(t7) {
        return this.isHost && !this.isInSync ? [2, new Promise(function(t8) {
          e5._activationQueue.push(t8);
        })] : [2];
      });
    });
  }, e4.prototype._waitSync = function() {
    var e5 = this;
    this.isInSync || (this._activationTimeout = setTimeout(function() {
      e5._completeSync();
    }, 8));
  }, e4.prototype._completeSync = function() {
    this.isInSync || (this._state = $i.DONE, this._activationQueue.forEach(function(e5) {
      return e5();
    }), this._activationQueue = []);
  }, e4.prototype.registerNode = function() {
    this._send(es2.NEWNODE), this._waitSync();
  }, e4.prototype.claimHost = function() {
    this._hostId = this.nodeId, this._send(es2.CLAIM_HOST), this._waitSync();
  }, e4.prototype.lock = function() {
    return r(this, void 0, void 0, function() {
      var e5;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return [4, this._waitUntilSyncCompleted()];
          case 1:
            return t7.sent(), e5 = this._send(es2.REQUEST_LOCK), [4, this._requestLock(e5)];
          case 2:
            return t7.sent(), [2];
        }
      });
    });
  }, e4.prototype.unlock = function() {
    var e5;
    (null === (e5 = this._currentItem) || void 0 === e5 ? void 0 : e5.requestId) && this._release(this._currentItem.requestId);
  }, e4;
}();
var ps = function() {
  function e4(e5) {
    var t7 = e5.dbname, n3 = e5.collectionName, r4 = e5.keyName, i4 = e5.keyHash, s6 = e5.indexes, a5 = e5.store, o3 = this;
    this._state = Ni.INIT, this._indexers = [], this.dbname = t7, this.name = n3, this.keyName = r4, this.indexes = c([[r4]], a(s6.filter(function(e6) {
      return us.createKey(e6) !== o3.keyName;
    })), false), this._keyHash = i4, this._store = a5, this._mutex = new fs(function(e6, t8) {
      return "".concat(Wi(e6, t8), ".lock");
    }(t7, n3)), this._blobContainer = new Zi({ dbname: t7, collectionName: n3, store: a5 }), this._transaction = new is({ dbname: t7, collectionName: n3, store: a5 });
  }
  return e4.metadataOf = function(e5, t7, n3) {
    return r(this, void 0, void 0, function() {
      var r4;
      return s(this, function(i4) {
        switch (i4.label) {
          case 0:
            return r4 = Yi(e5, t7), [4, n3.get(r4)];
          case 1:
            return [2, i4.sent()];
        }
      });
    });
  }, Object.defineProperty(e4.prototype, "state", { get: function() {
    return this._state;
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "isReady", { get: function() {
    return this._state === Ni.READY;
  }, enumerable: false, configurable: true }), e4.prototype.init = function() {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, i4, s6, a5, o3, u4, c4, l3, d5, h4, f4, y6, _2 = this;
      return s(this, function(g4) {
        switch (g4.label) {
          case 0:
            return [4, this._mutex.lock()];
          case 1:
            g4.sent(), g4.label = 2;
          case 2:
            return g4.trys.push([2, 9, , 10]), t7 = Ui.get(this.dbname), [4, e4.metadataOf(this.dbname, this.name, this._store)];
          case 3:
            return n3 = g4.sent(), this._metadata = n3 || { keyName: this.keyName, blockLevel: 1, blockHashBase: t7.blockHashBase, blockHashMultiplier: t7.blockHashMultiplier, blockHashConstant: t7.blockHashConstant, indexes: this.indexes }, [4, this._transaction.init()];
          case 4:
            g4.sent(), this._blockManager = new as2({ dbname: this.dbname, collectionName: this.name, hashFunction: this._keyHash, metadata: this._metadata, transaction: this._transaction, store: this._store }), r4 = c([], a(this.indexes), false), i4 = [], s6 = r4.map(function(e5) {
              return us.createKey(e5);
            }), a5 = n3 ? n3.indexes.map(function(e5) {
              return us.createKey(e5);
            }) : [];
            try {
              for (o3 = o(a5), u4 = o3.next(); !u4.done; u4 = o3.next()) c4 = u4.value, s6.includes(c4) || i4.push(us.parseKey(c4));
            } catch (e5) {
              f4 = { error: e5 };
            } finally {
              try {
                u4 && !u4.done && (y6 = o3.return) && y6.call(o3);
              } finally {
                if (f4) throw f4.error;
              }
            }
            return (l3 = []).push.apply(l3, c([], a(r4.map(function(e5) {
              var t8 = new us({ dbname: _2.dbname, collectionName: _2.name, keyName: _2.keyName, fields: e5, transaction: _2._transaction, store: _2._store });
              return _2._indexers.push(t8), t8.ensure();
            })), false)), l3.push.apply(l3, c([], a(i4.map(function(e5) {
              return new us({ dbname: _2.dbname, collectionName: _2.name, keyName: _2.keyName, fields: e5, transaction: _2._transaction, store: _2._store }).drop();
            })), false)), [4, Promise.all(l3)];
          case 5:
            return g4.sent(), [4, this._transaction.commit()];
          case 6:
            return g4.sent(), s6.sort().join(",") === a5.sort().join(",") ? [3, 8] : (d5 = Yi(this.dbname, this.name), this._metadata.indexes = r4, [4, this._store.set({ key: d5, value: this._metadata })]);
          case 7:
            g4.sent(), g4.label = 8;
          case 8:
            return this._state = Ni.READY, this._mutex.unlock(), [3, 10];
          case 9:
            throw h4 = g4.sent(), this._mutex.unlock(), h4;
          case 10:
            return [2];
        }
      });
    });
  }, e4.prototype.close = function() {
    this._state = Ni.CLOSED;
  }, e4.prototype._hasPropertyOfKeyName = function(e5) {
    var t7 = e5[this.keyName];
    return "string" == typeof t7 && !!t7;
  }, e4.prototype._getIndexerBy = function(e5) {
    var t7, n3;
    void 0 === e5 && (e5 = null), e5 || (e5 = [this.keyName]);
    var r4 = us.createKey(e5);
    try {
      for (var i4 = o(this._indexers), s6 = i4.next(); !s6.done; s6 = i4.next()) {
        var a5 = s6.value;
        if (r4 === us.createKey(a5.fields)) return a5;
      }
    } catch (e6) {
      t7 = { error: e6 };
    } finally {
      try {
        s6 && !s6.done && (n3 = i4.return) && n3.call(i4);
      } finally {
        if (t7) throw t7.error;
      }
    }
    throw Ci.indexTableIsRequired;
  }, e4.prototype._upgradeBlockLevel = function() {
    return r(this, void 0, void 0, function() {
      var e5;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return e5 = Yi(this.dbname, this.name), this._metadata.blockLevel++, [4, this._store.set({ key: e5, value: this._metadata })];
          case 1:
            return t7.sent(), [2];
        }
      });
    });
  }, e4.prototype._requestInsert = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, i4, s6, a5;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return t7 = e5[this.keyName], [4, this._blockManager.getFromBlock(t7)];
          case 1:
            return o3.sent() ? [3, 13] : [4, this._blockManager.putToBlock(t7, e5)];
          case 2:
            return o3.sent() ? [3, 5] : [4, this._upgradeBlockLevel()];
          case 3:
            return o3.sent(), [4, this._blockManager.putToBlock(t7, e5)];
          case 4:
            o3.sent(), o3.label = 5;
          case 5:
            o3.trys.push([5, 10, 11, 12]), n3 = o(this._indexers), r4 = n3.next(), o3.label = 6;
          case 6:
            return r4.done ? [3, 9] : [4, r4.value.addItem(e5)];
          case 7:
            o3.sent(), o3.label = 8;
          case 8:
            return r4 = n3.next(), [3, 6];
          case 9:
            return [3, 12];
          case 10:
            return i4 = o3.sent(), s6 = { error: i4 }, [3, 12];
          case 11:
            try {
              r4 && !r4.done && (a5 = n3.return) && a5.call(n3);
            } finally {
              if (s6) throw s6.error;
            }
            return [7];
          case 12:
            return [3, 14];
          case 13:
            throw Ci.collectionInsertDuplicate;
          case 14:
            return [2];
        }
      });
    });
  }, e4.prototype._requestUpsert = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, i4, s6, a5, o3, u4, c4, l3, d5, h4, f4;
      return s(this, function(p4) {
        switch (p4.label) {
          case 0:
            return t7 = e5[this.keyName], [4, this._blockManager.getFromBlock(t7)];
          case 1:
            return (n3 = p4.sent()) ? [3, 13] : [4, this._blockManager.putToBlock(t7, e5)];
          case 2:
            return p4.sent() ? [3, 5] : [4, this._upgradeBlockLevel()];
          case 3:
            return p4.sent(), [4, this._blockManager.putToBlock(t7, e5)];
          case 4:
            p4.sent(), p4.label = 5;
          case 5:
            p4.trys.push([5, 10, 11, 12]), r4 = o(this._indexers), i4 = r4.next(), p4.label = 6;
          case 6:
            return i4.done ? [3, 9] : [4, (u4 = i4.value).addItem(e5)];
          case 7:
            p4.sent(), p4.label = 8;
          case 8:
            return i4 = r4.next(), [3, 6];
          case 9:
            return [3, 12];
          case 10:
            return s6 = p4.sent(), l3 = { error: s6 }, [3, 12];
          case 11:
            try {
              i4 && !i4.done && (d5 = r4.return) && d5.call(r4);
            } finally {
              if (l3) throw l3.error;
            }
            return [7];
          case 12:
            return [3, 23];
          case 13:
            return [4, this._blockManager.putToBlock(t7, e5)];
          case 14:
            p4.sent(), p4.label = 15;
          case 15:
            p4.trys.push([15, 21, 22, 23]), a5 = o(this._indexers), o3 = a5.next(), p4.label = 16;
          case 16:
            return o3.done ? [3, 20] : 0 === (u4 = o3.value).diff(u4.getColumnValues(n3), u4.getColumnValues(e5)) ? [3, 19] : [4, u4.removeItem(n3)];
          case 17:
            return p4.sent(), [4, u4.addItem(e5)];
          case 18:
            p4.sent(), p4.label = 19;
          case 19:
            return o3 = a5.next(), [3, 16];
          case 20:
            return [3, 23];
          case 21:
            return c4 = p4.sent(), h4 = { error: c4 }, [3, 23];
          case 22:
            try {
              o3 && !o3.done && (f4 = a5.return) && f4.call(a5);
            } finally {
              if (h4) throw h4.error;
            }
            return [7];
          case 23:
            return [2];
        }
      });
    });
  }, e4.prototype._requestUpdate = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, i4, s6, a5, o3, u4;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return t7 = e5[this.keyName], [4, this._blockManager.getFromBlock(t7)];
          case 1:
            return (n3 = c4.sent()) ? [4, this._blockManager.putToBlock(t7, e5)] : [3, 11];
          case 2:
            c4.sent(), c4.label = 3;
          case 3:
            c4.trys.push([3, 9, 10, 11]), r4 = o(this._indexers), i4 = r4.next(), c4.label = 4;
          case 4:
            return i4.done ? [3, 8] : 0 === (s6 = i4.value).diff(s6.getColumnValues(n3), s6.getColumnValues(e5)) ? [3, 7] : [4, s6.removeItem(n3)];
          case 5:
            return c4.sent(), [4, s6.addItem(e5)];
          case 6:
            c4.sent(), c4.label = 7;
          case 7:
            return i4 = r4.next(), [3, 4];
          case 8:
            return [3, 11];
          case 9:
            return a5 = c4.sent(), o3 = { error: a5 }, [3, 11];
          case 10:
            try {
              i4 && !i4.done && (u4 = r4.return) && u4.call(r4);
            } finally {
              if (o3) throw o3.error;
            }
            return [7];
          case 11:
            return [2];
        }
      });
    });
  }, e4.prototype._requestRemove = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, i4, s6, a5;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return [4, this._blockManager.getFromBlock(e5)];
          case 1:
            return (t7 = o3.sent()) ? [4, this._blockManager.removeFromBlock(e5)] : [3, 10];
          case 2:
            o3.sent(), o3.label = 3;
          case 3:
            o3.trys.push([3, 8, 9, 10]), n3 = o(this._indexers), r4 = n3.next(), o3.label = 4;
          case 4:
            return r4.done ? [3, 7] : [4, r4.value.removeItem(t7)];
          case 5:
            o3.sent(), o3.label = 6;
          case 6:
            return r4 = n3.next(), [3, 4];
          case 7:
            return [3, 10];
          case 8:
            return i4 = o3.sent(), s6 = { error: i4 }, [3, 10];
          case 9:
            try {
              r4 && !r4.done && (a5 = n3.return) && a5.call(n3);
            } finally {
              if (s6) throw s6.error;
            }
            return [7];
          case 10:
            return [2];
        }
      });
    });
  }, e4.prototype._requestClear = function() {
    return r(this, void 0, void 0, function() {
      var e5, t7, n3, r4, i4;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return [4, this._blockManager.clearAllBlocks()];
          case 1:
            s6.sent(), s6.label = 2;
          case 2:
            s6.trys.push([2, 7, 8, 9]), e5 = o(this._indexers), t7 = e5.next(), s6.label = 3;
          case 3:
            return t7.done ? [3, 6] : [4, t7.value.clear()];
          case 4:
            s6.sent(), s6.label = 5;
          case 5:
            return t7 = e5.next(), [3, 3];
          case 6:
            return [3, 9];
          case 7:
            return n3 = s6.sent(), r4 = { error: n3 }, [3, 9];
          case 8:
            try {
              t7 && !t7.done && (i4 = e5.return) && i4.call(e5);
            } finally {
              if (r4) throw r4.error;
            }
            return [7];
          case 9:
            return [2];
        }
      });
    });
  }, e4.prototype.getByKey = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7, n3;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 6];
          case 1:
            r4.sent(), r4.label = 2;
          case 2:
            return r4.trys.push([2, 4, , 5]), [4, this._blockManager.getFromBlock(e5)];
          case 3:
            return t7 = r4.sent(), this._mutex.unlock(), [2, Pi(t7)];
          case 4:
            throw n3 = r4.sent(), this._mutex.unlock(), n3;
          case 5:
            return [3, 7];
          case 6:
            throw Ci.collectionNotReady;
          case 7:
            return [2];
        }
      });
    });
  }, e4.prototype.query = function(e5) {
    if (void 0 === e5 && (e5 = {}), this.isReady) return new Vi({ condition: e5.where, mutex: this._mutex, blockManager: this._blockManager, indexer: this._getIndexerBy(e5.index), backward: !!e5.backward });
    throw Ci.collectionNotReady;
  }, e4.prototype.insertOne = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 8];
          case 1:
            n3.sent(), n3.label = 2;
          case 2:
            if (n3.trys.push([2, 5, , 7]), !this._hasPropertyOfKeyName(e5)) throw Ci.collectionKeyNotGiven;
            return [4, this._requestInsert(Pi(e5))];
          case 3:
            return n3.sent(), [4, this._transaction.commit()];
          case 4:
            return n3.sent(), this._mutex.unlock(), [2, e5];
          case 5:
            return t7 = n3.sent(), [4, this._transaction.clear()];
          case 6:
            throw n3.sent(), this._mutex.unlock(), t7;
          case 7:
            return [3, 9];
          case 8:
            throw Ci.collectionNotReady;
          case 9:
            return [2];
        }
      });
    });
  }, e4.prototype.insertMany = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, i4, s6, a5, o3, u4 = this;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 15];
          case 1:
            c4.sent(), c4.label = 2;
          case 2:
            if (c4.trys.push([2, 12, , 14]), e5.some(function(e6) {
              return !u4._hasPropertyOfKeyName(e6);
            })) throw Ci.collectionKeyNotGiven;
            c4.label = 3;
          case 3:
            c4.trys.push([3, 8, 9, 10]), t7 = o(e5), n3 = t7.next(), c4.label = 4;
          case 4:
            return n3.done ? [3, 7] : (r4 = n3.value, [4, this._requestInsert(Pi(r4))]);
          case 5:
            c4.sent(), c4.label = 6;
          case 6:
            return n3 = t7.next(), [3, 4];
          case 7:
            return [3, 10];
          case 8:
            return i4 = c4.sent(), a5 = { error: i4 }, [3, 10];
          case 9:
            try {
              n3 && !n3.done && (o3 = t7.return) && o3.call(t7);
            } finally {
              if (a5) throw a5.error;
            }
            return [7];
          case 10:
            return [4, this._transaction.commit()];
          case 11:
            return c4.sent(), this._mutex.unlock(), [2, e5];
          case 12:
            return s6 = c4.sent(), [4, this._transaction.clear()];
          case 13:
            throw c4.sent(), this._mutex.unlock(), s6;
          case 14:
            return [3, 16];
          case 15:
            throw Ci.collectionNotReady;
          case 16:
            return [2];
        }
      });
    });
  }, e4.prototype.upsertOne = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 8];
          case 1:
            n3.sent(), n3.label = 2;
          case 2:
            if (n3.trys.push([2, 5, , 7]), !this._hasPropertyOfKeyName(e5)) throw Ci.collectionKeyNotGiven;
            return [4, this._requestUpsert(Pi(e5))];
          case 3:
            return n3.sent(), [4, this._transaction.commit()];
          case 4:
            return n3.sent(), this._mutex.unlock(), [2, e5];
          case 5:
            return t7 = n3.sent(), [4, this._transaction.clear()];
          case 6:
            throw n3.sent(), this._mutex.unlock(), t7;
          case 7:
            return [3, 9];
          case 8:
            throw Ci.collectionNotReady;
          case 9:
            return [2];
        }
      });
    });
  }, e4.prototype.upsertMany = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, i4, s6, a5, o3, u4 = this;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 15];
          case 1:
            c4.sent(), c4.label = 2;
          case 2:
            if (c4.trys.push([2, 12, , 14]), e5.some(function(e6) {
              return !u4._hasPropertyOfKeyName(e6);
            })) throw Ci.collectionKeyNotGiven;
            c4.label = 3;
          case 3:
            c4.trys.push([3, 8, 9, 10]), t7 = o(e5), n3 = t7.next(), c4.label = 4;
          case 4:
            return n3.done ? [3, 7] : (r4 = n3.value, [4, this._requestUpsert(Pi(r4))]);
          case 5:
            c4.sent(), c4.label = 6;
          case 6:
            return n3 = t7.next(), [3, 4];
          case 7:
            return [3, 10];
          case 8:
            return i4 = c4.sent(), a5 = { error: i4 }, [3, 10];
          case 9:
            try {
              n3 && !n3.done && (o3 = t7.return) && o3.call(t7);
            } finally {
              if (a5) throw a5.error;
            }
            return [7];
          case 10:
            return [4, this._transaction.commit()];
          case 11:
            return c4.sent(), this._mutex.unlock(), [2, e5];
          case 12:
            return s6 = c4.sent(), [4, this._transaction.clear()];
          case 13:
            throw c4.sent(), this._mutex.unlock(), s6;
          case 14:
            return [3, 16];
          case 15:
            throw Ci.collectionNotReady;
          case 16:
            return [2];
        }
      });
    });
  }, e4.prototype.update = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 8];
          case 1:
            n3.sent(), n3.label = 2;
          case 2:
            if (n3.trys.push([2, 5, , 7]), !this._hasPropertyOfKeyName(e5)) throw Ci.collectionKeyNotGiven;
            return [4, this._requestUpdate(Pi(e5))];
          case 3:
            return n3.sent(), [4, this._transaction.commit()];
          case 4:
            return n3.sent(), this._mutex.unlock(), [2, e5];
          case 5:
            return t7 = n3.sent(), [4, this._transaction.clear()];
          case 6:
            throw n3.sent(), this._mutex.unlock(), t7;
          case 7:
            return [3, 9];
          case 8:
            throw Ci.collectionNotReady;
          case 9:
            return [2];
        }
      });
    });
  }, e4.prototype.updateIf = function(e5, t7) {
    return r(this, void 0, void 0, function() {
      var n3, r4, i4, s6, a5, o3, u4, c4, l3, d5, h4, f4, p4, m5, y6 = this;
      return s(this, function(_2) {
        switch (_2.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 16];
          case 1:
            _2.sent(), _2.label = 2;
          case 2:
            return _2.trys.push([2, 13, , 15]), n3 = e5.where, r4 = void 0 === n3 ? {} : n3, i4 = e5.index, s6 = void 0 === i4 ? null : i4, a5 = e5.backward, o3 = void 0 !== a5 && a5, u4 = [], [4, new Gi({ condition: r4, blockManager: this._blockManager, backward: o3, indexer: this._getIndexerBy(s6) }).each(function(e6) {
              return r(y6, void 0, void 0, function() {
                var n4, i5;
                return s(this, function(s7) {
                  if (e6.error) throw e6.stop(), e6.error;
                  if (e6.hasNext) {
                    if (n4 = e6.nextValue, Di(r4, n4) && t7.set) {
                      if ("function" != typeof t7.set) for (i5 in t7.set) n4[i5] = t7.set[i5];
                      else t7.set(n4);
                      u4.push(n4);
                    }
                    e6.next();
                  } else e6.stop();
                  return [2];
                });
              });
            })];
          case 3:
            _2.sent(), _2.label = 4;
          case 4:
            _2.trys.push([4, 9, 10, 11]), c4 = o(u4), l3 = c4.next(), _2.label = 5;
          case 5:
            return l3.done ? [3, 8] : (d5 = l3.value, [4, this._requestUpdate(Pi(d5))]);
          case 6:
            _2.sent(), _2.label = 7;
          case 7:
            return l3 = c4.next(), [3, 5];
          case 8:
            return [3, 11];
          case 9:
            return h4 = _2.sent(), p4 = { error: h4 }, [3, 11];
          case 10:
            try {
              l3 && !l3.done && (m5 = c4.return) && m5.call(c4);
            } finally {
              if (p4) throw p4.error;
            }
            return [7];
          case 11:
            return [4, this._transaction.commit()];
          case 12:
            return _2.sent(), this._mutex.unlock(), [2, u4];
          case 13:
            return f4 = _2.sent(), [4, this._transaction.clear()];
          case 14:
            throw _2.sent(), this._mutex.unlock(), f4;
          case 15:
            return [3, 17];
          case 16:
            throw this._transaction.clear(), Ci.collectionNotReady;
          case 17:
            return [2];
        }
      });
    });
  }, e4.prototype.remove = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 8];
          case 1:
            n3.sent(), n3.label = 2;
          case 2:
            return n3.trys.push([2, 5, , 7]), [4, this._requestRemove(e5)];
          case 3:
            return n3.sent(), [4, this._transaction.commit()];
          case 4:
            return n3.sent(), this._mutex.unlock(), [3, 7];
          case 5:
            return t7 = n3.sent(), [4, this._transaction.clear()];
          case 6:
            throw n3.sent(), this._mutex.unlock(), t7;
          case 7:
            return [3, 9];
          case 8:
            throw Ci.collectionNotReady;
          case 9:
            return [2];
        }
      });
    });
  }, e4.prototype.removeIf = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, i4, s6, a5, o3, u4, c4, l3, d5, h4, f4, p4, m5 = this;
      return s(this, function(y6) {
        switch (y6.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 15];
          case 1:
            y6.sent(), y6.label = 2;
          case 2:
            return y6.trys.push([2, 13, , 14]), t7 = e5.where, n3 = void 0 === t7 ? {} : t7, r4 = e5.index, i4 = void 0 === r4 ? null : r4, s6 = e5.backward, a5 = void 0 !== s6 && s6, o3 = [], [4, new Gi({ condition: n3, blockManager: this._blockManager, backward: a5, indexer: this._getIndexerBy(i4) }).each(function(e6) {
              return r(m5, void 0, void 0, function() {
                var t8, r5;
                return s(this, function(i5) {
                  if (e6.error) throw e6.stop(), e6.error;
                  return e6.hasNext ? (t8 = e6.nextValue, Di(n3, t8) && (r5 = t8[this.keyName], o3.push(r5)), e6.next()) : e6.stop(), [2];
                });
              });
            })];
          case 3:
            y6.sent(), y6.label = 4;
          case 4:
            y6.trys.push([4, 9, 10, 11]), u4 = o(o3), c4 = u4.next(), y6.label = 5;
          case 5:
            return c4.done ? [3, 8] : (l3 = c4.value, [4, this._requestRemove(l3)]);
          case 6:
            y6.sent(), y6.label = 7;
          case 7:
            return c4 = u4.next(), [3, 5];
          case 8:
            return [3, 11];
          case 9:
            return d5 = y6.sent(), f4 = { error: d5 }, [3, 11];
          case 10:
            try {
              c4 && !c4.done && (p4 = u4.return) && p4.call(u4);
            } finally {
              if (f4) throw f4.error;
            }
            return [7];
          case 11:
            return [4, this._transaction.commit()];
          case 12:
            return y6.sent(), this._mutex.unlock(), [2, o3];
          case 13:
            throw h4 = y6.sent(), this._mutex.unlock(), h4;
          case 14:
            return [3, 16];
          case 15:
            throw this._transaction.clear(), Ci.collectionNotReady;
          case 16:
            return [2];
        }
      });
    });
  }, e4.prototype.clear = function() {
    return r(this, void 0, void 0, function() {
      var e5;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return this.isReady ? [4, this._mutex.lock()] : [3, 8];
          case 1:
            t7.sent(), t7.label = 2;
          case 2:
            return t7.trys.push([2, 5, , 7]), [4, this._requestClear()];
          case 3:
            return t7.sent(), [4, this._transaction.commit()];
          case 4:
            return t7.sent(), this._mutex.unlock(), [3, 7];
          case 5:
            return e5 = t7.sent(), [4, this._transaction.clear()];
          case 6:
            throw t7.sent(), this._mutex.unlock(), e5;
          case 7:
            return [3, 9];
          case 8:
            throw Ci.collectionNotReady;
          case 9:
            return [2];
        }
      });
    });
  }, e4.prototype.getBlob = function(e5) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return [4, this._blobContainer.get(e5)];
          case 1:
            return [2, t7.sent()];
        }
      });
    });
  }, e4.prototype.saveBlob = function(e5, t7) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._blobContainer.save(e5, t7)];
          case 1:
            return [2, n3.sent()];
        }
      });
    });
  }, e4.prototype.removeBlob = function(e5) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return [4, this._blobContainer.remove(e5)];
          case 1:
            return t7.sent(), [2];
        }
      });
    });
  }, e4.prototype.removeAllBlobs = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        switch (e5.label) {
          case 0:
            return [4, this._blobContainer.clear()];
          case 1:
            return e5.sent(), [2];
        }
      });
    });
  }, e4;
}();
var ms = "[NESTDB]";
var vs = true;
var ys = function() {
  function e4() {
  }
  return e4.off = function() {
    vs = false;
  }, e4.log = function() {
    for (var e5 = [], t7 = 0; t7 < arguments.length; t7++) e5[t7] = arguments[t7];
    vs && console.log.apply(console, c(["".concat(ms, "[LOG]")], a(e5), false));
  }, e4.warning = function() {
    for (var e5 = [], t7 = 0; t7 < arguments.length; t7++) e5[t7] = arguments[t7];
    vs && console.warn.apply(console, c(["".concat(ms, "[WARNING]")], a(e5), false));
  }, e4.error = function() {
    for (var e5 = [], t7 = 0; t7 < arguments.length; t7++) e5[t7] = arguments[t7];
    vs && console.error.apply(console, c(["".concat(ms, "[ERROR]")], a(e5), false));
  }, e4;
}();
var _s2 = [{}, { a: 700400, n: "error" }];
var gs = function() {
  function e4(e5) {
    var t7, n3, r4;
    this.encryption = null !== (t7 = e5.encryption) && void 0 !== t7 ? t7 : L, this.itemSizeLimit = null !== (n3 = e5.itemSizeLimit) && void 0 !== n3 ? n3 : 4194304, this.metadataBuffer = null !== (r4 = e5.metadataBuffer) && void 0 !== r4 ? r4 : 256;
  }
  return Object.defineProperty(e4.prototype, "_encryptionCheckKey", { get: function() {
    return "".concat(this.dbname, ".encrypt");
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "_reservedKeys", { get: function() {
    return [this._encryptionCheckKey];
  }, enumerable: false, configurable: true }), e4.prototype._getRawKey = function(e5, t7) {
    return void 0 === t7 && (t7 = ""), "".concat(e5).concat(t7);
  }, e4.prototype._generateShardPostfixArray = function(e5) {
    return void 0 === e5 && (e5 = 1), c([], a(Array(e5).keys()), false);
  }, e4.prototype._shardify = function(e5) {
    var t7 = this, n3 = e5.key, r4 = e5.value, i4 = JSON.stringify(this.encryption.encrypt(r4)), s6 = Math.ceil(i4.length / this.adjustedItemSizeLimit);
    return this._generateShardPostfixArray(s6).map(function(e6) {
      var r5 = { key: t7._getRawKey(n3, ".".concat(e6)), data: i4.substring(e6 * t7.adjustedItemSizeLimit, (e6 + 1) * t7.adjustedItemSizeLimit) };
      return 0 === e6 && (r5.metadata = { shards: s6 }), r5;
    });
  }, e4.prototype._resetIfEncryptionChanged = function() {
    return r(this, void 0, void 0, function() {
      var e5, t7, n3, r4, i4, s6, a5, o3, u4, c4 = this;
      return s(this, function(l3) {
        switch (l3.label) {
          case 0:
            return [4, this.get(this._encryptionCheckKey)];
          case 1:
            if (e5 = l3.sent(), t7 = { encrypted: _s2.map(function(e6) {
              var t8;
              return null === (t8 = c4.encryption) || void 0 === t8 ? void 0 : t8.encrypt(e6);
            }) }, !e5) return [3, 8];
            if (!e5.encrypted || !Array.isArray(e5.encrypted)) return [3, 6];
            for (i4 in n3 = e5.encrypted, r4 = [], n3) r4.push(i4);
            s6 = 0, l3.label = 2;
          case 2:
            return s6 < r4.length ? (i4 = r4[s6]) in n3 ? (a5 = i4, o3 = JSON.stringify(e5.encrypted[a5]), u4 = JSON.stringify(t7.encrypted[a5]), o3 === u4 ? [3, 4] : (ys.warning("Encryption algorithm has changed. Stored data would be cleared."), [4, this.clear()])) : [3, 4] : [3, 5];
          case 3:
            return l3.sent(), [3, 5];
          case 4:
            return s6++, [3, 2];
          case 5:
            return [3, 8];
          case 6:
            return [4, this.clear()];
          case 7:
            l3.sent(), l3.label = 8;
          case 8:
            return [4, this.set({ key: this._encryptionCheckKey, value: t7 })];
          case 9:
            return l3.sent(), [2];
        }
      });
    });
  }, Object.defineProperty(e4.prototype, "adjustedItemSizeLimit", { get: function() {
    return Math.max(this.itemSizeLimit - this.metadataBuffer, 4);
  }, enumerable: false, configurable: true }), e4.prototype.usage = function() {
    return r(this, void 0, void 0, function() {
      var e5, t7, n3, r4, i4, s6, a5, o3, u4;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return e5 = 0, [4, this._getAllRawKeys()];
          case 1:
            t7 = c4.sent(), c4.label = 2;
          case 2:
            c4.trys.push([2, 7, 8, 9]), n3 = o(t7), r4 = n3.next(), c4.label = 3;
          case 3:
            return r4.done ? [3, 6] : (i4 = r4.value, [4, this._getRaw(i4)]);
          case 4:
            (s6 = c4.sent()) && (e5 += JSON.stringify(s6).length), c4.label = 5;
          case 5:
            return r4 = n3.next(), [3, 3];
          case 6:
            return [3, 9];
          case 7:
            return a5 = c4.sent(), o3 = { error: a5 }, [3, 9];
          case 8:
            try {
              r4 && !r4.done && (u4 = n3.return) && u4.call(n3);
            } finally {
              if (o3) throw o3.error;
            }
            return [7];
          case 9:
            return [2, e5];
        }
      });
    });
  }, e4.prototype.getAllKeys = function() {
    return r(this, void 0, void 0, function() {
      var e5 = this;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return [4, this._getAllRawKeys()];
          case 1:
            return [2, t7.sent().filter(function(e6) {
              return e6.endsWith(".0");
            }).map(function(e6) {
              return e6.replace(/\.0$/, "");
            }).filter(function(t8) {
              return !e5._reservedKeys.includes(t8);
            })];
        }
      });
    });
  }, e4.prototype.get = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, i4, s6, a5, o3 = this;
      return s(this, function(u4) {
        switch (u4.label) {
          case 0:
            return t7 = this._getRawKey(e5, ".0"), [4, this._getRaw(t7)];
          case 1:
            if (!(n3 = u4.sent())) return [3, 7];
            u4.label = 2;
          case 2:
            return u4.trys.push([2, 6, , 7]), r4 = n3.data, (null == (i4 = n3.metadata) ? void 0 : i4.shards) && i4.shards > 1 ? [4, Promise.all(this._generateShardPostfixArray(null == i4 ? void 0 : i4.shards).map(function(t8) {
              return r(o3, void 0, void 0, function() {
                var n4, i5;
                return s(this, function(s7) {
                  switch (s7.label) {
                    case 0:
                      return t8 > 0 ? (n4 = this._getRawKey(e5, ".".concat(t8)), [4, this._getRaw(n4)]) : [3, 2];
                    case 1:
                      if (!(i5 = s7.sent())) throw Ci.storeBrokenIntegrity;
                      return [2, i5.data];
                    case 2:
                      return [2, r4];
                  }
                });
              });
            }))] : [3, 4];
          case 3:
            return a5 = u4.sent(), [3, 5];
          case 4:
            a5 = [r4], u4.label = 5;
          case 5:
            return s6 = a5, [2, this.encryption.decrypt(JSON.parse(s6.join("")))];
          case 6:
            return u4.sent(), [2, null];
          case 7:
            return [2, null];
        }
      });
    });
  }, e4.prototype.set = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return t7 = this._shardify(e5), [4, this._setRaw(t7)];
          case 1:
            return n3.sent(), [2, n({}, e5.value)];
        }
      });
    });
  }, e4.prototype.setMany = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7, n3 = this;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return t7 = [], [4, this._setRaw(t7.concat.apply(t7, c([], a(e5.map(function(e6) {
              return n3._shardify(e6);
            })), false)))];
          case 1:
            return r4.sent(), [2, e5.map(function(e6) {
              return e6.value;
            })];
        }
      });
    });
  }, e4.prototype.remove = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, i4, s6, a5 = this;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return t7 = this._getRawKey(e5, ".0"), [4, this._getRaw(t7)];
          case 1:
            return (n3 = o3.sent()) ? (r4 = n3.metadata, i4 = this._generateShardPostfixArray(null == r4 ? void 0 : r4.shards).map(function(t8) {
              return a5._getRawKey(e5, ".".concat(t8));
            }), [4, this._removeRaw(i4)]) : [3, 3];
          case 2:
            return o3.sent(), null == (s6 = rs.get(this.dbname)) || s6.remove(e5), [2, true];
          case 3:
            return [2, false];
        }
      });
    });
  }, e4.prototype.removeMany = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, i4, s6, a5, o3, u4, c4, l3, d5 = this;
      return s(this, function(h4) {
        switch (h4.label) {
          case 0:
            t7 = rs.get(this.dbname), n3 = [], r4 = function(e6) {
              var r5, s7, a6;
              return s(this, function(o4) {
                switch (o4.label) {
                  case 0:
                    return r5 = i4._getRawKey(e6, ".0"), [4, i4._getRaw(r5)];
                  case 1:
                    return (s7 = o4.sent()) && (a6 = s7.metadata, n3.push.apply(n3, c([], a(i4._generateShardPostfixArray(null == a6 ? void 0 : a6.shards).map(function(t8) {
                      return d5._getRawKey(e6, ".".concat(t8));
                    })), false))), null == t7 || t7.remove(e6), [2];
                }
              });
            }, i4 = this, h4.label = 1;
          case 1:
            h4.trys.push([1, 6, 7, 8]), s6 = o(e5), a5 = s6.next(), h4.label = 2;
          case 2:
            return a5.done ? [3, 5] : (o3 = a5.value, [5, r4(o3)]);
          case 3:
            h4.sent(), h4.label = 4;
          case 4:
            return a5 = s6.next(), [3, 2];
          case 5:
            return [3, 8];
          case 6:
            return u4 = h4.sent(), c4 = { error: u4 }, [3, 8];
          case 7:
            try {
              a5 && !a5.done && (l3 = s6.return) && l3.call(s6);
            } finally {
              if (c4) throw c4.error;
            }
            return [7];
          case 8:
            return n3.length > 0 ? [4, this._removeRaw(n3)] : [3, 10];
          case 9:
            h4.sent(), h4.label = 10;
          case 10:
            return [2, e5];
        }
      });
    });
  }, e4.prototype.clear = function() {
    return r(this, void 0, void 0, function() {
      var e5;
      return s(this, function(t7) {
        return null == (e5 = rs.get(this.dbname)) || e5.clearForDatabase(this.dbname), [2];
      });
    });
  }, e4;
}();
var bs = {};
var Is = function(e4) {
  function t7(t8) {
    void 0 === t8 && (t8 = {});
    var n3, r4 = this;
    r4 = e4.call(this, n(n({}, t8), { itemSizeLimit: null !== (n3 = t8.itemSizeLimit) && void 0 !== n3 ? n3 : 4194304 })) || this;
    var i4 = t8.delay, s6 = void 0 === i4 ? 1 : i4;
    return r4.delay = s6, r4.observer = {}, r4;
  }
  return t(t7, e4), Object.defineProperty(t7.prototype, "rawData", { get: function() {
    return bs[this.dbname];
  }, set: function(e5) {
    bs[this.dbname] = e5;
  }, enumerable: false, configurable: true }), t7.prototype._getAllRawKeys = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        if (bs[this.dbname]) return [2, Object.keys(bs[this.dbname])];
        throw Ci.storeNotAvailable;
      });
    });
  }, t7.prototype._getRaw = function(e5) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t8) {
        switch (t8.label) {
          case 0:
            return bs[this.dbname] ? [4, xi(this.delay)] : [3, 2];
          case 1:
            return t8.sent(), [2, bs[this.dbname][e5] ? n({ key: e5 }, bs[this.dbname][e5]) : null];
          case 2:
            throw Ci.storeNotAvailable;
        }
      });
    });
  }, t7.prototype._setRaw = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8, n3, r4, i4, s6, a5, o3, u4;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return bs[this.dbname] ? [4, xi(this.delay)] : [3, 2];
          case 1:
            c4.sent();
            try {
              for (t8 = o(e5), n3 = t8.next(); !n3.done; n3 = t8.next()) r4 = n3.value, i4 = r4.key, s6 = r4.data, a5 = r4.metadata, bs[this.dbname][i4] = Object.freeze({ data: s6, metadata: a5 });
            } catch (e6) {
              o3 = { error: e6 };
            } finally {
              try {
                n3 && !n3.done && (u4 = t8.return) && u4.call(t8);
              } finally {
                if (o3) throw o3.error;
              }
            }
            return [3, 3];
          case 2:
            throw Ci.storeNotAvailable;
          case 3:
            return [2];
        }
      });
    });
  }, t7.prototype._removeRaw = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8, n3, r4, i4, s6;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return bs[this.dbname] ? [4, xi(this.delay)] : [3, 2];
          case 1:
            a5.sent();
            try {
              for (t8 = o(e5), n3 = t8.next(); !n3.done; n3 = t8.next()) r4 = n3.value, bs[this.dbname][r4] && delete bs[this.dbname][r4];
            } catch (e6) {
              i4 = { error: e6 };
            } finally {
              try {
                n3 && !n3.done && (s6 = t8.return) && s6.call(t8);
              } finally {
                if (i4) throw i4.error;
              }
            }
            return [3, 3];
          case 2:
            throw Ci.storeNotAvailable;
          case 3:
            return [2];
        }
      });
    });
  }, t7.prototype.observe = function(e5, t8, n3) {
    var r4 = this;
    this.observer[e5] || (this.observer[e5] = {}), t8.forEach(function(t9) {
      return r4.observer[e5][t9] = n3;
    });
  }, t7.prototype.checkAvailability = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        return [2];
      });
    });
  }, t7.prototype.init = function(e5) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t8) {
        switch (t8.label) {
          case 0:
            return this.dbname = e5, bs[this.dbname] || (bs[this.dbname] = {}), [4, this._resetIfEncryptionChanged()];
          case 1:
            return t8.sent(), [2];
        }
      });
    });
  }, t7.prototype.set = function(t8) {
    return r(this, void 0, void 0, function() {
      var n3, r4;
      return s(this, function(i4) {
        if ((n3 = this.observer[t8.key]) && "function" == typeof n3.set && (r4 = n3.set())) throw r4;
        return [2, e4.prototype.set.call(this, t8)];
      });
    });
  }, t7.prototype.setMany = function(t8) {
    return r(this, void 0, void 0, function() {
      var n3, r4, i4, s6, a5, o3, u4;
      return s(this, function(c4) {
        try {
          for (n3 = o(t8), r4 = n3.next(); !r4.done; r4 = n3.next()) if (i4 = r4.value, (s6 = this.observer[i4.key]) && "function" == typeof s6.set && (a5 = s6.set())) throw a5;
        } catch (e5) {
          o3 = { error: e5 };
        } finally {
          try {
            r4 && !r4.done && (u4 = n3.return) && u4.call(n3);
          } finally {
            if (o3) throw o3.error;
          }
        }
        return [2, e4.prototype.setMany.call(this, t8)];
      });
    });
  }, t7.prototype.clear = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(t8) {
        switch (t8.label) {
          case 0:
            return [4, e4.prototype.clear.call(this)];
          case 1:
            return t8.sent(), [4, xi(this.delay)];
          case 2:
            return t8.sent(), bs[this.dbname] = {}, [2];
        }
      });
    });
  }, t7;
}(gs);
var Es = "NestDBStore";
!function(e4) {
  e4[e4.UNINITIALIZED = 0] = "UNINITIALIZED", e4[e4.OPENING = 1] = "OPENING", e4[e4.OPEN = 2] = "OPEN", e4[e4.CLOSED = 3] = "CLOSED";
}(ds || (ds = {}));
var Ts;
var ws = function(e4) {
  function t7(t8) {
    void 0 === t8 && (t8 = {});
    var n3, r4 = this;
    return (r4 = e4.call(this, n(n({}, t8), { itemSizeLimit: null !== (n3 = t8.itemSizeLimit) && void 0 !== n3 ? n3 : 104857600 })) || this)._storeName = Es, r4._state = ds.UNINITIALIZED, r4._openJobQueue = [], r4._window = "undefined" != typeof window ? window : void 0, r4._indexedDb = r4._window ? r4._window.indexedDB || r4._window.mozIndexedDB || r4._window.webkitIndexedDB || r4._window.msIndexedDB : void 0, r4;
  }
  return t(t7, e4), Object.defineProperty(t7.prototype, "state", { get: function() {
    return this._state;
  }, enumerable: false, configurable: true }), t7.prototype.isTransactionInactiveError = function(e5) {
    return e5 instanceof Error && e5.message.includes("The transaction is inactive");
  }, t7.prototype._putToObjectStore = function(e5, t8) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        return [2, new Promise(function(n4, r4) {
          var i4 = e5.put(t8);
          i4.addEventListener("success", function(e6) {
            n4(e6.target.result);
          }), i4.addEventListener("error", function() {
            r4("Failed to write.");
          });
        })];
      });
    });
  }, t7.prototype._deleteFromObjectStore = function(e5, t8) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        return [2, new Promise(function(n4, r4) {
          var i4 = e5.delete(t8);
          i4.addEventListener("success", function() {
            return n4(t8);
          }), i4.addEventListener("error", function(e6) {
            return r4(e6.target.error);
          });
        })];
      });
    });
  }, t7.prototype._openDatabase = function(e5) {
    var t8 = this;
    return new Promise(function(n3, r4) {
      if (t8._indexedDb) {
        t8._state = ds.OPENING;
        var i4 = t8._indexedDb.open(e5);
        i4.addEventListener("upgradeneeded", function(e6) {
          e6.target.result.createObjectStore(Es, { keyPath: "key" });
        }), i4.addEventListener("success", function(r5) {
          t8._state = ds.OPEN, t8._database = r5.target.result, t8._openJobQueue.forEach(function(e6) {
            return e6();
          }), t8._openJobQueue = [], t8._database.onclose = function() {
            t8._database = void 0, t8._state = ds.OPENING, setTimeout(function() {
              t8._openDatabase(e5);
            }, 5);
          }, n3(t8._database);
        }), i4.addEventListener("error", function(e6) {
          t8._state = ds.UNINITIALIZED, r4(e6.target.error);
        });
      } else r4(Ci.storeNotAvailable);
    });
  }, t7.prototype._getObjectStore = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8 = this;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this._database ? [2, this._database.transaction(this._storeName, e5).objectStore(this._storeName)] : [3, 1];
          case 1:
            switch (this._state) {
              case ds.UNINITIALIZED:
              case ds.OPEN:
                return [3, 2];
              case ds.OPENING:
              case ds.CLOSED:
                return [3, 3];
            }
            return [3, 4];
          case 2:
            throw Ci.storeNotInitialized;
          case 3:
            return [2, new Promise(function(n4) {
              t8._openJobQueue.push(function() {
                return n4(t8._getObjectStore(e5));
              });
            })];
          case 4:
            return [4, this._getObjectStore(e5)];
          case 5:
            return [2, n3.sent()];
        }
      });
    });
  }, t7.prototype._getAllRawKeys = function() {
    return r(this, void 0, void 0, function() {
      var e5;
      return s(this, function(t8) {
        switch (t8.label) {
          case 0:
            return [4, this._getObjectStore("readonly")];
          case 1:
            return e5 = t8.sent(), [4, new Promise(function(t9, n3) {
              var r4 = e5.getAllKeys();
              r4.addEventListener("success", function(e6) {
                t9(e6.target.result);
              }), r4.addEventListener("error", function(e6) {
                return n3(e6.target.error);
              });
            })];
          case 2:
            return [2, t8.sent()];
        }
      });
    });
  }, t7.prototype._getRaw = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._getObjectStore("readonly")];
          case 1:
            return t8 = n3.sent(), [4, new Promise(function(n4, r4) {
              var i4 = t8.get(e5);
              i4.addEventListener("success", function(e6) {
                var t9;
                n4(null === (t9 = null == e6 ? void 0 : e6.target) || void 0 === t9 ? void 0 : t9.result);
              }), i4.addEventListener("error", function(e6) {
                return r4(e6.target.error);
              });
            })];
          case 2:
            return [2, n3.sent()];
        }
      });
    });
  }, t7.prototype._setRaw = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8, n3, r4, i4, s6, a5, o3, u4, c4 = this;
      return s(this, function(l3) {
        switch (l3.label) {
          case 0:
            return [4, this._getObjectStore("readwrite")];
          case 1:
            t8 = l3.sent(), l3.label = 2;
          case 2:
            return l3.trys.push([2, 4, , 15]), [4, Promise.all(e5.map(function(e6) {
              return c4._putToObjectStore(t8, e6);
            }))];
          case 3:
            return l3.sent(), [3, 15];
          case 4:
            if (n3 = l3.sent(), !this.isTransactionInactiveError(n3)) return [3, 13];
            l3.label = 5;
          case 5:
            l3.trys.push([5, 10, 11, 12]), r4 = o(e5), i4 = r4.next(), l3.label = 6;
          case 6:
            return i4.done ? [3, 9] : (s6 = i4.value, [4, this._putToObjectStore(t8, s6)]);
          case 7:
            l3.sent(), l3.label = 8;
          case 8:
            return i4 = r4.next(), [3, 6];
          case 9:
            return [3, 12];
          case 10:
            return a5 = l3.sent(), o3 = { error: a5 }, [3, 12];
          case 11:
            try {
              i4 && !i4.done && (u4 = r4.return) && u4.call(r4);
            } finally {
              if (o3) throw o3.error;
            }
            return [7];
          case 12:
            return [3, 14];
          case 13:
            throw n3;
          case 14:
            return [3, 15];
          case 15:
            return [2];
        }
      });
    });
  }, t7.prototype._removeRaw = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8, n3, r4, i4, s6, a5, o3, u4, c4 = this;
      return s(this, function(l3) {
        switch (l3.label) {
          case 0:
            return [4, this._getObjectStore("readwrite")];
          case 1:
            t8 = l3.sent(), l3.label = 2;
          case 2:
            return l3.trys.push([2, 4, , 15]), [4, Promise.all(e5.map(function(e6) {
              return c4._deleteFromObjectStore(t8, e6);
            }))];
          case 3:
            return l3.sent(), [3, 15];
          case 4:
            if (n3 = l3.sent(), !this.isTransactionInactiveError(n3)) return [3, 13];
            l3.label = 5;
          case 5:
            l3.trys.push([5, 10, 11, 12]), r4 = o(e5), i4 = r4.next(), l3.label = 6;
          case 6:
            return i4.done ? [3, 9] : (s6 = i4.value, [4, this._deleteFromObjectStore(t8, s6)]);
          case 7:
            l3.sent(), l3.label = 8;
          case 8:
            return i4 = r4.next(), [3, 6];
          case 9:
            return [3, 12];
          case 10:
            return a5 = l3.sent(), o3 = { error: a5 }, [3, 12];
          case 11:
            try {
              i4 && !i4.done && (u4 = r4.return) && u4.call(r4);
            } finally {
              if (o3) throw o3.error;
            }
            return [7];
          case 12:
            return [3, 14];
          case 13:
            throw n3;
          case 14:
            return [3, 15];
          case 15:
            return [2];
        }
      });
    });
  }, t7.prototype._triggerDatabaseClose = function() {
    this._database && this._database.onclose && this._database.onclose(new Event("dummy"));
  }, t7.prototype.checkAvailability = function() {
    return r(this, void 0, void 0, function() {
      var e5, t8 = this;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            if (!((null == (e5 = "undefined" != typeof window ? window : null) ? void 0 : e5.indexedDB) || (null == e5 ? void 0 : e5.mozIndexedDB) || (null == e5 ? void 0 : e5.webkitIndexedDB) || (null == e5 ? void 0 : e5.msIndexedDB))) return [3, 6];
            if (this._indexedDb = e5.indexedDB || e5.mozIndexedDB || e5.webkitIndexedDB || e5.msIndexedDB, !this._window || !cs()) return [3, 4];
            if (!(cs() && navigator.userAgent && navigator.userAgent.includes("Edge/"))) return [3, 1];
            if (!this._window.indexedDB && (e5.PointerEvent || e5.MSPointerEvent)) throw Ci.storeNotAvailableInPrivateBrowsing;
            return [3, 3];
          case 1:
            return [4, new Promise(function(e6, n4) {
              if (t8._indexedDb) try {
                var r4 = t8._indexedDb.open("_testMozilla");
                r4.onerror = function() {
                  return n4(Ci.storeNotAvailableInPrivateBrowsing);
                }, r4.onsuccess = function(r5) {
                  if (r5.target.result.close(), t8._indexedDb) {
                    var i4 = t8._indexedDb.deleteDatabase("_testMozilla");
                    i4.onerror = function() {
                      return e6();
                    }, i4.onsuccess = function() {
                      return e6();
                    };
                  } else n4(Ci.storeNotAvailable);
                };
              } catch (e7) {
                n4(Ci.storeNotAvailableInPrivateBrowsing);
              }
              else n4(Ci.storeNotAvailable);
            })];
          case 2:
            n3.sent(), n3.label = 3;
          case 3:
            return [3, 5];
          case 4:
            throw Ci.storeNotAvailable;
          case 5:
            return [3, 7];
          case 6:
            throw Ci.storeNotAvailable;
          case 7:
            return [2];
        }
      });
    });
  }, t7.prototype.init = function(e5) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t8) {
        switch (t8.label) {
          case 0:
            return this.dbname = e5, [4, this.checkAvailability()];
          case 1:
            return t8.sent(), [4, this._openDatabase(e5)];
          case 2:
            return t8.sent(), [4, this._resetIfEncryptionChanged()];
          case 3:
            return t8.sent(), [2];
        }
      });
    });
  }, t7.prototype.clear = function() {
    return r(this, void 0, void 0, function() {
      var t8;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, e4.prototype.clear.call(this)];
          case 1:
            return n3.sent(), [4, this._getObjectStore("readwrite")];
          case 2:
            return t8 = n3.sent(), [4, new Promise(function(e5, n4) {
              var r4 = t8.clear();
              r4.addEventListener("success", function() {
                return e5();
              }), r4.addEventListener("error", function(e6) {
                return n4(e6.target.error);
              });
            })];
          case 3:
            return [2, n3.sent()];
        }
      });
    });
  }, t7;
}(gs);
var Ms = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.AsyncStorage, i4 = t8.itemSizeLimit, s6 = void 0 === i4 ? 2097152 : i4, a5 = i(t8, ["AsyncStorage", "itemSizeLimit"]);
    return (n3 = e4.call(this, n(n({}, a5), { itemSizeLimit: s6 })) || this)._asyncStorage = r4, n3;
  }
  return t(t7, e4), t7.prototype._isBelonging = function(e5) {
    return e5.startsWith("".concat(this.dbname, "/"));
  }, t7.prototype._getActualKey = function(e5) {
    return "".concat(this.dbname, "/").concat(e5);
  }, t7.prototype._getAllRawKeys = function() {
    return r(this, void 0, void 0, function() {
      var e5, t8 = this;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._asyncStorage.getAllKeys()];
          case 1:
            return e5 = n3.sent(), [2, e5.filter(function(e6) {
              return t8._isBelonging(e6);
            }).map(function(e6) {
              return e6.substring("".concat(t8.dbname, "/").length);
            })];
        }
      });
    });
  }, t7.prototype._getRaw = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._asyncStorage.getItem(this._getActualKey(e5))];
          case 1:
            return [2, (t8 = n3.sent()) ? JSON.parse(t8) : null];
        }
      });
    });
  }, t7.prototype._setRaw = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8, n3, r4, i4, s6, a5, o3;
      return s(this, function(u4) {
        switch (u4.label) {
          case 0:
            t8 = [];
            try {
              for (n3 = o(e5), r4 = n3.next(); !r4.done; r4 = n3.next()) i4 = r4.value, s6 = i4.key, i4.data.length <= this.adjustedItemSizeLimit && t8.push([this._getActualKey(s6), JSON.stringify(i4)]);
            } catch (e6) {
              a5 = { error: e6 };
            } finally {
              try {
                r4 && !r4.done && (o3 = n3.return) && o3.call(n3);
              } finally {
                if (a5) throw a5.error;
              }
            }
            return [4, this._asyncStorage.multiSet(t8)];
          case 1:
            return u4.sent(), [2];
        }
      });
    });
  }, t7.prototype._removeRaw = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8 = this;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._asyncStorage.multiRemove(e5.map(function(e6) {
              return t8._getActualKey(e6);
            }))];
          case 1:
            return n3.sent(), [2];
        }
      });
    });
  }, t7.prototype.checkAvailability = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        if (!this._asyncStorage) throw Ci.storeNotAvailable;
        return [2];
      });
    });
  }, t7.prototype.init = function(e5) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t8) {
        switch (t8.label) {
          case 0:
            return this.dbname = e5, [4, this._resetIfEncryptionChanged()];
          case 1:
            return t8.sent(), [2];
        }
      });
    });
  }, t7.prototype.clear = function() {
    return r(this, void 0, void 0, function() {
      var t8;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, e4.prototype.clear.call(this)];
          case 1:
            return n3.sent(), [4, this.getAllKeys()];
          case 2:
            return t8 = n3.sent(), [4, this.removeMany(t8)];
          case 3:
            return n3.sent(), [2];
        }
      });
    });
  }, t7;
}(gs);
var Ss = function(e4) {
  function t7(t8) {
    var n3, r4 = this;
    return (r4 = e4.call(this, n(n({}, t8), { itemSizeLimit: null !== (n3 = t8.itemSizeLimit) && void 0 !== n3 ? n3 : 6291456 })) || this)._mmkv = t8.MMKV, r4;
  }
  return t(t7, e4), t7.prototype._isBelonging = function(e5) {
    return e5.startsWith("".concat(this.dbname, "/"));
  }, t7.prototype._getActualKey = function(e5) {
    return "".concat(this.dbname, "/").concat(e5);
  }, t7.prototype._getAllRawKeys = function() {
    return r(this, void 0, void 0, function() {
      var e5, t8 = this;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._mmkv.getAllKeys()];
          case 1:
            return e5 = n3.sent(), [2, e5.filter(function(e6) {
              return t8._isBelonging(e6);
            }).map(function(e6) {
              return e6.substring("".concat(t8.dbname, "/").length);
            })];
        }
      });
    });
  }, t7.prototype._getRaw = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._mmkv.getString(this._getActualKey(e5))];
          case 1:
            return [2, (t8 = n3.sent()) ? JSON.parse(t8) : null];
        }
      });
    });
  }, t7.prototype._setRaw = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8, n3, r4, i4, s6, a5;
      return s(this, function(o3) {
        try {
          for (t8 = o(e5), n3 = t8.next(); !n3.done; n3 = t8.next()) r4 = n3.value, i4 = r4.key, r4.data.length <= this.adjustedItemSizeLimit && this._mmkv.set(this._getActualKey(i4), JSON.stringify(r4));
        } catch (e6) {
          s6 = { error: e6 };
        } finally {
          try {
            n3 && !n3.done && (a5 = t8.return) && a5.call(t8);
          } finally {
            if (s6) throw s6.error;
          }
        }
        return [2];
      });
    });
  }, t7.prototype._removeRaw = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8, n3, r4, i4, s6;
      return s(this, function(a5) {
        try {
          for (t8 = o(e5), n3 = t8.next(); !n3.done; n3 = t8.next()) r4 = n3.value, this._mmkv.delete(this._getActualKey(r4));
        } catch (e6) {
          i4 = { error: e6 };
        } finally {
          try {
            n3 && !n3.done && (s6 = t8.return) && s6.call(t8);
          } finally {
            if (i4) throw i4.error;
          }
        }
        return [2];
      });
    });
  }, t7.prototype.checkAvailability = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        if (!this._mmkv) throw Ci.storeNotAvailable;
        return [2];
      });
    });
  }, t7.prototype.init = function(e5) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t8) {
        switch (t8.label) {
          case 0:
            return this.dbname = e5, [4, this._resetIfEncryptionChanged()];
          case 1:
            return t8.sent(), [2];
        }
      });
    });
  }, t7.prototype.clear = function() {
    return r(this, void 0, void 0, function() {
      var t8;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, e4.prototype.clear.call(this)];
          case 1:
            return n3.sent(), [4, this.getAllKeys()];
          case 2:
            return t8 = n3.sent(), [4, this.removeMany(t8)];
          case 3:
            return n3.sent(), [2];
        }
      });
    });
  }, t7;
}(gs);
!function(e4) {
  e4.INIT = "INIT", e4.OPENING = "OPENING", e4.OPENED = "OPENED", e4.CLOSED = "CLOSED";
}(Ts || (Ts = {}));
var As;
var Us = function() {
  function e4(e5) {
    var t7 = e5.name, n3 = e5.version, r4 = e5.store, i4 = e5.config;
    this.name = t7, this._version = n3, this._state = Ts.INIT, this._config = i4 || new Ui({ dbname: t7 }), this._store = r4, this._event = { success: Li, error: Li, storeReplaced: Li, upgrade: zi }, this._collections = /* @__PURE__ */ new Map(), this._globalMutex = new fs("".concat(this.name, ".lock")), this._config.disableLogger && ys.off(), new rs({ dbname: t7, limit: this._config.cacheLimit });
  }
  return Object.defineProperty(e4.prototype, "version", { get: function() {
    return this._version;
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "state", { get: function() {
    return this._state;
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "store", { get: function() {
    return this._store;
  }, enumerable: false, configurable: true }), e4.prototype.estimateUsage = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        switch (e5.label) {
          case 0:
            return [4, (t7 = this._store, r(void 0, void 0, void 0, function() {
              return s(this, function(e6) {
                switch (e6.label) {
                  case 0:
                    return [4, t7.usage()];
                  case 1:
                    return [2, e6.sent()];
                }
              });
            }))];
          case 1:
            return [2, e5.sent()];
        }
        var t7;
      });
    });
  }, e4.prototype.commitSchema = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7 = this;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this._state !== Ts.OPENING ? [3, 2] : [4, Promise.all(e5.map(function(e6) {
              return r(t7, void 0, void 0, function() {
                var t8, n4, r4, i4, s6;
                return s(this, function(a5) {
                  switch (a5.label) {
                    case 0:
                      return t8 = e6.collectionName, n4 = e6.keyName, r4 = e6.index, i4 = void 0 === r4 ? [] : r4, this._collections.has(t8) || this._collections.set(t8, new ps({ dbname: this.name, collectionName: t8, keyName: n4, indexes: i4, store: this._store })), (s6 = this._collections.get(t8)) ? [4, s6.init()] : [3, 2];
                    case 1:
                      a5.sent(), a5.label = 2;
                    case 2:
                      return [2];
                  }
                });
              });
            }))];
          case 1:
            return n3.sent(), [3, 3];
          case 2:
            throw Ci.databaseSchemaNotOnUpgrade;
          case 3:
            return [2];
        }
      });
    });
  }, e4.prototype.open = function() {
    var e5;
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, i4, s6 = this;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return [4, this._globalMutex.lock()];
          case 1:
            if (a5.sent(), this._state === Ts.OPENED) return [3, 12];
            this._state = Ts.OPENING, a5.label = 2;
          case 2:
            return a5.trys.push([2, 5, , 12]), [4, this._store.init(this.name)];
          case 3:
            return a5.sent(), o3 = this.name, t7 = "".concat(Hi(o3), ".metadata"), n3 = { version: 0, collectionNames: [] }, [4, this._store.get(t7)];
          case 4:
            return r4 = null !== (e5 = a5.sent()) && void 0 !== e5 ? e5 : n3, [2, new Promise(function(e6, n4) {
              var i5 = function(e7) {
                r4.version < s6._version ? s6._event.upgrade(r4.version, function(n5) {
                  return r(s6, void 0, void 0, function() {
                    var i6;
                    return s(this, function(s7) {
                      switch (s7.label) {
                        case 0:
                          if (n5) return [3, 5];
                          r4.version++, r4.collectionNames = Array.from(this._collections.keys()), s7.label = 1;
                        case 1:
                          return s7.trys.push([1, 3, , 4]), [4, this._store.set({ key: t7, value: r4 })];
                        case 2:
                          return s7.sent(), e7({ continued: true }), [3, 4];
                        case 3:
                          return i6 = s7.sent(), e7({ continued: false, err: i6 }), [3, 4];
                        case 4:
                          return [3, 6];
                        case 5:
                          e7({ continued: false, err: n5 }), s7.label = 6;
                        case 6:
                          return [2];
                      }
                    });
                  });
                }) : e7({ continued: false });
              }, a6 = function(t8) {
                var o4 = t8.continued, u4 = void 0 !== o4 && o4, c4 = t8.err, l3 = void 0 === c4 ? null : c4;
                if (u4) setTimeout(function() {
                  return i5(a6);
                }, 10);
                else if (l3) ys.error(l3.message), s6._globalMutex.unlock(), s6._event.error(l3), n4(l3);
                else {
                  var d5 = [];
                  r4.collectionNames.forEach(function(e7) {
                    var t9 = s6._collections.get(e7);
                    t9 && t9.state === Ni.READY || d5.push(r(s6, void 0, void 0, function() {
                      var t10, n5;
                      return s(this, function(r5) {
                        switch (r5.label) {
                          case 0:
                            return [4, ps.metadataOf(this.name, e7, this._store)];
                          case 1:
                            return (t10 = r5.sent()) ? (n5 = new ps({ dbname: this.name, collectionName: e7, keyName: t10.keyName, indexes: t10.indexes, store: this._store }), this._collections.set(e7, n5), [4, n5.init()]) : [3, 3];
                          case 2:
                            r5.sent(), r5.label = 3;
                          case 3:
                            return [2];
                        }
                      });
                    }));
                  }), Promise.all(d5).then(function() {
                    s6._state = Ts.OPENED, s6._globalMutex.unlock(), s6._event.success(), e6();
                  }).catch(function(e7) {
                    ys.error(e7.message), s6._globalMutex.unlock(), s6._event.error(e7), n4(e7);
                  });
                }
              };
              i5(a6);
            })];
          case 5:
            switch (i4 = a5.sent(), i4.code) {
              case fi.STORE_NOT_AVAILABLE_IN_PRIVATE_BROWSING:
                return [3, 6];
              case fi.STORE_NOT_AVAILABLE:
                return [3, 8];
            }
            return [3, 10];
          case 6:
            return ys.warning("Access to the local storage is not allowed. Switched to MemoryStore automatically."), this._store = new Is({}), this._globalMutex.unlock(), this._event.error(i4), this._event.storeReplaced(this._store), [4, this.open()];
          case 7:
            return a5.sent(), [3, 11];
          case 8:
            return ys.warning("IndexedDB is not available in this environment. Switched to MemoryStore automatically. Consider using other store to save data persistently (e.g. AsyncStorage)."), this._store = new Is({}), this._globalMutex.unlock(), this._event.error(i4), this._event.storeReplaced(this._store), [4, this.open()];
          case 9:
            return a5.sent(), [3, 11];
          case 10:
            throw ys.error(i4.message), this._globalMutex.unlock(), this._event.error(i4), i4;
          case 11:
            return [3, 12];
          case 12:
            return [2];
        }
        var o3;
      });
    });
  }, e4.prototype.close = function() {
    this._collections.forEach(function(e5) {
      return e5.close();
    }), this._state = Ts.CLOSED;
  }, e4.prototype.clear = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        switch (e5.label) {
          case 0:
            return [4, Promise.all(Array.from(this._collections.values()).map(function(e6) {
              return e6.clear();
            }))];
          case 1:
            return e5.sent(), [2];
        }
      });
    });
  }, e4.prototype.reset = function() {
    return r(this, void 0, void 0, function() {
      var e5;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return (e5 = rs.get(this.name)) && e5.clearForDatabase(this.name), [4, this._store.clear()];
          case 1:
            return t7.sent(), [2];
        }
      });
    });
  }, e4.prototype.on = function(e5, t7) {
    this._event[e5] = t7;
  }, e4.prototype.off = function(e5) {
    if ("function" == typeof this._event[e5]) if ("upgrade" === e5) this._event[e5] = zi;
    else this._event[e5] = Li;
  }, e4.prototype.collection = function(e5) {
    var t7 = this._collections.get(e5);
    if (t7) return t7;
    throw Ci.collectionNotReady;
  }, e4;
}();
!function(e4) {
  e4[e4.VERBOSE = 0] = "VERBOSE", e4[e4.DEBUG = 1] = "DEBUG", e4[e4.INFO = 2] = "INFO", e4[e4.WARN = 3] = "WARN", e4[e4.ERROR = 4] = "ERROR", e4[e4.NONE = 5] = "NONE";
}(As || (As = {}));
var Ns;
var Cs = function() {
  function e4() {
    this.level = As.WARN;
  }
  return e4.prototype.verbose = function() {
    for (var e5 = [], t7 = 0; t7 < arguments.length; t7++) e5[t7] = arguments[t7];
    this.level <= As.VERBOSE && console.log.apply(console, c(["[verbose]"], a(e5), false));
  }, e4.prototype.debug = function() {
    for (var e5 = [], t7 = 0; t7 < arguments.length; t7++) e5[t7] = arguments[t7];
    this.level <= As.DEBUG && console.log.apply(console, c(["[debug]"], a(e5), false));
  }, e4.prototype.info = function() {
    for (var e5 = [], t7 = 0; t7 < arguments.length; t7++) e5[t7] = arguments[t7];
    this.level <= As.INFO && console.log.apply(console, c(["[info]"], a(e5), false));
  }, e4.prototype.warn = function() {
    for (var e5 = [], t7 = 0; t7 < arguments.length; t7++) e5[t7] = arguments[t7];
    this.level <= As.WARN && console.warn.apply(console, c(["[warn]"], a(e5), false));
  }, e4.prototype.error = function() {
    for (var e5 = [], t7 = 0; t7 < arguments.length; t7++) e5[t7] = arguments[t7];
    this.level <= As.ERROR && console.error.apply(console, c(["[error]"], a(e5), false));
  }, e4;
}();
var Os = function() {
  function e4(e5) {
    var t7, n3, r4, i4;
    this.messageTypeFilter = null !== (t7 = null == e5 ? void 0 : e5.messageTypeFilter) && void 0 !== t7 ? t7 : G.ALL, this.customTypesFilter = null !== (n3 = null == e5 ? void 0 : e5.customTypesFilter) && void 0 !== n3 ? n3 : null, this.senderUserIdsFilter = null !== (r4 = null == e5 ? void 0 : e5.senderUserIdsFilter) && void 0 !== r4 ? r4 : null, this.replyType = null !== (i4 = null == e5 ? void 0 : e5.replyType) && void 0 !== i4 ? i4 : B.NONE;
  }
  return e4.prototype.clone = function() {
    var t7 = new e4(), n3 = JSON.parse(JSON.stringify(this));
    return Object.keys(n3).forEach(function(e5) {
      t7[e5] = n3[e5];
    }), t7;
  }, e4.prototype.match = function(e5) {
    switch (this.messageTypeFilter) {
      case G.USER:
        if (e5.messageType !== z.USER) return false;
        break;
      case G.FILE:
        if (e5.messageType !== z.FILE) return false;
        break;
      case G.ADMIN:
        if (e5.messageType !== z.ADMIN) return false;
    }
    if (this.customTypesFilter && this.customTypesFilter.length > 0 && !this.customTypesFilter.includes("*") && !this.customTypesFilter.includes(e5.customType)) return false;
    if (this.senderUserIdsFilter && this.senderUserIdsFilter.length > 0) {
      if (!(e5 instanceof mt)) return false;
      if (!this.senderUserIdsFilter.includes(e5.sender.userId)) return false;
    }
    if (e5 instanceof pt) switch (this.replyType) {
      case B.NONE:
        if (e5.parentMessageId > 0) return false;
        break;
      case B.ONLY_REPLY_TO_CHANNEL:
        if (e5 instanceof mt && e5.parentMessageId > 0 && !e5.replyToChannel) return false;
    }
    return true;
  }, e4;
}();
!function(e4) {
  e4.CHANNEL_LATEST = "channel_latest", e4.NEWEST_CHILD_MESSAGE = "newest_child_message";
}(Ns || (Ns = {}));
var Ps2;
var ks = function(e4) {
  switch (e4) {
    case Ns.CHANNEL_LATEST:
      return ["channelUrl", "-createdAt", "-messageId"];
    case Ns.NEWEST_CHILD_MESSAGE:
      return ["channelUrl", "-parentMessageId", "-createdAt", "-messageId"];
  }
};
var Rs = function() {
  return ["channelUrl", "-createdAt", "-notificationId"];
};
var xs = n(n({}, tn), { scheduledAt: void 0 });
var Ds = function(e4) {
  return an(e4) && w("number", e4.scheduledAt, true);
};
var Ls = n(n({}, Zt), { scheduledAt: 0, file: void 0, fileUrl: void 0, fileName: void 0, mimeType: void 0, fileSize: void 0, thumbnailSizes: void 0, requireAuth: false });
var Fs = function(e4) {
  return $t(e4) && w("number", e4.scheduledAt) && (k(e4.file) || w("string", e4.fileUrl)) && w("string", e4.fileName, true) && w("string", e4.mimeType, true) && w("number", e4.fileSize, true) && (null === e4.thumbnailSizes || void 0 === e4.thumbnailSizes || e4.thumbnailSizes.every(function(e5) {
    return w("object", e5) && e5.maxWidth > 0 && e5.maxHeight > 0;
  }));
};
var qs2 = "UnsentMessage";
var zs = "reqId";
var Bs = {};
var Ks2 = function(t7) {
  function i4(e4) {
    var n3 = t7.call(this, e4) || this;
    return n3._mutex = new fs("unsendmessagecache.lock"), Bs[e4] = n3, n3;
  }
  return t(i4, t7), Object.defineProperty(i4.prototype, "_cacheContext", { get: function() {
    return Ws.of(this._iid).cacheContext;
  }, enumerable: false, configurable: true }), i4.of = function(e4, t8) {
    return void 0 === t8 && (t8 = false), Bs[e4] && !t8 || (Bs[e4] = new i4(e4)), Bs[e4];
  }, Object.defineProperty(i4.prototype, "collection", { get: function() {
    var e4 = this._cacheContext.nestdb, t8 = null == e4 ? void 0 : e4.collection(qs2);
    if (!t8) throw v.databaseError;
    return t8;
  }, enumerable: false, configurable: true }), Object.defineProperty(i4.prototype, "localCacheEnabled", { get: function() {
    return this._cacheContext.localCacheEnabled && !!this.collection;
  }, enumerable: false, configurable: true }), i4.prototype._serialize = function(t8) {
    if (t8.messageId > 0) throw v.invalidParameters;
    var n3, r4 = n({}, t8.serialize());
    return t8 instanceof It ? (t8.messageParams && (r4.messageParams = en(t8.messageParams)), t8.scheduledInfo && t8.scheduledInfo.scheduledMessageParams && (r4.scheduledInfo.scheduledMessageParams = (n3 = t8.scheduledInfo.scheduledMessageParams, n(n({}, en(n3)), { scheduledAt: n3.scheduledAt })))) : t8 instanceof St ? (t8.messageParams && (r4.messageParams = cn(t8.messageParams)), t8.scheduledInfo && t8.scheduledInfo.scheduledMessageParams && (r4.scheduledInfo.scheduledMessageParams = function(e4) {
      return n(n({}, cn(e4)), { scheduledAt: e4.scheduledAt });
    }(t8.scheduledInfo.scheduledMessageParams))) : t8 instanceof Et && t8.messageParams && (r4.messageParams = function(t9) {
      return re({ fileInfoList: t9.fileInfoList, isReplyToChannel: t9.isReplyToChannel, pushNotificationDeliveryOption: t9.pushNotificationDeliveryOption });
    }(t8.messageParams)), r4;
  }, i4.prototype._deserialize = function(e4) {
    return e4 = n(n({}, e4), { messageId: parseInt(e4.messageId) }), ea.of(this._iid).buildMessageFromSerializedData(e4);
  }, i4.prototype._deserializeWithMessageCreateParams = function(e4) {
    var t8, n3, r4;
    return r(this, void 0, void 0, function() {
      var i5, s6, a5, o3, u4, c4, l3 = this;
      return s(this, function(d5) {
        switch (d5.label) {
          case 0:
            return i5 = ea.of(this._iid), s6 = this._deserialize(e4), e4.messageParams ? s6 instanceof It ? (o3 = e4.messageParams, s6.messageParams = i5.buildUserMessageCreateParamsFromSerializedData(o3, s6), [3, 6]) : [3, 1] : [3, 6];
          case 1:
            return s6 instanceof St ? (o3 = e4.messageParams).fileKey && "string" == typeof o3.fileKey && un(null !== (t8 = o3.fileType) && void 0 !== t8 ? t8 : "") ? (a5 = o3, [4, this.collection.getBlob(o3.fileKey)]) : [3, 3] : [3, 4];
          case 2:
            a5.file = null !== (n3 = d5.sent()) && void 0 !== n3 ? n3 : void 0, d5.label = 3;
          case 3:
            return s6.messageParams = i5.buildFileMessageCreateParamsFromSerializedData(o3, s6), [3, 6];
          case 4:
            return s6 instanceof Et && ((o3 = e4.messageParams) && o3.fileInfoList) ? (s6.messageParams = i5.buildMultipleFilesMessageCreateParamsFromSerializedData(o3, s6), [4, Promise.all(s6.messageParams.fileInfoList.map(function(e5) {
              return r(l3, void 0, void 0, function() {
                var t9, n4, r5, i6, s7;
                return s(this, function(a6) {
                  switch (a6.label) {
                    case 0:
                      return "string" == typeof (null === (n4 = e5._uploadedMetaData) || void 0 === n4 ? void 0 : n4.fileKey) && un(null !== (i6 = null === (r5 = e5._uploadedMetaData) || void 0 === r5 ? void 0 : r5.fileType) && void 0 !== i6 ? i6 : "") ? (t9 = e5, [4, this.collection.getBlob(e5._uploadedMetaData.fileKey)]) : [3, 2];
                    case 1:
                      t9.file = null !== (s7 = a6.sent()) && void 0 !== s7 ? s7 : void 0, a6.label = 2;
                    case 2:
                      return [2];
                  }
                });
              });
            }))]) : [3, 6];
          case 5:
            d5.sent(), d5.label = 6;
          case 6:
            return s6.scheduledInfo && e4.scheduledInfo && e4.scheduledInfo.scheduledMessageParams ? s6 instanceof It ? (u4 = e4.scheduledInfo.scheduledMessageParams, s6.scheduledInfo.scheduledMessageParams = i5.buildScheduledUserMessageCreateParamsFromSerializedData(u4, s6), [3, 10]) : [3, 7] : [3, 10];
          case 7:
            return s6 instanceof St ? (u4 = e4.scheduledInfo.scheduledMessageParams).fileKey && "string" == typeof u4.fileKey && "string" == typeof u4.fileType && un(u4.fileType) ? (c4 = u4, [4, this.collection.getBlob(u4.fileKey)]) : [3, 9] : [3, 10];
          case 8:
            c4.file = null !== (r4 = d5.sent()) && void 0 !== r4 ? r4 : void 0, d5.label = 9;
          case 9:
            s6.scheduledInfo.scheduledMessageParams = i5.buildScheduledFileMessageCreateParamsFromSerializedData(u4, s6), d5.label = 10;
          case 10:
            return [2, s6];
        }
      });
    });
  }, i4.prototype._getFileInfoBlobKey = function(e4, t8) {
    return "".concat(e4, ".").concat(t8);
  }, i4.prototype.get = function(e4) {
    return r(this, void 0, void 0, function() {
      var t8;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.getByKey("".concat(e4))] : [3, 2];
          case 1:
            if (t8 = n3.sent()) return [2, this._deserializeWithMessageCreateParams(t8)];
            n3.label = 2;
          case 2:
            return [2, void 0];
        }
      });
    });
  }, i4.prototype.fetch = function(e4) {
    var t8 = e4.channelUrl, n3 = e4.filter, r4 = void 0 === n3 ? new Os() : n3, i5 = e4.order, s6 = void 0 === i5 ? Ns.CHANNEL_LATEST : i5, a5 = e4.sendingStatus, o3 = e4.backward, u4 = void 0 !== o3 && o3, c4 = e4.parentMessageId;
    return r(this, void 0, void 0, function() {
      var e5, n4, i6, o4, l3 = this;
      return s(this, function(d5) {
        switch (d5.label) {
          case 0:
            return this.localCacheEnabled ? (e5 = ks(s6), n4 = { "/where": function(e6) {
              return !!(s6 !== Ns.NEWEST_CHILD_MESSAGE || c4 && 0 !== e6.parentMessageId && e6.parentMessageId === c4) && r4.match(l3._deserialize(e6));
            } }, t8 && (n4.channelUrl = t8), a5 && (n4.sendingStatus = a5), i6 = { where: n4, index: e5, backward: u4 }, [4, this.collection.query(i6)]) : [3, 3];
          case 1:
            return [4, d5.sent().fetch({})];
          case 2:
            return o4 = d5.sent(), [2, Promise.all(o4.map(function(e6) {
              return r(l3, void 0, void 0, function() {
                return s(this, function(t9) {
                  switch (t9.label) {
                    case 0:
                      return [4, this._deserializeWithMessageCreateParams(e6)];
                    case 1:
                      return [2, t9.sent()];
                  }
                });
              });
            }))];
          case 3:
            return [2, []];
        }
      });
    });
  }, i4.prototype.getAllChildMessages = function(e4, t8) {
    return void 0 === t8 && (t8 = new Os()), r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this.fetch({ filter: t8, order: Ns.NEWEST_CHILD_MESSAGE, channelUrl: e4.channelUrl, backward: false, parentMessageId: e4.messageId })];
          case 1:
            return [2, n3.sent()];
        }
      });
    });
  }, i4.prototype.upsert = function(e4) {
    return r(this, void 0, void 0, function() {
      var t8 = this;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this.localCacheEnabled ? [4, Promise.all(e4.map(function(e5) {
              return r(t8, void 0, void 0, function() {
                var t9;
                return s(this, function(n4) {
                  switch (n4.label) {
                    case 0:
                      return e5 instanceof St || e5 instanceof Et ? [4, this._mutex.lock()] : [3, 4];
                    case 1:
                      return n4.sent(), [4, this.saveBlob(e5)];
                    case 2:
                      return n4.sent(), [4, this._mutex.unlock()];
                    case 3:
                      n4.sent(), n4.label = 4;
                    case 4:
                      return t9 = this._serialize(e5), [4, this.collection.upsertOne(t9)];
                    case 5:
                      return n4.sent(), [2];
                  }
                });
              });
            }))] : [3, 2];
          case 1:
            n3.sent(), n3.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, i4.prototype.upsertChildMessages = function(e4) {
    return r(this, void 0, void 0, function() {
      var t8 = this;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this.localCacheEnabled ? [4, Promise.all(e4.map(function(e5) {
              return r(t8, void 0, void 0, function() {
                var t9;
                return s(this, function(n4) {
                  switch (n4.label) {
                    case 0:
                      return t9 = [], e5.threadInfo && e5.threadInfo.replyCount > 0 ? [4, this.getAllChildMessages(e5)] : [3, 2];
                    case 1:
                      t9 = n4.sent(), n4.label = 2;
                    case 2:
                      return t9.length > 0 ? (t9.forEach(function(t10) {
                        return t10.applyParentMessage(e5);
                      }), [4, this.upsert(t9)]) : [3, 4];
                    case 3:
                      n4.sent(), n4.label = 4;
                    case 4:
                      return [2];
                  }
                });
              });
            }))] : [3, 2];
          case 1:
            n3.sent(), n3.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, i4.prototype.remove = function(e4) {
    return r(this, void 0, void 0, function() {
      var t8, n3, r4, i5, s6, a5;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            if (!this.localCacheEnabled) return [3, 8];
            o3.label = 1;
          case 1:
            o3.trys.push([1, 6, 7, 8]), t8 = o(e4), n3 = t8.next(), o3.label = 2;
          case 2:
            return n3.done ? [3, 5] : (r4 = n3.value, [4, this.collection.remove(r4)]);
          case 3:
            o3.sent(), o3.label = 4;
          case 4:
            return n3 = t8.next(), [3, 2];
          case 5:
            return [3, 8];
          case 6:
            return i5 = o3.sent(), s6 = { error: i5 }, [3, 8];
          case 7:
            try {
              n3 && !n3.done && (a5 = t8.return) && a5.call(t8);
            } finally {
              if (s6) throw s6.error;
            }
            return [7];
          case 8:
            return [2];
        }
      });
    });
  }, i4.prototype.removeMessagesOfChannel = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t8) {
        switch (t8.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.removeIf({ where: { channelUrl: e4 } })] : [3, 2];
          case 1:
            t8.sent(), t8.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, i4.prototype.clear = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        switch (e4.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.clear()] : [3, 2];
          case 1:
            e4.sent(), e4.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, i4.prototype.saveBlob = function(e4) {
    return r(this, void 0, void 0, function() {
      var t8, n3, r4, i5 = this;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return e4 instanceof St ? e4.messageParams && (r4 = e4.messageParams).file && on(r4.file) ? [4, this.collection.saveBlob(r4.file, e4.reqId)] : [3, 2] : [3, 5];
          case 1:
            n3 = s6.sent(), r4.fileKey = n3, r4.fileType = rn.BLOB, s6.label = 2;
          case 2:
            return e4.scheduledInfo && e4.scheduledInfo.scheduledMessageParams && ((t8 = e4.scheduledInfo.scheduledMessageParams).file && on(t8.file)) ? [4, this.collection.saveBlob(t8.file, e4.reqId)] : [3, 4];
          case 3:
            n3 = s6.sent(), t8.fileKey = n3, t8.fileType = rn.BLOB, s6.label = 4;
          case 4:
            return [3, 7];
          case 5:
            return e4 instanceof Et && ((r4 = e4.messageParams) && r4.fileInfoList && Array.isArray(r4.fileInfoList)) ? [4, Promise.all(r4.fileInfoList.map(function(t9, n4) {
              return r(i5, void 0, void 0, function() {
                var r5;
                return s(this, function(i6) {
                  switch (i6.label) {
                    case 0:
                      return t9.file && on(t9.file) ? [4, this.collection.saveBlob(t9.file, this._getFileInfoBlobKey(e4.reqId, n4))] : [3, 2];
                    case 1:
                      r5 = i6.sent(), t9._uploadedMetaData || (t9._uploadedMetaData = {}), t9._uploadedMetaData.fileKey = r5, t9._uploadedMetaData.fileType = rn.BLOB, i6.label = 2;
                    case 2:
                      return [2];
                  }
                });
              });
            }))] : [3, 7];
          case 6:
            s6.sent(), s6.label = 7;
          case 7:
            return [2];
        }
      });
    });
  }, i4;
}(zr);
var js = {};
var Qs = function(e4) {
  function t7(t8) {
    var n3 = e4.call(this, t8) || this;
    return js[t8] = n3, n3;
  }
  return t(t7, e4), Object.defineProperty(t7.prototype, "_sdkState", { get: function() {
    return Ws.of(this._iid).sdkState;
  }, enumerable: false, configurable: true }), Object.defineProperty(t7.prototype, "_cacheContext", { get: function() {
    return Ws.of(this._iid).cacheContext;
  }, enumerable: false, configurable: true }), Object.defineProperty(t7.prototype, "_unsentMessageCache", { get: function() {
    return Ks2.of(this._iid);
  }, enumerable: false, configurable: true }), t7.of = function(e5, n3) {
    return void 0 === n3 && (n3 = false), js[e5] && !n3 || (js[e5] = new t7(e5)), js[e5];
  }, Object.defineProperty(t7.prototype, "collection", { get: function() {
    var e5 = this._cacheContext.nestdb;
    return Jr(!!e5).throw(v.databaseError), e5.collection(Gr);
  }, enumerable: false, configurable: true }), Object.defineProperty(t7.prototype, "localCacheEnabled", { get: function() {
    return this._cacheContext.localCacheEnabled && !!this.collection;
  }, enumerable: false, configurable: true }), t7.prototype._serialize = function(e5) {
    return n(n({}, e5.serialize()), { messageId: "".concat(e5.messageId) });
  }, t7.prototype._deserialize = function(e5) {
    return e5 = n(n({}, e5), { messageId: parseInt(e5.messageId) }), ea.of(this._iid).buildMessageFromSerializedData(e5);
  }, t7.prototype.get = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.getByKey("".concat(e5))] : [3, 2];
          case 1:
            if (t8 = n3.sent()) return [2, this._deserialize(t8)];
            n3.label = 2;
          case 2:
            return [2, void 0];
        }
      });
    });
  }, t7.prototype.fetch = function(e5) {
    var t8 = e5.channelUrl, n3 = e5.token, r4 = e5.limit, i4 = void 0 === r4 ? 100 : r4, s6 = e5.filter, a5 = void 0 === s6 ? new Os() : s6, o3 = e5.order, u4 = void 0 === o3 ? Ns.CHANNEL_LATEST : o3, c4 = e5.backward, l3 = void 0 !== c4 && c4, d5 = e5.parentMessageId, h4 = e5.isPollOnly, f4 = void 0 !== h4 && h4, p4 = e5.exactMatch, m5 = void 0 !== p4 && p4, v5 = e5.inclusive, y6 = void 0 === v5 || v5;
    return r(this, void 0, void 0, function() {
      var e6, r5, s7, o4 = this;
      return s(this, function(c5) {
        switch (c5.label) {
          case 0:
            return this.localCacheEnabled ? (e6 = ks(u4), r5 = { where: { channelUrl: t8, "/where": function(e7) {
              if (null != n3 && "" !== n3) switch (u4) {
                case Ns.CHANNEL_LATEST:
                  if (m5 && e7.createdAt !== n3) return false;
                  if (l3) {
                    if (y6 && e7.createdAt < n3 || !y6 && e7.createdAt <= n3) return false;
                  } else if (y6 && e7.createdAt > n3 || !y6 && e7.createdAt >= n3) return false;
                  break;
                case Ns.NEWEST_CHILD_MESSAGE:
                  if (!d5 || 0 === e7.parentMessageId || e7.parentMessageId !== d5) return false;
              }
              return !(f4 && !e7._poll) && a5.match(o4._deserialize(e7));
            } }, index: e6, backward: l3 }, [4, this.collection.query(r5)]) : [3, 3];
          case 1:
            return [4, c5.sent().fetch({ limit: null != i4 ? i4 : void 0 })];
          case 2:
            return s7 = c5.sent(), [2, Promise.all(s7.map(function(e7) {
              return r(o4, void 0, void 0, function() {
                return s(this, function(t9) {
                  return [2, this._deserialize(e7)];
                });
              });
            }))];
          case 3:
            return [2, []];
        }
      });
    });
  }, t7.prototype.getAllChildMessages = function(e5, t8) {
    return void 0 === t8 && (t8 = new Os()), r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this.fetch({ channelUrl: e5.channelUrl, token: Date.now(), limit: null, backward: false, filter: t8, order: Ns.NEWEST_CHILD_MESSAGE, parentMessageId: e5.messageId })];
          case 1:
            return [2, n3.sent()];
        }
      });
    });
  }, t7.prototype.upsert = function(e5) {
    var t8;
    return r(this, void 0, void 0, function() {
      var n3, r4, i4, s6, a5, o3, u4, c4, l3 = this;
      return s(this, function(d5) {
        switch (d5.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.saveBlobs(e5)] : [3, 13];
          case 1:
            d5.sent(), d5.label = 2;
          case 2:
            d5.trys.push([2, 7, 8, 9]), n3 = o(e5), r4 = n3.next(), d5.label = 3;
          case 3:
            return r4.done ? [3, 6] : (i4 = r4.value, (null === (t8 = i4.threadInfo) || void 0 === t8 ? void 0 : t8._isUpdateRequired) ? [4, this.get(i4.messageId)] : [3, 5]);
          case 4:
            (null == (s6 = d5.sent()) ? void 0 : s6.threadInfo) && i4.threadInfo._updateFrom(s6.threadInfo), d5.label = 5;
          case 5:
            return r4 = n3.next(), [3, 3];
          case 6:
            return [3, 9];
          case 7:
            return a5 = d5.sent(), u4 = { error: a5 }, [3, 9];
          case 8:
            try {
              r4 && !r4.done && (c4 = n3.return) && c4.call(n3);
            } finally {
              if (u4) throw u4.error;
            }
            return [7];
          case 9:
            return o3 = e5.map(function(e6) {
              return l3._serialize(e6);
            }), [4, this.collection.upsertMany(o3)];
          case 10:
            return d5.sent(), [4, this.upsertChildMessages(e5)];
          case 11:
            return d5.sent(), [4, this._unsentMessageCache.upsertChildMessages(e5)];
          case 12:
            d5.sent(), d5.label = 13;
          case 13:
            return [2];
        }
      });
    });
  }, t7.prototype.upsertChildMessages = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8 = this;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this.localCacheEnabled ? [4, Promise.all(e5.map(function(e6) {
              return r(t8, void 0, void 0, function() {
                var t9, n4;
                return s(this, function(r4) {
                  switch (r4.label) {
                    case 0:
                      return t9 = [], (null === (n4 = e6.threadInfo) || void 0 === n4 ? void 0 : n4.replyCount) && e6.threadInfo.replyCount > 0 ? [4, this.getAllChildMessages(e6)] : [3, 2];
                    case 1:
                      t9 = r4.sent(), r4.label = 2;
                    case 2:
                      return t9.length > 0 ? (t9.forEach(function(t10) {
                        return t10.applyParentMessage(e6);
                      }), [4, this.upsert(t9)]) : [3, 4];
                    case 3:
                      r4.sent(), r4.label = 4;
                    case 4:
                      return [2];
                  }
                });
              });
            }))] : [3, 2];
          case 1:
            n3.sent(), n3.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t7.prototype.remove = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8, n3, r4, i4, s6, a5;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            if (!this.localCacheEnabled) return [3, 8];
            o3.label = 1;
          case 1:
            o3.trys.push([1, 6, 7, 8]), t8 = o(e5), n3 = t8.next(), o3.label = 2;
          case 2:
            return n3.done ? [3, 5] : (r4 = n3.value, [4, this.collection.remove("".concat(r4))]);
          case 3:
            o3.sent(), o3.label = 4;
          case 4:
            return n3 = t8.next(), [3, 2];
          case 5:
            return [3, 8];
          case 6:
            return i4 = o3.sent(), s6 = { error: i4 }, [3, 8];
          case 7:
            try {
              n3 && !n3.done && (a5 = t8.return) && a5.call(t8);
            } finally {
              if (s6) throw s6.error;
            }
            return [7];
          case 8:
            return [2];
        }
      });
    });
  }, t7.prototype.removeMessagesOfChannel = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.removeIf({ where: { channelUrl: e5 }, index: ks(Ns.CHANNEL_LATEST) })] : [3, 6];
          case 1:
            return n3.sent(), [4, (t8 = this._cacheContext.preference).remove("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e5, "/message/sync"))];
          case 2:
            return n3.sent(), [4, t8.remove("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e5, "/message/sync.meta"))];
          case 3:
            return n3.sent(), [4, t8.remove("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e5, "/message/changelogs"))];
          case 4:
            return n3.sent(), [4, t8.remove("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e5, "/message/changelogs.meta"))];
          case 5:
            n3.sent(), n3.label = 6;
          case 6:
            return [2];
        }
      });
    });
  }, t7.prototype.removeUnderOffset = function(e5, t8) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.removeIf({ where: { channelUrl: e5, createdAt: { "<": t8 } }, index: ks(Ns.CHANNEL_LATEST) })] : [3, 2];
          case 1:
            n3.sent(), n3.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t7.prototype.clear = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        switch (e5.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.clear()] : [3, 2];
          case 1:
            e5.sent(), e5.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t7.prototype.countBetween = function(e5, t8, n3) {
    return r(this, void 0, void 0, function() {
      var r4, i4 = this;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return this.localCacheEnabled ? (r4 = ks(Ns.CHANNEL_LATEST), [4, this.collection.query({ where: { channelUrl: e5, "/where": function(e6) {
              var r5 = i4._deserialize(e6);
              return n3.includes(r5.createdAt) && t8.match(r5);
            } }, index: r4 }).count()]) : [3, 2];
          case 1:
            return [2, s6.sent()];
          case 2:
            return [2, 0];
        }
      });
    });
  }, t7.prototype.saveBlobs = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8 = this;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, Promise.all(e5.map(function(e6) {
              return r(t8, void 0, void 0, function() {
                var t9, n4;
                return s(this, function(r4) {
                  switch (r4.label) {
                    case 0:
                      return e6 instanceof St && e6.messageParams && ((t9 = e6.messageParams).file && on(t9.file)) ? [4, this.collection.saveBlob(t9.file, e6.reqId)] : [3, 2];
                    case 1:
                      n4 = r4.sent(), t9.fileKey = n4, r4.label = 2;
                    case 2:
                      return [2];
                  }
                });
              });
            }))];
          case 1:
            return n3.sent(), [2];
        }
      });
    });
  }, t7.prototype._getGroupChannelPreferenceSize = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8, n3, r4, i4, s6, a5;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return t8 = 0, [4, (n3 = this._cacheContext.preference).get("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e5, "/message/sync"))];
          case 1:
            return r4 = o3.sent(), [4, n3.get("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e5, "/message/sync.meta"))];
          case 2:
            return i4 = o3.sent(), [4, n3.get("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e5, "/message/changelogs"))];
          case 3:
            return s6 = o3.sent(), [4, n3.get("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e5, "/message/changelogs.meta"))];
          case 4:
            return a5 = o3.sent(), r4 && (t8 += JSON.stringify(r4).length), i4 && (t8 += JSON.stringify(i4).length), s6 && (t8 += JSON.stringify(s6).length), a5 && (t8 += JSON.stringify(a5).length), [2, t8];
        }
      });
    });
  }, t7;
}(zr);
var Gs = {};
var Vs = function(e4) {
  function t7(t8) {
    var n3 = e4.call(this, t8) || this;
    return Gs[t8] = n3, n3;
  }
  return t(t7, e4), Object.defineProperty(t7.prototype, "_sdkState", { get: function() {
    return Ws.of(this._iid).sdkState;
  }, enumerable: false, configurable: true }), Object.defineProperty(t7.prototype, "_cacheContext", { get: function() {
    return Ws.of(this._iid).cacheContext;
  }, enumerable: false, configurable: true }), t7.of = function(e5, n3) {
    return void 0 === n3 && (n3 = false), Gs[e5] && !n3 || (Gs[e5] = new t7(e5)), Gs[e5];
  }, Object.defineProperty(t7.prototype, "collection", { get: function() {
    var e5 = this._cacheContext.nestdb;
    return Jr(!!e5).throw(v.databaseError), e5.collection(Wr);
  }, enumerable: false, configurable: true }), Object.defineProperty(t7.prototype, "localCacheEnabled", { get: function() {
    return this._cacheContext.localCacheEnabled && !!this.collection;
  }, enumerable: false, configurable: true }), t7.prototype._serialize = function(e5) {
    return n({}, e5.serialize());
  }, t7.prototype._deserialize = function(e5) {
    return ea.of(this._iid).buildMessageFromSerializedData(e5);
  }, t7.prototype.get = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.getByKey(e5)] : [3, 2];
          case 1:
            if (t8 = n3.sent()) return [2, this._deserialize(t8)];
            n3.label = 2;
          case 2:
            return [2, void 0];
        }
      });
    });
  }, t7.prototype.fetch = function(e5) {
    var t8 = e5.channelUrl, n3 = e5.token, r4 = e5.limit, i4 = void 0 === r4 ? 100 : r4, s6 = e5.filter, a5 = void 0 === s6 ? new Os() : s6, o3 = e5.backward, u4 = void 0 !== o3 && o3, c4 = e5.exactMatch, l3 = void 0 !== c4 && c4, d5 = e5.inclusive, h4 = void 0 === d5 || d5;
    return r(this, void 0, void 0, function() {
      var e6, r5 = this;
      return s(this, function(s7) {
        switch (s7.label) {
          case 0:
            return this.localCacheEnabled ? (e6 = { where: { channelUrl: t8, "/where": function(e7) {
              if (n3) {
                if (l3 && e7.createdAt !== n3) return false;
                if (u4) {
                  if (h4 && e7.createdAt < n3 || !h4 && e7.createdAt <= n3) return false;
                } else if (h4 && e7.createdAt > n3 || !h4 && e7.createdAt >= n3) return false;
              }
              return a5.match(r5._deserialize(e7));
            } }, index: ["channelUrl", "-createdAt", "-notificationId"], backward: u4 }, [4, this.collection.query(e6)]) : [3, 3];
          case 1:
            return [4, s7.sent().fetch({ limit: null != i4 ? i4 : void 0 })];
          case 2:
            return [2, s7.sent().map(function(e7) {
              return r5._deserialize(e7);
            })];
          case 3:
            return [2, []];
        }
      });
    });
  }, t7.prototype.upsert = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8, n3 = this;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return this.localCacheEnabled ? (t8 = e5.map(function(e6) {
              return n3._serialize(e6);
            }), [4, this.collection.upsertMany(t8)]) : [3, 2];
          case 1:
            r4.sent(), r4.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t7.prototype.remove = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8, n3, r4, i4, s6, a5;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            if (!this.localCacheEnabled) return [3, 8];
            o3.label = 1;
          case 1:
            o3.trys.push([1, 6, 7, 8]), t8 = o(e5), n3 = t8.next(), o3.label = 2;
          case 2:
            return n3.done ? [3, 5] : (r4 = n3.value, [4, this.collection.remove(r4)]);
          case 3:
            o3.sent(), o3.label = 4;
          case 4:
            return n3 = t8.next(), [3, 2];
          case 5:
            return [3, 8];
          case 6:
            return i4 = o3.sent(), s6 = { error: i4 }, [3, 8];
          case 7:
            try {
              n3 && !n3.done && (a5 = t8.return) && a5.call(t8);
            } finally {
              if (s6) throw s6.error;
            }
            return [7];
          case 8:
            return [2];
        }
      });
    });
  }, t7.prototype.markAsReadByTimestamp = function(e5, t8) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.updateIf({ where: { channelUrl: e5, messageStatus: ft.SENT, createdAt: { "<": t8 } } }, { set: { messageStatus: ft.READ } })] : [3, 2];
          case 1:
            n3.sent(), n3.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t7.prototype.markAsReadByMessageIds = function(e5, t8) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.updateIf({ where: { channelUrl: e5, notificationId: { "/in": t8 }, messageStatus: ft.SENT } }, { set: { messageStatus: ft.READ } })] : [3, 2];
          case 1:
            return [2, n3.sent().length];
          case 2:
            return [2, 0];
        }
      });
    });
  }, t7.prototype.removeMessagesOfChannel = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.removeIf({ where: { channelUrl: e5 }, index: ["channelUrl", "-createdAt", "-notificationId"] })] : [3, 6];
          case 1:
            return n3.sent(), [4, (t8 = this._cacheContext.preference).remove("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e5, "/message/sync"))];
          case 2:
            return n3.sent(), [4, t8.remove("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e5, "/message/sync.meta"))];
          case 3:
            return n3.sent(), [4, t8.remove("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e5, "/message/changelogs"))];
          case 4:
            return n3.sent(), [4, t8.remove("sendbird:".concat(this._sdkState.userId, "@groupchannel/").concat(e5, "/message/changelogs.meta"))];
          case 5:
            n3.sent(), n3.label = 6;
          case 6:
            return [2];
        }
      });
    });
  }, t7.prototype.removeUnderOffset = function(e5, t8) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.removeIf({ where: { channelUrl: e5, createdAt: { "<": t8 } }, index: ks(Ns.CHANNEL_LATEST) })] : [3, 2];
          case 1:
            n3.sent(), n3.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t7.prototype.clear = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        switch (e5.label) {
          case 0:
            return this.localCacheEnabled ? [4, this.collection.clear()] : [3, 2];
          case 1:
            e5.sent(), e5.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, t7.prototype.countBetween = function(e5, t8, n3) {
    return r(this, void 0, void 0, function() {
      var r4, i4 = this;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return this.localCacheEnabled ? (r4 = ["channelUrl", "-createdAt", "-notificationId"], [4, this.collection.query({ where: { channelUrl: e5, "/where": function(e6) {
              var r5 = i4._deserialize(e6);
              return n3.includes(r5.createdAt) && t8.match(r5);
            } }, index: r4 }).count()]) : [3, 2];
          case 1:
            return [2, s6.sent()];
          case 2:
            return [2, 0];
        }
      });
    });
  }, t7;
}(zr);
var Hs = {};
var Ws2 = function(e4) {
  function t7(t8) {
    var n3 = e4.call(this, t8) || this;
    return n3._observers = /* @__PURE__ */ new Map(), n3._dispatcherContext = n3._dispatcher.on(function(e5) {
      return r(n3, void 0, void 0, function() {
        var t9, n4, r4, i4, s6, a5, o3, u4, c4, l3, d5, h4, f4, p4, m5, v5, y6, _2, g4, b6 = this;
        return s(this, function(E4) {
          switch (E4.label) {
            case 0:
              return e5 instanceof $s ? (t9 = e5.messages, g4 = e5.source, a5 = e5.isWebSocketEventComing, n4 = t9.filter(function(e6) {
                return e6 instanceof pt && e6.channelType !== q.OPEN && e6.messageId > 0;
              }), r4 = t9.filter(function(e6) {
                return e6 instanceof pt && e6.channelType !== q.OPEN && 0 === e6.messageId;
              }), i4 = t9.filter(function(e6) {
                return e6 instanceof Tt;
              }), n4.length > 0 ? [4, as(function() {
                return r(b6, void 0, void 0, function() {
                  return s(this, function(e6) {
                    switch (e6.label) {
                      case 0:
                        return [4, this._messageCache.upsert(n4)];
                      case 1:
                        return e6.sent(), [4, this._unsentMessageCache.remove(n4.map(function(e7) {
                          return e7 instanceof mt ? e7.reqId : null;
                        }).filter(function(e7) {
                          return null !== e7;
                        }))];
                      case 2:
                        return e6.sent(), [2];
                    }
                  });
                });
              })] : [3, 2]) : [3, 7];
            case 1:
              E4.sent(), a5 || this._broadcastUpdateEvent(n4, g4), E4.label = 2;
            case 2:
              return r4.length > 0 ? [4, as(function() {
                return r(b6, void 0, void 0, function() {
                  return s(this, function(e6) {
                    switch (e6.label) {
                      case 0:
                        return [4, this._unsentMessageCache.upsert(r4)];
                      case 1:
                        return e6.sent(), [2];
                    }
                  });
                });
              })] : [3, 4];
            case 3:
              E4.sent(), a5 || this._broadcastUpdateEvent(r4, g4), E4.label = 4;
            case 4:
              return i4.length > 0 ? [4, as(function() {
                return r(b6, void 0, void 0, function() {
                  return s(this, function(e6) {
                    switch (e6.label) {
                      case 0:
                        return [4, this._notificationCache.upsert(i4)];
                      case 1:
                        return e6.sent(), [2];
                    }
                  });
                });
              })] : [3, 6];
            case 5:
              E4.sent(), a5 || this._broadcastUpdateEvent(i4, g4), E4.label = 6;
            case 6:
              return [3, 24];
            case 7:
              return e5 instanceof eo ? (s6 = e5.messageIds, g4 = e5.source, a5 = e5.isWebSocketEventComing, o3 = s6.filter(function(e6) {
                return "number" == typeof e6;
              }), u4 = s6.filter(function(e6) {
                return "string" == typeof e6;
              }), [4, as(function() {
                return r(b6, void 0, void 0, function() {
                  return s(this, function(e6) {
                    switch (e6.label) {
                      case 0:
                        return o3.length > 0 ? [4, this._messageCache.remove(o3)] : [3, 2];
                      case 1:
                        e6.sent(), e6.label = 2;
                      case 2:
                        return u4.length > 0 ? [4, this._notificationCache.remove(u4)] : [3, 4];
                      case 3:
                        e6.sent(), e6.label = 4;
                      case 4:
                        return [2];
                    }
                  });
                });
              })]) : [3, 9];
            case 8:
              return E4.sent(), a5 || this._broadcastRemoveEvent(s6, g4), [3, 24];
            case 9:
              return e5 instanceof io ? (c4 = e5.reqId, g4 = e5.source, [4, as(function() {
                return r(b6, void 0, void 0, function() {
                  return s(this, function(e6) {
                    switch (e6.label) {
                      case 0:
                        return [4, this._unsentMessageCache.remove([c4])];
                      case 1:
                        return e6.sent(), [2];
                    }
                  });
                });
              })]) : [3, 11];
            case 10:
              return E4.sent(), this._broadcastRemoveUnsentEvent(c4, g4), [3, 24];
            case 11:
              return e5 instanceof ro ? (l3 = e5.polls, g4 = e5.source, this._cacheContext.localCacheEnabled ? (d5 = l3.map(function(e6) {
                return e6.messageId;
              }), [4, Promise.all(d5.map(function(e6) {
                return b6._messageCache.get(e6);
              }))]) : [3, 14]) : [3, 15];
            case 12:
              return (h4 = E4.sent().filter(function(e6) {
                return e6;
              })).length > 0 && l3.forEach(function(e6) {
                var t10 = h4.find(function(t11) {
                  return t11.messageId === e6.messageId;
                });
                t10 && t10.applyPoll(e6);
              }), [4, as(function() {
                return r(b6, void 0, void 0, function() {
                  return s(this, function(e6) {
                    switch (e6.label) {
                      case 0:
                        return [4, this._messageCache.upsert(h4)];
                      case 1:
                        return [2, e6.sent()];
                    }
                  });
                });
              })];
            case 13:
              E4.sent(), E4.label = 14;
            case 14:
              return this._broadcastPollChangeLogEvent(l3, g4), [3, 24];
            case 15:
              return e5 instanceof so ? (f4 = e5.event, g4 = e5.source, [4, this._messageCache.get(f4.messageId)]) : [3, 19];
            case 16:
              return (p4 = E4.sent()) && p4.isUserMessage() && p4.poll && p4.poll.applyPollUpdateEvent(f4) ? [4, as(function() {
                return r(b6, void 0, void 0, function() {
                  return s(this, function(e6) {
                    switch (e6.label) {
                      case 0:
                        return [4, this._messageCache.upsert([p4])];
                      case 1:
                        return [2, e6.sent()];
                    }
                  });
                });
              })] : [3, 18];
            case 17:
              E4.sent(), E4.label = 18;
            case 18:
              return this._broadcastPollUpdateEvent(f4, g4), [3, 24];
            case 19:
              return e5 instanceof oo ? (m5 = e5.event, g4 = e5.source, [4, this._messageCache.get(m5.messageId)]) : [3, 23];
            case 20:
              return (v5 = E4.sent()) && v5.isUserMessage() && v5.poll && v5.poll.applyPollVoteEvent(m5) ? [4, as(function() {
                return r(b6, void 0, void 0, function() {
                  return s(this, function(e6) {
                    switch (e6.label) {
                      case 0:
                        return [4, this._messageCache.upsert([v5])];
                      case 1:
                        return [2, e6.sent()];
                    }
                  });
                });
              })] : [3, 22];
            case 21:
              E4.sent(), E4.label = 22;
            case 22:
              return this._broadcastPollVoteEvent(m5, g4), [3, 24];
            case 23:
              e5 instanceof to ? (y6 = e5.event, g4 = e5.source, y6.messageId > 0 && this._broadcastReactionUpdateEvent(y6, g4)) : e5 instanceof no && (_2 = e5.event, g4 = e5.source, this._broadcastThreadUpdateEvent(_2, g4)), E4.label = 24;
            case 24:
              return [2];
          }
        });
      });
    }), n3;
  }
  return t(t7, e4), Object.defineProperty(t7.prototype, "_cacheContext", { get: function() {
    return Ws.of(this._iid).cacheContext;
  }, enumerable: false, configurable: true }), Object.defineProperty(t7.prototype, "_dispatcher", { get: function() {
    return Ws.of(this._iid).dispatcher;
  }, enumerable: false, configurable: true }), Object.defineProperty(t7.prototype, "_messageCache", { get: function() {
    return Qs.of(this._iid);
  }, enumerable: false, configurable: true }), Object.defineProperty(t7.prototype, "_unsentMessageCache", { get: function() {
    return Ks2.of(this._iid);
  }, enumerable: false, configurable: true }), Object.defineProperty(t7.prototype, "_notificationCache", { get: function() {
    return Vs.of(this._iid);
  }, enumerable: false, configurable: true }), t7.of = function(e5, n3) {
    var r4;
    return void 0 === n3 && (n3 = false), Hs[e5] && !n3 || (Hs[e5] && (null === (r4 = Hs[e5]._dispatcherContext) || void 0 === r4 || r4.close()), Hs[e5] = new t7(e5)), Hs[e5];
  }, t7.prototype._broadcastUpdateEvent = function(e5, t8) {
    var n3, r4;
    try {
      for (var i4 = o(this._observers.values()), s6 = i4.next(); !s6.done; s6 = i4.next()) {
        var a5 = s6.value;
        a5.onUpdate && a5.onUpdate(e5, t8);
      }
    } catch (e6) {
      n3 = { error: e6 };
    } finally {
      try {
        s6 && !s6.done && (r4 = i4.return) && r4.call(i4);
      } finally {
        if (n3) throw n3.error;
      }
    }
  }, t7.prototype._broadcastPollChangeLogEvent = function(e5, t8) {
    var n3, r4;
    try {
      for (var i4 = o(this._observers.values()), s6 = i4.next(); !s6.done; s6 = i4.next()) {
        var a5 = s6.value;
        a5.onPollChangeLogUpdate && a5.onPollChangeLogUpdate(e5, t8);
      }
    } catch (e6) {
      n3 = { error: e6 };
    } finally {
      try {
        s6 && !s6.done && (r4 = i4.return) && r4.call(i4);
      } finally {
        if (n3) throw n3.error;
      }
    }
  }, t7.prototype._broadcastPollUpdateEvent = function(e5, t8) {
    var n3, r4;
    try {
      for (var i4 = o(this._observers.values()), s6 = i4.next(); !s6.done; s6 = i4.next()) {
        var a5 = s6.value;
        a5.onPollUpdate && a5.onPollUpdate(e5, t8);
      }
    } catch (e6) {
      n3 = { error: e6 };
    } finally {
      try {
        s6 && !s6.done && (r4 = i4.return) && r4.call(i4);
      } finally {
        if (n3) throw n3.error;
      }
    }
  }, t7.prototype._broadcastPollVoteEvent = function(e5, t8) {
    var n3, r4;
    try {
      for (var i4 = o(this._observers.values()), s6 = i4.next(); !s6.done; s6 = i4.next()) {
        var a5 = s6.value;
        a5.onPollVote && a5.onPollVote(e5, t8);
      }
    } catch (e6) {
      n3 = { error: e6 };
    } finally {
      try {
        s6 && !s6.done && (r4 = i4.return) && r4.call(i4);
      } finally {
        if (n3) throw n3.error;
      }
    }
  }, t7.prototype._broadcastRemoveEvent = function(e5, t8) {
    var n3, r4;
    try {
      for (var i4 = o(this._observers.values()), s6 = i4.next(); !s6.done; s6 = i4.next()) {
        var a5 = s6.value;
        a5.onRemove && a5.onRemove(e5, t8);
      }
    } catch (e6) {
      n3 = { error: e6 };
    } finally {
      try {
        s6 && !s6.done && (r4 = i4.return) && r4.call(i4);
      } finally {
        if (n3) throw n3.error;
      }
    }
  }, t7.prototype._broadcastRemoveUnsentEvent = function(e5, t8) {
    var n3, r4;
    try {
      for (var i4 = o(this._observers.values()), s6 = i4.next(); !s6.done; s6 = i4.next()) {
        var a5 = s6.value;
        a5.onRemoveUnsent && a5.onRemoveUnsent(e5, t8);
      }
    } catch (e6) {
      n3 = { error: e6 };
    } finally {
      try {
        s6 && !s6.done && (r4 = i4.return) && r4.call(i4);
      } finally {
        if (n3) throw n3.error;
      }
    }
  }, t7.prototype._broadcastReactionUpdateEvent = function(e5, t8) {
    var n3, r4;
    try {
      for (var i4 = o(this._observers.values()), s6 = i4.next(); !s6.done; s6 = i4.next()) {
        var a5 = s6.value;
        a5.onReactionUpdate && a5.onReactionUpdate(e5, t8);
      }
    } catch (e6) {
      n3 = { error: e6 };
    } finally {
      try {
        s6 && !s6.done && (r4 = i4.return) && r4.call(i4);
      } finally {
        if (n3) throw n3.error;
      }
    }
  }, t7.prototype._broadcastThreadUpdateEvent = function(e5, t8) {
    var n3, r4;
    try {
      for (var i4 = o(this._observers.values()), s6 = i4.next(); !s6.done; s6 = i4.next()) {
        var a5 = s6.value;
        a5.onThreadInfoUpdate && a5.onThreadInfoUpdate(e5, t8);
      }
    } catch (e6) {
      n3 = { error: e6 };
    } finally {
      try {
        s6 && !s6.done && (r4 = i4.return) && r4.call(i4);
      } finally {
        if (n3) throw n3.error;
      }
    }
  }, t7.prototype.subscribe = function(e5, t8) {
    this._observers.set(e5, t8);
  }, t7.prototype.unsubscribe = function(e5) {
    this._observers.delete(e5);
  }, t7.prototype.unsubscribeAll = function() {
    this._observers.clear();
  }, t7;
}(zr);
var Ys = function(t7) {
  function n3(n4) {
    var r4 = this, s6 = n4.reverse, a5 = void 0 !== s6 && s6, o3 = n4.limit, u4 = void 0 === o3 ? 20 : o3, c4 = n4.keys, l3 = n4.token;
    return (r4 = t7.call(this) || this).method = oe.GET, r4.path = "".concat(Ne), r4.params = re({ token: l3, limit: u4, reverse: a5, order: X.UPDATED_AT, show_ui_template: true, show_color_variables: true, keys: c4 }), r4;
  }
  return t(n3, t7), n3;
}(xe);
var Js2 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this, i4 = n3.next, s6 = n3.has_more, a5 = void 0 !== s6 && s6, o3 = n3.templates;
    return r4.nextToken = i4, r4.hasMore = a5, r4.templates = o3.map(function(e5) {
      return { template: JSON.stringify(e5) };
    }), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Xs = function(e4) {
  function t7(t8) {
    var n3 = this, r4 = t8.key;
    return (n3 = e4.call(this) || this).method = oe.GET, n3.path = "".concat(Ne, "/").concat(r4), n3;
  }
  return t(t7, e4), t7;
}(xe);
var Zs2 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.template = JSON.stringify(n3), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var $s2 = {};
var ea = function() {
  function n3(e4, t7) {
    var n4 = t7.sdkState, r4 = t7.dispatcher, i4 = t7.requestQueue, s6 = t7.onlineDetector, a5 = t7.cacheContext;
    this._iid = e4, this._sdkState = n4, this._requestQueue = i4, this._dispatcher = r4, this._cacheContext = a5, Qs.of(e4), Ks2.of(e4), Ws2.of(e4), this.fileMessageQueue = new Rt(e4, { sdkState: n4, dispatcher: r4, requestQueue: i4, onlineDetector: s6, cacheContext: a5 }), $s2[e4] = this;
  }
  return n3.of = function(e4) {
    return $s2[e4];
  }, n3.prototype.buildMessageFromSerializedData = function(e4) {
    var t7 = Xr(e4);
    if (t7.notificationId) return new Tt(this._iid, Tt.payloadify(t7));
    switch (t7.messageType) {
      case z.USER:
        return new It(this._iid, It.payloadify(t7));
      case z.FILE:
        return Et._isMultipleFilesMessageSerializedData(t7) ? new Et(this._iid, Et.payloadify(t7)) : new St(this._iid, St.payloadify(t7));
      case z.ADMIN:
        return new _t(this._iid, _t.payloadify(t7));
    }
    throw v.invalidParameters;
  }, n3.prototype.buildUserMessageCreateParamsFromSerializedData = function(n4, r4) {
    return re(se({ data: r4.data, customType: r4.customType, mentionType: r4.mentionType, mentionedUserIds: r4.mentionedUserIds, mentionedUsers: r4.mentionedUsers, mentionedMessageTemplate: r4.mentionedMessageTemplate, metaArrays: r4.metaArrays, parentMessageId: r4.parentMessageId, isReplyToChannel: n4.isReplyToChannel, pushNotificationDeliveryOption: n4.pushNotificationDeliveryOption, appleCriticalAlertOptions: r4.appleCriticalAlertOptions, reqId: r4.reqId, message: r4.message, translationTargetLanguages: Object.keys(r4.translations), pollId: n4.pollId }));
  }, n3.prototype.buildFileMessageCreateParamsFromSerializedData = function(n4, r4) {
    var i4;
    return re(se({ data: r4.data, customType: r4.customType, mentionType: r4.mentionType, mentionedUserIds: r4.mentionedUserIds, mentionedUsers: r4.mentionedUsers, mentionedMessageTemplate: r4.mentionedMessageTemplate, metaArrays: r4.metaArrays, parentMessageId: r4.parentMessageId, isReplyToChannel: n4.isReplyToChannel, pushNotificationDeliveryOption: n4.pushNotificationDeliveryOption, appleCriticalAlertOptions: r4.appleCriticalAlertOptions, reqId: r4.reqId, file: n4.file, fileKey: n4.fileKey, fileUrl: r4.plainUrl, fileName: r4.name, fileSize: r4.size, mimeType: r4.type, thumbnailSizes: null === (i4 = r4.thumbnails) || void 0 === i4 ? void 0 : i4.map(function(e4) {
      return { maxWidth: e4.width, maxHeight: e4.height };
    }), fileType: n4.fileType, requireAuth: r4.requireAuth }));
  }, n3.prototype.buildMultipleFilesMessageCreateParamsFromSerializedData = function(t7, n4) {
    var r4 = this;
    return re({ data: n4.data, customType: n4.customType, mentionType: n4.mentionType, mentionedUserIds: n4.mentionedUserIds, mentionedUsers: n4.mentionedUsers, mentionedMessageTemplate: n4.mentionedMessageTemplate, metaArrays: n4.metaArrays, parentMessageId: n4.parentMessageId, isReplyToChannel: t7.isReplyToChannel, pushNotificationDeliveryOption: t7.pushNotificationDeliveryOption, appleCriticalAlertOptions: n4.appleCriticalAlertOptions, reqId: n4.reqId, fileInfoList: t7.fileInfoList.map(function(e4) {
      return new At(r4._iid, e4);
    }) });
  }, n3.prototype.buildScheduledUserMessageCreateParamsFromSerializedData = function(e4, t7) {
    return n(n({}, this.buildUserMessageCreateParamsFromSerializedData(e4, t7)), { scheduledAt: e4.scheduledAt });
  }, n3.prototype.buildScheduledFileMessageCreateParamsFromSerializedData = function(e4, t7) {
    return n(n({}, this.buildFileMessageCreateParamsFromSerializedData(e4, t7)), { scheduledAt: e4.scheduledAt });
  }, n3.prototype.buildSenderFromSerializedData = function(e4) {
    var t7 = Xr(e4);
    return new Ke(this._iid, Ke.payloadify(t7));
  }, n3.prototype.getMessage = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n4;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return t7 = new zt(e4), [4, this._requestQueue.send(t7)];
          case 1:
            return n4 = r4.sent(), [2, n4.as(Bt).message];
        }
      });
    });
  }, n3.prototype.getScheduledMessage = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n4;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return t7 = new Vt(e4), [4, this._requestQueue.send(t7)];
          case 1:
            return n4 = r4.sent(), [2, n4.as(Ht).message];
        }
      });
    });
  }, n3.prototype.getMessagesByMessageId = function(e4, t7, n4, r4, i4) {
    return void 0 === i4 && (i4 = Ks.REQUEST_MESSAGE), r(this, void 0, void 0, function() {
      var s6, a5, o3;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return s6 = new Kt(n(n({ channelType: t7, channelUrl: e4, token: String(n4) }, Dt), r4)), [4, this._requestQueue.send(s6)];
          case 1:
            return a5 = c4.sent(), o3 = a5.as(jt).messages, this._dispatcher.dispatch(new $s({ messages: o3, source: i4 })), [2, o3];
        }
      });
    });
  }, n3.prototype.getMessagesByTimestamp = function(e4, t7, n4, r4, i4) {
    return void 0 === i4 && (i4 = Ks.REQUEST_MESSAGE), r(this, void 0, void 0, function() {
      var s6, a5, o3;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return s6 = new Kt(n(n({ channelType: t7, channelUrl: e4, timestamp: n4 }, Dt), r4)), [4, this._requestQueue.send(s6)];
          case 1:
            return a5 = c4.sent(), o3 = a5.as(jt).messages, this._dispatcher.dispatch(new $s({ messages: o3, source: i4 })), [2, o3];
        }
      });
    });
  }, n3.prototype._getMessagesByTimestampForCollection = function(e4, t7, n4, r4, i4, s6, a5) {
    return void 0 === i4 && (i4 = Ks.REQUEST_MESSAGE), r(this, void 0, void 0, function() {
      var o3, c4, l3, d5, h4, f4;
      return s(this, function(p4) {
        switch (p4.label) {
          case 0:
            return o3 = new Kt(n(n(n({ channelType: t7, channelUrl: e4, timestamp: n4 }, Dt), r4), { checkingHasNext: s6, checkingContinuousMessages: a5 })), [4, this._requestQueue.send(o3)];
          case 1:
            return c4 = p4.sent(), l3 = c4.as(jt), d5 = l3.messages, h4 = l3.isContinuousMessages, f4 = l3.hasNext, this._dispatcher.dispatch(new $s({ messages: d5, source: i4 })), [2, { messages: d5, isContinuousMessages: h4, hasNext: f4 }];
        }
      });
    });
  }, n3.prototype.getThreadedMessagesByTimestamp = function(e4, t7, n4, r4) {
    return void 0 === r4 && (r4 = Ks.REQUEST_THREADED_MESSAGE), r(this, void 0, void 0, function() {
      var i4, s6, a5, o3;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return i4 = new Kt(n(n(n({ channelUrl: e4.channelUrl, channelType: e4.channelType, timestamp: t7 }, vt), n4), { replyType: B.ALL, parentMessageId: e4.messageId, includeThreadInfo: true })), [4, this._requestQueue.send(i4)];
          case 1:
            return s6 = c4.sent(), a5 = s6.as(jt).messages, (o3 = a5.slice(1)).forEach(function(t8) {
              t8.parentMessage = e4;
            }), this._dispatcher.dispatch(new $s({ messages: o3, source: r4 })), [2, { parentMessage: a5[0], threadedMessages: o3 }];
        }
      });
    });
  }, n3.prototype.getMessageTemplatesByToken = function(e4, t7) {
    return void 0 === t7 && (t7 = {}), r(this, void 0, void 0, function() {
      var n4, r4, i4, s6, a5, o3;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return n4 = new Ys(n({ token: e4 }, t7)), [4, this._requestQueue.send(n4)];
          case 1:
            return r4 = c4.sent(), i4 = r4.as(Js2), s6 = i4.hasMore, a5 = i4.nextToken, o3 = i4.templates, [2, { hasMore: s6, token: a5, templates: o3 }];
        }
      });
    });
  }, n3.prototype.getMessageTemplate = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n4;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return t7 = new Xs({ key: e4 }), [4, this._requestQueue.send(t7)];
          case 1:
            return n4 = r4.sent(), [2, { template: n4.as(Zs2).template }];
        }
      });
    });
  }, n3.prototype.getMessageChangelogs = function(n4, r4, i4, s6, a5) {
    return void 0 === a5 && (a5 = Ks.REQUEST_MESSAGE_CHANGELOGS), r(this, void 0, void 0, function() {
      var o3, c4, l3, d5, h4, f4, p4, m5;
      return s(this, function(v5) {
        switch (v5.label) {
          case 0:
            return o3 = new Qt(re(se(n(n({ channelType: r4, channelUrl: n4, timestamp: "number" == typeof i4 ? i4 : null, token: "string" == typeof i4 ? i4 : null }, Ft), s6)))), [4, this._requestQueue.send(o3)];
          case 1:
            return c4 = v5.sent(), l3 = c4.as(Gt), d5 = l3.updatedMessages, h4 = l3.deletedMessagesInfo, f4 = l3.hasMore, p4 = l3.nextToken, m5 = h4.map(function(e4) {
              return e4.messageId;
            }), d5.length > 0 && this._dispatcher.dispatch(new $s({ messages: d5, source: a5 })), m5.length > 0 && this._dispatcher.dispatch(new eo({ messageIds: m5, source: a5 })), [2, { updatedMessages: d5, deletedMessageIds: m5, hasMore: f4, token: p4 }];
        }
      });
    });
  }, n3;
}();
var ta = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8) || this;
    r4.targetMessageId = 0;
    var i4 = n3.thread_info, s6 = n3.parent_message_id, a5 = n3.channel_url, o3 = n3.channel_type;
    return i4 && w("object", i4) && w("number", s6) && w("string", a5) && w("string", o3) && (r4.threadInfo = new Re(t8, i4), r4.targetMessageId = s6, r4.channelUrl = a5, r4.channelType = o3), r4;
  }
  return t(t7, e4), t7;
}(zr);
var na = { channelUrl: "", channelType: q.BASE, messageId: 0, includeReactions: false, includeMetaArray: false, includeParentMessageInfo: false, includeThreadInfo: false };
var ra = function(e4) {
  function t7(t8) {
    var n3 = t8.channelCustomType, r4 = t8.keyword, s6 = t8.limit, a5 = t8.reverse, o3 = t8.exactMatch, u4 = t8.channelUrl, c4 = t8.order, l3 = t8.messageTimestampFrom, d5 = t8.messageTimestampTo, h4 = t8.advancedQuery, f4 = t8.targetFields, p4 = t8.nextToken, m5 = e4.call(this) || this;
    return m5.method = oe.GET, m5.path = "".concat(pe, "/messages"), m5.params = { custom_type: n3, query: r4, limit: s6, reverse: a5, exact_match: o3, channel_url: u4, message_ts_from: l3, message_ts_to: d5, sort_field: c4, advanced_query: h4, target_fields: f4, after: p4 }, m5;
  }
  return t(t7, e4), t7;
}(xe);
var ia = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.messages = n3.results.map(function(e5) {
      return Mt(t8, e5);
    }), r4.hasNext = n3.has_next, r4.nextToken = n3.end_cursor, r4.totalCount = n3.total_count, r4;
  }
  return t(t7, e4), t7;
}(Ue);
!function(e4) {
  e4.SCORE = "score", e4.TIMESTAMP = "ts";
}(Ps2 || (Ps2 = {}));
var sa = function(e4) {
  function i4(t7, n3) {
    var r4, i5, s6, a5, o3, u4, c4, l3, d5, h4 = this;
    return (h4 = e4.call(this, t7, n3) || this).keyword = "", h4.reverse = false, h4.exactMatch = false, h4.channelUrl = "", h4.channelCustomType = "", h4.messageTimestampFrom = null, h4.messageTimestampTo = null, h4.order = Ps2.SCORE, h4.advancedQuery = false, h4.targetFields = null, h4._nextToken = "", h4.totalCount = -1, h4.keyword = n3.keyword, h4.reverse = null !== (r4 = n3.reverse) && void 0 !== r4 && r4, h4.exactMatch = null !== (i5 = n3.exactMatch) && void 0 !== i5 && i5, h4.channelUrl = null !== (s6 = n3.channelUrl) && void 0 !== s6 ? s6 : "", h4.channelCustomType = null !== (a5 = n3.channelCustomType) && void 0 !== a5 ? a5 : "", h4.messageTimestampFrom = null !== (o3 = n3.messageTimestampFrom) && void 0 !== o3 ? o3 : null, h4.messageTimestampTo = null !== (u4 = n3.messageTimestampTo) && void 0 !== u4 ? u4 : null, h4.order = null !== (c4 = n3.order) && void 0 !== c4 ? c4 : Ps2.SCORE, h4.advancedQuery = null !== (l3 = n3.advancedQuery) && void 0 !== l3 && l3, h4.targetFields = null !== (d5 = n3.targetFields) && void 0 !== d5 ? d5 : null, h4;
  }
  return t(i4, e4), i4.prototype._validate = function() {
    return e4.prototype._validate.call(this) && w("string", this.keyword) && this.keyword.length > 0 && w("boolean", this.reverse) && w("boolean", this.exactMatch) && w("string", this.channelUrl) && w("string", this.channelCustomType) && (w("number", this.messageTimestampFrom) || null === this.messageTimestampFrom) && (w("number", this.messageTimestampTo) || null === this.messageTimestampTo) && S(Ps2, this.order) && w("boolean", this.advancedQuery) && N("string", this.targetFields, true);
  }, i4.prototype.next = function() {
    return r(this, void 0, void 0, function() {
      var e5, r4, i5, s6, a5, o3, c4, l3;
      return s(this, function(d5) {
        switch (d5.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e5 = Ws.of(this._iid).requestQueue, r4 = new ra(se(n(n({}, this), { nextToken: this._nextToken ? this._nextToken : null }))), [4, e5.send(r4)]) : [3, 2] : [3, 5];
          case 1:
            return i5 = d5.sent(), s6 = i5.as(ia), a5 = s6.messages, o3 = s6.hasNext, c4 = s6.nextToken, l3 = s6.totalCount, this._nextToken = c4, this._hasNext = o3, this._isLoading = false, this.totalCount = l3, [2, a5];
          case 2:
            return [2, []];
          case 3:
            throw v.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw v.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, i4;
}(_o);
var aa = function(n3) {
  function s6(r4) {
    var s7 = r4.channelType, a5 = r4.channelUrl, o3 = r4.limit, u4 = r4.token, c4 = n3.call(this) || this;
    return c4.method = oe.GET, c4.path = "".concat(Ie(s7), "/").concat(encodeURIComponent(a5), "/messages/parent_thread_message"), c4.params = re(se({ limit: o3, token: u4 })), c4;
  }
  return t(s6, n3), s6;
}(xe);
var oa = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.token = n3.next, r4.messages = n3.messages.map(function(e5) {
      return Mt(t8, e5);
    }), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var ua = function(e4) {
  function t7(t8, n3, r4, i4) {
    var s6 = e4.call(this, t8, n3, r4, i4) || this;
    return s6._edge = "", s6;
  }
  return t(t7, e4), t7.prototype._validate = function() {
    return e4.prototype._validate.call(this);
  }, t7.prototype.load = function() {
    return r(this, void 0, void 0, function() {
      var e5, t8, r4, i4, s6, a5;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e5 = Ws.of(this._iid).requestQueue, t8 = new aa({ channelType: this.channelType, channelUrl: this.channelUrl, token: this._edge, limit: this.limit }), [4, e5.send(t8)]) : [3, 2] : [3, 5];
          case 1:
            return r4 = o3.sent(), i4 = r4.as(oa), s6 = i4.messages, a5 = i4.token, this._edge = a5, this._hasNext = !!a5, this._isLoading = false, [2, s6];
          case 2:
            return [2, []];
          case 3:
            throw v.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw v.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, t7;
}(fo);
var ca = { channelUrl: "", scheduledMessageId: 0 };
var la = { reverse: false, limit: 20 };
var da = function(e4) {
  function t7() {
    var t8 = null !== e4 && e4.apply(this, arguments) || this;
    return t8.name = "message", t8;
  }
  return t(t7, e4), t7.prototype.init = function(t8, n3) {
    var r4 = n3.sdkState, i4 = n3.dispatcher, s6 = n3.sessionManager, a5 = n3.requestQueue, o3 = n3.logger, u4 = n3.onlineDetector, c4 = n3.cacheContext;
    e4.prototype.init.call(this, t8, { sdkState: r4, dispatcher: i4, sessionManager: s6, requestQueue: a5, logger: o3, onlineDetector: u4, cacheContext: c4 }), this._manager = new ea(t8, { sdkState: r4, dispatcher: i4, requestQueue: a5, onlineDetector: u4, cacheContext: c4 });
  }, t7.prototype.buildMessageFromSerializedData = function(e5) {
    return this._manager.buildMessageFromSerializedData(e5);
  }, t7.prototype.buildSenderFromSerializedData = function(e5) {
    return this._manager.buildSenderFromSerializedData(e5);
  }, t7.prototype.getMessage = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8, n3;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return t8 = n(n({}, na), e5), Jr(function(e6) {
              return w("string", e6.channelUrl) && S(q, e6.channelType) && w("number", e6.messageId) && w("boolean", e6.includeReactions, true) && w("boolean", e6.includeMetaArray, true) && w("boolean", e6.includeParentMessageInfo, true) && w("boolean", e6.includeThreadInfo, true);
            }(t8)).throw(v.invalidParameters), [4, this._manager.getMessage(t8)];
          case 1:
            if ((n3 = r4.sent()) instanceof pt || n3 instanceof Tt || null === n3) return [2, n3];
            throw "Unknown message type is given.";
        }
      });
    });
  }, t7.prototype.getScheduledMessage = function(e5) {
    return r(this, void 0, void 0, function() {
      var t8;
      return s(this, function(n3) {
        return t8 = n(n({}, ca), e5), Jr(function(e6) {
          return w("string", e6.channelUrl) && "" !== e6.channelUrl && w("number", e6.scheduledMessageId) && e6.scheduledMessageId > 0;
        }(t8)).throw(v.invalidParameters), [2, this._manager.getScheduledMessage(t8)];
      });
    });
  }, t7.prototype.getMessageTemplatesByToken = function(e5, t8) {
    return void 0 === t8 && (t8 = {}), r(this, void 0, void 0, function() {
      var n3;
      return s(this, function(r4) {
        return n3 = n(n({}, la), t8), Jr(w("string", e5, true) && function(e6) {
          return w("boolean", e6.reverse, true) && w("number", e6.limit, true) && N("string", e6.keys, true);
        }(n3)).throw(v.invalidParameters), [2, this._manager.getMessageTemplatesByToken(e5, n3)];
      });
    });
  }, t7.prototype.getMessageTemplate = function(e5) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t8) {
        return Jr(w("string", e5)).throw(v.invalidParameters), [2, this._manager.getMessageTemplate(e5)];
      });
    });
  }, t7;
}(Zs);

// node_modules/@sendbird/chat/lib/__bundle-24f017be.js
var E;
var p2;
var R2;
!function(e4) {
  e4.LATEST_LAST_MESSAGE = "latest_last_message", e4.CHRONOLOGICAL = "chronological", e4.CHANNEL_NAME_ALPHABETICAL = "channel_name_alphabetical", e4.METADATA_VALUE_ALPHABETICAL = "metadata_value_alphabetical";
}(E || (E = {})), function(e4) {
  e4.CHRONOLOGICAL = "chronological", e4.CHANNEL_NAME_ALPHABETICAL = "channel_name_alphabetical", e4.METADATA_VALUE_ALPHABETICAL = "metadata_value_alphabetical";
}(p2 || (p2 = {})), function(e4) {
  e4.CREATED_AT = "created_at", e4.SCHEDULED_AT = "scheduled_at";
}(R2 || (R2 = {}));
var C2;
var L2 = function(e4) {
  switch (e4) {
    case E.LATEST_LAST_MESSAGE:
      return ["-lastMessageUpdatedAt", "-createdAt", "syncIndex"];
    case E.CHRONOLOGICAL:
      return ["-createdAt", "syncIndex"];
    case E.CHANNEL_NAME_ALPHABETICAL:
      return ["name"];
    default:
      return ["-lastMessageUpdatedAt", "-createdAt", "syncIndex"];
  }
};
var b = function(t7) {
  function s6(e4) {
    var s7 = e4.message, n3 = t7.call(this) || this;
    return n3.message = s7, n3;
  }
  return t(s6, t7), s6;
}(ie);
var I2 = {};
var S2 = function() {
  function e4(e5, t7) {
    var s6 = t7.localCacheEnabled, n3 = t7.enableAutoResend, r4 = t7.dispatcher, a5 = t7.sdkState, u4 = t7.logger, d5 = this;
    this._iid = e5, I2[e5] = this, this._localCacheEnabled = s6, this._enableAutoResend = n3, this._isProcessingAutoResend = false, this._autoResendQueue = [], this._dispatcher = r4, this._logger = u4, this._sdkState = a5, this._localCacheEnabled && r4.on(function(e6) {
      if (e6 instanceof kr) switch (e6.stateType) {
        case Sr.CONNECTED:
          d5._isProcessingAutoResend || d5.processAutoResendRegisteredPendingMessages().then(function() {
            return d5._processNextAutoResend();
          });
          break;
        case Sr.INTERNAL_DISCONNECTED:
        case Sr.EXTERNAL_DISCONNECTED:
          d5._isProcessingAutoResend = false;
      }
    });
  }
  return e4.of = function(e5) {
    return I2[e5];
  }, e4.prototype.processNonAutoResendRegisteredPendingMessages = function() {
    return r(this, void 0, void 0, function() {
      var e5, t7, s6, a5, i4, o3;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return this._enableAutoResend ? [4, this._fetchAllCachedPendingMessages()] : [2];
          case 1:
            e5 = n3.sent();
            try {
              for (t7 = o(e5), s6 = t7.next(); !s6.done; s6 = t7.next()) 0 === (a5 = s6.value).errorCode && (this._logger.debug("cached pending message is not auto-resend registered. changing its sending status to failed: ", a5.reqId), a5.sendingStatus = W.FAILED, a5.errorCode = u.ACK_TIMEOUT, this._dispatcher.dispatch(new $s({ messages: [a5], source: Ks.LOCAL_MESSAGE_FAILED })));
            } catch (e6) {
              i4 = { error: e6 };
            } finally {
              try {
                s6 && !s6.done && (o3 = t7.return) && o3.call(t7);
              } finally {
                if (i4) throw i4.error;
              }
            }
            return [2];
        }
      });
    });
  }, e4.prototype.processAutoResendRegisteredPendingMessages = function() {
    return r(this, void 0, void 0, function() {
      var e5, t7, s6, i4, o3, d5, l3, _2;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._fetchAllCachedPendingMessages()];
          case 1:
            e5 = n3.sent();
            try {
              for (t7 = o(e5), s6 = t7.next(); !s6.done; s6 = t7.next()) i4 = s6.value, this._enableAutoResend && i4.errorCode && I(i4.errorCode) && (o3 = (/* @__PURE__ */ new Date()).getTime(), d5 = i4.createdAt + 2592e5, this._enableAutoResend && o3 <= d5 ? this._autoResendQueue.map(function(e6) {
                return e6.reqId;
              }).indexOf(i4.reqId) < 0 && this._autoResendQueue.push(i4) : (this._logger.debug("auto-resend registered pending messaged expired. expiration date: ", new Date(d5).toLocaleString()), i4.sendingStatus = W.FAILED, this._dispatcher.dispatch(new $s({ messages: [i4], source: Ks.LOCAL_MESSAGE_FAILED }))));
            } catch (e6) {
              l3 = { error: e6 };
            } finally {
              try {
                s6 && !s6.done && (_2 = t7.return) && _2.call(t7);
              } finally {
                if (l3) throw l3.error;
              }
            }
            return [2];
        }
      });
    });
  }, e4.prototype.completeCurrentAndProcessNextAutoResend = function(e5) {
    if (this._localCacheEnabled && this._enableAutoResend && (e5.sendingStatus === W.SUCCEEDED || e5.sendingStatus === W.FAILED && !I(e5.errorCode))) {
      var t7 = this.indexOf(e5);
      t7 >= 0 && this._autoResendQueue.splice(t7, 1), 0 === t7 && this._processNextAutoResend();
    }
  }, e4.prototype._fetchAllCachedPendingMessages = function() {
    return r(this, void 0, void 0, function() {
      var e5, t7;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return e5 = Ks2.of(this._iid), (t7 = new Os()).replyType = B.ALL, [4, e5.fetch({ sendingStatus: W.PENDING, backward: true, filter: t7 })];
          case 1:
            return [2, s6.sent()];
        }
      });
    });
  }, e4.prototype.indexOf = function(e5) {
    return this._autoResendQueue.length > 0 ? this._autoResendQueue.map(function(e6) {
      return e6.reqId;
    }).indexOf(e5.reqId) : -1;
  }, e4.prototype._isNotInQueue = function(e5) {
    return -1 === this._autoResendQueue.map(function(e6) {
      return e6.reqId;
    }).indexOf(e5.reqId);
  }, e4.prototype._processNextAutoResend = function() {
    return r(this, void 0, void 0, function() {
      var e5;
      return s(this, function(t7) {
        if (this._localCacheEnabled && this._enableAutoResend && "foreground" === this._sdkState.appState) try {
          this._autoResendQueue.length > 0 ? (this._isProcessingAutoResend || (this._logger.debug("auto-resend queue started."), this._isProcessingAutoResend = true), e5 = this._autoResendQueue[0], this._dispatcher.dispatch(new b({ message: e5 })), this._logger.debug("processing auto-resend for message request id: ", e5.reqId)) : (this._logger.debug("auto-resend queue finished."), this._isProcessingAutoResend = false);
        } catch (e6) {
          this._logger.warn("process auto-resend error: ", e6), this._isProcessingAutoResend = false;
        }
        return [2];
      });
    });
  }, e4;
}();
!function(e4) {
  e4[e4.USER_BLOCK = 20001] = "USER_BLOCK", e4[e4.USER_UNBLOCK = 2e4] = "USER_UNBLOCK", e4[e4.FRIEND_DISCOVERED = 20900] = "FRIEND_DISCOVERED";
}(C2 || (C2 = {}));
var N2 = function() {
  function e4(e5) {
    this.category = e5.cat, this.data = e5.data;
  }
  return e4.getDataAsUserBlockEvent = function(e5, t7) {
    var s6 = t7.data, n3 = s6.blocker, r4 = s6.blockee;
    return { blocker: new es(e5, n3), blockee: new es(e5, r4) };
  }, e4.getDataAsFriendDiscoveredEvent = function(e5, t7) {
    var s6 = t7.data.friend_discoveries;
    return { friendDiscoveries: Array.isArray(s6) ? s6.map(function(t8) {
      return new es(e5, t8);
    }) : [] };
  }, e4;
}();
var v2 = function(t7) {
  function s6(e4, s7) {
    var n3 = s7.userId, r4 = t7.call(this) || this;
    return r4._iid = e4, r4.userId = n3, r4;
  }
  return t(s6, t7), s6;
}(ie);
var D = function(t7) {
  function s6() {
    return t7.call(this) || this;
  }
  return t(s6, t7), s6;
}(ie);
var T = function(t7) {
  function s6(e4, s7, n3) {
    var r4 = t7.call(this, e4, "USEV", n3) || this;
    return r4.event = new N2(n3), r4;
  }
  return t(s6, t7), s6;
}(Fe);

// node_modules/@sendbird/chat/lib/__bundle-acd77193.js
var s2 = function(s6, i4) {
  this.pollId = 0, this.messageId = 0, this.pollId = i4.poll.id, this.messageId = i4.poll.message_id, this._iid = s6, this._payload = i4;
};

// node_modules/@sendbird/chat/lib/__bundle-e53b9010.js
var f2;
!function(e4) {
  e4[e4.NONE = 0] = "NONE", e4[e4.CHANNEL_ENTER = 10102] = "CHANNEL_ENTER", e4[e4.CHANNEL_EXIT = 10103] = "CHANNEL_EXIT", e4[e4.USER_CHANNEL_MUTE = 10201] = "USER_CHANNEL_MUTE", e4[e4.USER_CHANNEL_UNMUTE = 10200] = "USER_CHANNEL_UNMUTE", e4[e4.USER_CHANNEL_BAN = 10601] = "USER_CHANNEL_BAN", e4[e4.USER_CHANNEL_UNBAN = 10600] = "USER_CHANNEL_UNBAN", e4[e4.CHANNEL_FREEZE = 10701] = "CHANNEL_FREEZE", e4[e4.CHANNEL_UNFREEZE = 10700] = "CHANNEL_UNFREEZE", e4[e4.TYPING_START = 10900] = "TYPING_START", e4[e4.TYPING_END = 10901] = "TYPING_END", e4[e4.CHANNEL_JOIN = 1e4] = "CHANNEL_JOIN", e4[e4.CHANNEL_LEAVE = 10001] = "CHANNEL_LEAVE", e4[e4.CHANNEL_OPERATOR_UPDATE = 10002] = "CHANNEL_OPERATOR_UPDATE", e4[e4.CHANNEL_INVITE = 10020] = "CHANNEL_INVITE", e4[e4.CHANNEL_ACCEPT_INVITE = 10021] = "CHANNEL_ACCEPT_INVITE", e4[e4.CHANNEL_DECLINE_INVITE = 10022] = "CHANNEL_DECLINE_INVITE", e4[e4.CHANNEL_PROP_CHANGED = 11e3] = "CHANNEL_PROP_CHANGED", e4[e4.CHANNEL_DELETED = 12e3] = "CHANNEL_DELETED", e4[e4.CHANNEL_META_DATA_CHANGED = 11100] = "CHANNEL_META_DATA_CHANGED", e4[e4.CHANNEL_META_COUNTERS_CHANGED = 11200] = "CHANNEL_META_COUNTERS_CHANGED", e4[e4.CHANNEL_HIDE = 13e3] = "CHANNEL_HIDE", e4[e4.CHANNEL_UNHIDE = 13001] = "CHANNEL_UNHIDE", e4[e4.PINNED_MESSAGE_CHANGED = 11300] = "PINNED_MESSAGE_CHANGED";
}(f2 || (f2 = {}));
var m = function() {
  function n3(e4) {
    var n4;
    this.channelUrl = e4.channel_url, this.channelType = e4.channel_type, this.category = e4.cat, this.data = null !== (n4 = e4.data) && void 0 !== n4 ? n4 : {}, this.ts = e4.ts;
  }
  return Object.defineProperty(n3.prototype, "isGroupChannelEvent", { get: function() {
    return this.channelType === q.GROUP;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "isOpenChannelEvent", { get: function() {
    return this.channelType === q.OPEN;
  }, enumerable: false, configurable: true }), n3;
}();
var v3 = function(e4) {
  function t7(n3, t8, s6) {
    var r4 = e4.call(this, n3, "SYEV", s6) || this;
    return r4.event = new m(s6), r4;
  }
  return t(t7, e4), t7;
}(Fe);
var T2 = function(e4) {
  function t7(n3, t8, r4) {
    var a5 = e4.call(this, n3, t8, r4) || this, i4 = r4.data.operators, o3 = void 0 === i4 ? [] : i4;
    return a5.operators = o3.map(function(e5) {
      return new es(a5._iid, e5);
    }), a5;
  }
  return t(t7, e4), t7;
}(v3);
var g2 = function(e4) {
  function t7(n3, t8, s6) {
    var a5, i4 = this;
    return (i4 = e4.call(this, n3, "SYEV", s6) || this).pinnedMessageIds = [], i4.latestPinnedMessage = null, i4.ts = 0, s6.data && (i4.pinnedMessageIds = null !== (a5 = s6.data.pinned_message_ids) && void 0 !== a5 ? a5 : [], i4.latestPinnedMessage = s6.data.latest_pinned_message ? Mt(n3, n({}, s6.data.latest_pinned_message)) : null), i4.ts = s6.ts, i4;
  }
  return t(t7, e4), t7;
}(Fe);
var H2 = function(e4) {
  function t7(n3, t8) {
    var s6 = e4.call(this, n3) || this;
    return s6._logger = t8.logger, s6._sdkState = t8.sdkState, s6._sessionManager = t8.sessionManager, s6._requestQueue = t8.requestQueue, s6._dispatcher = t8.dispatcher, s6._cacheContext = t8.cacheContext, s6._channelType = t8.channelType, s6;
  }
  return t(t7, e4), Object.defineProperty(t7.prototype, "_messageBroadcast", { get: function() {
    return Ws2.of(this._iid);
  }, enumerable: false, configurable: true }), t7.prototype.subscribeMessageEvent = function(e5, n3) {
    this._messageBroadcast.subscribe(e5, n3);
  }, t7.prototype.unsubscribeMessageEvent = function(e5) {
    this._messageBroadcast.unsubscribe(e5);
  }, t7.prototype.getMessageFromCache = function(e5) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e6) {
        return [2, null];
      });
    });
  }, t7.prototype.getExactlyMatchingMessagesForTokenFromCache = function(e5, n3, t8) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e6) {
        return [2, []];
      });
    });
  }, t7.prototype.getMessagesFromCache = function(e5, n3, t8, s6, r4, o3) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e6) {
        return [2, []];
      });
    });
  }, t7.prototype.getPollMessagesFromCache = function(e5, n3, t8, s6) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e6) {
        return [2, []];
      });
    });
  }, t7.prototype.getCachedMessageCountBetween = function(e5, n3, t8, s6) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e6) {
        return [2, 0];
      });
    });
  }, t7.prototype.getUnsentMessagesFromCache = function(e5, n3) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e6) {
        return [2, []];
      });
    });
  }, t7.prototype.removeFailedMessageFromCache = function(e5) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e6) {
        return [2];
      });
    });
  }, t7;
}(zr);
var L3 = function(e4) {
  function t7(n3, t8, s6) {
    var r4, a5, i4, o3, N3 = this;
    (N3 = e4.call(this, n3, "ADMM", s6) || this).message = new _t(n3, s6);
    var c4 = Ws.of(n3).sdkState;
    return N3.isMentioned = Oe(N3.message.mentionType, null !== (i4 = null !== (r4 = N3.message.mentionedUserIds) && void 0 !== r4 ? r4 : null === (a5 = N3.message.mentionedUsers) || void 0 === a5 ? void 0 : a5.map(function(e5) {
      return e5.userId;
    })) && void 0 !== i4 ? i4 : [], c4.userId), N3.forceUpdateLastMessage = null !== (o3 = s6.force_update_last_message) && void 0 !== o3 && o3, N3;
  }
  return t(t7, e4), t7;
}(Fe);
var I3 = function(e4) {
  function t7(n3, t8, s6) {
    var r4, a5, i4, o3, E4, _2 = this;
    (_2 = e4.call(this, n3, "AEDI", s6) || this).message = new _t(n3, s6);
    var l3 = Ws.of(n3).sdkState;
    return _2.mentionCountChange = De({ mentionType: null === (r4 = s6.old_values) || void 0 === r4 ? void 0 : r4.mention_type, mentionedUserIds: null !== (i4 = null === (a5 = s6.old_values) || void 0 === a5 ? void 0 : a5.mentioned_user_ids) && void 0 !== i4 ? i4 : [] }, se({ mentionType: _2.message.mentionType, mentionedUserIds: null !== (o3 = _2.message.mentionedUserIds) && void 0 !== o3 ? o3 : null === (E4 = _2.message.mentionedUsers) || void 0 === E4 ? void 0 : E4.map(function(e5) {
      return e5.userId;
    }) }), l3.userId), _2;
  }
  return t(t7, e4), t7;
}(Fe);
var U = function(e4) {
  function t7(n3, t8, s6) {
    var r4 = e4.call(this, n3, "MRCT", s6) || this;
    return r4.channelUrl = s6.channel_url, r4.channelType = s6.channel_type, r4.event = new De2(s6), r4;
  }
  return t(t7, e4), t7;
}(Fe);
var M2 = function(e4) {
  function t7(n3, t8, s6) {
    var r4 = e4.call(this, n3, "MTHD", s6) || this;
    return r4.event = new ta(n3, s6), r4;
  }
  return t(t7, e4), t7;
}(Fe);
var y2 = function(e4) {
  function t7(n3, t8, s6) {
    var r4 = e4.call(this, n3, "MCNT", s6) || this;
    return r4.groupChannelMemberCounts = s6.group_channels.map(function(e5) {
      return { channelUrl: e5.channel_url, memberCount: e5.member_count, joinedMemberCount: e5.joined_member_count, updatedAt: e5.ts };
    }), r4.openChannelMemberCounts = s6.open_channels.map(function(e5) {
      return { channelUrl: e5.channel_url, participantCount: e5.participant_count, updatedAt: e5.ts };
    }), r4;
  }
  return t(t7, e4), t7;
}(Fe);
var b2 = function(e4) {
  function t7(n3, t8, s6) {
    var r4 = e4.call(this, n3, "PEDI", s6) || this;
    return r4.event = new s2(n3, s6), r4.status = co(s6.poll.status) || s6.poll.status, r4.channelUrl = s6.channel_url, r4.channelType = s6.channel_type, r4;
  }
  return t(t7, e4), t7;
}(Fe);

// node_modules/@sendbird/chat/lib/__bundle-cc71b396.js
var Wt2;
!function(e4) {
  e4.NONE = "none", e4.JOINED = "joined", e4.INVITED = "invited", e4.LEFT = "left";
}(Wt2 || (Wt2 = {}));
var Qt2;
var Yt2;
var Kt2;
var Jt2;
var Xt2;
var Zt2;
var $t2;
var en2;
var tn2 = function(i4) {
  function o3(e4, t7) {
    var n3 = i4.call(this, e4, t7) || this;
    return n3.state = null, n3.role = null, n3.isMuted = false, n3.isBlockedByMe = false, n3.isBlockingMe = false, n3.state = S(Wt2, t7.state) ? t7.state : null, n3.role = S(V, t7.role) ? t7.role : null, "boolean" == typeof t7.is_muted && (n3.isMuted = t7.is_muted), "boolean" == typeof t7.is_blocked_by_me && (n3.isBlockedByMe = t7.is_blocked_by_me), "boolean" == typeof t7.is_blocking_me && (n3.isBlockingMe = t7.is_blocking_me), n3;
  }
  return t(o3, i4), o3.payloadify = function(e4) {
    return re(se(n(n({}, i4.payloadify.call(this, e4)), { state: e4.state, role: e4.role, is_muted: e4.isMuted, is_blocked_by_me: e4.isBlockedByMe, is_blocking_me: e4.isBlockingMe })));
  }, o3;
}(Yt);
var nn2 = function(t7) {
  function n3(e4, n4) {
    var s6, r4, a5 = this;
    return (a5 = t7.call(this, e4) || this).channelUrl = null !== (s6 = n4.channel_url) && void 0 !== s6 ? s6 : "", a5.channelType = null !== (r4 = n4.channel_type) && void 0 !== r4 ? r4 : q.GROUP, a5.member = new es(a5._iid, n4.user), a5.deliveryAt = n4.ts, a5;
  }
  return t(n3, t7), n3;
}(zr);
!function(e4) {
  e4.ALL = "all", e4.PUBLIC = "public", e4.PRIVATE = "private";
}(Qt2 || (Qt2 = {})), function(e4) {
  e4.ALL = "all", e4.JOINED = "joined_only", e4.INVITED = "invited_only", e4.INVITED_BY_FRIEND = "invited_by_friend", e4.INVITED_BY_NON_FRIEND = "invited_by_non_friend";
}(Yt2 || (Yt2 = {})), function(e4) {
  e4.ALL = "all", e4.SUPER = "super", e4.NON_SUPER = "nonsuper", e4.BROADCAST_ONLY = "broadcast_only", e4.EXCLUSIVE_ONLY = "exclusive_only";
}(Kt2 || (Kt2 = {})), function(e4) {
  e4.ALL = "all", e4.UNREAD_MESSAGE = "unread_message";
}(Jt2 || (Jt2 = {})), function(e4) {
  e4.ALL = "all", e4.UNHIDDEN = "unhidden_only", e4.HIDDEN = "hidden_only", e4.HIDDEN_ALLOW_AUTO_UNHIDE = "hidden_allow_auto_unhide", e4.HIDDEN_PREVENT_AUTO_UNHIDE = "hidden_prevent_auto_unhide";
}(Xt2 || (Xt2 = {})), function(e4) {
  e4.ALL = "all", e4.OPERATOR = "operator", e4.NONOPERATOR = "nonoperator";
}(Zt2 || (Zt2 = {})), function(e4) {
  e4.AND = "AND", e4.OR = "OR";
}($t2 || ($t2 = {})), function(e4) {
  e4.MEMBER_NICKNAME = "member_nickname", e4.CHANNEL_NAME = "channel_name";
}(en2 || (en2 = {}));
var sn2;
var rn2 = function() {
  function e4(e5) {
    var t7, n3, s6, r4, a5, i4, o3, u4, c4, l3, h4, d5, _2, p4, f4;
    this._searchFilter = null, this._userIdsFilter = null, this.includeEmpty = null !== (t7 = null == e5 ? void 0 : e5.includeEmpty) && void 0 !== t7 && t7, this.nicknameContainsFilter = null !== (n3 = null == e5 ? void 0 : e5.nicknameContainsFilter) && void 0 !== n3 ? n3 : null, this.nicknameStartsWithFilter = null !== (s6 = null == e5 ? void 0 : e5.nicknameStartsWithFilter) && void 0 !== s6 ? s6 : null, this.nicknameExactMatchFilter = null !== (r4 = null == e5 ? void 0 : e5.nicknameExactMatchFilter) && void 0 !== r4 ? r4 : null, this.channelNameContainsFilter = null !== (a5 = null == e5 ? void 0 : e5.channelNameContainsFilter) && void 0 !== a5 ? a5 : "", this.myMemberStateFilter = null !== (i4 = null == e5 ? void 0 : e5.myMemberStateFilter) && void 0 !== i4 ? i4 : Yt2.ALL, this.customTypesFilter = null !== (o3 = null == e5 ? void 0 : e5.customTypesFilter) && void 0 !== o3 ? o3 : null, this.channelUrlsFilter = null !== (u4 = null == e5 ? void 0 : e5.channelUrlsFilter) && void 0 !== u4 ? u4 : null, this.superChannelFilter = null !== (c4 = null == e5 ? void 0 : e5.superChannelFilter) && void 0 !== c4 ? c4 : Kt2.ALL, this.publicChannelFilter = null !== (l3 = null == e5 ? void 0 : e5.publicChannelFilter) && void 0 !== l3 ? l3 : Qt2.ALL, this.customTypeStartsWithFilter = null !== (h4 = null == e5 ? void 0 : e5.customTypeStartsWithFilter) && void 0 !== h4 ? h4 : null, this.unreadChannelFilter = null !== (d5 = null == e5 ? void 0 : e5.unreadChannelFilter) && void 0 !== d5 ? d5 : Jt2.ALL, this.hiddenChannelFilter = null !== (_2 = null == e5 ? void 0 : e5.hiddenChannelFilter) && void 0 !== _2 ? _2 : Xt2.UNHIDDEN, this.includeFrozen = null === (p4 = null == e5 ? void 0 : e5.includeFrozen) || void 0 === p4 || p4, (null == e5 ? void 0 : e5.createdAfter) && (this.createdAfter = e5.createdAfter), (null == e5 ? void 0 : e5.createdBefore) && (this.createdBefore = e5.createdBefore), this.includeMetaData = null === (f4 = null == e5 ? void 0 : e5.includeMetaData) || void 0 === f4 || f4;
  }
  return e4.prototype._isFriend = function(e5) {
    return !(!e5 || !e5.friendDiscoveryKey && !e5.friendName);
  }, Object.defineProperty(e4.prototype, "searchFilter", { get: function() {
    return this._searchFilter;
  }, enumerable: false, configurable: true }), e4.prototype.setSearchFilter = function(e5, t7) {
    Array.isArray(e5) && 0 !== e5.length && "string" == typeof t7 && t7 && (this._searchFilter = { query: t7, fields: e5 });
  }, Object.defineProperty(e4.prototype, "userIdsFilter", { get: function() {
    return this._userIdsFilter;
  }, enumerable: false, configurable: true }), e4.prototype.setUserIdsFilter = function(e5, t7, n3) {
    void 0 === n3 && (n3 = $t2.AND), this._userIdsFilter = { userIds: e5, includeMode: t7, queryType: n3 };
  }, e4.prototype.clone = function() {
    var t7, n3 = new e4();
    this.searchFilter && n3.setSearchFilter(this.searchFilter.fields, null !== (t7 = this.searchFilter.query) && void 0 !== t7 ? t7 : void 0), this.userIdsFilter && n3.setUserIdsFilter(this.userIdsFilter.userIds, this.userIdsFilter.includeMode, this.userIdsFilter.queryType);
    var s6 = JSON.parse(JSON.stringify(this));
    return Object.keys(s6).forEach(function(e5) {
      n3[e5] = s6[e5];
    }), n3;
  }, e4.prototype.match = function(e5, t7) {
    if (this._searchFilter) {
      var n3 = this._searchFilter, s6 = n3.query, r4 = n3.fields;
      if (s6 && r4 && r4.length > 0 && !r4.some(function(t8) {
        switch (t8) {
          case en2.CHANNEL_NAME:
            return e5.name.toLowerCase().includes(s6.toLowerCase());
          case en2.MEMBER_NICKNAME:
            return e5.members.some(function(e6) {
              return e6.nickname.toLowerCase().includes(s6.toLowerCase());
            });
          default:
            return true;
        }
      })) return false;
    }
    if (this._userIdsFilter) {
      var a5 = this._userIdsFilter, i4 = a5.userIds, o3 = a5.includeMode, u4 = a5.queryType, l3 = e5.members.map(function(e6) {
        return e6.userId;
      });
      if (o3) {
        if (i4.length > 0) switch (u4) {
          case $t2.AND:
            if (i4.some(function(e6) {
              return !l3.includes(e6);
            })) return false;
            break;
          case $t2.OR:
            if (i4.every(function(e6) {
              return !l3.includes(e6);
            })) return false;
        }
      } else {
        if (i4.includes(t7) || i4.push(t7), e5.members.length > i4.length) return false;
        if (!O(i4, l3)) return false;
      }
    }
    if (!this.includeEmpty && !e5.lastMessage) return false;
    if (!this.includeFrozen && e5.isFrozen) return false;
    if (this.customTypesFilter && this.customTypesFilter.length > 0 && !this.customTypesFilter.includes("*") && !this.customTypesFilter.includes(e5.customType)) return false;
    if (this.customTypeStartsWithFilter && !new RegExp("^".concat(this.customTypeStartsWithFilter)).test(e5.customType)) return false;
    if (this.channelNameContainsFilter && !e5.name.toLowerCase().includes(this.channelNameContainsFilter.toLowerCase())) return false;
    if (this.nicknameContainsFilter) {
      var h4 = this.nicknameContainsFilter.toLowerCase();
      if (!e5.members.some(function(e6) {
        return e6.userId !== t7 && e6.nickname.toLowerCase().includes(h4);
      })) return false;
    }
    if (this.nicknameStartsWithFilter) {
      var d5 = this.nicknameStartsWithFilter.toLowerCase();
      if (!e5.members.some(function(e6) {
        return e6.userId !== t7 && e6.nickname.toLowerCase().startsWith(d5);
      })) return false;
    }
    if (this.nicknameExactMatchFilter) {
      var _2 = this.nicknameExactMatchFilter.toLowerCase();
      if (!e5.members.some(function(e6) {
        return e6.userId !== t7 && e6.nickname.toLowerCase() != _2;
      })) return false;
    }
    if (this.channelUrlsFilter && this.channelUrlsFilter.length > 0 && !this.channelUrlsFilter.includes(e5.url)) return false;
    if (this.myMemberStateFilter) switch (this.myMemberStateFilter) {
      case Yt2.ALL:
        if ("none" === e5.myMemberState) return false;
        break;
      case Yt2.JOINED:
        if ("joined" !== e5.myMemberState) return false;
        break;
      case Yt2.INVITED:
        if ("invited" !== e5.myMemberState) return false;
        break;
      case Yt2.INVITED_BY_FRIEND:
        if ("invited" !== e5.myMemberState || !this._isFriend(e5.inviter)) return false;
        break;
      case Yt2.INVITED_BY_NON_FRIEND:
        if ("invited" !== e5.myMemberState || this._isFriend(e5.inviter)) return false;
    }
    if (this.hiddenChannelFilter) switch (this.hiddenChannelFilter) {
      case Xt2.UNHIDDEN:
        if (e5.isHidden || "unhidden" !== e5.hiddenState) return false;
        break;
      case Xt2.HIDDEN:
        if (!e5.isHidden) return false;
        break;
      case Xt2.HIDDEN_ALLOW_AUTO_UNHIDE:
        if (!e5.isHidden || "hidden_allow_auto_unhide" !== e5.hiddenState) return false;
        break;
      case Xt2.HIDDEN_PREVENT_AUTO_UNHIDE:
        if (!e5.isHidden || "hidden_prevent_auto_unhide" !== e5.hiddenState) return false;
    }
    if (this.unreadChannelFilter && this.unreadChannelFilter === Jt2.UNREAD_MESSAGE) {
      if (0 === e5.unreadMessageCount) return false;
    }
    if (this.publicChannelFilter) switch (this.publicChannelFilter) {
      case Qt2.PUBLIC:
        if (!e5.isPublic) return false;
        break;
      case Qt2.PRIVATE:
        if (e5.isPublic) return false;
    }
    if (this.superChannelFilter) switch (this.superChannelFilter) {
      case Kt2.SUPER:
        if (!e5.isSuper) return false;
        break;
      case Kt2.NON_SUPER:
        if (e5.isSuper) return false;
    }
    return !(this.createdAfter && e5.createdAt < this.createdAfter) && !(this.createdBefore && e5.createdAt > this.createdBefore);
  }, e4;
}();
var an2 = function(t7) {
  function n3(e4, n4) {
    var s6 = n4.sdkState, r4 = n4.cacheContext, a5 = t7.call(this, e4) || this;
    return a5._channels = /* @__PURE__ */ new Map(), a5._sdkState = s6, a5._cacheContext = r4, a5;
  }
  return t(n3, t7), Object.defineProperty(n3.prototype, "collection", { get: function() {
    var e4 = this._cacheContext.nestdb;
    return Jr(!!e4).throw(v.databaseError), e4.collection(Kr);
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "localCacheEnabled", { get: function() {
    return this._cacheContext.localCacheEnabled && !!this.collection;
  }, enumerable: false, configurable: true }), n3.prototype._serialize = function(e4, t8) {
    return void 0 === t8 && (t8 = 0), n(n({}, e4.serialize()), { lastMessageUpdatedAt: e4.lastMessage ? e4.lastMessage.createdAt : 0, syncIndex: t8 });
  }, n3.prototype._deserialize = function(e4) {
    return ps2.of(this._iid).buildGroupChannelFromSerializedData(e4);
  }, Object.defineProperty(n3.prototype, "channels", { get: function() {
    return c([], a(this._channels.values()), false);
  }, enumerable: false, configurable: true }), n3.prototype.isCachedInMemory = function(e4) {
    return this._channels.has(e4);
  }, n3.prototype.filterOffsetChanged = function(e4) {
    var t8 = this;
    return e4.filter(function(e5) {
      if (t8._channels.has(e5.url)) return t8._channels.get(e5.url).messageOffsetTimestamp < e5.messageOffsetTimestamp;
    });
  }, n3.prototype.get = function(e4) {
    return r(this, void 0, void 0, function() {
      var t8, n4;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return this._channels.has(e4) ? [3, 3] : this.localCacheEnabled ? [4, this.collection.getByKey(e4)] : [3, 2];
          case 1:
            if (t8 = s6.sent()) return n4 = this._deserialize(t8), this._channels.set(e4, n4), [2, n4];
            s6.label = 2;
          case 2:
            return [2, void 0];
          case 3:
            return [2, this._channels.get(e4)];
        }
      });
    });
  }, n3.prototype.fetch = function(e4) {
    var t8 = e4.token, n4 = e4.limit, s6 = void 0 === n4 ? Br : n4, r4 = e4.backward, a5 = void 0 !== r4 && r4, i4 = e4.filter, o3 = void 0 === i4 ? new rn2() : i4, u4 = e4.order, c4 = void 0 === u4 ? E.LATEST_LAST_MESSAGE : u4, l3 = e4.borderlineChannelUrl;
    return r(this, void 0, void 0, function() {
      var e5, n5, r5, i5, u5, h4 = this;
      return s(this, function(d5) {
        switch (d5.label) {
          case 0:
            return this.localCacheEnabled ? (e5 = !!l3, n5 = L2(c4), r5 = { where: function(n6) {
              if (t8) switch (c4) {
                case E.CHANNEL_NAME_ALPHABETICAL:
                  if (!a5 && n6.name.localeCompare(t8) < 0 || a5 && n6.name.localeCompare(t8) > 0) return false;
                  break;
                case E.CHRONOLOGICAL:
                  if (!a5 && n6.createdAt > t8 || a5 && n6.createdAt < t8) return false;
                  break;
                case E.LATEST_LAST_MESSAGE:
                  if (!a5 && n6.lastMessageUpdatedAt > t8 || a5 && n6.lastMessageUpdatedAt < t8) return false;
              }
              return e5 && l3 && l3 === n6.url ? (e5 = false, false) : !e5 && o3.match(h4._deserialize(n6), h4._sdkState.userId);
            }, index: n5, backward: a5 }, [4, this.collection.query(r5)]) : [3, 3];
          case 1:
            return [4, d5.sent().fetch({ limit: s6 })];
          case 2:
            return i5 = d5.sent(), (u5 = i5.map(function(e6) {
              return h4._deserialize(e6);
            })).forEach(function(e6) {
              !o3.includeMetaData && e6.cachedMetaData && e6._clearCachedMetaData(), h4._channels.has(e6.url) || h4._channels.set(e6.url, e6);
            }), [2, u5];
          case 3:
            return [2, []];
        }
      });
    });
  }, n3.prototype.upsert = function(e4, t8) {
    return r(this, void 0, void 0, function() {
      var n4, s6, r4, a5 = this;
      return s(this, function(i4) {
        switch (i4.label) {
          case 0:
            if (n4 = [], e4.forEach(function(e5) {
              if (a5._channels.has(e5.url)) {
                var s7 = a5._channels.get(e5.url);
                if (s7._pinnedMessagesUpdatedAt < e5._pinnedMessagesUpdatedAt && (s7._pinnedMessagesUpdatedAt = e5._pinnedMessagesUpdatedAt), s7._messageCollectionLastAccessedAt > e5._messageCollectionLastAccessedAt && Object.assign(e5, { _messageCollectionLastAccessedAt: void 0 }), e5.cachedMetaData && t8) s7._updateCachedMetaData(e5.cachedMetaData, t8).isUpdated || Object.assign(e5, { _cachedMetaData: void 0 });
                s7._update(e5), n4.push(s7);
              } else a5._channels.set(e5.url, e5), n4.push(e5);
            }), !this.localCacheEnabled) return [3, 2];
            for (s6 = [], r4 = 0; r4 < n4.length; r4++) s6.push(this._serialize(n4[r4], r4));
            return [4, this.collection.upsertMany(s6)];
          case 1:
            i4.sent(), i4.label = 2;
          case 2:
            return [2, n4];
        }
      });
    });
  }, n3.prototype.remove = function(e4) {
    return r(this, void 0, void 0, function() {
      var t8, n4, s6, r4, a5, i4;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            o3.trys.push([0, 5, 6, 7]), t8 = o(e4), n4 = t8.next(), o3.label = 1;
          case 1:
            return n4.done ? [3, 4] : (s6 = n4.value, this._channels.delete(s6), this.localCacheEnabled ? [4, this.collection.remove(s6)] : [3, 3]);
          case 2:
            o3.sent(), o3.label = 3;
          case 3:
            return n4 = t8.next(), [3, 1];
          case 4:
            return [3, 7];
          case 5:
            return r4 = o3.sent(), a5 = { error: r4 }, [3, 7];
          case 6:
            try {
              n4 && !n4.done && (i4 = t8.return) && i4.call(t8);
            } finally {
              if (a5) throw a5.error;
            }
            return [7];
          case 7:
            return [2];
        }
      });
    });
  }, n3.prototype.clear = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        switch (e4.label) {
          case 0:
            return this.clearMemoryCache(), this.localCacheEnabled ? [4, this.collection.clear()] : [3, 2];
          case 1:
            e4.sent(), e4.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, n3.prototype.clearMemoryCache = function() {
    this._channels.clear();
  }, n3.prototype._setBlockStateOfAllChannels = function(e4, t8, n4) {
    return r(this, void 0, void 0, function() {
      var s6, r4, a5, i4, o3, u4, c4, l3, h4, d5, _2, p4, m5, g4, E4, C3, y6, M5, b6;
      return s(this, function(f4) {
        switch (f4.label) {
          case 0:
            if (s6 = [], e4 === this._sdkState.userId) try {
              for (r4 = o(this._channels.values()), a5 = r4.next(); !a5.done; a5 = r4.next()) {
                l3 = a5.value;
                try {
                  for (g4 = void 0, i4 = o(l3.members), o3 = i4.next(); !o3.done; o3 = i4.next()) if ((_2 = o3.value).userId === t8) {
                    _2.isBlockedByMe = n4, s6.push(l3);
                    break;
                  }
                } catch (e5) {
                  g4 = { error: e5 };
                } finally {
                  try {
                    o3 && !o3.done && (E4 = i4.return) && E4.call(i4);
                  } finally {
                    if (g4) throw g4.error;
                  }
                }
              }
            } catch (e5) {
              p4 = { error: e5 };
            } finally {
              try {
                a5 && !a5.done && (m5 = r4.return) && m5.call(r4);
              } finally {
                if (p4) throw p4.error;
              }
            }
            else if (t8 === this._sdkState.userId) try {
              for (u4 = o(this._channels.values()), c4 = u4.next(); !c4.done; c4 = u4.next()) {
                l3 = c4.value;
                try {
                  for (M5 = void 0, h4 = o(l3.members), d5 = h4.next(); !d5.done; d5 = h4.next()) if ((_2 = d5.value).userId === e4) {
                    _2.isBlockingMe = n4, s6.push(l3);
                    break;
                  }
                } catch (e5) {
                  M5 = { error: e5 };
                } finally {
                  try {
                    d5 && !d5.done && (b6 = h4.return) && b6.call(h4);
                  } finally {
                    if (M5) throw M5.error;
                  }
                }
              }
            } catch (e5) {
              C3 = { error: e5 };
            } finally {
              try {
                c4 && !c4.done && (y6 = u4.return) && y6.call(u4);
              } finally {
                if (C3) throw C3.error;
              }
            }
            return s6.length > 0 ? [4, this.upsert(s6)] : [3, 2];
          case 1:
            f4.sent(), f4.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, n3.prototype.block = function(e4, t8) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n4) {
        switch (n4.label) {
          case 0:
            return [4, this._setBlockStateOfAllChannels(e4, t8, true)];
          case 1:
            return n4.sent(), [2];
        }
      });
    });
  }, n3.prototype.unblock = function(e4, t8) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n4) {
        switch (n4.label) {
          case 0:
            return [4, this._setBlockStateOfAllChannels(e4, t8, false)];
          case 1:
            return n4.sent(), [2];
        }
      });
    });
  }, n3.prototype.markAsRead = function(e4, t8) {
    return void 0 === t8 && (t8 = c([], a(this._channels.keys()), false)), r(this, void 0, void 0, function() {
      var n4, s6, r4, a5, i4, o3, u4, c4;
      return s(this, function(l3) {
        switch (l3.label) {
          case 0:
            n4 = [], l3.label = 1;
          case 1:
            l3.trys.push([1, 6, 7, 8]), s6 = o(t8), r4 = s6.next(), l3.label = 2;
          case 2:
            return r4.done ? [3, 5] : (a5 = r4.value, [4, this.get(a5)]);
          case 3:
            (null == (i4 = l3.sent()) ? void 0 : i4._updateUnreadMemberState(this._sdkState.userId, e4)) && (i4._updateUnreadCount(0, 0), n4.push(i4)), l3.label = 4;
          case 4:
            return r4 = s6.next(), [3, 2];
          case 5:
            return [3, 8];
          case 6:
            return o3 = l3.sent(), u4 = { error: o3 }, [3, 8];
          case 7:
            try {
              r4 && !r4.done && (c4 = s6.return) && c4.call(s6);
            } finally {
              if (u4) throw u4.error;
            }
            return [7];
          case 8:
            return n4.length > 0 ? [4, this.upsert(n4)] : [3, 10];
          case 9:
            l3.sent(), l3.label = 10;
          case 10:
            return [2];
        }
      });
    });
  }, n3;
}(zr);
var on2 = { invitedUserIds: void 0, channelUrl: void 0, coverUrl: void 0, coverImage: void 0, isDistinct: void 0, isSuper: void 0, isBroadcast: void 0, isExclusive: void 0, isPublic: void 0, isDiscoverable: void 0, isStrict: void 0, isEphemeral: void 0, accessCode: void 0, name: void 0, data: void 0, customType: void 0, operatorUserIds: void 0, messageSurvivalSeconds: void 0 };
var un2 = function(e4) {
  return N("string", e4.invitedUserIds, true) && w("string", e4.channelUrl, true) && w("string", e4.coverUrl, true) && (k(e4.coverImage) || w("string", e4.coverImage, true)) && w("boolean", e4.isDistinct, true) && w("boolean", e4.isSuper, true) && w("boolean", e4.isBroadcast, true) && w("boolean", e4.isExclusive, true) && w("boolean", e4.isPublic, true) && w("boolean", e4.isStrict, true) && w("boolean", e4.isDiscoverable, true) && w("boolean", e4.isEphemeral, true) && w("string", e4.accessCode, true) && w("string", e4.name, true) && w("string", e4.data, true) && w("string", e4.customType, true) && N("string", e4.operatorUserIds, true) && w("number", e4.messageSurvivalSeconds, true);
};
var cn2 = { customTypes: void 0, includeEmpty: false, includeFrozen: true, includeMetaData: true, includeChatNotification: false };
var ln2 = function(e4) {
  return N("string", e4.customTypes, true) && w("boolean", e4.includeEmpty, true) && w("boolean", e4.includeFrozen, true) && w("boolean", e4.includeMetaData, true) && w("boolean", e4.includeChatNotification, true);
};
var hn2 = { myMemberStateFilter: Yt2.ALL };
var dn2 = function(e4) {
  return S(Yt2, e4.myMemberStateFilter);
};
!function(e4) {
  e4.GROUP_CHANNEL_UNREAD_MENTION_COUNT = "group_channel_unread_mention_count", e4.NONSUPER_UNREAD_MENTION_COUNT = "non_super_group_channel_unread_mention_count", e4.SUPER_UNREAD_MENTION_COUNT = "super_group_channel_unread_mention_count", e4.GROUP_CHANNEL_UNREAD_MESSAGE_COUNT = "group_channel_unread_message_count", e4.NONSUPER_UNREAD_MESSAGE_COUNT = "non_super_group_channel_unread_message_count", e4.SUPER_UNREAD_MESSAGE_COUNT = "super_group_channel_unread_message_count", e4.GROUP_CHANNEL_INVITATION_COUNT = "group_channel_invitation_count", e4.NONSUPER_INVITATION_COUNT = "non_super_group_channel_invitation_count", e4.SUPER_INVITATION_COUNT = "super_group_channel_invitation_count";
}(sn2 || (sn2 = {}));
var _n2 = { keys: [sn2.GROUP_CHANNEL_UNREAD_MENTION_COUNT, sn2.NONSUPER_UNREAD_MENTION_COUNT, sn2.SUPER_UNREAD_MENTION_COUNT, sn2.GROUP_CHANNEL_UNREAD_MESSAGE_COUNT, sn2.NONSUPER_UNREAD_MESSAGE_COUNT, sn2.SUPER_UNREAD_MESSAGE_COUNT, sn2.GROUP_CHANNEL_INVITATION_COUNT, sn2.NONSUPER_INVITATION_COUNT, sn2.SUPER_INVITATION_COUNT], customTypeFilters: void 0, customTypesFilter: void 0 };
var pn2 = { channelCustomTypesFilter: void 0, superChannelFilter: Kt2.ALL };
var fn2 = function(e4) {
  return N("string", e4.channelCustomTypesFilter, true) && S(Kt2, e4.superChannelFilter);
};
var vn2 = { channelUrl: void 0, scheduledStatus: void 0, messageTypeFilter: G.ALL };
var mn2 = n({}, Ks);
var gn2 = function(e4) {
  return e4.startsWith("EVENT_") || e4 === Ks.SYNC_CHANNEL_CHANGELOGS || e4 === Ks.REFRESH_CHANNEL;
};
var En2 = function(t7) {
  function n3(e4) {
    var n4 = e4.channels, s6 = e4.context, r4 = e4.isWebSocketEventComing, a5 = void 0 !== r4 && r4, i4 = e4.ts, o3 = t7.call(this) || this;
    return o3.channels = n4, o3.context = s6, o3.isWebSocketEventComing = a5, o3.ts = i4, o3;
  }
  return t(n3, t7), n3;
}(ie);
var Cn2 = function(t7) {
  function n3(e4) {
    var n4 = e4.channelUrls, s6 = e4.context, r4 = e4.isWebSocketEventComing, a5 = void 0 !== r4 && r4, i4 = t7.call(this) || this;
    return i4.channelUrls = n4, i4.context = s6, i4.isWebSocketEventComing = a5, i4;
  }
  return t(n3, t7), n3;
}(ie);
var yn2 = function() {
  function e4(e5) {
    var t7 = e5.groupChannelCache, n3 = e5.messageCache, s6 = e5.unsentMessageCache, r4 = e5.dispatcher, a5 = this;
    this._observers = /* @__PURE__ */ new Map(), r4.on(function(e6) {
      return r(a5, void 0, void 0, function() {
        var r5, a6, i4, o3, u4, c4, l3, h4, d5, _2, m5, g4, E4, C3, M5, N3, U2, S6, T4 = this;
        return s(this, function(A3) {
          switch (A3.label) {
            case 0:
              if (!(e6 instanceof En2)) return [3, 19];
              if (r5 = e6.channels, E4 = e6.context, C3 = e6.isWebSocketEventComing, a6 = r5.filter(function(e7) {
                return e7 instanceof ur2;
              }), E4.source !== Ks.EVENT_CHANNEL_RESET_HISTORY && E4.source !== Ks.EVENT_CHANNEL_HIDDEN) return [3, 9];
              A3.label = 1;
            case 1:
              A3.trys.push([1, 6, 7, 8]), i4 = o(a6), o3 = i4.next(), A3.label = 2;
            case 2:
              return o3.done ? [3, 5] : (d5 = o3.value, [4, n3.removeUnderOffset(d5.url, d5.messageOffsetTimestamp)]);
            case 3:
              A3.sent(), A3.label = 4;
            case 4:
              return o3 = i4.next(), [3, 2];
            case 5:
              return [3, 8];
            case 6:
              return u4 = A3.sent(), M5 = { error: u4 }, [3, 8];
            case 7:
              try {
                o3 && !o3.done && (N3 = i4.return) && N3.call(i4);
              } finally {
                if (M5) throw M5.error;
              }
              return [7];
            case 8:
              return [3, 17];
            case 9:
              c4 = t7.filterOffsetChanged(a6), A3.label = 10;
            case 10:
              A3.trys.push([10, 15, 16, 17]), l3 = o(c4), h4 = l3.next(), A3.label = 11;
            case 11:
              return h4.done ? [3, 14] : (d5 = h4.value, [4, n3.removeUnderOffset(d5.url, d5.messageOffsetTimestamp)]);
            case 12:
              A3.sent(), A3.label = 13;
            case 13:
              return h4 = l3.next(), [3, 11];
            case 14:
              return [3, 17];
            case 15:
              return _2 = A3.sent(), U2 = { error: _2 }, [3, 17];
            case 16:
              try {
                h4 && !h4.done && (S6 = l3.return) && S6.call(l3);
              } finally {
                if (U2) throw U2.error;
              }
              return [7];
            case 17:
              return [4, t7.upsert(a6, e6.ts)];
            case 18:
              return m5 = A3.sent(), C3 || this._broadcastUpdateEvent(m5, E4), [3, 24];
            case 19:
              return e6 instanceof Cn2 ? (g4 = e6.channelUrls, E4 = e6.context, C3 = e6.isWebSocketEventComing, [4, t7.remove(g4)]) : [3, 22];
            case 20:
              return A3.sent(), [4, as(function() {
                return r(T4, void 0, void 0, function() {
                  var e7, t8, r6, a7, i5, o4;
                  return s(this, function(u5) {
                    switch (u5.label) {
                      case 0:
                        u5.trys.push([0, 6, 7, 8]), e7 = o(g4), t8 = e7.next(), u5.label = 1;
                      case 1:
                        return t8.done ? [3, 5] : (r6 = t8.value, [4, n3.removeMessagesOfChannel(r6)]);
                      case 2:
                        return u5.sent(), [4, s6.removeMessagesOfChannel(r6)];
                      case 3:
                        u5.sent(), u5.label = 4;
                      case 4:
                        return t8 = e7.next(), [3, 1];
                      case 5:
                        return [3, 8];
                      case 6:
                        return a7 = u5.sent(), i5 = { error: a7 }, [3, 8];
                      case 7:
                        try {
                          t8 && !t8.done && (o4 = e7.return) && o4.call(e7);
                        } finally {
                          if (i5) throw i5.error;
                        }
                        return [7];
                      case 8:
                        return [2];
                    }
                  });
                });
              })];
            case 21:
              return A3.sent(), C3 || this._broadcastRemoveEvent(g4, E4), [3, 24];
            case 22:
              return e6 instanceof v2 ? [4, t7.fetch({ token: Number.MAX_SAFE_INTEGER, limit: Number.MAX_SAFE_INTEGER })] : [3, 24];
            case 23:
              A3.sent(), A3.label = 24;
            case 24:
              return [2];
          }
        });
      });
    });
  }
  return e4.prototype._broadcastUpdateEvent = function(e5, t7) {
    var n3, s6;
    try {
      for (var r4 = o(this._observers.values()), a5 = r4.next(); !a5.done; a5 = r4.next()) {
        var i4 = a5.value;
        i4.onUpdate && i4.onUpdate(e5, t7);
      }
    } catch (e6) {
      n3 = { error: e6 };
    } finally {
      try {
        a5 && !a5.done && (s6 = r4.return) && s6.call(r4);
      } finally {
        if (n3) throw n3.error;
      }
    }
  }, e4.prototype._broadcastRemoveEvent = function(e5, t7) {
    var n3, s6;
    try {
      for (var r4 = o(this._observers.values()), a5 = r4.next(); !a5.done; a5 = r4.next()) {
        var i4 = a5.value;
        i4.onRemove && i4.onRemove(e5, t7);
      }
    } catch (e6) {
      n3 = { error: e6 };
    } finally {
      try {
        a5 && !a5.done && (s6 = r4.return) && s6.call(r4);
      } finally {
        if (n3) throw n3.error;
      }
    }
  }, e4.prototype.subscribe = function(e5, t7) {
    this._observers.set(e5, t7);
  }, e4.prototype.unsubscribe = function(e5) {
    this._observers.delete(e5);
  }, e4.prototype.unsubscribeAll = function() {
    this._observers.clear();
  }, e4;
}();
var Mn2 = function(r4) {
  function a5(e4) {
    var a6 = e4.userId, i4 = e4.ts, o3 = e4.token, u4 = e4.filter, c4 = e4.includeChatNotification, l3 = void 0 !== c4 && c4, h4 = r4.call(this) || this, d5 = n(n({}, cn2), u4), _2 = d5.customTypes, p4 = d5.includeEmpty, f4 = d5.includeFrozen;
    return h4.method = oe.GET, h4.path = "".concat(ce, "/").concat(encodeURIComponent(a6), "/my_group_channels/changelogs"), h4.params = re(se({ show_delivery_receipt: true, show_member: true, show_read_receipt: true, change_ts: i4 || null, token: o3, custom_types: _2, show_empty: p4, show_frozen: f4, include_chat_notification: l3 })), h4;
  }
  return t(a5, r4), a5;
}(xe);
var bn2 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    return s6.updatedChannels = n4.updated.map(function(t8) {
      return new ur2(e4, Object.assign(t8, { ts: n4.ts }));
    }), s6.deletedChannelUrls = n4.deleted, s6.hasMore = n4.has_more, s6.token = n4.next, s6.ts = n4.ts, s6;
  }
  return t(n3, t7), n3;
}(Ue);
var Nn2 = function(t7) {
  function n3(e4) {
    var n4 = e4.channelUrl, s6 = e4.isInternalCall, r4 = e4.showLatestMessage, a5 = t7.call(this) || this;
    return a5.method = oe.GET, a5.path = "".concat(s6 ? de : he, "/").concat(encodeURIComponent(n4)), a5.params = { show_member: true, show_read_receipt: true, show_delivery_receipt: true, show_latest_message: null != r4 && r4 }, a5;
  }
  return t(n3, t7), n3;
}(xe);
var Un2 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    return s6.channel = new ur2(e4, n4), s6;
  }
  return t(n3, t7), n3;
}(Ue);
var Sn2 = { includeEmpty: false, includeFrozen: true, includeMetaData: true, includeChatNotification: false, channelUrlsFilter: void 0, customTypesFilter: void 0, customTypeStartsWithFilter: void 0, nicknameContainsFilter: void 0, nicknameStartsWithFilter: void 0, nicknameExactMatchFilter: void 0, channelNameContainsFilter: void 0, myMemberStateFilter: Yt2.ALL, unreadChannelFilter: Jt2.ALL, superChannelFilter: Kt2.ALL, publicChannelFilter: Qt2.ALL, hiddenChannelFilter: Xt2.ALL, userIdsFilter: { userIds: [], includeMode: true, queryType: $t2.AND }, searchFilter: { query: void 0, fields: [] }, metadataKey: void 0, metadataValues: void 0, metadataOrderKeyFilter: void 0, metadataValueStartsWith: void 0, order: E.LATEST_LAST_MESSAGE, createdAfter: void 0, createdBefore: void 0 };
var Tn2 = function(n3) {
  function s6(e4) {
    var s7 = this, r4 = e4.userId, a5 = e4.token, i4 = e4.limit, o3 = e4.order, u4 = e4.includeEmpty, c4 = e4.myMemberStateFilter, l3 = e4.superChannelFilter, h4 = e4.publicChannelFilter, d5 = e4.unreadChannelFilter, _2 = e4.nicknameContainsFilter, p4 = e4.nicknameStartsWithFilter, f4 = e4.nicknameExactMatchFilter, v5 = e4.channelNameContainsFilter, m5 = e4.channelUrlsFilter, g4 = e4.customTypesFilter, E4 = e4.customTypeStartsWithFilter, C3 = e4.hiddenChannelFilter, y6 = e4.metadataOrderKeyFilter, M5 = e4.metadataKey, b6 = e4.metadataValues, S6 = e4.metadataValueStartsWith, T4 = e4.includeFrozen, A3 = e4.includeMetaData, I5 = e4.searchFilter, w4 = e4.userIdsFilter, L5 = e4.includeChatNotification, D3 = void 0 !== L5 && L5, x2 = e4.includeLeftChannel, R4 = void 0 !== x2 && x2, F2 = e4.createdAfter, P2 = e4.createdBefore;
    return (s7 = n3.call(this) || this).method = oe.GET, s7.path = "".concat(ce, "/").concat(encodeURIComponent(r4), "/my_group_channels"), s7.params = re({ token: a5, limit: i4, order: null != o3 ? o3 : Sn2.order, show_member: true, show_read_receipt: true, show_delivery_receipt: true, show_empty: null != u4 ? u4 : Sn2.includeEmpty, member_state_filter: null != c4 ? c4 : Sn2.myMemberStateFilter, super_mode: null != l3 ? l3 : Sn2.superChannelFilter, public_mode: null != h4 ? h4 : Sn2.publicChannelFilter, unread_filter: null != d5 ? d5 : Sn2.unreadChannelFilter, members_nickname_contains: _2, members_nickname_startswith: p4, members_nickname: f4, name_contains: v5, channel_urls: m5, custom_types: g4, custom_type_startswith: E4, hidden_mode: C3, metadata_order_key: y6, metadata_key: M5, metadata_values: b6, metadata_value_startswith: S6, show_frozen: T4, show_metadata: A3, include_chat_notification: D3, include_left_channel: R4, created_after: F2, created_before: P2 }), I5 && I5.query && I5.fields && (s7.params.search_query = I5.query, s7.params.search_fields = I5.fields), w4 && w4.userIds && w4.userIds.length > 0 && (w4.includeMode ? (s7.params.members_include_in = w4.userIds, s7.params.query_type = w4.queryType.toUpperCase()) : s7.params.members_exactly_in = w4.userIds), s7;
  }
  return t(s6, n3), s6;
}(xe);
var An2 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    s6.channels = [];
    var r4 = n4.next, a5 = n4.channels, i4 = n4.ts;
    return s6.token = r4, a5 && a5.length > 0 && (s6.channels = a5.map(function(t8) {
      return t8.ts = i4, new ur2(e4, t8);
    })), s6.ts = null != i4 ? i4 : 0, s6;
  }
  return t(n3, t7), n3;
}(Ue);
var In2 = function(t7) {
  function n3(e4) {
    var n4 = e4.userId, s6 = e4.filter, r4 = t7.call(this) || this, a5 = s6.myMemberStateFilter;
    return r4.method = oe.GET, r4.path = "".concat(ce, "/").concat(encodeURIComponent(n4), "/group_channel_count"), r4.params = { state: null != a5 ? a5 : Yt2.ALL }, r4;
  }
  return t(n3, t7), n3;
}(xe);
var wn2 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    return s6.groupChannelCount = n4.group_channel_count, s6;
  }
  return t(n3, t7), n3;
}(Ue);
var Ln2 = function(n3) {
  function s6(e4) {
    var s7 = e4.userId, r4 = e4.filter, a5 = n3.call(this) || this, i4 = r4.keys, o3 = r4.customTypeFilters, u4 = r4.customTypesFilter;
    return a5.method = oe.GET, a5.path = "".concat(ce, "/").concat(encodeURIComponent(s7), "/unread_item_count"), a5.params = re({ item_keys: i4, custom_types: null != u4 ? u4 : o3 }), a5;
  }
  return t(s6, n3), s6;
}(xe);
var Dn2 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    return "number" == typeof n4[sn2.GROUP_CHANNEL_UNREAD_MENTION_COUNT] && (s6.groupChannelUnreadMentionCount = n4[sn2.GROUP_CHANNEL_UNREAD_MENTION_COUNT]), "number" == typeof n4[sn2.GROUP_CHANNEL_UNREAD_MESSAGE_COUNT] && (s6.groupChannelUnreadMessageCount = n4[sn2.GROUP_CHANNEL_UNREAD_MESSAGE_COUNT]), "number" == typeof n4[sn2.GROUP_CHANNEL_INVITATION_COUNT] && (s6.groupChannelInvitationCount = n4[sn2.GROUP_CHANNEL_INVITATION_COUNT]), "number" == typeof n4[sn2.SUPER_UNREAD_MENTION_COUNT] && (s6.superGroupChannelUnreadMentionCount = n4[sn2.SUPER_UNREAD_MENTION_COUNT]), "number" == typeof n4[sn2.SUPER_UNREAD_MESSAGE_COUNT] && (s6.superGroupChannelUnreadMessageCount = n4[sn2.SUPER_UNREAD_MESSAGE_COUNT]), "number" == typeof n4[sn2.SUPER_INVITATION_COUNT] && (s6.superGroupChannelInvitationCount = n4[sn2.SUPER_INVITATION_COUNT]), "number" == typeof n4[sn2.NONSUPER_UNREAD_MENTION_COUNT] && (s6.nonSuperGroupChannelUnreadMentionCount = n4[sn2.NONSUPER_UNREAD_MENTION_COUNT]), "number" == typeof n4[sn2.NONSUPER_UNREAD_MESSAGE_COUNT] && (s6.nonSuperGroupChannelUnreadMessageCount = n4[sn2.NONSUPER_UNREAD_MESSAGE_COUNT]), "number" == typeof n4[sn2.NONSUPER_INVITATION_COUNT] && (s6.nonSuperGroupChannelInvitationCount = n4[sn2.NONSUPER_INVITATION_COUNT]), s6;
  }
  return t(n3, t7), n3;
}(Ue);
var xn2 = function(t7) {
  function n3(e4) {
    var n4 = e4.userId, s6 = t7.call(this) || this;
    return s6.method = oe.GET, s6.path = "".concat(ce, "/").concat(encodeURIComponent(n4), "/unread_channel_count"), s6;
  }
  return t(n3, t7), n3;
}(xe);
var Rn2 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    return s6.unreadCount = n4.unread_count, s6;
  }
  return t(n3, t7), n3;
}(Ue);
var Fn2 = function(t7) {
  function n3(e4) {
    var n4 = e4.userId, s6 = e4.filter, r4 = e4.includeFeedChannel, a5 = void 0 !== r4 && r4, i4 = t7.call(this) || this, o3 = s6.channelCustomTypesFilter, u4 = s6.superChannelFilter;
    return i4.method = oe.GET, i4.path = "".concat(ce, "/").concat(encodeURIComponent(n4), "/unread_message_count"), i4.params = { super_mode: null != u4 ? u4 : Kt2.ALL, custom_types: o3, include_feed_channel: a5 }, i4;
  }
  return t(n3, t7), n3;
}(xe);
var Pn2 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    return s6.unreadCount = n4.unread_count, s6.unreadFeedCount = n4.unread_feed_count, s6;
  }
  return t(n3, t7), n3;
}(Ue);
var kn2 = function(t7) {
  function n3(e4) {
    var n4 = e4.channelUrl, s6 = e4.scheduledStatus, r4 = e4.messageTypeFilter, a5 = t7.call(this) || this;
    return a5.method = oe.GET, a5.path = "".concat(me, "/count"), a5.params = { channel_url: n4, status: Hn2(s6) }, r4 && (a5.params.message_type = r4), a5;
  }
  return t(n3, t7), n3;
}(xe);
var On2 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    return s6.count = n4.count, s6;
  }
  return t(n3, t7), n3;
}(Ue);
var Hn2 = function(e4) {
  if (!e4) return [];
  var t7 = [];
  return e4.forEach(function(e5) {
    switch (e5) {
      case ut.PENDING:
        t7.push(ct.PENDING);
        break;
      case ut.SENT:
        t7.push(ct.IN_QUEUE), t7.push(ct.SENT);
        break;
      case ut.CANCELED:
        t7.push(ct.CANCELED);
        break;
      case ut.FAILED:
        t7.push(ct.FAILED);
    }
  }), t7;
};
var Vn2 = function(n3) {
  function s6(e4) {
    var s7 = this, r4 = e4.userId, a5 = e4.channelUrl, i4 = e4.coverUrl, o3 = e4.coverImage, u4 = e4.isDistinct, c4 = e4.isSuper, l3 = e4.isBroadcast, h4 = e4.isPublic, p4 = e4.isExclusive, f4 = e4.isDiscoverable, v5 = e4.isStrict, m5 = e4.isEphemeral, g4 = e4.accessCode, E4 = e4.name, C3 = e4.data, y6 = e4.customType, M5 = e4.messageSurvivalSeconds, b6 = e4.invitedUserIds, U2 = e4.operatorUserIds;
    return (s7 = n3.call(this) || this).method = oe.POST, s7.path = he, s7.params = re({ user_ids: c([r4], a(null != b6 ? b6 : []), false).filter(function(e5, t7, n4) {
      return t7 === n4.indexOf(e5);
    }), channel_url: a5, cover_url: i4, cover_file: o3, is_distinct: u4, is_super: c4, is_broadcast: l3, is_exclusive: p4, is_public: h4, is_discoverable: f4, strict: v5, is_ephemeral: m5, access_code: g4, name: E4, data: C3, custom_type: y6, operator_ids: U2, message_survival_seconds: M5 }), s7;
  }
  return t(s6, n3), s6;
}(xe);
var Gn2 = function(t7) {
  function n3(e4, n4) {
    var s6, r4 = this;
    return (r4 = t7.call(this, e4, n4) || this).channel = new ur2(e4, n4), r4.isCreated = null === (s6 = n4.is_created) || void 0 === s6 || s6, r4;
  }
  return t(n3, t7), n3;
}(Ue);
var Bn2 = function(t7) {
  function n3(e4) {
    var n4 = e4.userId, s6 = e4.channelUrls, r4 = t7.call(this) || this;
    return r4.method = oe.PUT, r4.path = "".concat(ce, "/").concat(encodeURIComponent(n4), "/mark_as_read_all"), r4.params = { channel_urls: s6 }, r4;
  }
  return t(n3, t7), n3;
}(xe);
!function(t7) {
  function n3() {
    return null !== t7 && t7.apply(this, arguments) || this;
  }
  t(n3, t7);
}(Ue);
var qn2 = function(t7) {
  function n3(e4) {
    var n4 = this, s6 = e4.channelUrl, r4 = e4.userId, a5 = e4.accessCode;
    return (n4 = t7.call(this) || this).method = oe.PUT, n4.path = "".concat(he, "/").concat(encodeURIComponent(s6), "/join"), n4.params = { user_id: r4, access_code: a5 }, n4;
  }
  return t(n3, t7), n3;
}(xe);
var zn2 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    return s6.channel = new ur2(e4, n4), s6;
  }
  return t(n3, t7), n3;
}(Ue);
var jn2 = function(t7) {
  function n3(e4, n4, s6) {
    var r4 = t7.call(this, e4, n4, s6) || this, a5 = s6.data, i4 = a5.member_count, o3 = void 0 === i4 ? 0 : i4, u4 = a5.joined_member_count, c4 = void 0 === u4 ? 0 : u4, l3 = a5.users, h4 = void 0 === l3 ? null : l3;
    return r4.memberCount = o3, r4.joinedMemberCount = c4, r4.members = Array.isArray(h4) ? h4.map(function(t8) {
      return new tn2(e4, t8);
    }) : [new tn2(e4, s6.data)], r4;
  }
  return t(n3, t7), n3;
}(v3);
var Wn2 = function(t7) {
  function n3(e4) {
    var n4 = this, s6 = e4.channelUrl, r4 = e4.userId, a5 = e4.shouldRemoveOperatorStatus;
    return (n4 = t7.call(this) || this).method = oe.PUT, n4.path = "".concat(he, "/").concat(encodeURIComponent(s6), "/leave"), n4.params = { user_id: r4, should_remove_operator_status: a5 }, n4;
  }
  return t(n3, t7), n3;
}(xe);
!function(t7) {
  function n3(e4, n4) {
    return t7.call(this, e4, n4) || this;
  }
  t(n3, t7);
}(Ue);
var Qn2 = function(t7) {
  function n3(e4, n4, s6) {
    var r4 = t7.call(this, e4, n4, s6) || this, a5 = s6.data, i4 = a5.member_count, o3 = void 0 === i4 ? 0 : i4, u4 = a5.joined_member_count, c4 = void 0 === u4 ? 0 : u4;
    return r4.memberCount = o3, r4.joinedMemberCount = c4, r4.member = new tn2(r4._iid, s6.data), r4;
  }
  return t(n3, t7), n3;
}(v3);
var Yn2 = function(t7) {
  function n3(e4) {
    var n4 = this, s6 = e4.channelUrl, r4 = e4.userIds;
    return (n4 = t7.call(this) || this).method = oe.POST, n4.path = "".concat(he, "/").concat(encodeURIComponent(s6), "/invite"), n4.params = { user_ids: r4 }, n4;
  }
  return t(n3, t7), n3;
}(xe);
var Kn2 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    return s6.channel = new ur2(e4, n4), s6;
  }
  return t(n3, t7), n3;
}(Ue);
var Jn2 = function(t7) {
  function n3(e4, n4, s6) {
    var r4 = t7.call(this, e4, n4, s6) || this;
    r4.inviter = null;
    var a5 = s6.data, i4 = a5.member_count, u4 = void 0 === i4 ? 0 : i4, c4 = a5.joined_member_count, l3 = void 0 === c4 ? 0 : c4, h4 = a5.inviter, d5 = a5.invitees, _2 = void 0 === d5 ? [] : d5;
    return r4.memberCount = u4, r4.joinedMemberCount = l3, h4 && Object.keys(h4).length > 0 && (r4.inviter = new es(e4, h4)), r4.invitees = _2.map(function(t8) {
      return new tn2(e4, t8);
    }), r4;
  }
  return t(n3, t7), n3;
}(v3);
var Xn2 = function(t7) {
  function n3(e4) {
    var n4 = this, s6 = e4.channelUrl, r4 = e4.userId;
    return (n4 = t7.call(this) || this).method = oe.PUT, n4.path = "".concat(he, "/").concat(encodeURIComponent(s6), "/decline"), n4.params = { user_id: r4 }, n4;
  }
  return t(n3, t7), n3;
}(xe);
!function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    return s6.channel = new ur2(e4, n4), s6.channel.myMemberState = Wt2.NONE, s6;
  }
  t(n3, t7);
}(Ue);
var Zn2 = function(t7) {
  function n3(e4, n4, s6) {
    var r4 = t7.call(this, e4, n4, s6) || this, a5 = s6.data, i4 = a5.member_count, u4 = a5.joined_member_count, c4 = a5.inviter, l3 = a5.invitee;
    return r4.memberCount = null != i4 ? i4 : 0, r4.joinedMemberCount = null != u4 ? u4 : 0, r4.inviter = new es(e4, c4), r4.invitee = new tn2(e4, l3), r4;
  }
  return t(n3, t7), n3;
}(v3);
var $n2 = { hidePreviousMessages: false, allowAutoUnhide: true };
var es3 = function(t7) {
  function n3(e4) {
    var n4 = this, s6 = e4.channelUrl, r4 = e4.userId, a5 = e4.hidePreviousMessages, i4 = e4.allowAutoUnhide;
    return (n4 = t7.call(this) || this).method = oe.PUT, n4.path = "".concat(he, "/").concat(encodeURIComponent(s6), "/hide"), n4.params = { user_id: r4, hide_previous_messages: null != a5 ? a5 : $n2.hidePreviousMessages, allow_auto_unhide: null != i4 ? i4 : $n2.allowAutoUnhide }, n4;
  }
  return t(n3, t7), n3;
}(xe);
var ts3 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this, r4 = n4.ts_message_offset;
    return s6.messageOffsetTimestamp = r4, s6;
  }
  return t(n3, t7), n3;
}(Ue);
var ns3 = function(t7) {
  function n3(e4, n4, s6) {
    var r4, a5, i4, o3 = this;
    return (o3 = t7.call(this, e4, "SYEV", s6) || this).allowAutoUnhide = null, o3.hidePreviousMessages = null, o3.messageOffsetTimestamp = null, s6.data && (o3.allowAutoUnhide = null !== (r4 = s6.data.allow_auto_unhide) && void 0 !== r4 ? r4 : null, o3.hidePreviousMessages = null !== (a5 = s6.data.hide_previous_messages) && void 0 !== a5 ? a5 : null), o3.messageOffsetTimestamp = null !== (i4 = s6.ts_message_offset) && void 0 !== i4 ? i4 : null, o3;
  }
  return t(n3, t7), n3;
}(Fe);
var ss2 = function(t7) {
  function n3(e4) {
    var n4 = e4.channelUrl, s6 = e4.time;
    return t7.call(this, { code: "TPST", ackRequired: false, payload: { channel_url: n4, time: s6 } }) || this;
  }
  return t(n3, t7), n3;
}(qe);
var rs2 = function(t7) {
  function n3(e4, n4, s6) {
    var r4 = t7.call(this, e4, "SYEV", s6) || this;
    return r4.user = new es(e4, s6.data), r4;
  }
  return t(n3, t7), n3;
}(Fe);
var as3 = function(t7) {
  function n3(e4) {
    var n4 = e4.channelUrl, s6 = e4.time;
    return t7.call(this, { code: "TPEN", ackRequired: false, payload: { channel_url: n4, time: s6 } }) || this;
  }
  return t(n3, t7), n3;
}(qe);
var is2 = function(t7) {
  function n3(e4, n4, s6) {
    var r4 = t7.call(this, e4, "SYEV", s6) || this;
    return r4.user = new es(e4, s6.data), r4;
  }
  return t(n3, t7), n3;
}(Fe);
var os3 = function(t7) {
  function n3(e4) {
    var n4 = e4.channelUrl, s6 = e4.messageId;
    return t7.call(this, { code: "MACK", ackRequired: false, payload: { channel_url: n4, msg_id: s6 } }) || this;
  }
  return t(n3, t7), n3;
}(qe);
var us2 = function(t7) {
  function a5(e4, n3) {
    var s6, r4, a6, i4, o3, u4, c4, l3, h4, d5, _2, p4, f4, v5, m5, g4, E4, C3, y6, M5, b6, N3, U2, S6 = this;
    return (S6 = t7.call(this, e4, n3) || this).includeEmpty = false, S6.includeFrozen = true, S6.includeMetaData = true, S6.includeChatNotification = false, S6.channelUrlsFilter = null, S6.customTypesFilter = null, S6.customTypeStartsWithFilter = null, S6.nicknameContainsFilter = null, S6.nicknameStartsWithFilter = null, S6.nicknameExactMatchFilter = null, S6.channelNameContainsFilter = "", S6.myMemberStateFilter = Yt2.ALL, S6.unreadChannelFilter = Jt2.ALL, S6.superChannelFilter = Kt2.ALL, S6.publicChannelFilter = Qt2.ALL, S6.hiddenChannelFilter = Xt2.UNHIDDEN, S6.searchFilter = { fields: [], query: null }, S6.userIdsFilter = { userIds: [], includeMode: true, queryType: $t2.AND }, S6.metadataKey = null, S6.metadataValues = null, S6.metadataOrderKeyFilter = null, S6.metadataValueStartsWith = null, S6.order = E.LATEST_LAST_MESSAGE, S6.includeEmpty = null !== (s6 = n3.includeEmpty) && void 0 !== s6 && s6, S6.includeFrozen = null === (r4 = n3.includeFrozen) || void 0 === r4 || r4, S6.includeMetaData = null === (a6 = n3.includeMetaData) || void 0 === a6 || a6, S6.includeChatNotification = null !== (i4 = n3.includeChatNotification) && void 0 !== i4 && i4, S6.channelUrlsFilter = null !== (o3 = n3.channelUrlsFilter) && void 0 !== o3 ? o3 : null, S6.customTypesFilter = null !== (u4 = n3.customTypesFilter) && void 0 !== u4 ? u4 : null, S6.customTypeStartsWithFilter = null !== (c4 = n3.customTypeStartsWithFilter) && void 0 !== c4 ? c4 : "", S6.nicknameContainsFilter = null !== (l3 = n3.nicknameContainsFilter) && void 0 !== l3 ? l3 : null, S6.nicknameStartsWithFilter = null !== (h4 = n3.nicknameStartsWithFilter) && void 0 !== h4 ? h4 : null, S6.nicknameExactMatchFilter = null !== (d5 = n3.nicknameExactMatchFilter) && void 0 !== d5 ? d5 : null, S6.channelNameContainsFilter = null !== (_2 = n3.channelNameContainsFilter) && void 0 !== _2 ? _2 : "", S6.myMemberStateFilter = null !== (p4 = n3.myMemberStateFilter) && void 0 !== p4 ? p4 : Yt2.ALL, S6.unreadChannelFilter = null !== (f4 = n3.unreadChannelFilter) && void 0 !== f4 ? f4 : Jt2.ALL, S6.superChannelFilter = null !== (v5 = n3.superChannelFilter) && void 0 !== v5 ? v5 : Kt2.ALL, S6.publicChannelFilter = null !== (m5 = n3.publicChannelFilter) && void 0 !== m5 ? m5 : Qt2.ALL, S6.hiddenChannelFilter = null !== (g4 = n3.hiddenChannelFilter) && void 0 !== g4 ? g4 : Xt2.UNHIDDEN, S6.searchFilter = null !== (E4 = n3.searchFilter) && void 0 !== E4 ? E4 : { fields: [], query: null }, S6.userIdsFilter = null !== (C3 = n3.userIdsFilter) && void 0 !== C3 ? C3 : { userIds: [], includeMode: true, queryType: $t2.AND }, S6.metadataKey = null !== (y6 = n3.metadataKey) && void 0 !== y6 ? y6 : null, S6.metadataValues = null !== (M5 = n3.metadataValues) && void 0 !== M5 ? M5 : null, S6.metadataOrderKeyFilter = null !== (b6 = n3.metadataOrderKeyFilter) && void 0 !== b6 ? b6 : null, S6.metadataValueStartsWith = null !== (N3 = n3.metadataValueStartsWith) && void 0 !== N3 ? N3 : null, S6.order = null !== (U2 = n3.order) && void 0 !== U2 ? U2 : E.LATEST_LAST_MESSAGE, n3.createdAfter && (S6.createdAfter = n3.createdAfter), n3.createdBefore && (S6.createdBefore = n3.createdBefore), S6;
  }
  return t(a5, t7), a5.prototype._validate = function() {
    return t7.prototype._validate.call(this) && w("boolean", this.includeEmpty) && w("boolean", this.includeFrozen) && w("boolean", this.includeMetaData) && w("string", this.channelNameContainsFilter) && N("string", this.channelUrlsFilter, true) && N("string", this.customTypesFilter, true) && w("string", this.customTypeStartsWithFilter) && w("string", this.nicknameContainsFilter, true) && w("string", this.nicknameStartsWithFilter, true) && w("string", this.nicknameExactMatchFilter, true) && S(Yt2, this.myMemberStateFilter) && S(Kt2, this.superChannelFilter) && S(Qt2, this.publicChannelFilter) && S(Jt2, this.unreadChannelFilter) && S(Xt2, this.hiddenChannelFilter) && N(en2, this.searchFilter.fields) && w("string", this.searchFilter.query, true) && N("string", this.userIdsFilter.userIds) && w("boolean", this.userIdsFilter.includeMode) && S($t2, this.userIdsFilter.queryType) && S(E, this.order) && w("string", this.metadataOrderKeyFilter, true) && w("string", this.metadataKey, true) && N("string", this.metadataValues, true) && w("string", this.metadataValueStartsWith, true) && C(this.createdAfter, true) && C(this.createdBefore, true);
  }, a5.prototype.serialize = function() {
    return Yr(this);
  }, a5.prototype.next = function() {
    return r(this, void 0, void 0, function() {
      var e4, t8, r4;
      return s(this, function(a6) {
        switch (a6.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, [4, ps2.of(this._iid).getMyGroupChannels(this._token, se(n({}, this)), this.limit, Ks.REQUEST_CHANNEL, true)]) : [3, 2] : [3, 5];
          case 1:
            return e4 = a6.sent(), t8 = e4.channels, r4 = e4.token, this._token = r4, this._hasNext = !!r4, this._isLoading = false, [2, t8];
          case 2:
            return [2, []];
          case 3:
            throw v.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw v.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, a5;
}(_o);
var cs2 = function(n3) {
  function s6(e4) {
    var s7 = e4.channelUrl, r4 = e4.userId, a5 = n3.call(this) || this;
    return a5.method = oe.PUT, a5.path = "".concat(he, "/").concat(encodeURIComponent(s7), "/messages/mark_as_delivered"), a5.params = re({ userId: r4 }), a5;
  }
  return t(s6, n3), s6;
}(xe);
!function(t7) {
  function n3() {
    return null !== t7 && t7.apply(this, arguments) || this;
  }
  t(n3, t7);
}(Ue);
var ls2;
var hs3 = function(t7) {
  function n3(e4, n4, s6) {
    var r4 = t7.call(this, e4, "DLVR", s6) || this;
    return r4.channelUrl = s6.channel_url, r4.deliveredStateUpdate = s6.updated, r4;
  }
  return t(n3, t7), n3;
}(Fe);
var ds2 = function() {
  function e4(e5) {
    var t7 = e5.top, n3 = void 0 === t7 ? Number.MAX_SAFE_INTEGER : t7, s6 = e5.bottom, r4 = void 0 === s6 ? 0 : s6;
    this.top = n3, this.bottom = r4;
  }
  return e4.prototype.includes = function() {
    for (var e5 = this, t7 = [], n3 = 0; n3 < arguments.length; n3++) t7[n3] = arguments[n3];
    return t7.every(function(t8) {
      return e5.top <= t8 && t8 <= e5.bottom;
    });
  }, e4.prototype.overlap = function(e5) {
    return this.includes(e5.top) || this.includes(e5.bottom);
  }, e4.prototype.intersect = function() {
    for (var e5 = this, t7 = [], n3 = 0; n3 < arguments.length; n3++) t7[n3] = arguments[n3];
    return t7.some(function(t8) {
      return e5.top <= t8 && t8 <= e5.bottom;
    });
  }, e4.prototype.extends = function() {
    for (var e5 = [], t7 = 0; t7 < arguments.length; t7++) e5[t7] = arguments[t7];
    this.top = Math.min.apply(Math, c([this.top], a(e5), false)), this.bottom = Math.max.apply(Math, c([this.bottom], a(e5), false));
  }, e4;
}();
var _s3 = {};
var ps2 = function(o3) {
  function u4(e4, t7) {
    var n3, r4 = this;
    return (r4 = o3.call(this, e4, n(n({}, t7), { channelType: q.GROUP })) || this)._leftChannels = /* @__PURE__ */ new Map(), r4._disableMack = false, r4._markAsReadAllLastSentAt = 0, r4._disableMack = null !== (n3 = t7.disableMack) && void 0 !== n3 && n3, r4._groupChannelHandlers = /* @__PURE__ */ new Map(), r4._groupChannelCache = new an2(r4._iid, { sdkState: t7.sdkState, cacheContext: t7.cacheContext }), r4._groupChannelBroadcast = new yn2({ dispatcher: t7.dispatcher, groupChannelCache: r4._groupChannelCache, messageCache: Qs.of(r4._iid), unsentMessageCache: Ks2.of(r4._iid) }), setInterval(function() {
      var e5, t8, n4 = function(e6) {
        e6.invalidateTypingStatus() && (r4._dispatcher.dispatch(new En2({ channels: [e6], context: { source: Ks.EVENT_CHANNEL_TYPING_STATUS_UPDATE } })), r4._groupChannelHandlers.forEach(function(t9) {
          t9.onTypingStatusUpdated && t9.onTypingStatusUpdated(e6);
        }));
      };
      try {
        for (var s6 = o(r4._groupChannelCache.channels), a5 = s6.next(); !a5.done; a5 = s6.next()) {
          n4(a5.value);
        }
      } catch (t9) {
        e5 = { error: t9 };
      } finally {
        try {
          a5 && !a5.done && (t8 = s6.return) && t8.call(s6);
        } finally {
          if (e5) throw e5.error;
        }
      }
    }, 1e3), r4._dispatcher.on(function(e5) {
      e5 instanceof Fe ? r4._handleEvent(e5).catch(function(e6) {
        if (g(e6) && "foreground" === r4._sdkState.appState) throw e6;
      }) : e5 instanceof b ? r(r4, void 0, void 0, function() {
        var t8, n4;
        return s(this, function(s6) {
          switch (s6.label) {
            case 0:
              return t8 = e5.message, [4, this.getChannel(t8.channelUrl, true)];
            case 1:
              return n4 = s6.sent(), t8 instanceof It ? n4._autoResendUserMessage(t8) : t8 instanceof St && n4._autoResendFileMessage(t8), [2];
          }
        });
      }) : e5 instanceof D ? r4.reduceDBSize() : e5 instanceof ot && r(r4, void 0, void 0, function() {
        var t8, n4, s6, r5, a5, o4 = this;
        return s(this, function(u5) {
          switch (u5.label) {
            case 0:
              return t8 = e5.channelUrl, n4 = e5.channelType, s6 = e5.parentMessage, r5 = new ta(this._iid, { channel_type: q.GROUP, channel_url: t8, parent_message_id: s6.messageId, thread_info: Re.payloadify(s6.threadInfo) }), n4 !== q.GROUP ? [3, 2] : [4, this.getChannel(t8, true)];
            case 1:
              a5 = u5.sent(), os(function() {
                return r(o4, void 0, void 0, function() {
                  var e6, t9, n5, s7, i4;
                  return s(this, function(o5) {
                    try {
                      for (e6 = o(this._groupChannelHandlers.values()), t9 = e6.next(); !t9.done; t9 = e6.next()) (n5 = t9.value).onThreadInfoUpdated && n5.onThreadInfoUpdated(a5, r5);
                    } catch (e7) {
                      s7 = { error: e7 };
                    } finally {
                      try {
                        t9 && !t9.done && (i4 = e6.return) && i4.call(e6);
                      } finally {
                        if (s7) throw s7.error;
                      }
                    }
                    return [2];
                  });
                });
              }), u5.label = 2;
            case 2:
              return [2];
          }
        });
      });
    }), _s3[e4] || (_s3[e4] = r4), r4;
  }
  return t(u4, o3), Object.defineProperty(u4.prototype, "_messageCache", { get: function() {
    return Qs.of(this._iid);
  }, enumerable: false, configurable: true }), Object.defineProperty(u4.prototype, "_unsentMessageCache", { get: function() {
    return Ks2.of(this._iid);
  }, enumerable: false, configurable: true }), u4.of = function(e4) {
    return _s3[e4] || (_s3[e4] = new u4(e4, Ws.of(e4))), _s3[e4];
  }, u4.clear = function(e4) {
    _s3[e4] && delete _s3[e4];
  }, Object.defineProperty(u4.prototype, "handlers", { get: function() {
    return c([], a(this._groupChannelHandlers.values()), false);
  }, enumerable: false, configurable: true }), u4.prototype.buildGroupChannelFromSerializedData = function(e4) {
    var t7 = Xr(e4);
    return new ur2(this._iid, ur2.payloadify(t7));
  }, u4.prototype.buildGroupChannelListQueryFromSerializedData = function(e4) {
    var t7 = Xr(e4);
    return new us2(this._iid, t7);
  }, u4.prototype.buildMemberFromSerializedData = function(e4) {
    var t7 = Xr(e4);
    return new tn2(this._iid, tn2.payloadify(t7));
  }, u4.prototype.getChannelFromCache = function(e4) {
    var t7;
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._groupChannelCache.get(e4)];
          case 1:
            return [2, null !== (t7 = n3.sent()) && void 0 !== t7 ? t7 : null];
        }
      });
    });
  }, u4.prototype.getChannelsFromCache = function(e4, t7, n3, s6, r4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return [4, this._groupChannelCache.fetch({ token: e4, filter: t7, order: n3, limit: s6, borderlineChannelUrl: r4 })];
          case 1:
            return [2, a5.sent()];
        }
      });
    });
  }, u4.prototype.upsertChannelsToCache = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return [4, this._groupChannelCache.upsert(e4)];
          case 1:
            return [2, t7.sent()];
        }
      });
    });
  }, u4.prototype.removeChannelsFromCache = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return [4, this._groupChannelCache.remove(e4)];
          case 1:
            return t7.sent(), [2];
        }
      });
    });
  }, u4.prototype.clearChannelsFromCache = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, this._groupChannelCache.clear()];
          case 1:
            return e4.sent(), [2];
        }
      });
    });
  }, u4.prototype.reduceDBSize = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n3, s6, r4, a5, i4, o4, u5, c4, l3, h4, d5, _2, p4;
      return s(this, function(f4) {
        switch (f4.label) {
          case 0:
            return e4 = Qs.of(this._iid), t7 = Ws.of(this._iid).cacheContext, n3 = t7.localCacheConfig, s6 = t7.nestdb, t7.localCacheEnabled && s6 && s6.state == Ts.OPENED ? (r4 = 1024 * n3.maxSize * 1024, [4, s6.estimateUsage()]) : [2];
          case 1:
            if ((a5 = f4.sent()) < r4) return [2];
            i4 = [], o4 = this._groupChannelCache.channels, u5 = {}, d5 = 0, f4.label = 2;
          case 2:
            return d5 < o4.length ? [4, this.getMessagesFromCache(o4[d5].url, 0, "prev", new Os())] : [3, 5];
          case 3:
            c4 = f4.sent(), u5[o4[d5].url] = JSON.stringify(c4).length, l3 = new M({ channel: o4[d5], cachedMessageCount: c4.length }), i4.push(l3), f4.label = 4;
          case 4:
            return d5++, [3, 2];
          case 5:
            h4 = i4.sort(n3.clearOrderComparator), d5 = 0, f4.label = 6;
          case 6:
            return d5 < h4.length ? [4, e4.removeMessagesOfChannel(h4[d5].channel.url)] : [3, 10];
          case 7:
            return f4.sent(), [4, e4._getGroupChannelPreferenceSize(h4[d5].channel.url)];
          case 8:
            if (_2 = f4.sent(), p4 = u5[h4[d5].channel.url] + _2, (a5 -= p4) < r4) return [3, 10];
            f4.label = 9;
          case 9:
            return d5++, [3, 6];
          case 10:
            return [2];
        }
      });
    });
  }, u4.prototype._handleEvent = function(e4) {
    var t7, n3;
    return r(this, void 0, void 0, function() {
      var s6, r4, o4, u5, c4, l3, h4, d5, _2, m5, g4, E4, C3, M5, N3, U2, S6, T4, A3, I5, w4, L5, D3, x2, R4, F2, k3, V2, K4, X3, Z2, $2, ee, te2, ne, se2, re2, ae, ie2, oe2, ue, ce2, le2, he2, de2, _e3, pe2, fe2, ve3, me3, ge3, Ee3, Ce4, ye3, Me3, be3, Ne3, Ue3, Se, Te2, Ae3, Ie3, we2, Le4, De5, Ye4, Ke3, Je4, Xe3, Ze4, $e3, et3, tt3, nt3, st3, rt2, at2, it3, ot2, ut2, ct2, lt2, ht2, dt2, _t3, pt2, ft2, vt3, mt3, gt3, Et3, Ct3, yt3, Mt3, bt3, Nt3, Ut3, St3, Tt3, At3, It3, wt3, Rt3, Pt3, Qt4, Yt4, Kt4, Jt4, Xt4, Zt4, $t4, en4, tn4, nn4, sn4, rn4, an4, on4, un4, cn4, ln4, hn4, dn4, _n4, pn4, fn4, vn4, mn4, gn4, yn4, Mn3, bn4, Nn3, Un3, Sn4, Tn3, An3, In4, wn4, Ln3, Dn3 = this;
      return s(this, function(xn3) {
        switch (xn3.label) {
          case 0:
            switch (xn3.trys.push([0, 80, , 81]), e4.code) {
              case "MESG":
              case "FILE":
              case "ADMM":
              case "BRDM":
                return [3, 1];
              case "MEDI":
              case "FEDI":
              case "AEDI":
                return [3, 4];
              case "DELM":
                return [3, 7];
              case "READ":
                return [3, 10];
              case "DLVR":
                return [3, 13];
              case "MRCT":
                return [3, 15];
              case "MTHD":
                return [3, 19];
              case "MCNT":
                return [3, 23];
              case "PEDI":
                return [3, 32];
              case "VOTE":
                return [3, 35];
              case "SYEV":
                return [3, 38];
              case "USEV":
                return [3, 78];
            }
            return [3, 79];
          case 1:
            return d5 = null, "MESG" === e4.code ? d5 = e4.as(pr) : "FILE" === e4.code ? d5 = e4.as(Ct) : "ADMM" !== e4.code && "BRDM" != e4.code || (d5 = e4.as(L3)), d5 ? (s6 = d5.message, r4 = d5.isMentioned, o4 = d5.forceUpdateLastMessage, s6.channelType !== q.GROUP ? [3, 3] : (this._disableMack || as(function() {
              return r(Dn3, void 0, void 0, function() {
                var e5;
                return s(this, function(t8) {
                  return e5 = new os3(s6), this._requestQueue.send(e5), [2];
                });
              });
            }), V2 = this._groupChannelCache.isCachedInMemory(s6.channelUrl), L5 = s6 instanceof mt && s6.sender.userId === this._sdkState.userId, [4, this.getChannel(s6.channelUrl, true)])) : [3, 3];
          case 2:
            if (u5 = xn3.sent(), c4 = Ws.of(this._iid).useMemberInfoInMessage, s6 instanceof mt) {
              try {
                for (l3 = o(u5.members), h4 = l3.next(); !h4.done; h4 = l3.next()) if ((yt3 = h4.value).userId === s6.sender.userId) {
                  c4 || (s6.sender.nickname = yt3.nickname, s6.sender.plainProfileUrl = yt3.plainProfileUrl, s6.sender.metaData = yt3.metaData, s6.sender.isBlockedByMe = yt3.isBlockedByMe);
                  break;
                }
              } catch (e5) {
                Mn3 = { error: e5 };
              } finally {
                try {
                  h4 && !h4.done && (bn4 = l3.return) && bn4.call(l3);
                } finally {
                  if (Mn3) throw Mn3.error;
                }
              }
              !c4 && r4 && (null === (t7 = s6.mentionedUsers) || void 0 === t7 || t7.forEach(function(e5) {
                var t8, n4;
                try {
                  for (var s7 = o(u5.members), r5 = s7.next(); !r5.done; r5 = s7.next()) {
                    var a5 = r5.value;
                    if (e5.userId === a5.userId) {
                      e5.nickname = a5.nickname, e5.plainProfileUrl = a5.plainProfileUrl, e5.metaData = a5.metaData;
                      break;
                    }
                  }
                } catch (e6) {
                  t8 = { error: e6 };
                } finally {
                  try {
                    r5 && !r5.done && (n4 = s7.return) && n4.call(s7);
                  } finally {
                    if (t8) throw t8.error;
                  }
                }
              })), L5 && (M5 = this._sessionManager.currentUser) && (M5.nickname = s6.sender.nickname, M5.plainProfileUrl = s6.sender.plainProfileUrl, M5.metaData = s6.sender.metaData);
            }
            s6.silent && !L5 || (u5.isEphemeral || V2) && (u5._updateLastMessage(s6), L5 || u5._shouldUpdateUnreadCountWith(s6) && u5._updateUnreadCount(u5.unreadMessageCount + 1, u5.unreadMentionCount + (r4 ? 1 : 0))), o4 && u5._updateLastMessage(s6), this._dispatcher.dispatch(new En2({ channels: [u5], context: { source: Ks.EVENT_MESSAGE_RECEIVED } })), s6.silent && !L5 || os(function() {
              return r(Dn3, void 0, void 0, function() {
                var e5, t8, n4, s7, r5;
                return s(this, function(a5) {
                  try {
                    for (e5 = o(this._groupChannelHandlers.values()), t8 = e5.next(); !t8.done; t8 = e5.next()) (n4 = t8.value).onChannelChanged && n4.onChannelChanged(u5);
                  } catch (e6) {
                    s7 = { error: e6 };
                  } finally {
                    try {
                      t8 && !t8.done && (r5 = e5.return) && r5.call(e5);
                    } finally {
                      if (s7) throw s7.error;
                    }
                  }
                  return [2];
                });
              });
            }), this._dispatcher.dispatch(new $s({ messages: [s6], source: Ks.EVENT_MESSAGE_RECEIVED })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                var e5, t8, n4, a5, i4;
                return s(this, function(o5) {
                  try {
                    for (e5 = o(this._groupChannelHandlers.values()), t8 = e5.next(); !t8.done; t8 = e5.next()) (n4 = t8.value).onMessageReceived && n4.onMessageReceived(u5, s6), r4 && n4.onMentionReceived && n4.onMentionReceived(u5, s6);
                  } catch (e6) {
                    a5 = { error: e6 };
                  } finally {
                    try {
                      t8 && !t8.done && (i4 = e5.return) && i4.call(e5);
                    } finally {
                      if (a5) throw a5.error;
                    }
                  }
                  return [2];
                });
              });
            }), xn3.label = 3;
          case 3:
            return [3, 79];
          case 4:
            return d5 = null, "MEDI" === e4.code ? d5 = e4.as(vr) : "FEDI" === e4.code ? d5 = e4.as(_r) : "AEDI" === e4.code && (d5 = e4.as(I3)), d5 ? (_2 = d5.message, m5 = d5.mentionCountChange, _2.threadInfo && (_2.threadInfo.unreadReplyCount = void 0), _2.channelType !== q.GROUP ? [3, 6] : (V2 = this._groupChannelCache.isCachedInMemory(_2.channelUrl), [4, this.getChannel(_2.channelUrl, true)])) : [3, 6];
          case 5:
            g4 = xn3.sent(), L5 = _2 instanceof mt && _2.sender.userId === this._sdkState.userId, E4 = false, L5 ? (C3 = _2.sender, (M5 = this._sessionManager.currentUser) && (M5.nickname = C3.nickname, M5.plainProfileUrl = C3.plainProfileUrl, M5.metaData = C3.metaData)) : g4.isReadMessage(_2) || 0 !== m5 && !_2.silent && V2 && (g4._updateUnreadCount(g4.unreadMessageCount, g4.unreadMentionCount + m5), E4 = true), g4._updateLastMessage(_2) ? E4 = true : (null === (n3 = g4.lastMessage) || void 0 === n3 ? void 0 : n3.isIdentical(_2)) && (V2 ? g4._updateLastMessage(_2) && (E4 = true) : E4 = true), N3 = false, g4.lastPinnedMessage && g4.lastPinnedMessage.messageId === _2.messageId && (g4.lastPinnedMessage = _2, E4 = true, N3 = true), E4 && (this._dispatcher.dispatch(new En2({ channels: [g4], context: { source: N3 ? Ks.EVENT_PINNED_MESSAGE_UPDATED : Ks.EVENT_MESSAGE_UPDATED } })), _2.silent && !L5 || os(function() {
              return r(Dn3, void 0, void 0, function() {
                var e5, t8, n4, s7, r5;
                return s(this, function(a5) {
                  try {
                    for (e5 = o(this._groupChannelHandlers.values()), t8 = e5.next(); !t8.done; t8 = e5.next()) (n4 = t8.value).onChannelChanged && n4.onChannelChanged(g4);
                  } catch (e6) {
                    s7 = { error: e6 };
                  } finally {
                    try {
                      t8 && !t8.done && (r5 = e5.return) && r5.call(e5);
                    } finally {
                      if (s7) throw s7.error;
                    }
                  }
                  return [2];
                });
              });
            }), N3 && os(function() {
              return r(Dn3, void 0, void 0, function() {
                var e5, t8, n4, s7, r5;
                return s(this, function(a5) {
                  try {
                    for (e5 = o(this._groupChannelHandlers.values()), t8 = e5.next(); !t8.done; t8 = e5.next()) (n4 = t8.value).onPinnedMessageUpdated && n4.onPinnedMessageUpdated(g4);
                  } catch (e6) {
                    s7 = { error: e6 };
                  } finally {
                    try {
                      t8 && !t8.done && (r5 = e5.return) && r5.call(e5);
                    } finally {
                      if (s7) throw s7.error;
                    }
                  }
                  return [2];
                });
              });
            })), this._dispatcher.dispatch(new $s({ messages: [_2], source: Ks.EVENT_MESSAGE_UPDATED })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                var e5, t8, n4, s7, r5;
                return s(this, function(a5) {
                  try {
                    for (e5 = o(this._groupChannelHandlers.values()), t8 = e5.next(); !t8.done; t8 = e5.next()) (n4 = t8.value).onMessageUpdated && n4.onMessageUpdated(g4, _2), m5 > 0 && n4.onMentionReceived && n4.onMentionReceived(g4, _2);
                  } catch (e6) {
                    s7 = { error: e6 };
                  } finally {
                    try {
                      t8 && !t8.done && (r5 = e5.return) && r5.call(e5);
                    } finally {
                      if (s7) throw s7.error;
                    }
                  }
                  return [2];
                });
              });
            }), xn3.label = 6;
          case 6:
            return [3, 79];
          case 7:
            return U2 = e4.as(it), me3 = U2.channelUrl, ge3 = U2.channelType, S6 = U2.messageId, T4 = U2.silent, A3 = U2.messageCreatedAt, I5 = U2.senderId, ge3 !== q.GROUP ? [3, 9] : [4, this.getChannel(me3, true)];
          case 8:
            w4 = xn3.sent(), L5 = I5 === this._sdkState.userId, T4 || L5 || A3 > 0 && w4.myLastRead < A3 && w4.unreadMessageCount > 0 && w4._updateUnreadCount(w4.unreadMessageCount - 1, 0), this._dispatcher.dispatch(new eo({ messageIds: [S6], source: Ks.EVENT_MESSAGE_DELETED })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                var e5, t8, n4, s7, r5;
                return s(this, function(a5) {
                  try {
                    for (e5 = o(this._groupChannelHandlers.values()), t8 = e5.next(); !t8.done; t8 = e5.next()) (n4 = t8.value).onMessageDeleted && n4.onMessageDeleted(w4, S6);
                  } catch (e6) {
                    s7 = { error: e6 };
                  } finally {
                    try {
                      t8 && !t8.done && (r5 = e5.return) && r5.call(e5);
                    } finally {
                      if (s7) throw s7.error;
                    }
                  }
                  return [2];
                });
              });
            }), xn3.label = 9;
          case 9:
            return [3, 79];
          case 10:
            return (D3 = e4.as(Ye2).readStatus).channelType !== q.GROUP ? [3, 12] : (V2 = this._groupChannelCache.isCachedInMemory(D3.channelUrl), [4, this.getChannel(D3.channelUrl, true)]);
          case 11:
            x2 = xn3.sent(), V2 && x2._updateUnreadMemberState(D3.reader.userId, D3.readAt), D3.reader.userId === this._sdkState.userId ? V2 ? (x2.unreadMessageCount > 0 || x2.unreadMentionCount > 0) && (x2._updateUnreadCount(0, 0), this._dispatcher.dispatch(new En2({ channels: [x2], context: { source: Ks.EVENT_CHANNEL_READ } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                var e5, t8, n4, s7, r5;
                return s(this, function(a5) {
                  try {
                    for (e5 = o(this._groupChannelHandlers.values()), t8 = e5.next(); !t8.done; t8 = e5.next()) (n4 = t8.value).onChannelChanged && n4.onChannelChanged(x2);
                  } catch (e6) {
                    s7 = { error: e6 };
                  } finally {
                    try {
                      t8 && !t8.done && (r5 = e5.return) && r5.call(e5);
                    } finally {
                      if (s7) throw s7.error;
                    }
                  }
                  return [2];
                });
              });
            })) : 0 !== x2.unreadMessageCount && 0 !== x2.unreadMentionCount || (this._dispatcher.dispatch(new En2({ channels: [x2], context: { source: Ks.EVENT_CHANNEL_READ } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                var e5, t8, n4, s7, r5;
                return s(this, function(a5) {
                  try {
                    for (e5 = o(this._groupChannelHandlers.values()), t8 = e5.next(); !t8.done; t8 = e5.next()) (n4 = t8.value).onChannelChanged && n4.onChannelChanged(x2);
                  } catch (e6) {
                    s7 = { error: e6 };
                  } finally {
                    try {
                      t8 && !t8.done && (r5 = e5.return) && r5.call(e5);
                    } finally {
                      if (s7) throw s7.error;
                    }
                  }
                  return [2];
                });
              });
            })) : (this._dispatcher.dispatch(new En2({ channels: [x2], context: { source: Ks.EVENT_CHANNEL_READ } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                var e5, t8, n4, s7, r5;
                return s(this, function(a5) {
                  try {
                    for (e5 = o(this._groupChannelHandlers.values()), t8 = e5.next(); !t8.done; t8 = e5.next()) (n4 = t8.value).onUnreadMemberStatusUpdated && n4.onUnreadMemberStatusUpdated(x2);
                  } catch (e6) {
                    s7 = { error: e6 };
                  } finally {
                    try {
                      t8 && !t8.done && (r5 = e5.return) && r5.call(e5);
                    } finally {
                      if (s7) throw s7.error;
                    }
                  }
                  return [2];
                });
              });
            })), xn3.label = 12;
          case 12:
            return [3, 79];
          case 13:
            return R4 = e4.as(hs3), me3 = R4.channelUrl, F2 = R4.deliveredStateUpdate, k3 = void 0 === F2 ? {} : F2, V2 = this._groupChannelCache.isCachedInMemory(me3), [4, this.getChannel(me3, true)];
          case 14:
            return K4 = xn3.sent(), V2 && Object.keys(k3).forEach(function(e5) {
              K4._updateUndeliveredMemberState(e5, k3[e5]);
            }), Object.keys(k3).some(function(e5) {
              return e5 !== Dn3._sdkState.userId;
            }) && (this._dispatcher.dispatch(new En2({ channels: [K4], context: { source: Ks.EVENT_CHANNEL_DELIVERED } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                var e5, t8, n4, s7, r5;
                return s(this, function(a5) {
                  try {
                    for (e5 = o(this._groupChannelHandlers.values()), t8 = e5.next(); !t8.done; t8 = e5.next()) (n4 = t8.value).onUndeliveredMemberStatusUpdated && n4.onUndeliveredMemberStatusUpdated(K4);
                  } catch (e6) {
                    s7 = { error: e6 };
                  } finally {
                    try {
                      t8 && !t8.done && (r5 = e5.return) && r5.call(e5);
                    } finally {
                      if (s7) throw s7.error;
                    }
                  }
                  return [2];
                });
              });
            })), [3, 79];
          case 15:
            return X3 = e4.as(U), me3 = X3.channelUrl, ge3 = X3.channelType, Z2 = X3.event, ge3 !== q.GROUP ? [3, 18] : [4, this.getChannel(me3, true)];
          case 16:
            return $2 = xn3.sent(), [4, this.getMessageFromCache(Z2.messageId)];
          case 17:
            (ne = xn3.sent()) ? ne instanceof pt && (ne.applyReactionEvent(Z2), this._dispatcher.dispatch(new $s({ messages: [ne], source: Ks.EVENT_MESSAGE_REACTION_UPDATED }))) : this._dispatcher.dispatch(new to({ event: Z2, source: Ks.EVENT_MESSAGE_REACTION_UPDATED })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                var e5, t8, n4, s7, r5;
                return s(this, function(a5) {
                  try {
                    for (e5 = o(this._groupChannelHandlers.values()), t8 = e5.next(); !t8.done; t8 = e5.next()) (n4 = t8.value).onReactionUpdated && n4.onReactionUpdated($2, Z2);
                  } catch (e6) {
                    s7 = { error: e6 };
                  } finally {
                    try {
                      t8 && !t8.done && (r5 = e5.return) && r5.call(e5);
                    } finally {
                      if (s7) throw s7.error;
                    }
                  }
                  return [2];
                });
              });
            }), xn3.label = 18;
          case 18:
            return [3, 79];
          case 19:
            return (ee = e4.as(M2).event).channelType !== q.GROUP ? [3, 22] : [4, this.getChannel(ee.channelUrl, true)];
          case 20:
            return te2 = xn3.sent(), [4, this.getMessageFromCache(ee.targetMessageId)];
          case 21:
            (ne = xn3.sent()) ? ne instanceof pt && (ne.applyThreadInfoUpdateEvent(ee), this._dispatcher.dispatch(new $s({ messages: [ne], source: Ks.EVENT_MESSAGE_THREADINFO_UPDATED }))) : this._dispatcher.dispatch(new no({ event: ee, source: Ks.EVENT_MESSAGE_THREADINFO_UPDATED })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                var e5, t8, n4, s7, r5;
                return s(this, function(a5) {
                  try {
                    for (e5 = o(this._groupChannelHandlers.values()), t8 = e5.next(); !t8.done; t8 = e5.next()) (n4 = t8.value).onThreadInfoUpdated && n4.onThreadInfoUpdated(te2, ee);
                  } catch (e6) {
                    s7 = { error: e6 };
                  } finally {
                    try {
                      t8 && !t8.done && (r5 = e5.return) && r5.call(e5);
                    } finally {
                      if (s7) throw s7.error;
                    }
                  }
                  return [2];
                });
              });
            }), xn3.label = 22;
          case 22:
            return [3, 79];
          case 23:
            se2 = e4.as(y2).groupChannelMemberCounts, re2 = [], xn3.label = 24;
          case 24:
            xn3.trys.push([24, 29, 30, 31]), ae = o(se2), ie2 = ae.next(), xn3.label = 25;
          case 25:
            return ie2.done ? [3, 28] : (oe2 = ie2.value, me3 = oe2.channelUrl, ct2 = oe2.memberCount, lt2 = oe2.joinedMemberCount, ue = oe2.updatedAt, [4, this.getChannelFromCache(me3)]);
          case 26:
            (ce2 = xn3.sent()) && ce2._setLatestMemberCount(ct2, lt2, ue) && re2.push(ce2), xn3.label = 27;
          case 27:
            return ie2 = ae.next(), [3, 25];
          case 28:
            return [3, 31];
          case 29:
            return le2 = xn3.sent(), Nn3 = { error: le2 }, [3, 31];
          case 30:
            try {
              ie2 && !ie2.done && (Un3 = ae.return) && Un3.call(ae);
            } finally {
              if (Nn3) throw Nn3.error;
            }
            return [7];
          case 31:
            return re2.length > 0 && (this._dispatcher.dispatch(new En2({ channels: re2, context: { source: Ks.EVENT_CHANNEL_MEMBER_COUNT_UPDATED } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                var e5, t8, n4, s7, r5;
                return s(this, function(a5) {
                  try {
                    for (e5 = o(this._groupChannelHandlers.values()), t8 = e5.next(); !t8.done; t8 = e5.next()) (n4 = t8.value).onChannelMemberCountChanged && n4.onChannelMemberCountChanged(re2);
                  } catch (e6) {
                    s7 = { error: e6 };
                  } finally {
                    try {
                      t8 && !t8.done && (r5 = e5.return) && r5.call(e5);
                    } finally {
                      if (s7) throw s7.error;
                    }
                  }
                  return [2];
                });
              });
            })), [3, 79];
          case 32:
            return he2 = e4.as(b2), de2 = he2.event, _e3 = he2.status, me3 = he2.channelUrl, ge3 = he2.channelType, me3 && ge3 === q.GROUP ? [4, this.getChannel(me3, true)] : [3, 34];
          case 33:
            pe2 = xn3.sent(), this._dispatcher.dispatch(new so({ event: de2, source: Ks.EVENT_POLL_UPDATED })), os(_e3 === ao ? function() {
              return r(Dn3, void 0, void 0, function() {
                var e5, t8, n4, s7, r5;
                return s(this, function(a5) {
                  try {
                    for (e5 = o(this._groupChannelHandlers.values()), t8 = e5.next(); !t8.done; t8 = e5.next()) (n4 = t8.value).onPollDeleted && n4.onPollDeleted(pe2, de2.pollId);
                  } catch (e6) {
                    s7 = { error: e6 };
                  } finally {
                    try {
                      t8 && !t8.done && (r5 = e5.return) && r5.call(e5);
                    } finally {
                      if (s7) throw s7.error;
                    }
                  }
                  return [2];
                });
              });
            } : function() {
              return r(Dn3, void 0, void 0, function() {
                var e5, t8, n4, s7, r5;
                return s(this, function(a5) {
                  try {
                    for (e5 = o(this._groupChannelHandlers.values()), t8 = e5.next(); !t8.done; t8 = e5.next()) (n4 = t8.value).onPollUpdated && n4.onPollUpdated(pe2, de2);
                  } catch (e6) {
                    s7 = { error: e6 };
                  } finally {
                    try {
                      t8 && !t8.done && (r5 = e5.return) && r5.call(e5);
                    } finally {
                      if (s7) throw s7.error;
                    }
                  }
                  return [2];
                });
              });
            }), xn3.label = 34;
          case 34:
            return [3, 79];
          case 35:
            return fe2 = e4.as(zr2), ve3 = fe2.event, me3 = fe2.channelUrl, ge3 = fe2.channelType, me3 && ge3 === q.GROUP ? [4, this.getChannel(me3, true)] : [3, 37];
          case 36:
            Ee3 = xn3.sent(), this._dispatcher.dispatch(new oo({ event: ve3, source: Ks.EVENT_POLL_VOTED })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                var e5, t8, n4, s7, r5;
                return s(this, function(a5) {
                  try {
                    for (e5 = o(this._groupChannelHandlers.values()), t8 = e5.next(); !t8.done; t8 = e5.next()) (n4 = t8.value).onPollVoted && n4.onPollVoted(Ee3, ve3);
                  } catch (e6) {
                    s7 = { error: e6 };
                  } finally {
                    try {
                      t8 && !t8.done && (r5 = e5.return) && r5.call(e5);
                    } finally {
                      if (s7) throw s7.error;
                    }
                  }
                  return [2];
                });
              });
            }), xn3.label = 37;
          case 37:
            return [3, 79];
          case 38:
            if (!(Ce4 = e4.as(v3).event).isGroupChannelEvent) return [3, 77];
            switch (Ce4.category) {
              case f2.CHANNEL_JOIN:
                return [3, 39];
              case f2.CHANNEL_LEAVE:
                return [3, 41];
              case f2.CHANNEL_OPERATOR_UPDATE:
                return [3, 45];
              case f2.CHANNEL_INVITE:
                return [3, 47];
              case f2.CHANNEL_DECLINE_INVITE:
                return [3, 49];
              case f2.TYPING_START:
              case f2.TYPING_END:
                return [3, 51];
              case f2.USER_CHANNEL_MUTE:
              case f2.USER_CHANNEL_UNMUTE:
                return [3, 53];
              case f2.USER_CHANNEL_BAN:
                return [3, 55];
              case f2.USER_CHANNEL_UNBAN:
                return [3, 59];
              case f2.CHANNEL_FREEZE:
              case f2.CHANNEL_UNFREEZE:
                return [3, 61];
              case f2.CHANNEL_HIDE:
                return [3, 63];
              case f2.CHANNEL_UNHIDE:
                return [3, 65];
              case f2.CHANNEL_DELETED:
                return [3, 67];
              case f2.CHANNEL_PROP_CHANGED:
                return [3, 69];
              case f2.CHANNEL_META_DATA_CHANGED:
                return [3, 71];
              case f2.CHANNEL_META_COUNTERS_CHANGED:
                return [3, 73];
              case f2.PINNED_MESSAGE_CHANGED:
                return [3, 75];
            }
            return [3, 77];
          case 39:
            return [4, this.getChannel(Ce4.channelUrl, true)];
          case 40:
            return ye3 = xn3.sent(), Me3 = e4.as(jn2), be3 = Me3.memberCount, Ne3 = Me3.joinedMemberCount, Ue3 = Me3.members, Se = false, Ue3.forEach(function(e5) {
              ye3.isExclusive || ye3.isSuper || ye3.isBroadcast ? Se = Se || ye3._setLatestMemberCount(be3, Ne3, Ce4.ts) : (e5.state = Wt2.JOINED, ye3.addMember(e5, Ce4.ts), Dn3._updateJoinedMemberCount(ye3)), e5.userId === Dn3._sdkState.userId && (ye3.myMemberState = Wt2.JOINED);
            }), this._dispatcher.dispatch(new En2({ channels: [ye3], context: { source: Ks.EVENT_CHANNEL_JOINED, users: Ue3 } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._groupChannelHandlers.forEach(function(e6) {
                    var t8, n4;
                    try {
                      for (var s7 = o(Ue3), r5 = s7.next(); !r5.done; r5 = s7.next()) {
                        var a5 = r5.value;
                        e6.onUserJoined && e6.onUserJoined(ye3, a5);
                      }
                    } catch (e7) {
                      t8 = { error: e7 };
                    } finally {
                      try {
                        r5 && !r5.done && (n4 = s7.return) && n4.call(s7);
                      } finally {
                        if (t8) throw t8.error;
                      }
                    }
                    ye3.isBroadcast && Se && e6.onChannelMemberCountChanged && e6.onChannelMemberCountChanged([ye3]);
                  }), [2];
                });
              });
            }), [3, 77];
          case 41:
            return (Mt3 = this._leftChannels.get(Ce4.channelUrl)) ? (Ae3 = Mt3.channel, [3, 44]) : [3, 42];
          case 42:
            return [4, this.getChannel(Ce4.channelUrl, true)];
          case 43:
            Ae3 = xn3.sent(), xn3.label = 44;
          case 44:
            return Te2 = Ae3, Ie3 = e4.as(Qn2), ct2 = Ie3.memberCount, lt2 = Ie3.joinedMemberCount, we2 = Ie3.member, Le4 = false, De5 = Ws.of(this._iid).appInfo, Te2.isExclusive || Te2.isSuper || Te2.isBroadcast ? Le4 = Te2._setLatestMemberCount(ct2, lt2, Ce4.ts) : ((null == De5 ? void 0 : De5.enabledChannelMemberShipHistory) ? ((Ye4 = Te2.members.find(function(e5) {
              return e5.userId === we2.userId;
            })) && (Ye4.state = Wt2.LEFT), Te2.memberCount = ct2) : Te2.removeMember(we2), this._updateJoinedMemberCount(Te2)), we2.userId === this._sdkState.userId ? (Te2.myMemberState = Wt2.NONE, Te2.invitedAt = 0, Te2.joinedAt = 0, Te2._updateUnreadCount(0, 0), Te2.isPublic ? this._dispatcher.dispatch(new En2({ channels: [Te2], context: { source: Ks.EVENT_CHANNEL_LEFT, user: we2 } })) : (this._markAsLeave(Te2), this._dispatcher.dispatch(new Cn2({ channelUrls: [Te2.url], context: { source: Ks.EVENT_CHANNEL_LEFT, user: we2 } })))) : this._dispatcher.dispatch(new En2({ channels: [Te2], context: { source: Ks.EVENT_CHANNEL_LEFT, user: we2 } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._groupChannelHandlers.forEach(function(e6) {
                    e6.onUserLeft && e6.onUserLeft(Te2, we2), Te2.isBroadcast && Le4 && e6.onChannelMemberCountChanged && e6.onChannelMemberCountChanged([Te2]);
                  }), [2];
                });
              });
            }), [3, 77];
          case 45:
            return [4, this.getChannel(Ce4.channelUrl, true)];
          case 46:
            Ke3 = xn3.sent(), Je4 = e4.as(T2).operators, Xe3 = Je4.map(function(e5) {
              return e5.userId;
            });
            try {
              for (Ze4 = o(Ke3.members), $e3 = Ze4.next(); !$e3.done; $e3 = Ze4.next()) (yt3 = $e3.value).role = Xe3.includes(yt3.userId) ? V.OPERATOR : V.NONE;
            } catch (e5) {
              Sn4 = { error: e5 };
            } finally {
              try {
                $e3 && !$e3.done && (Tn3 = Ze4.return) && Tn3.call(Ze4);
              } finally {
                if (Sn4) throw Sn4.error;
              }
            }
            return Ke3.myRole = Xe3.includes(this._sdkState.userId) ? V.OPERATOR : V.NONE, this._dispatcher.dispatch(new En2({ channels: [Ke3], context: { source: Ks.EVENT_CHANNEL_OPERATOR_UPDATED, operators: Je4 } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._groupChannelHandlers.forEach(function(e6) {
                    e6.onOperatorUpdated && e6.onOperatorUpdated(Ke3, Je4);
                  }), [2];
                });
              });
            }), [3, 77];
          case 47:
            return [4, this.getChannel(Ce4.channelUrl, true)];
          case 48:
            et3 = xn3.sent(), tt3 = e4.as(Jn2), ct2 = tt3.memberCount, lt2 = tt3.joinedMemberCount, nt3 = tt3.inviter, (st3 = tt3.invitees).forEach(function(e5) {
              return e5.state = Wt2.INVITED;
            });
            try {
              for (rt2 = o(st3), at2 = rt2.next(); !at2.done; at2 = rt2.next()) it3 = at2.value, et3.isExclusive || et3.isSuper || et3.isBroadcast ? et3._setLatestMemberCount(ct2, lt2, Ce4.ts) : et3.addMember(it3, Ce4.ts), this._sdkState.userId === it3.userId && (et3.hiddenState = tr2.UNHIDDEN, et3.myMemberState !== Wt2.JOINED && (et3.myMemberState = Wt2.INVITED), et3.invitedAt = Ce4.ts);
            } catch (e5) {
              An3 = { error: e5 };
            } finally {
              try {
                at2 && !at2.done && (In4 = rt2.return) && In4.call(rt2);
              } finally {
                if (An3) throw An3.error;
              }
            }
            return this._dispatcher.dispatch(new En2({ channels: [et3], context: { source: Ks.EVENT_CHANNEL_INVITED, inviter: nt3, invitees: st3 } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._groupChannelHandlers.forEach(function(e6) {
                    e6.onUserReceivedInvitation && e6.onUserReceivedInvitation(et3, nt3, st3);
                  }), [2];
                });
              });
            }), [3, 77];
          case 49:
            return [4, this.getChannel(Ce4.channelUrl, true)];
          case 50:
            return ot2 = xn3.sent(), ut2 = e4.as(Zn2), ct2 = ut2.memberCount, lt2 = ut2.joinedMemberCount, ht2 = ut2.inviter, dt2 = ut2.invitee, ot2.isExclusive || ot2.isSuper || ot2.isBroadcast ? ot2._setLatestMemberCount(ct2, lt2, Ce4.ts) : ot2.removeMember(dt2), this._sdkState.userId === dt2.userId ? (ot2.invitedAt = 0, ot2.myMemberState = Wt2.NONE, ot2.isPublic ? this._dispatcher.dispatch(new En2({ channels: [ot2], context: { source: Ks.EVENT_CHANNEL_DECLINED_INVITE, inviter: ht2, invitee: dt2 } })) : this._dispatcher.dispatch(new Cn2({ channelUrls: [ot2.url], context: { source: Ks.EVENT_CHANNEL_DECLINED_INVITE, inviter: ht2, invitee: dt2 } }))) : this._dispatcher.dispatch(new En2({ channels: [ot2], context: { source: Ks.EVENT_CHANNEL_DECLINED_INVITE, inviter: ht2, invitee: dt2 } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._groupChannelHandlers.forEach(function(e6) {
                    e6.onUserDeclinedInvitation && e6.onUserDeclinedInvitation(ot2, ht2, dt2);
                  }), [2];
                });
              });
            }), [3, 77];
          case 51:
            return [4, this.getChannel(Ce4.channelUrl, true)];
          case 52:
            return _t3 = xn3.sent(), pt2 = Ce4.category === f2.TYPING_START, ft2 = e4.as(pt2 ? rs2 : is2).user, _t3._updateTypingStatus(ft2, pt2 ? Ce4.ts : 0), this._dispatcher.dispatch(new En2({ channels: [_t3], context: { source: Ks.EVENT_CHANNEL_TYPING_STATUS_UPDATE } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._groupChannelHandlers.forEach(function(e6) {
                    e6.onTypingStatusUpdated && e6.onTypingStatusUpdated(_t3);
                  }), [2];
                });
              });
            }), [3, 77];
          case 53:
            return [4, this.getChannel(Ce4.channelUrl, true)];
          case 54:
            vt3 = xn3.sent(), mt3 = Ce4.category === f2.USER_CHANNEL_MUTE, (gt3 = e4.as(mt3 ? tr : rr).user).userId === this._sdkState.userId && (vt3.myMutedState = mt3 ? H.MUTED : H.UNMUTED, vt3._myMutedRemainingTime = gt3.restrictionInfo.remainingDuration);
            try {
              for (Et3 = o(vt3.members), Ct3 = Et3.next(); !Ct3.done; Ct3 = Et3.next()) if ((yt3 = Ct3.value).userId === gt3.userId) {
                yt3.isMuted = mt3;
                break;
              }
            } catch (e5) {
              wn4 = { error: e5 };
            } finally {
              try {
                Ct3 && !Ct3.done && (Ln3 = Et3.return) && Ln3.call(Et3);
              } finally {
                if (wn4) throw wn4.error;
              }
            }
            return this._dispatcher.dispatch(new En2({ channels: [vt3], context: { source: mt3 ? Ks.EVENT_CHANNEL_MUTED : Ks.EVENT_CHANNEL_UNMUTED, user: gt3 } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._groupChannelHandlers.forEach(function(e6) {
                    mt3 ? e6.onUserMuted && e6.onUserMuted(vt3, gt3) : e6.onUserUnmuted && e6.onUserUnmuted(vt3, gt3);
                  }), [2];
                });
              });
            }), [3, 77];
          case 55:
            return (Mt3 = this._leftChannels.get(Ce4.channelUrl)) ? (Nt3 = Mt3.channel, [3, 58]) : [3, 56];
          case 56:
            return [4, this.getChannel(Ce4.channelUrl, true)];
          case 57:
            Nt3 = xn3.sent(), xn3.label = 58;
          case 58:
            return bt3 = Nt3, this._markAsLeave(bt3), Ut3 = e4.as(sr).user, Ut3.userId === this._sdkState.userId && this._dispatcher.dispatch(new Cn2({ channelUrls: [bt3.url], context: { source: Ks.EVENT_CHANNEL_BANNED, user: Ut3 } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._groupChannelHandlers.forEach(function(e6) {
                    e6.onUserBanned && e6.onUserBanned(bt3, Ut3);
                  }), [2];
                });
              });
            }), [3, 77];
          case 59:
            return [4, this.getChannel(Ce4.channelUrl, true)];
          case 60:
            return St3 = xn3.sent(), Tt3 = e4.as(or).user, Tt3.userId === this._sdkState.userId && this._dispatcher.dispatch(new Cn2({ channelUrls: [St3.url], context: { source: Ks.EVENT_CHANNEL_UNBANNED, user: Tt3 } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._groupChannelHandlers.forEach(function(e6) {
                    e6.onUserUnbanned && e6.onUserUnbanned(St3, Tt3);
                  }), [2];
                });
              });
            }), [3, 77];
          case 61:
            return [4, this.getChannel(Ce4.channelUrl, true)];
          case 62:
            return At3 = xn3.sent(), It3 = e4.as(cr).freeze, At3.isFrozen = It3, this._dispatcher.dispatch(new En2({ channels: [At3], context: { source: It3 ? Ks.EVENT_CHANNEL_FROZEN : Ks.EVENT_CHANNEL_UNFROZEN } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._groupChannelHandlers.forEach(function(e6) {
                    It3 ? e6.onChannelFrozen && e6.onChannelFrozen(At3) : e6.onChannelUnfrozen && e6.onChannelUnfrozen(At3);
                  }), [2];
                });
              });
            }), [3, 77];
          case 63:
            return [4, this.getChannel(Ce4.channelUrl, true)];
          case 64:
            return wt3 = xn3.sent(), Rt3 = e4.as(ns3), Pt3 = Rt3.allowAutoUnhide, Qt4 = Rt3.hidePreviousMessages, Yt4 = Rt3.messageOffsetTimestamp, null !== Pt3 && (wt3.hiddenState = Pt3 ? tr2.HIDDEN_ALLOW_AUTO_UNHIDE : tr2.HIDDEN_PREVENT_AUTO_UNHIDE), null !== Qt4 && Qt4 && wt3._updateUnreadCount(0, 0), null !== Yt4 && (wt3.messageOffsetTimestamp = Yt4), this._dispatcher.dispatch(new En2({ channels: [wt3], context: { source: Ks.EVENT_CHANNEL_HIDDEN } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._groupChannelHandlers.forEach(function(e6) {
                    e6.onChannelHidden && e6.onChannelHidden(wt3);
                  }), [2];
                });
              });
            }), [3, 77];
          case 65:
            return [4, this.getChannel(Ce4.channelUrl, true)];
          case 66:
            return (Kt4 = xn3.sent()).hiddenState = tr2.UNHIDDEN, this._dispatcher.dispatch(new En2({ channels: [Kt4], context: { source: Ks.EVENT_CHANNEL_UNHIDDEN } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._groupChannelHandlers.forEach(function(e6) {
                    e6.onChannelChanged && e6.onChannelChanged(Kt4);
                  }), [2];
                });
              });
            }), [3, 77];
          case 67:
            return [4, this.getChannel(Ce4.channelUrl, true)];
          case 68:
            return Jt4 = xn3.sent(), this._dispatcher.dispatch(new Cn2({ channelUrls: [Ce4.channelUrl], context: { source: Ks.EVENT_CHANNEL_DELETED } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._groupChannelHandlers.forEach(function(e6) {
                    e6.onChannelDeleted && e6.onChannelDeleted(Jt4.url, Jt4.channelType);
                  }), [2];
                });
              });
            }), [3, 77];
          case 69:
            return [4, this.getChannelWithoutCache(Ce4.channelUrl, true)];
          case 70:
            return Xt4 = xn3.sent(), this._dispatcher.dispatch(new En2({ channels: [Xt4], context: { source: Ks.EVENT_CHANNEL_UPDATED } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._groupChannelHandlers.forEach(function(e6) {
                    e6.onChannelChanged && e6.onChannelChanged(Xt4);
                  }), [2];
                });
              });
            }), [3, 77];
          case 71:
            return [4, this.getChannel(Ce4.channelUrl, true)];
          case 72:
            return Zt4 = xn3.sent(), $t4 = e4.as(zn), en4 = $t4.created, tn4 = $t4.updated, nn4 = $t4.deleted, en4 && (Zt4._upsertCachedMetaData(en4, Ce4.ts), this._dispatcher.dispatch(new En2({ channels: [Zt4], context: { source: Ks.EVENT_CHANNEL_METADATA_CREATED, metaData: en4 }, ts: Ce4.ts }))), tn4 && (Zt4._upsertCachedMetaData(tn4, Ce4.ts), this._dispatcher.dispatch(new En2({ channels: [Zt4], context: { source: Ks.EVENT_CHANNEL_METADATA_UPDATED, metaData: tn4 }, ts: Ce4.ts }))), nn4 && (Zt4._removeFromCachedMetaData(nn4, Ce4.ts), this._dispatcher.dispatch(new En2({ channels: [Zt4], context: { source: Ks.EVENT_CHANNEL_METADATA_DELETED, metaDataKeys: nn4 }, ts: Ce4.ts }))), os(function() {
              return r(Dn3, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._groupChannelHandlers.forEach(function(e6) {
                    en4 && e6.onMetaDataCreated && e6.onMetaDataCreated(Zt4, en4), tn4 && e6.onMetaDataUpdated && e6.onMetaDataUpdated(Zt4, tn4), nn4 && e6.onMetaDataDeleted && e6.onMetaDataDeleted(Zt4, nn4);
                  }), [2];
                });
              });
            }), [3, 77];
          case 73:
            return [4, this.getChannel(Ce4.channelUrl, true)];
          case 74:
            return sn4 = xn3.sent(), rn4 = e4.as(Xn), an4 = rn4.created, on4 = rn4.updated, un4 = rn4.deleted, an4 && this._dispatcher.dispatch(new En2({ channels: [sn4], context: { source: Ks.EVENT_CHANNEL_METACOUNTER_CREATED, metaCounters: an4 } })), on4 && this._dispatcher.dispatch(new En2({ channels: [sn4], context: { source: Ks.EVENT_CHANNEL_METACOUNTER_UPDATED, metaCounters: on4 } })), un4 && this._dispatcher.dispatch(new En2({ channels: [sn4], context: { source: Ks.EVENT_CHANNEL_METACOUNTER_DELETED, metaCounterKeys: un4 } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._groupChannelHandlers.forEach(function(e6) {
                    an4 && e6.onMetaCounterCreated && e6.onMetaCounterCreated(sn4, an4), on4 && e6.onMetaCounterUpdated && e6.onMetaCounterUpdated(sn4, on4), un4 && e6.onMetaCounterDeleted && e6.onMetaCounterDeleted(sn4, un4);
                  }), [2];
                });
              });
            }), [3, 77];
          case 75:
            return [4, this.getChannel(Ce4.channelUrl, true)];
          case 76:
            return cn4 = xn3.sent(), ln4 = e4.as(g2), hn4 = ln4.pinnedMessageIds, dn4 = ln4.latestPinnedMessage, (_n4 = ln4.ts) > cn4._pinnedMessagesUpdatedAt && (cn4.pinnedMessageIds = null != hn4 ? hn4 : [], cn4.lastPinnedMessage = dn4, cn4._pinnedMessagesUpdatedAt = _n4, this._dispatcher.dispatch(new En2({ channels: [cn4], context: { source: Ks.EVENT_PINNED_MESSAGE_UPDATED } })), os(function() {
              return r(Dn3, void 0, void 0, function() {
                var e5, t8, n4, s7, r5;
                return s(this, function(a5) {
                  try {
                    for (e5 = o(this._groupChannelHandlers.values()), t8 = e5.next(); !t8.done; t8 = e5.next()) (n4 = t8.value).onChannelChanged && n4.onChannelChanged(cn4);
                  } catch (e6) {
                    s7 = { error: e6 };
                  } finally {
                    try {
                      t8 && !t8.done && (r5 = e5.return) && r5.call(e5);
                    } finally {
                      if (s7) throw s7.error;
                    }
                  }
                  return [2];
                });
              });
            }), os(function() {
              return r(Dn3, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._groupChannelHandlers.forEach(function(e6) {
                    e6.onPinnedMessageUpdated && e6.onPinnedMessageUpdated(cn4);
                  }), [2];
                });
              });
            })), [3, 77];
          case 77:
            return [3, 79];
          case 78:
            switch ((pn4 = e4.as(T).event).category) {
              case C2.USER_BLOCK:
                fn4 = N2.getDataAsUserBlockEvent(this._iid, pn4), mn4 = fn4.blocker, gn4 = fn4.blockee, this._groupChannelCache.block(mn4.userId, gn4.userId);
                break;
              case C2.USER_UNBLOCK:
                vn4 = N2.getDataAsUserBlockEvent(this._iid, pn4), mn4 = vn4.blocker, gn4 = vn4.blockee, this._groupChannelCache.unblock(mn4.userId, gn4.userId);
            }
            return [3, 79];
          case 79:
            return [3, 81];
          case 80:
            if (yn4 = xn3.sent(), g(yn4)) throw yn4;
            return [3, 81];
          case 81:
            return [2];
        }
      });
    });
  }, u4.prototype._markAsLeave = function(e4) {
    var t7, n3 = this, s6 = null !== (t7 = this._leftChannels.get(e4.url)) && void 0 !== t7 ? t7 : { channel: e4, ref: 0 };
    s6.ref++, this._leftChannels.set(e4.url, s6), setTimeout(function() {
      s6.ref--, 0 === s6.ref && n3._leftChannels.delete(e4.url);
    }, 1e4);
  }, u4.prototype.addHandler = function(e4, t7) {
    this._groupChannelHandlers.set(e4, t7);
  }, u4.prototype.removeHandler = function(e4) {
    this._groupChannelHandlers.delete(e4);
  }, u4.prototype.clearHandler = function() {
    this._groupChannelHandlers.clear();
  }, u4.prototype.subscribeChannelEvent = function(e4, t7) {
    this._groupChannelBroadcast.subscribe(e4, t7);
  }, u4.prototype.unsubscribeChannelEvent = function(e4) {
    this._groupChannelBroadcast.unsubscribe(e4);
  }, u4.prototype._updateJoinedMemberCount = function(e4) {
    e4.joinedMemberCount = e4.members.filter(function(e5) {
      return e5.state === Wt2.JOINED;
    }).length;
  }, u4.prototype.getChannel = function(e4, t7) {
    return void 0 === t7 && (t7 = false), r(this, void 0, void 0, function() {
      var n3;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            Jr(w("string", e4)).throw(v.invalidParameters), s6.label = 1;
          case 1:
            return s6.trys.push([1, 3, , 4]), [4, this.getChannelFromCache(e4)];
          case 2:
            return (n3 = s6.sent()) ? [2, n3] : [3, 4];
          case 3:
            return s6.sent(), [3, 4];
          case 4:
            return [4, this.getChannelWithoutCache(e4, t7)];
          case 5:
            return [2, s6.sent()];
        }
      });
    });
  }, u4.prototype.getChannelWithoutCache = function(e4, t7) {
    return void 0 === t7 && (t7 = false), r(this, void 0, void 0, function() {
      var n3, s6, r4, a5, i4;
      return s(this, function(o4) {
        switch (o4.label) {
          case 0:
            return Jr(w("string", e4)).throw(v.invalidParameters), n3 = new Nn2({ channelUrl: e4, isInternalCall: t7 }), [4, this._requestQueue.send(n3)];
          case 1:
            switch (s6 = o4.sent(), r4 = s6.as(Un2).channel, a5 = r4.unreadMessageCount, i4 = r4.unreadMentionCount, r4.myCountPreference) {
              case er2.UNREAD_MESSAGE_COUNT_ONLY:
                i4 = 0;
                break;
              case er2.UNREAD_MENTION_COUNT_ONLY:
                a5 = 0;
                break;
              case er2.OFF:
                a5 = 0, i4 = 0;
            }
            return r4._updateUnreadCount(a5, i4), [4, this.upsertChannelsToCache([r4])];
          case 2:
            return [2, o4.sent()[0]];
        }
      });
    });
  }, u4.prototype.refreshChannel = function(e4, t7, n3, s6) {
    return void 0 === t7 && (t7 = true), void 0 === n3 && (n3 = Ks.REFRESH_CHANNEL), void 0 === s6 && (s6 = false), r(this, void 0, void 0, function() {
      var r4, a5, i4, o4, u5;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return c4.trys.push([0, 5, , 6]), r4 = new Nn2({ channelUrl: e4, isInternalCall: t7, showLatestMessage: s6 }), [4, this._requestQueue.send(r4)];
          case 1:
            return a5 = c4.sent(), (i4 = a5.as(Un2).channel).myMemberState !== Wt2.NONE ? [3, 2] : (this._dispatcher.dispatch(new Cn2({ channelUrls: [i4.url], context: { source: n3 } })), [3, 4]);
          case 2:
            return [4, this.upsertChannelsToCache([i4])];
          case 3:
            o4 = c4.sent(), this._dispatcher.dispatch(new En2({ channels: o4, context: { source: n3 } })), c4.label = 4;
          case 4:
            return [3, 6];
          case 5:
            return (u5 = c4.sent()).code !== u.NON_AUTHORIZED && u5.code !== u.NOT_FOUND_IN_DATABASE || this._dispatcher.dispatch(new Cn2({ channelUrls: [e4], context: { source: n3 } })), [3, 6];
          case 6:
            return [2];
        }
      });
    });
  }, u4.prototype.getMyGroupChannels = function(e4, t7, n3, r4, a5) {
    return void 0 === r4 && (r4 = Ks.REQUEST_CHANNEL), void 0 === a5 && (a5 = false), r(this, void 0, void 0, function() {
      var i4, o4, u5, c4, l3, h4, d5, _2, p4;
      return s(this, function(f4) {
        switch (f4.label) {
          case 0:
            return t7.createdAfter && (t7.createdAfter = Math.floor(t7.createdAfter / 1e3)), t7.createdBefore && (t7.createdBefore = Math.floor(t7.createdBefore / 1e3)), i4 = false, a5 && (o4 = Ws.of(this._iid), u5 = o4.appInfo, (c4 = o4.cacheContext) && !c4.localCacheEnabled && (null == u5 ? void 0 : u5.enabledChannelMemberShipHistory) && (null == u5 ? void 0 : u5.applicationAttributes.includes("left_user_view_support")) && (i4 = true)), l3 = new Tn2(n(n({}, t7), { userId: this._sdkState.userId, token: e4, limit: n3, includeLeftChannel: a5 && i4 })), [4, this._requestQueue.send(l3)];
          case 1:
            return h4 = f4.sent(), d5 = h4.as(An2), _2 = d5.channels, p4 = d5.token, this._dispatcher.dispatch(new En2({ channels: _2, context: { source: r4 } })), [2, { channels: _2, token: p4 }];
        }
      });
    });
  }, u4.prototype.getMyGroupChannelChangeLogs = function(e4, t7, r4) {
    return void 0 === r4 && (r4 = Ks.REQUEST_CHANNEL_CHANGELOGS), r(this, void 0, void 0, function() {
      var a5, i4, o4, u5, c4, d5, _2, p4;
      return s(this, function(f4) {
        switch (f4.label) {
          case 0:
            return a5 = n(n({}, cn2), t7), Jr((w("string", e4) || w("number", e4)) && ln2(a5)).throw(v.invalidParameters), i4 = new Mn2(se({ userId: this._sdkState.userId, ts: "number" == typeof e4 ? e4 : null, token: "string" == typeof e4 ? e4 : null, filter: a5 })), [4, this._requestQueue.send(i4)];
          case 1:
            return o4 = f4.sent(), u5 = o4.as(bn2), c4 = u5.updatedChannels, d5 = u5.deletedChannelUrls, _2 = u5.hasMore, p4 = u5.ts, c4.length > 0 && this._dispatcher.dispatch(new En2({ channels: c4, context: { source: r4 }, ts: p4 })), d5.length > 0 && this._dispatcher.dispatch(new Cn2({ channelUrls: d5, context: { source: r4 } })), [2, { updatedChannels: c4, deletedChannelUrls: d5, hasMore: _2, token: u5.token }];
        }
      });
    });
  }, u4.prototype.getGroupChannelCount = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return t7 = n(n({}, hn2), e4), Jr(dn2(t7)).throw(v.invalidParameters), n3 = new In2({ userId: this._sdkState.userId, filter: t7 }), [4, this._requestQueue.send(n3)];
          case 1:
            return r4 = a5.sent(), [2, r4.as(wn2).groupChannelCount];
        }
      });
    });
  }, u4.prototype.getUnreadItemCount = function(e4) {
    return r(this, void 0, void 0, function() {
      var n3, r4, a5, i4, o4, u5, c4, d5, _2, p4, v5, g4, E4, C3, y6, M5;
      return s(this, function(f4) {
        switch (f4.label) {
          case 0:
            return n3 = n(n({}, _n2), e4), Jr(function(e5) {
              return N(sn2, e5.keys) && N("string", e5.customTypeFilters, true) && N("string", e5.customTypesFilter, true);
            }(n3)).throw(v.invalidParameters), r4 = Ws.of(this._iid), a5 = r4.sdkState, i4 = r4.requestQueue, o4 = new Ln2({ userId: a5.userId, filter: n3 }), [4, i4.send(o4)];
          case 1:
            return u5 = f4.sent(), c4 = u5.as(Dn2), d5 = c4.groupChannelUnreadMentionCount, _2 = c4.groupChannelUnreadMessageCount, p4 = c4.groupChannelInvitationCount, v5 = c4.superGroupChannelUnreadMentionCount, g4 = c4.superGroupChannelUnreadMessageCount, E4 = c4.superGroupChannelInvitationCount, C3 = c4.nonSuperGroupChannelUnreadMentionCount, y6 = c4.nonSuperGroupChannelUnreadMessageCount, M5 = c4.nonSuperGroupChannelInvitationCount, [2, re({ groupChannelUnreadMentionCount: d5, groupChannelUnreadMessageCount: _2, groupChannelInvitationCount: p4, superGroupChannelUnreadMentionCount: v5, superGroupChannelUnreadMessageCount: g4, superGroupChannelInvitationCount: E4, nonSuperGroupChannelUnreadMentionCount: C3, nonSuperGroupChannelUnreadMessageCount: y6, nonSuperGroupChannelInvitationCount: M5 })];
        }
      });
    });
  }, u4.prototype.getTotalUnreadChannelCount = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n3, s6, r4;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return e4 = Ws.of(this._iid), t7 = e4.sdkState, n3 = e4.requestQueue, s6 = new xn2({ userId: t7.userId }), [4, n3.send(s6)];
          case 1:
            return r4 = a5.sent(), [2, r4.as(Rn2).unreadCount];
        }
      });
    });
  }, u4.prototype.getTotalUnreadMessageCount = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, a5, i4, o4;
      return s(this, function(u5) {
        switch (u5.label) {
          case 0:
            return t7 = n(n({}, pn2), e4), Jr(fn2(t7)).throw(v.invalidParameters), n3 = Ws.of(this._iid), r4 = n3.sdkState, a5 = n3.requestQueue, i4 = new Fn2({ userId: r4.userId, filter: t7 }), [4, a5.send(i4)];
          case 1:
            return o4 = u5.sent(), [2, o4.as(Pn2).unreadCount];
        }
      });
    });
  }, u4.prototype.getTotalScheduledMessageCount = function(e4) {
    return void 0 === e4 && (e4 = {}), r(this, void 0, void 0, function() {
      var t7, n3, a5, i4;
      return s(this, function(o4) {
        switch (o4.label) {
          case 0:
            return t7 = n(n({}, vn2), e4), Jr(function(e5) {
              return w("string", e5.channelUrl, true) && N(ut, e5.scheduledStatus, true) && S(G, e5.messageTypeFilter);
            }(t7)).throw(v.invalidParameters), n3 = Ws.of(this._iid).requestQueue, a5 = new kn2(t7), [4, n3.send(a5)];
          case 1:
            return i4 = o4.sent(), [2, i4.as(On2).count];
        }
      });
    });
  }, u4.prototype.getSubscribedTotalUnreadMessageCount = function() {
    var e4 = Ws.of(this._iid).subscribedUnreadMessageCount;
    return e4.all >= 0 ? e4.all : 0;
  }, u4.prototype.getSubscribedCustomTypeTotalUnreadMessageCount = function() {
    var e4 = 0, t7 = Ws.of(this._iid).subscribedUnreadMessageCount;
    return Object.keys(t7.customTypes).forEach(function(n3) {
      e4 += t7.customTypes[n3];
    }), e4;
  }, u4.prototype.getSubscribedCustomTypeUnreadMessageCount = function(e4) {
    var t7;
    return null !== (t7 = Ws.of(this._iid).subscribedUnreadMessageCount.customTypes[e4]) && void 0 !== t7 ? t7 : 0;
  }, u4.prototype.createChannel = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, a5;
      return s(this, function(i4) {
        switch (i4.label) {
          case 0:
            return t7 = n(n({}, on2), e4), Jr(un2(t7)).throw(v.invalidParameters), t7.isPublic || (t7.accessCode = void 0), n3 = new Vn2(n({ userId: this._sdkState.userId }, t7)), [4, this._requestQueue.send(n3)];
          case 1:
            return r4 = i4.sent(), a5 = r4.as(Gn2).channel, [4, this.upsertChannelsToCache([a5])];
          case 2:
            return i4.sent(), [2, a5];
        }
      });
    });
  }, u4.prototype.markAsReadAll = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n3, s6, r4, a5, i4, o4;
      return s(this, function(u5) {
        switch (u5.label) {
          case 0:
            return e4 = Date.now(), Jr(e4 - this._markAsReadAllLastSentAt >= 1e3).throw(v.markAsReadAllRateLimitExceeded), this._markAsReadAllLastSentAt = e4, t7 = new Bn2({ userId: this._sdkState.userId }), [4, this._requestQueue.send(t7)];
          case 1:
            u5.sent(), n3 = this._groupChannelCache.channels;
            try {
              for (s6 = o(n3), r4 = s6.next(); !r4.done; r4 = s6.next()) (a5 = r4.value)._updateUnreadMemberState(this._sdkState.userId, e4), a5._updateUnreadCount(0, 0);
            } catch (e5) {
              i4 = { error: e5 };
            } finally {
              try {
                r4 && !r4.done && (o4 = s6.return) && o4.call(s6);
              } finally {
                if (i4) throw i4.error;
              }
            }
            return n3.length > 0 ? [4, this.upsertChannelsToCache(n3)] : [3, 3];
          case 2:
            u5.sent(), u5.label = 3;
          case 3:
            return [2];
        }
      });
    });
  }, u4.prototype.markAsReadWithChannelUrls = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n3, s6, r4, a5, i4, o4, u5, c4;
      return s(this, function(d5) {
        switch (d5.label) {
          case 0:
            return t7 = Date.now(), Jr(N("string", e4) && t7 - this._markAsReadAllLastSentAt >= 1e3).throw(v.markAsReadAllRateLimitExceeded), this._markAsReadAllLastSentAt = t7, n3 = new Bn2({ userId: this._sdkState.userId, channelUrls: e4 }), [4, this._requestQueue.send(n3)];
          case 1:
            d5.sent(), s6 = this._groupChannelCache.channels, r4 = [];
            try {
              for (a5 = o(s6), i4 = a5.next(); !i4.done; i4 = a5.next()) o4 = i4.value, e4.includes(o4.url) && (o4._updateUnreadMemberState(this._sdkState.userId, t7), o4._updateUnreadCount(0, 0), r4.push(o4));
            } catch (e5) {
              u5 = { error: e5 };
            } finally {
              try {
                i4 && !i4.done && (c4 = a5.return) && c4.call(a5);
              } finally {
                if (u5) throw u5.error;
              }
            }
            return r4.length > 0 ? [4, this.upsertChannelsToCache(r4)] : [3, 3];
          case 2:
            d5.sent(), d5.label = 3;
          case 3:
            return [2];
        }
      });
    });
  }, u4.prototype.markAsDelivered = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return [4, this.getChannel(e4)];
          case 1:
            return [4, t7.sent().markAsDelivered()];
          case 2:
            return t7.sent(), [2];
        }
      });
    });
  }, u4.prototype.getMessageFromCache = function(e4) {
    var t7;
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._messageCache.get(e4)];
          case 1:
            return [2, null !== (t7 = n3.sent()) && void 0 !== t7 ? t7 : null];
        }
      });
    });
  }, u4.prototype.getExactlyMatchingMessagesForTokenFromCache = function(e4, t7, n3) {
    return r(this, void 0, void 0, function() {
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return [4, this._messageCache.fetch({ channelUrl: e4, token: t7, filter: n3, exactMatch: true })];
          case 1:
            return [2, s6.sent()];
        }
      });
    });
  }, u4.prototype.getMessagesFromCache = function(e4, t7, n3, s6, r4, a5) {
    return void 0 === r4 && (r4 = Qr), void 0 === a5 && (a5 = true), r(this, void 0, void 0, function() {
      return s(this, function(i4) {
        switch (i4.label) {
          case 0:
            return [4, this._messageCache.fetch({ channelUrl: e4, token: t7, limit: r4, filter: s6, backward: "next" === n3, inclusive: a5 })];
          case 1:
            return [2, i4.sent()];
        }
      });
    });
  }, u4.prototype.getPollMessagesFromCache = function(e4, t7, n3, s6) {
    return r(this, void 0, void 0, function() {
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return [4, this._messageCache.fetch({ channelUrl: e4, token: t7, limit: s6, filter: n3, backward: false, isPollOnly: true })];
          case 1:
            return [2, r4.sent()];
        }
      });
    });
  }, u4.prototype.getCachedMessageCountBetween = function(e4, t7, n3, s6) {
    return r(this, void 0, void 0, function() {
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return [4, this._messageCache.countBetween(e4, t7, new ds2({ top: n3, bottom: s6 }))];
          case 1:
            return [2, r4.sent()];
        }
      });
    });
  }, u4.prototype.getUnsentMessagesFromCache = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._unsentMessageCache.fetch({ channelUrl: e4, filter: t7 })];
          case 1:
            return [2, n3.sent()];
        }
      });
    });
  }, u4.prototype.removeFailedMessageFromCache = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return [4, this._unsentMessageCache.remove([e4])];
          case 1:
            return t7.sent(), [2];
        }
      });
    });
  }, u4;
}(H2);
var fs2 = function(e4, t7) {
  return t7 instanceof mt ? e4.findIndex(function(e5) {
    return e5 instanceof mt && t7.isIdentical(e5);
  }) : e4.findIndex(function(e5) {
    return e5.isIdentical(t7);
  });
};
var vs2 = function(e4, t7) {
  return e4.findIndex(function(e5) {
    return e5 instanceof pt ? e5.messageId === t7 : e5 instanceof Tt ? e5.notificationId === t7 : void 0;
  });
};
var ms2 = function(e4, t7) {
  if (e4.length > 0) {
    for (var n3 = 0, s6 = e4.length - 1, r4 = Math.floor((n3 + s6) / 2); n3 < s6; ) {
      var a5 = e4[r4].createdAt - t7.createdAt;
      if (a5 > 0) s6 = r4, r4 = Math.floor((n3 + s6) / 2);
      else {
        if (!(a5 < 0)) return r4;
        n3 = r4 + 1, r4 = Math.floor((n3 + s6) / 2);
      }
    }
    return e4[r4].createdAt > t7.createdAt ? r4 : r4 + 1;
  }
  return e4.length;
};
!function(e4) {
  e4[e4.IDLE = 0] = "IDLE", e4[e4.RUNNING = 1] = "RUNNING", e4[e4.END = 2] = "END";
}(ls2 || (ls2 = {}));
var gs2;
var Es2 = function(t7) {
  function n3(e4, n4, s6, r4) {
    var a5 = t7.call(this) || this;
    return a5._state = ls2.IDLE, a5._retryCount = 0, a5._retryLimit = 3, a5.priority = 0, a5._worker = n4, a5;
  }
  return t(n3, t7), Object.defineProperty(n3.prototype, "isIdle", { get: function() {
    return this._state === ls2.IDLE;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "isRunning", { get: function() {
    return this._state === ls2.RUNNING;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "isDone", { get: function() {
    return this._state === ls2.END;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "retryCount", { get: function() {
    return this._retryCount;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "retryLimit", { get: function() {
    return this._retryLimit;
  }, enumerable: false, configurable: true }), n3.prototype._run = function(e4) {
    return r(this, void 0, void 0, function() {
      var t8, n4;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            if (!this.isRunning) return [3, 4];
            s6.label = 1;
          case 1:
            return s6.trys.push([1, 3, , 4]), [4, this._worker(e4)];
          case 2:
            return t8 = s6.sent(), this._retryCount = 0, this.dispatch("progress", t8), t8.hasNext ? this._run(t8.nextToken) : this.end(), [3, 4];
          case 3:
            return n4 = s6.sent(), this.dispatch("error", n4), this._retryCount < this._retryLimit ? (this._retryCount++, this._run(e4)) : this.stop(), [3, 4];
          case 4:
            return [2];
        }
      });
    });
  }, n3.prototype.start = function(e4) {
    this.isIdle && (this._state = ls2.RUNNING, this._run(e4));
  }, n3.prototype.stop = function() {
    this._state = ls2.IDLE, this.dispatch("stop");
  }, n3.prototype.end = function() {
    this._state = ls2.END, this.dispatch("end");
  }, n3;
}(te);
var Cs2 = {};
var ys2 = function() {
  function e4(e5) {
    var t7 = e5._iid, n3 = e5.channel, s6 = e5.limit, r4 = void 0 === s6 ? 100 : s6, a5 = this;
    this.ref = 0, this._iid = t7, this._channel = n3, this._limit = r4, this._prevSyncLoopCount = 0;
    var i4, o3, u4 = Ws.of(this._iid), c4 = u4.sdkState, l3 = u4.cacheContext, v5 = u4.dispatcher, m5 = u4.logger, g4 = u4.statManager, E4 = u4.messageBackgroundSyncThrottleController;
    this._metadataKey = (i4 = c4.userId, o3 = n3.url, "sendbird:".concat(i4, "@groupchannel/").concat(o3, "/message/sync.meta"));
    var C3 = function(e6, t8) {
      return "sendbird:".concat(e6, "@groupchannel/").concat(t8, "/message/sync");
    }(c4.userId, n3.url);
    this._prevSync = new Es2(C3, function(e6) {
      return r(a5, void 0, void 0, function() {
        var t8 = this;
        return s(this, function(s7) {
          switch (s7.label) {
            case 0:
              return [4, E4.run("message-background-sync-".concat(n3.url, "-prev"), function() {
                return r(t8, void 0, void 0, function() {
                  var t9, s8, r5, a6, i5, o4, u5, c5, p4, v6, E5, C4;
                  return s(this, function(f4) {
                    switch (f4.label) {
                      case 0:
                        return t9 = { hasNext: true, nextToken: 0 }, this._prevSyncLoopCount++, [4, this.loadMetadata()];
                      case 1:
                        if (f4.sent(), m5.debug("message background prev sync from", null === (o4 = this._metadata) || void 0 === o4 ? void 0 : o4.range.top), null === (u5 = this._metadata) || void 0 === u5 ? void 0 : u5.previousComplete) return [3, 10];
                        f4.label = 2;
                      case 2:
                        return f4.trys.push([2, 5, 8, 9]), [4, ea.of(this._iid).getMessagesByTimestamp(this._channel.url, this._channel.channelType, (null === (p4 = null === (c5 = this._metadata) || void 0 === c5 ? void 0 : c5.range) || void 0 === p4 ? void 0 : p4.top) ? this._metadata.range.top : e6, { prevResultSize: this._limit, nextResultSize: 0, replyType: B.ALL, includeReactions: true, includeMetaArray: true, includeParentMessageInfo: true, includeThreadInfo: true, isInclusive: true }, Ks.SYNC_MESSAGE_BACKGROUND)];
                      case 3:
                        return (s8 = f4.sent()).length > 0 && (r5 = s8.map(function(e7) {
                          return e7.createdAt;
                        }), (null === (v6 = this._metadata) || void 0 === v6 ? void 0 : (i5 = v6.range).intersect.apply(i5, c([], a(r5), false))) ? this.extendRange(s8) : this._metadata = { range: new ds2({ top: Math.min.apply(Math, c([], a(r5), false)), bottom: Math.max.apply(Math, c([], a(r5), false)) }), previousComplete: false }), t9.hasNext = s8.length >= this._limit && this._prevSyncLoopCount < 1, this._metadata && (t9.nextToken = this._metadata.range.top, this._metadata.previousComplete = s8.length < this._limit), m5.debug("message background prev sync progress", t9), [4, this.saveMetadata()];
                      case 4:
                        return f4.sent(), [3, 9];
                      case 5:
                        return a6 = f4.sent(), m5.debug("message background prev sync error", a6), a6 instanceof v && a6.isInvalidTokenError ? [4, this.clearMetadata()] : [3, 7];
                      case 6:
                        f4.sent(), f4.label = 7;
                      case 7:
                        throw a6;
                      case 8:
                        return g4.put(new Ze({ type: Le.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: n3.url, measured_on: "back_sync", event: "cache_fetch", max_db_size: null !== (C4 = null === (E5 = l3.localCacheConfig) || void 0 === E5 ? void 0 : E5.maxSize) && void 0 !== C4 ? C4 : 0, use_local_cache: l3.localCacheEnabled, starting_point: 0, message_init_policy: "" } })), [7];
                      case 9:
                        return [3, 11];
                      case 10:
                        t9.hasNext = false, f4.label = 11;
                      case 11:
                        return [2, t9];
                    }
                  });
                });
              })];
            case 1:
              return [2, s7.sent()];
          }
        });
      });
    }), this._nextSync = new Es2(C3, function(e6) {
      return r(a5, void 0, void 0, function() {
        var t8 = this;
        return s(this, function(s7) {
          switch (s7.label) {
            case 0:
              return [4, E4.run("message-background-sync-".concat(n3.url, "-next"), function() {
                return r(t8, void 0, void 0, function() {
                  var t9, s8, r5, a6, i5, o4, u5, c5, h4, p4, v6;
                  return s(this, function(f4) {
                    switch (f4.label) {
                      case 0:
                        return t9 = { hasNext: true, nextToken: 0 }, [4, this.loadMetadata()];
                      case 1:
                        f4.sent(), m5.debug("message background next sync from", null === (o4 = this._metadata) || void 0 === o4 ? void 0 : o4.range.bottom), f4.label = 2;
                      case 2:
                        return f4.trys.push([2, 5, 6, 7]), [4, ea.of(this._iid).getMessagesByTimestamp(this._channel.url, this._channel.channelType, (null === (c5 = null === (u5 = this._metadata) || void 0 === u5 ? void 0 : u5.range) || void 0 === c5 ? void 0 : c5.bottom) ? this._metadata.range.bottom : e6, { prevResultSize: 0, nextResultSize: this._limit, replyType: B.ALL, includeReactions: true, includeMetaArray: true, includeParentMessageInfo: true, includeThreadInfo: true, isInclusive: true }, Ks.SYNC_MESSAGE_BACKGROUND)];
                      case 3:
                        return (s8 = f4.sent()).length > 0 && (r5 = s8.map(function(e7) {
                          return e7.createdAt;
                        }), (null === (h4 = this._metadata) || void 0 === h4 ? void 0 : (i5 = h4.range).intersect.apply(i5, c([], a(r5), false))) ? this.extendRange(s8) : this._metadata = { range: new ds2({ top: Math.min.apply(Math, c([], a(r5), false)), bottom: Math.max.apply(Math, c([], a(r5), false)) }), previousComplete: false }), t9.hasNext = s8.length >= this._limit, this._metadata && (t9.nextToken = this._metadata.range.bottom), m5.debug("message background next sync progress", t9), [4, this.saveMetadata()];
                      case 4:
                        return f4.sent(), [3, 7];
                      case 5:
                        throw a6 = f4.sent(), m5.debug("message background next sync error", a6), a6;
                      case 6:
                        return g4.put(new Ze({ type: Le.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: n3.url, measured_on: "back_sync", event: "cache_fetch", max_db_size: null !== (v6 = null === (p4 = l3.localCacheConfig) || void 0 === p4 ? void 0 : p4.maxSize) && void 0 !== v6 ? v6 : 0, use_local_cache: l3.localCacheEnabled, starting_point: 0, message_init_policy: "" } })), [7];
                      case 7:
                        return [2, t9];
                    }
                  });
                });
              })];
            case 1:
              return [2, s7.sent()];
          }
        });
      });
    }), this._connectionEventContext = v5.on(function(e6) {
      if (e6 instanceof kr) if (e6.stateType === Sr.CONNECTED) a5.resume();
      else a5.pause();
    });
  }
  return e4.of = function(t7, n3) {
    return Cs2[t7] || (Cs2[t7] = {}), Cs2[t7][n3.url] || (Cs2[t7][n3.url] = new e4({ _iid: t7, channel: n3 })), Cs2[t7][n3.url].ref++, Cs2[t7][n3.url];
  }, e4.clear = function(e5, t7) {
    Cs2[e5] && Cs2[e5][t7] && (Cs2[e5][t7].close(), delete Cs2[e5]);
  }, Object.defineProperty(e4.prototype, "range", { get: function() {
    var e5, t7;
    return null !== (t7 = null === (e5 = this._metadata) || void 0 === e5 ? void 0 : e5.range) && void 0 !== t7 ? t7 : new ds2({});
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "previousComplete", { get: function() {
    var e5;
    return !!(null === (e5 = this._metadata) || void 0 === e5 ? void 0 : e5.previousComplete);
  }, enumerable: false, configurable: true }), e4.prototype.isWrappingMessages = function(e5) {
    var t7;
    return null === (t7 = this.range) || void 0 === t7 ? void 0 : t7.includes.apply(t7, c([], a(e5.map(function(e6) {
      return e6.createdAt;
    })), false));
  }, e4.prototype.extendRange = function(e5) {
    var t7;
    this._metadata && (t7 = this._metadata.range).extends.apply(t7, c([], a(e5.map(function(e6) {
      return e6.createdAt;
    })), false));
  }, e4.prototype.loadMetadata = function() {
    return r(this, void 0, void 0, function() {
      var e5;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return this._metadata ? [3, 2] : [4, Ws.of(this._iid).cacheContext.preference.get(this._metadataKey)];
          case 1:
            e5 = t7.sent(), this._metadata = e5 ? { range: new ds2(e5.range), previousComplete: e5.previousComplete } : { range: new ds2({}), previousComplete: false }, t7.label = 2;
          case 2:
            return [2, this._metadata];
        }
      });
    });
  }, e4.prototype.saveMetadata = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        switch (e5.label) {
          case 0:
            return this._metadata ? [4, Ws.of(this._iid).cacheContext.preference.set(this._metadataKey, this._metadata)] : [3, 2];
          case 1:
            return e5.sent(), [2, true];
          case 2:
            return [2, false];
        }
      });
    });
  }, e4.prototype.clearMetadata = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        switch (e5.label) {
          case 0:
            return [4, Ws.of(this._iid).cacheContext.preference.remove(this._metadataKey)];
          case 1:
            return e5.sent(), this._metadata = void 0, [2];
        }
      });
    });
  }, e4.prototype.resume = function(e5) {
    var t7, n3, s6, r4;
    void 0 === e5 && (e5 = Date.now());
    var a5 = Ws.of(this._iid), i4 = a5.logger, o3 = a5.sessionManager;
    a5.cacheContext.localCacheEnabled && o3.session.hasSession && (i4.debug("message background sync resume()"), this._prevSyncLoopCount = 0, this._metadata && this._metadata.previousComplete || this._prevSync.start(null !== (n3 = null === (t7 = this._metadata) || void 0 === t7 ? void 0 : t7.range.top) && void 0 !== n3 ? n3 : e5), this._nextSync.start(null !== (r4 = null === (s6 = this._metadata) || void 0 === s6 ? void 0 : s6.range.bottom) && void 0 !== r4 ? r4 : e5));
  }, e4.prototype.pause = function() {
    Ws.of(this._iid).logger.debug("message background sync stop()"), this._prevSync.stop(), this._nextSync.stop();
  }, e4.prototype.close = function() {
    this.ref--, this.ref <= 0 && (this.ref = 0, this.pause(), this._connectionEventContext.close(), delete Cs2[this._iid][this._channel.url]);
  }, e4;
}();
var Ms2 = {};
var bs2 = function() {
  function e4(e5) {
    var t7 = e5._iid, n3 = e5.channel, r4 = e5.includeParams, a5 = this;
    this.ref = 0, this._iid = t7, this._channel = n3, this._includeParams = r4;
    var i4, o3, u4 = Ws.of(this._iid), c4 = u4.logger, l3 = u4.sdkState, d5 = u4.dispatcher;
    this._metadataKey = (i4 = l3.userId, o3 = n3.url, "sendbird:".concat(i4, "@groupchannel/").concat(o3, "/message/changelogs.meta"));
    var _2 = function(e6, t8) {
      return "sendbird:".concat(e6, "@groupchannel/").concat(t8, "/message/changelogs");
    }(l3.userId, this._channel.url);
    this._sync = new Es2(_2, function() {
      return r(a5, void 0, void 0, function() {
        var e6, t8, n4, r5, a6, i5, o4, u5;
        return s(this, function(l4) {
          switch (l4.label) {
            case 0:
              return e6 = { hasNext: true, nextToken: 0 }, [4, this.loadMetadata()];
            case 1:
              l4.sent(), c4.debug("message changelog sync from", null === (u5 = this._metadata) || void 0 === u5 ? void 0 : u5.token), l4.label = 2;
            case 2:
              return l4.trys.push([2, 5, , 8]), [4, ea.of(this._iid).getMessageChangelogs(this._channel.url, this._channel.channelType, this._metadata.token, n({ replyType: B.ALL }, this._includeParams), Ks.SYNC_MESSAGE_CHANGELOGS)];
            case 3:
              return t8 = l4.sent(), n4 = t8.updatedMessages, r5 = t8.deletedMessageIds, a6 = t8.hasMore, i5 = t8.token, e6.hasNext = a6, e6.nextToken = i5, (n4.length > 0 || r5.length > 0) && this._metadata && (this._metadata.token = i5), c4.debug("message changelog sync progress", e6), [4, this.saveMetadata()];
            case 4:
              return l4.sent(), [3, 8];
            case 5:
              return o4 = l4.sent(), c4.debug("message changelog sync error", o4), o4 instanceof v && o4.isInvalidTokenError ? [4, this.clearMetadata()] : [3, 7];
            case 6:
              l4.sent(), l4.label = 7;
            case 7:
              throw o4;
            case 8:
              return [2, e6];
          }
        });
      });
    }), this._connectionEventContext = d5.on(function(e6) {
      if (e6 instanceof kr) if (e6.stateType === Sr.CONNECTED) a5.resume();
      else a5.pause();
    });
  }
  return e4.of = function(t7, n3, s6) {
    return Ms2[t7] || (Ms2[t7] = {}), Ms2[t7][n3.url] || (Ms2[t7][n3.url] = new e4({ _iid: t7, channel: n3, includeParams: s6 })), Ms2[t7][n3.url].ref++, Ms2[t7][n3.url];
  }, e4.clear = function(e5, t7) {
    Ms2[e5] && Ms2[e5][t7] && (Ms2[e5][t7].close(), delete Ms2[e5]);
  }, e4.prototype.loadMetadata = function() {
    return r(this, void 0, void 0, function() {
      var e5, t7, n3, s6;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return this._metadata ? [3, 2] : (e5 = Ws.of(this._iid), t7 = e5.cacheContext, n3 = e5.firstConnectedAt, [4, t7.preference.get(this._metadataKey)]);
          case 1:
            s6 = r4.sent(), this._metadata = { token: s6 ? s6.token : n3 }, r4.label = 2;
          case 2:
            return [2, this._metadata];
        }
      });
    });
  }, e4.prototype.saveMetadata = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        switch (e5.label) {
          case 0:
            return this._metadata ? [4, Ws.of(this._iid).cacheContext.preference.set(this._metadataKey, this._metadata)] : [3, 2];
          case 1:
            return e5.sent(), [2, true];
          case 2:
            return [2, false];
        }
      });
    });
  }, e4.prototype.clearMetadata = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        switch (e5.label) {
          case 0:
            return [4, Ws.of(this._iid).cacheContext.preference.remove(this._metadataKey)];
          case 1:
            return e5.sent(), this._metadata = void 0, [2];
        }
      });
    });
  }, e4.prototype.resume = function() {
    var e5 = Ws.of(this._iid), t7 = e5.logger;
    e5.sessionManager.session.hasSession && (t7.debug("message changelog sync resume()"), this._sync.start(0));
  }, e4.prototype.pause = function() {
    Ws.of(this._iid).logger.debug("message changelog sync pause()"), this._sync.stop();
  }, e4.prototype.close = function() {
    this.ref--, this.ref <= 0 && (this.ref = 0, this.pause(), this._connectionEventContext.close(), delete Ms2[this._iid][this._channel.url]);
  }, e4;
}();
var Ns2 = {};
var Us2 = function() {
  function e4(e5) {
    var t7 = e5._iid, n3 = e5.channel, s6 = e5.hasPollMessage, r4 = this;
    this.ref = 0, this._iid = t7, this._channel = n3;
    var a5, i4, o3 = Ws.of(this._iid), u4 = o3.logger, c4 = o3.sdkState, l3 = o3.dispatcher;
    this._metadataKey = (a5 = c4.userId, i4 = n3.url, "sendbird:".concat(a5, "@groupchannel/").concat(i4, "/poll/changelogs.meta"));
    var d5 = function(e6, t8) {
      return "sendbird:".concat(e6, "@groupchannel/").concat(t8, "/poll/changelogs");
    }(c4.userId, this._channel.url);
    this._sync = new Es2(d5, function() {
      return r(r4, void 0, void 0, function() {
        var e6, t8, n4, r5, a6, i5, o4, c5;
        return s(this, function(l4) {
          switch (l4.label) {
            case 0:
              return e6 = { hasNext: true, nextToken: 0 }, [4, this.loadMetadata()];
            case 1:
              return l4.sent(), u4.debug("poll changelog sync from", null === (c5 = this._metadata) || void 0 === c5 ? void 0 : c5.token), (t8 = !this._metadata || !this._metadata.token) ? [4, s6()] : [3, 3];
            case 2:
              t8 = !l4.sent(), l4.label = 3;
            case 3:
              if (t8) return [2, { hasNext: false, nextToken: 0 }];
              this._metadata || (n4 = Ws.of(this._iid).firstConnectedAt, this._metadata = { token: n4 }), l4.label = 4;
            case 4:
              return l4.trys.push([4, 7, , 10]), [4, Do.of(this._iid).getPollChangeLogs(this._channel.url, this._channel.channelType, this._metadata.token)];
            case 5:
              return r5 = l4.sent(), a6 = r5.hasMore, i5 = r5.token, e6.hasNext = a6, e6.nextToken = i5, this._metadata.token = i5, u4.debug("poll changelog sync progress", e6), [4, this.saveMetadata()];
            case 6:
              return l4.sent(), [3, 10];
            case 7:
              return o4 = l4.sent(), u4.debug("poll changelog sync error", o4), o4 instanceof v && o4.isInvalidTokenError ? [4, this.clearMetadata()] : [3, 9];
            case 8:
              l4.sent(), l4.label = 9;
            case 9:
              throw o4;
            case 10:
              return [2, e6];
          }
        });
      });
    }), this._connectionEventContext = l3.on(function(e6) {
      if (e6 instanceof kr) if (e6.stateType === Sr.CONNECTED) r4.resume();
      else r4.pause();
    });
  }
  return e4.of = function(t7, n3, s6) {
    return Ns2[t7] || (Ns2[t7] = {}), Ns2[t7][n3.url] || (Ns2[t7][n3.url] = new e4({ _iid: t7, channel: n3, hasPollMessage: s6 })), Ns2[t7][n3.url].ref++, Ns2[t7][n3.url];
  }, e4.prototype.loadMetadata = function() {
    return r(this, void 0, void 0, function() {
      var e5;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return this._metadata ? [3, 2] : [4, Ws.of(this._iid).cacheContext.preference.get(this._metadataKey)];
          case 1:
            e5 = t7.sent(), this._metadata = e5 ? { token: e5.token } : void 0, t7.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, e4.prototype.saveMetadata = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        switch (e5.label) {
          case 0:
            return this._metadata ? [4, Ws.of(this._iid).cacheContext.preference.set(this._metadataKey, this._metadata)] : [3, 2];
          case 1:
            e5.sent(), e5.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, e4.prototype.clearMetadata = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        switch (e5.label) {
          case 0:
            return [4, Ws.of(this._iid).cacheContext.preference.remove(this._metadataKey)];
          case 1:
            return e5.sent(), this._metadata = void 0, [2];
        }
      });
    });
  }, e4.prototype.resume = function() {
    Ws.of(this._iid).logger.debug("poll changelog sync resume()"), this._sync.start(0);
  }, e4.prototype.pause = function() {
    Ws.of(this._iid).logger.debug("poll changelog sync pause()"), this._sync.stop();
  }, e4.prototype.close = function() {
    this.ref--, this.ref <= 0 && (this.ref = 0, this.pause(), this._connectionEventContext.close(), delete Ns2[this._iid][this._channel.url]);
  }, e4;
}();
var Ss2 = function(n3) {
  function s6(e4) {
    var s7, r4, a5, i4, o3, u4, c4, l3, h4, d5, _2 = this;
    return (_2 = n3.call(this) || this).method = oe.GET, _2.path = "".concat(Ie(e4.channelType), "/").concat(e4.channelUrl, "/messages_gap"), _2.params = re({ prev_start_ts: e4.prevStart, prev_end_ts: e4.prevEnd, prev_cache_count: e4.prevCount, next_start_ts: e4.nextStart, next_end_ts: e4.nextEnd, next_cache_count: e4.nextCount, huge_gap_threshold: null !== (s7 = e4.threshold) && void 0 !== s7 ? s7 : null, reverse: true, custom_types: null !== (r4 = e4.customTypes) && void 0 !== r4 ? r4 : ["*"], message_type: null !== (a5 = e4.messageType) && void 0 !== a5 ? a5 : null, include_reply_type: null !== (i4 = e4.replyType) && void 0 !== i4 ? i4 : B.NONE, include_reactions: null === (o3 = e4.includeReactions) || void 0 === o3 || o3, include_meta_array: null === (u4 = e4.includeMetaArray) || void 0 === u4 || u4, include_thread_info: null === (c4 = e4.includeThreadInfo) || void 0 === c4 || c4, include_parent_message_info: null === (l3 = e4.includeParentMessageInfo) || void 0 === l3 || l3, with_sorted_meta_array: null === (h4 = e4.includeMetaArray) || void 0 === h4 || h4, show_subchannel_messages_only: null !== (d5 = e4.showSubchannelMessagesOnly) && void 0 !== d5 && d5, include_poll_details: true, checking_continuous_messages: e4.checkingContinuousMessages }), _2;
  }
  return t(s6, n3), s6;
}(xe);
var Ts2 = function(t7) {
  function n3(e4, n4) {
    var s6, r4, a5, i4, o3, u4, c4 = this;
    return (c4 = t7.call(this, e4, n4) || this).isHugeGap = n4.is_huge_gap, c4.prevMessages = (null !== (s6 = n4.prev_messages) && void 0 !== s6 ? s6 : []).map(function(t8) {
      return Mt(e4, t8);
    }), c4.prevHasMore = null !== (r4 = n4.prev_hasmore) && void 0 !== r4 && r4, c4.isContinuousPrevMessages = null !== (a5 = n4.is_continuous_prev_messages) && void 0 !== a5 && a5, c4.nextMessages = (null !== (i4 = n4.next_messages) && void 0 !== i4 ? i4 : []).map(function(t8) {
      return Mt(e4, t8);
    }), c4.nextHasmore = null !== (o3 = n4.next_hasmore) && void 0 !== o3 && o3, c4.isContinuousNextMessages = null !== (u4 = n4.is_continuous_next_messages) && void 0 !== u4 && u4, c4;
  }
  return t(n3, t7), n3;
}(Ue);
var As2 = { includeMetaArray: true, includeReactions: true, includeThreadInfo: true, includeParentMessageInfo: true };
!function(e4) {
  e4.CACHE_AND_REPLACE_BY_API = "cache_and_replace_by_api";
}(gs2 || (gs2 = {}));
var Is2;
var ws2;
var Ls2;
var Ds2 = function() {
  function e4() {
    this._onCacheResult = st, this._onApiResult = st;
  }
  return e4.prototype._invokeResponse = function(e5, t7, n3) {
    var s6 = this;
    os(function() {
      return r(s6, void 0, void 0, function() {
        return s(this, function(s7) {
          switch (e5) {
            case "local":
              this._onCacheResult(t7, n3);
              break;
            case "remote":
              this._onApiResult(t7, n3);
          }
          return [2];
        });
      });
    });
  }, e4.prototype.onCacheResult = function(e5) {
    return this._onCacheResult = e5, this;
  }, e4.prototype.onApiResult = function(e5) {
    return this._onApiResult = e5, this;
  }, e4;
}();
var xs2 = function() {
  function e4(e5, t7) {
    var n3 = t7.filter, s6 = t7.startingPoint, r4 = t7.limit, a5 = t7.prevResultLimit, i4 = t7.nextResultLimit, o3 = t7.channel, u4 = t7.channelManager, c4 = t7.disableBackgroundSync, l3 = void 0 !== c4 && c4, h4 = this;
    this._messages = [], this._unsentMessages = [], this._isLoadingPrevious = false, this._isLoadingNext = false, this._iid = e5, this._key = "mc-".concat($()), this._isDisposed = false, this.filter = null != n3 ? n3 : new Os(), this._channel = o3, this._syncRange = new ds2({}), this._hasPrevious = true, this._hasNext = true, this._startingPoint = "number" == typeof s6 && Number.isFinite(s6) ? s6 : Number.MAX_SAFE_INTEGER, this._limit = r4 || Qr, this._prevResultLimit = null != a5 ? a5 : Math.floor(this._limit / 2), this._nextResultLimit = null != i4 ? i4 : Math.floor(this._limit / 2), this._channelManager = u4;
    var m5 = Ws.of(this._iid).statManager;
    this._channelManager.subscribeChannelEvent(this._key, { onUpdate: function(e6, t8) {
      var n4 = t8.source, s7 = e6.findIndex(function(e7) {
        return e7.isIdentical(h4.channel);
      });
      s7 >= 0 && (h4._replaceChannelOfCollection(e6[s7]), h4.channel._runIfHandleableWithGroupChannel(function(e7) {
        switch (n4) {
          case Ks.EVENT_CHANNEL_UPDATED:
            for (var s8 = false, r5 = 0; r5 < h4._messages.length; r5++) {
              if (h4._messages[r5].createdAt >= e7.messageOffsetTimestamp) {
                s8 = true;
                var a6 = r5;
                if (a6 > 0) {
                  var i5 = h4._messages.splice(0, a6);
                  h4._removeMessagesFromView(i5.map(function(e8) {
                    return h4.keyOf(e8);
                  }), Ks.EVENT_MESSAGE_OFFSET_UPDATED);
                }
                break;
              }
            }
            !s8 && h4._messages.length > 0 && h4._removeMessagesFromView(h4._messages.map(function(e8) {
              return h4.keyOf(e8);
            }), Ks.EVENT_MESSAGE_OFFSET_UPDATED);
            break;
          case Ks.EVENT_CHANNEL_UNMUTED:
            var o4 = Ws.of(h4._iid).sdkState, u5 = t8.user;
            o4.userId === u5.userId && h4._clearCheckMyMutedTimer();
            break;
          case Ks.EVENT_CHANNEL_MUTED:
            o4 = Ws.of(h4._iid).sdkState, u5 = t8.user;
            o4.userId === u5.userId && -1 !== e7._myMutedRemainingTime && h4._startCheckMyMutedTimer(e7._myMutedRemainingTime);
            break;
          case Ks.EVENT_CHANNEL_LEFT:
            e7.isPublic && h4._clearCheckMyMutedTimer();
        }
        os(function() {
          return r(h4, void 0, void 0, function() {
            var e8;
            return s(this, function(s9) {
              return gn2(n4) && (null === (e8 = this._handler) || void 0 === e8 ? void 0 : e8.onChannelUpdated) && this._handler.onChannelUpdated(t8, this.channel), [2];
            });
          });
        });
      }), h4._postprocessChannelUpdateEvent(e6[s7], n4));
    }, onRemove: function(e6, t8) {
      var n4 = e6.indexOf(h4.channel.url);
      n4 >= 0 && (h4._clearCheckMyMutedTimer(), os(function() {
        return r(h4, void 0, void 0, function() {
          var e7;
          return s(this, function(n5) {
            return (null === (e7 = this._handler) || void 0 === e7 ? void 0 : e7.onChannelDeleted) && this._handler.onChannelDeleted(t8, this.channel.url), [2];
          });
        });
      }), h4._postprocessChannelRemoveEvent(e6[n4]));
    } }), this._channelManager.subscribeMessageEvent(this._key, { onUpdate: function(e6, t8) {
      var n4, s7, r5 = [], a6 = [];
      try {
        for (var i5 = o(e6), o4 = i5.next(); !o4.done; o4 = i5.next()) {
          var u5 = o4.value;
          u5.channelUrl === h4._channel.url && (h4.filter.match(u5) ? r5.push(u5) : a6.push(h4.keyOf(u5)));
        }
      } catch (e7) {
        n4 = { error: e7 };
      } finally {
        try {
          o4 && !o4.done && (s7 = i5.return) && s7.call(i5);
        } finally {
          if (n4) throw n4.error;
        }
      }
      if (Js(t8)) {
        if (r5.length > 0) switch (t8) {
          case Ks.LOCAL_MESSAGE_CANCELED:
          case Ks.LOCAL_MESSAGE_RESEND_STARTED:
          case Ks.EVENT_MESSAGE_SENT_FAILED:
          case Ks.EVENT_MESSAGE_SENT_SUCCESS:
          case Ks.EVENT_MESSAGE_UPDATED:
          case Ks.EVENT_MESSAGE_THREADINFO_UPDATED:
          case Ks.EVENT_MESSAGE_REACTION_UPDATED:
          case Ks.EVENT_MESSAGE_FEEDBACK_ADDED:
          case Ks.EVENT_MESSAGE_FEEDBACK_UPDATED:
          case Ks.EVENT_MESSAGE_FEEDBACK_DELETED:
          case Ks.SYNC_MESSAGE_CHANGELOGS:
            h4._updateMessagesToView(r5, t8);
            break;
          case Ks.EVENT_MESSAGE_SENT_PENDING:
            h4._addMessagesToView(r5, t8);
            break;
          case Ks.EVENT_MESSAGE_RECEIVED:
            h4.hasNext || h4._addMessagesToView(r5, t8);
            break;
          case Ks.SYNC_MESSAGE_FILL:
            h4._addMessagesToView(r5, t8);
        }
        a6.length > 0 && h4._removeMessagesFromView(a6, t8);
      }
      h4._postprocessMessageUpdateEvent(e6, t8);
    }, onRemove: function(e6, t8) {
      h4._removeMessagesFromView(e6, t8), h4._postprocessMessageRemoveEvent(e6);
    }, onRemoveUnsent: function(e6, t8) {
      h4._removeUnsentMessageFromView(e6, t8);
    }, onPollChangeLogUpdate: function(e6, t8) {
      h4._updatePollsToView(e6, t8);
    }, onPollUpdate: function(e6, t8) {
      h4._applyPollUpdateEventToView(e6, t8);
    }, onPollVote: function(e6, t8) {
      h4._applyPollVoteEventToView(e6, t8);
    }, onReactionUpdate: function(e6, t8) {
      h4._applyReactionEventToView(e6, t8);
    }, onThreadInfoUpdate: function(e6, t8) {
      h4._applyThreadInfoEventToView(e6, t8);
    } });
    var g4 = Ws.of(this._iid), E4 = g4.cacheContext, C3 = g4.dispatcher, M5 = g4.messageBackgroundSyncThrottleController;
    this._channel._updateMessageCollectionLastAccessedAt(), C3.dispatch(new En2({ channels: [this._channel], context: { source: Ks.CHANNEL_LASTACCESSEDAT_UPDATED } })), this._backgroundSync = ys2.of(this._iid, this._channel), !l3 && this._shouldStartBackgroundSync() && this._backgroundSync.resume(this._startingPoint), this._changelogSync = bs2.of(this._iid, this._channel, this.changelogIncludeParams), this._changelogSync.resume(), this._pollChangelogSync = Us2.of(this._iid, this._channel, this._hasPollMessage.bind(this)), this._pollChangelogSync.resume(), this._prevFill = new Es2(this._key, function(e6) {
      return r(h4, void 0, void 0, function() {
        var t8 = this;
        return s(this, function(n4) {
          switch (n4.label) {
            case 0:
              return [4, M5.run("message-fill-sync-".concat(o3.url, "-prev"), function() {
                return r(t8, void 0, void 0, function() {
                  var t9, n5, s7, r5, a6, i5, o4;
                  return s(this, function(u5) {
                    switch (u5.label) {
                      case 0:
                        return [4, this._getRemoteMessages(e6, { prevLimit: this._prevResultLimit, source: Ks.SYNC_MESSAGE_FILL, checkingContinuousMessages: E4.localCacheEnabled })];
                      case 1:
                        return t9 = u5.sent(), n5 = t9.messages, s7 = t9.isContinuousMessages, n5.length > 0 ? (r5 = Math.min.apply(Math, c([], a(n5.map(function(e7) {
                          return e7.createdAt;
                        })), false)), this._syncRange.extends(r5), s7 && (null === (a6 = this._backgroundSync) || void 0 === a6 || a6.range.extends(r5)), [2, { hasNext: n5.length >= this._prevResultLimit && this.viewTop < r5, nextToken: this._syncRange.top }]) : (E4.localCacheEnabled && m5.put(new Ze({ type: Le.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, measured_on: "gap_check", event: "cache_fetch", max_db_size: null !== (o4 = null === (i5 = E4.localCacheConfig) || void 0 === i5 ? void 0 : i5.maxSize) && void 0 !== o4 ? o4 : 0, use_local_cache: E4.localCacheEnabled, starting_point: 0, message_init_policy: "" } })), [2, { hasNext: false, nextToken: 0 }]);
                    }
                  });
                });
              })];
            case 1:
              return [2, n4.sent()];
          }
        });
      });
    }), this._nextFill = new Es2(this._key, function(e6) {
      return r(h4, void 0, void 0, function() {
        var t8 = this;
        return s(this, function(n4) {
          switch (n4.label) {
            case 0:
              return [4, M5.run("message-fill-sync-".concat(o3.url, "-next"), function() {
                return r(t8, void 0, void 0, function() {
                  var t9, n5, s7, r5, a6, i5, o4;
                  return s(this, function(u5) {
                    switch (u5.label) {
                      case 0:
                        return [4, this._getRemoteMessages(e6, { nextLimit: this._nextResultLimit, source: Ks.SYNC_MESSAGE_FILL, checkingContinuousMessages: E4.localCacheEnabled })];
                      case 1:
                        return t9 = u5.sent(), n5 = t9.messages, s7 = t9.isContinuousMessages, n5.length > 0 ? (r5 = Math.max.apply(Math, c([], a(n5.map(function(e7) {
                          return e7.createdAt;
                        })), false)), this._syncRange.extends(r5), s7 && (null === (a6 = this._backgroundSync) || void 0 === a6 || a6.range.extends(r5)), [2, { hasNext: !(n5.length >= this._nextResultLimit && this._hasNext) || this.viewBottom > r5, nextToken: this._syncRange.bottom }]) : (E4.localCacheEnabled && m5.put(new Ze({ type: Le.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, measured_on: "gap_check", event: "cache_fetch", max_db_size: null !== (o4 = null === (i5 = E4.localCacheConfig) || void 0 === i5 ? void 0 : i5.maxSize) && void 0 !== o4 ? o4 : 0, use_local_cache: E4.localCacheEnabled, starting_point: 0, message_init_policy: "" } })), [2, { hasNext: false, nextToken: 0 }]);
                    }
                  });
                });
              })];
            case 1:
              return [2, n4.sent()];
          }
        });
      });
    }), this._connectionEventContext = C3.on(function(e6) {
      if (e6 instanceof kr) switch (e6.stateType) {
        case Sr.CONNECTED:
          as(function() {
            return r(h4, void 0, void 0, function() {
              return s(this, function(e7) {
                return this._activate(), [2];
              });
            });
          });
          break;
        case Sr.LOGOUT:
          h4.dispose();
          break;
        default:
          h4._clearCheckMyMutedTimer(), h4._prevFill.stop(), h4._nextFill.stop();
      }
    });
  }
  return e4.prototype.keyOf = function(e5) {
    return 0;
  }, Object.defineProperty(e4.prototype, "changelogIncludeParams", { get: function() {
    return { includeReactions: true, includeThreadInfo: true, includeMetaArray: true, includeParentMessageInfo: true };
  }, enumerable: false, configurable: true }), e4.prototype._postprocessChannelUpdateEvent = function(e5, t7) {
  }, e4.prototype._postprocessChannelRemoveEvent = function(e5) {
  }, e4.prototype._postprocessMessageUpdateEvent = function(e5, t7) {
  }, e4.prototype._postprocessMessageRemoveEvent = function(e5) {
  }, Object.defineProperty(e4.prototype, "channel", { get: function() {
    return this._channel;
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "succeededMessages", { get: function() {
    return c([], a(this._messages), false);
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "failedMessages", { get: function() {
    return this._unsentMessages.filter(function(e5) {
      return e5.sendingStatus === W.FAILED;
    });
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "pendingMessages", { get: function() {
    return this._unsentMessages.filter(function(e5) {
      return e5.sendingStatus === W.PENDING;
    });
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "hasPrevious", { get: function() {
    return this._hasPrevious;
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "hasNext", { get: function() {
    return this._hasNext;
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "viewTop", { get: function() {
    return Math.min.apply(Math, c(c([], a(this._messages.map(function(e5) {
      return e5.createdAt;
    })), false), [Number.MAX_SAFE_INTEGER], false));
  }, enumerable: false, configurable: true }), Object.defineProperty(e4.prototype, "viewBottom", { get: function() {
    return Math.max.apply(Math, c(c([], a(this._messages.map(function(e5) {
      return e5.createdAt;
    })), false), [0], false));
  }, enumerable: false, configurable: true }), e4.prototype._activate = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        switch (e5.label) {
          case 0:
            return Ws.of(this._iid).logger.debug("check huge gap"), this._checkHugeGap(), [4, this._refreshChannel(Ks.SYNC_CHANNEL_CHANGELOGS)];
          case 1:
            return e5.sent(), [2];
        }
      });
    });
  }, e4.prototype._replaceChannelOfCollection = function(e5) {
    this._channel.isGroupChannel() ? this._channel = e5 : this._channel.isFeedChannel() && (this._channel._groupChannel = e5._groupChannel);
  }, e4.prototype._shouldStartBackgroundSync = function() {
    var e5 = Ws.of(this._iid).cacheContext;
    return this.channel.isGroupChannel() ? e5.localCacheEnabled && !this.channel.isSuper : e5.localCacheEnabled;
  }, e4.prototype._setBaseMessageCollectionHandler = function(e5) {
    this._handler = e5;
  }, e4.prototype._filterUnderOffsetMessage = function(e5) {
    return e5;
  }, e4.prototype._updateChildMessagesInView = function(e5) {
    var t7 = [];
    return this._messages.forEach(function(n3) {
      n3 instanceof pt && n3.parentMessageId === e5.messageId && n3.applyParentMessage(e5) && t7.push(n3);
    }), t7;
  }, e4.prototype._updatePollsToView = function(e5, t7) {
    var n3, s6, r4 = this, a5 = [];
    try {
      for (var i4 = o(e5), o3 = i4.next(); !o3.done; o3 = i4.next()) {
        var u4 = o3.value, c4 = vs2(this._messages, u4.messageId);
        if (c4 >= 0) {
          var l3 = this._messages[c4];
          l3.isUserMessage() && l3.applyPoll(u4), a5.push(l3);
        }
      }
    } catch (e6) {
      n3 = { error: e6 };
    } finally {
      try {
        o3 && !o3.done && (s6 = i4.return) && s6.call(i4);
      } finally {
        if (n3) throw n3.error;
      }
    }
    return a5.length > 0 && Js(t7) && os(function() {
      return r(r4, void 0, void 0, function() {
        var e6, n4, s7;
        return s(this, function(r5) {
          return e6 = { source: t7 }, a5.length > 0 && (null === (s7 = (n4 = this._handler).onMessagesUpdated) || void 0 === s7 || s7.call(n4, e6, this.channel, a5)), [2];
        });
      });
    }), a5;
  }, e4.prototype._applyPollUpdateEventToView = function(e5, t7) {
    var n3 = this, s6 = vs2(this._messages, e5.messageId);
    if (s6 >= 0) {
      var r4 = this._messages[s6];
      r4 && r4.isUserMessage() && r4.poll && r4.poll.applyPollUpdateEvent(e5) && Js(t7) && os(function() {
        return r(n3, void 0, void 0, function() {
          var e6, n4, s7;
          return s(this, function(a5) {
            return e6 = { source: t7 }, null === (s7 = null === (n4 = this._handler) || void 0 === n4 ? void 0 : n4.onMessagesUpdated) || void 0 === s7 || s7.call(n4, e6, this.channel, [r4]), [2];
          });
        });
      });
    }
  }, e4.prototype._applyPollVoteEventToView = function(e5, t7) {
    var n3 = this, s6 = vs2(this._messages, e5.messageId);
    if (s6 >= 0) {
      var r4 = this._messages[s6];
      r4 && r4.isUserMessage() && r4.poll && r4.poll.applyPollVoteEvent(e5) && Js(t7) && os(function() {
        return r(n3, void 0, void 0, function() {
          var e6, n4, s7;
          return s(this, function(a5) {
            return e6 = { source: t7 }, null === (s7 = null === (n4 = this._handler) || void 0 === n4 ? void 0 : n4.onMessagesUpdated) || void 0 === s7 || s7.call(n4, e6, this.channel, [r4]), [2];
          });
        });
      });
    }
  }, e4.prototype._applyReactionEventToView = function(e5, t7) {
    var n3 = this, s6 = vs2(this._messages, e5.messageId);
    if (s6 >= 0) {
      var r4 = this._messages[s6];
      r4 && (r4.isUserMessage() || r4.isFileMessage() || r4.isMultipleFilesMessage()) && Js(t7) && (r4.applyReactionEvent(e5), os(function() {
        return r(n3, void 0, void 0, function() {
          var e6, n4, s7;
          return s(this, function(a5) {
            return e6 = { source: t7 }, null === (s7 = null === (n4 = this._handler) || void 0 === n4 ? void 0 : n4.onMessagesUpdated) || void 0 === s7 || s7.call(n4, e6, this.channel, [r4]), [2];
          });
        });
      }));
    }
  }, e4.prototype._applyThreadInfoEventToView = function(e5, t7) {
    var n3 = this, s6 = vs2(this._messages, e5.targetMessageId);
    if (s6 >= 0) {
      var r4 = this._messages[s6];
      r4 && (r4.isUserMessage() || r4.isFileMessage() || r4.isMultipleFilesMessage()) && Js(t7) && (r4.applyThreadInfoUpdateEvent(e5), os(function() {
        return r(n3, void 0, void 0, function() {
          var e6, n4, s7;
          return s(this, function(a5) {
            return e6 = { source: t7 }, null === (s7 = null === (n4 = this._handler) || void 0 === n4 ? void 0 : n4.onMessagesUpdated) || void 0 === s7 || s7.call(n4, e6, this.channel, [r4]), [2];
          });
        });
      }));
    }
  }, e4.prototype._removeMessagesFromView = function(e5, t7) {
    var n3, s6, r4 = this, a5 = [], i4 = [], o3 = function(e6) {
      var t8 = u4._messages.findIndex(function(t9) {
        return r4.keyOf(t9) === e6;
      });
      if (t8 >= 0) {
        var n4 = u4._messages[t8];
        a5.push(u4.keyOf(n4)), i4.push(n4), u4._messages.splice(t8, 1);
      }
    }, u4 = this;
    try {
      for (var c4 = o(e5), l3 = c4.next(); !l3.done; l3 = c4.next()) {
        o3(l3.value);
      }
    } catch (e6) {
      n3 = { error: e6 };
    } finally {
      try {
        l3 && !l3.done && (s6 = c4.return) && s6.call(c4);
      } finally {
        if (n3) throw n3.error;
      }
    }
    return Js(t7) && i4.length > 0 && os(function() {
      return r(r4, void 0, void 0, function() {
        var e6, n4, s7;
        return s(this, function(r5) {
          return e6 = { source: t7 }, null === (s7 = null === (n4 = this._handler) || void 0 === n4 ? void 0 : n4.onMessagesDeleted) || void 0 === s7 || s7.call(n4, e6, this.channel, a5, i4), [2];
        });
      });
    }), a5;
  }, e4.prototype._removeUnsentMessageFromView = function(e5, t7) {
    var n3 = this._unsentMessages.findIndex(function(t8) {
      return t8.reqId === e5;
    });
    n3 >= 0 && this._unsentMessages.splice(n3, 1);
  }, e4.prototype._getLocalMessages = function(e5, t7) {
    var n3 = t7.prevLimit, s6 = void 0 === n3 ? 0 : n3, r4 = t7.nextLimit, a5 = void 0 === r4 ? 0 : r4, i4 = t7.inclusive, o3 = void 0 === i4 || i4;
    return r(this, void 0, void 0, function() {
      var t8, n4, r5, i5, u4;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return t8 = [], o3 ? [4, this._channelManager.getExactlyMatchingMessagesForTokenFromCache(this._channel.url, e5, this.filter)] : [3, 2];
          case 1:
            t8 = c4.sent(), c4.label = 2;
          case 2:
            return s6 > 0 ? [4, this._channelManager.getMessagesFromCache(this._channel.url, e5, "prev", this.filter, s6, false)] : [3, 4];
          case 3:
            return r5 = c4.sent(), [3, 5];
          case 4:
            r5 = [], c4.label = 5;
          case 5:
            return n4 = r5, a5 > 0 ? [4, this._channelManager.getMessagesFromCache(this._channel.url, e5, "next", this.filter, a5, false)] : [3, 7];
          case 6:
            return u4 = c4.sent(), [3, 8];
          case 7:
            u4 = [], c4.label = 8;
          case 8:
            return i5 = u4, [2, { messages: c(c(c([], a(t8), false), a(n4), false), a(i5), false).sort(function(e6, t9) {
              return t9.createdAt - e6.createdAt;
            }), prevMessagesCount: n4.length, nextMessagesCount: i5.length }];
        }
      });
    });
  }, e4.prototype._getRemoteMessages = function(e5, t7) {
    var r4 = t7.prevLimit, a5 = void 0 === r4 ? 0 : r4, i4 = t7.nextLimit, o3 = void 0 === i4 ? 0 : i4, u4 = t7.source, c4 = void 0 === u4 ? Ks.REQUEST_MESSAGE : u4, l3 = t7.reverse, h4 = void 0 !== l3 && l3, d5 = t7.checkingHasNext, _2 = void 0 !== d5 && d5, v5 = t7.checkingContinuousMessages, m5 = void 0 !== v5 && v5;
    return r(this, void 0, void 0, function() {
      var t8, r5;
      return s(this, function(i5) {
        switch (i5.label) {
          case 0:
            return t8 = ea.of(this._iid), a5 > 0 || o3 > 0 ? [4, t8._getMessagesByTimestampForCollection(this._channel.url, this._channel.channelType, e5, se(n(n(n({}, this.filter), As2), { isInclusive: true, reverse: h4, prevResultSize: a5, nextResultSize: o3 })), c4, _2, m5)] : [3, 2];
          case 1:
            return r5 = i5.sent(), [3, 3];
          case 2:
            r5 = { messages: [], isContinuousMessages: false }, i5.label = 3;
          case 3:
            return [2, r5];
        }
      });
    });
  }, e4.prototype._checkHugeGap = function() {
    var e5, t7, n3, r4, a5;
    return r(this, void 0, void 0, function() {
      var i4, o3, u4, c4, l3, v5, m5, g4, E4, C3, M5, b6, N3, U2, S6, T4, A3, I5, w4, L5, D3, x2, R4, F2, k3, O4 = this;
      return s(this, function(V2) {
        switch (V2.label) {
          case 0:
            return i4 = Ws.of(this._iid), o3 = i4.dispatcher, u4 = i4.requestQueue, c4 = i4.cacheContext, l3 = i4.statManager, v5 = i4.logger, this._messages.length > 0 ? (m5 = this._syncRange.top, g4 = this.viewTop, E4 = this._syncRange.bottom, C3 = this.hasNext ? this.viewBottom : Number.MAX_SAFE_INTEGER, [4, this._channelManager.getCachedMessageCountBetween(this._channel.url, this.filter, g4, m5)]) : [3, 8];
          case 1:
            return M5 = V2.sent(), [4, this._channelManager.getCachedMessageCountBetween(this._channel.url, this.filter, E4, C3)];
          case 2:
            b6 = V2.sent(), V2.label = 3;
          case 3:
            return V2.trys.push([3, 5, 6, 7]), [4, _s(function() {
              return r(O4, void 0, void 0, function() {
                var e6, t8, n4, r5, a6, i5, l4, h4, v6, N4, U3, S7, T5, A4, I6, w5, L6, D4 = this;
                return s(this, function(x3) {
                  switch (x3.label) {
                    case 0:
                      return e6 = new Ss2(n(n({ channelUrl: this._channel.url, channelType: this._channel.channelType, prevStart: g4, prevEnd: m5, prevCount: M5, nextStart: E4, nextEnd: C3, nextCount: b6, checkingContinuousMessages: c4.localCacheEnabled }, this.filter), As2)), [4, u4.send(e6)];
                    case 1:
                      return t8 = x3.sent(), n4 = t8.as(Ts2), r5 = n4.isHugeGap, a6 = n4.prevMessages, i5 = void 0 === a6 ? [] : a6, l4 = n4.prevHasMore, h4 = n4.isContinuousPrevMessages, v6 = n4.nextMessages, N4 = void 0 === v6 ? [] : v6, U3 = n4.nextHasmore, S7 = n4.isContinuousNextMessages, r5 ? os(function() {
                        return r(D4, void 0, void 0, function() {
                          var e7;
                          return s(this, function(t9) {
                            return (null === (e7 = this._handler) || void 0 === e7 ? void 0 : e7.onHugeGapDetected) && this._handler.onHugeGapDetected(), [2];
                          });
                        });
                      }) : (T5 = this.viewTop, A4 = this.viewBottom, I6 = Math.min.apply(Math, c([Number.MAX_SAFE_INTEGER, T5], a(i5.map(function(e7) {
                        return e7.createdAt;
                      })), false)), w5 = Math.max.apply(Math, c([0, A4], a(N4.map(function(e7) {
                        return e7.createdAt;
                      })), false)), o3.dispatch(new $s({ messages: i5, source: Ks.SYNC_MESSAGE_FILL })), o3.dispatch(new $s({ messages: N4, source: Ks.SYNC_MESSAGE_FILL })), this._syncRange.extends(I6, w5), (h4 || S7) && (null === (L6 = this._backgroundSync) || void 0 === L6 || L6.range.extends(I6, w5)), l4 && this._prevFill.start(I6), U3 && this._nextFill.start(w5)), [2];
                  }
                });
              });
            }, 1)];
          case 4:
            return V2.sent(), [3, 7];
          case 5:
            return N3 = V2.sent(), v5.debug("Failed HugeGap Check ", N3), [3, 7];
          case 6:
            return c4.localCacheEnabled && l3.put(new Ze({ type: Le.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, measured_on: "gap_check", event: "cache_fetch", max_db_size: null !== (t7 = null === (e5 = c4.localCacheConfig) || void 0 === e5 ? void 0 : e5.maxSize) && void 0 !== t7 ? t7 : 0, use_local_cache: c4.localCacheEnabled, starting_point: 0, message_init_policy: "" } })), [7];
          case 7:
            return [3, 13];
          case 8:
            U2 = Date.now(), V2.label = 9;
          case 9:
            return V2.trys.push([9, 11, 12, 13]), [4, this._getRemoteMessages(U2, { prevLimit: this._prevResultLimit, nextLimit: this._nextResultLimit, source: Ks.SYNC_MESSAGE_FILL, checkingHasNext: true, checkingContinuousMessages: c4.localCacheEnabled })];
          case 10:
            if (S6 = V2.sent(), T4 = S6.messages, A3 = S6.isContinuousMessages, I5 = S6.hasNext, T4.length > 0) {
              for (w4 = T4.map(function(e6) {
                return e6.createdAt;
              }), L5 = 0, D3 = 0, x2 = 0; x2 < w4.length; x2++) (R4 = w4[x2]) <= U2 ? L5++ : R4 >= U2 && D3++;
              this._hasPrevious = L5 >= this._prevResultLimit, this._hasNext = null != I5 ? I5 : D3 >= this._nextResultLimit, (k3 = this._syncRange).extends.apply(k3, c([], a(w4), false)), A3 && (null === (n3 = this._backgroundSync) || void 0 === n3 || n3.range.extends(this._syncRange.top, this._syncRange.bottom)), this._addMessagesToView(T4, Ks.SYNC_MESSAGE_FILL);
            } else this._hasPrevious = false, this._hasNext = false;
            return [3, 13];
          case 11:
            return (F2 = V2.sent()) instanceof v && F2.code === u.NOT_FOUND_IN_DATABASE && (this._hasPrevious = false, this._hasNext = false), [3, 13];
          case 12:
            return c4.localCacheEnabled && l3.put(new Ze({ type: Le.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, measured_on: "gap_check", event: "cache_fetch", max_db_size: null !== (a5 = null === (r4 = c4.localCacheConfig) || void 0 === r4 ? void 0 : r4.maxSize) && void 0 !== a5 ? a5 : 0, use_local_cache: c4.localCacheEnabled, starting_point: 0, message_init_policy: "" } })), [7];
          case 13:
            return [2];
        }
      });
    });
  }, e4.prototype._loadUnsentMessages = function() {
    return r(this, void 0, void 0, function() {
      var e5;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return e5 = this, [4, this._channelManager.getUnsentMessagesFromCache(this._channel.url, this.filter)];
          case 1:
            return e5._unsentMessages = t7.sent(), [2];
        }
      });
    });
  }, e4.prototype._hasPollMessage = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        switch (e5.label) {
          case 0:
            return [4, this._channelManager.getPollMessagesFromCache(this._channel.url, Date.now() + 6e5, this.filter, 1)];
          case 1:
            return e5.sent().length > 0 ? [2, true] : [2, false];
        }
      });
    });
  }, e4.prototype._refreshChannel = function(e5, t7) {
    return void 0 === t7 && (t7 = false), r(this, void 0, void 0, function() {
      var n3, s6;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            n3 = Ws.of(this._iid).logger, r4.label = 1;
          case 1:
            return r4.trys.push([1, 3, , 4]), [4, this._channelManager.refreshChannel(this.channel.url, true, e5, t7)];
          case 2:
            return r4.sent(), [3, 4];
          case 3:
            return s6 = r4.sent(), n3.warn("Failed to refresh channel", s6), [3, 4];
          case 4:
            return [2];
        }
      });
    });
  }, e4.prototype._startCheckMyMutedTimer = function(e5) {
    var t7 = this;
    this._clearCheckMyMutedTimer(), this._checkMyMutedStateTimer = setTimeout(function() {
      return r(t7, void 0, void 0, function() {
        var e6, t8, n3, s6 = this;
        return s(this, function(r4) {
          switch (r4.label) {
            case 0:
              this._checkMyMutedStateTimer = void 0, e6 = true, r4.label = 1;
            case 1:
              return r4.trys.push([1, 3, 4, 5]), [4, this._channel.getMyMutedInfo()];
            case 2:
              return t8 = r4.sent(), e6 = !t8.isMuted, [3, 5];
            case 3:
              return r4.sent(), e6 = true, [3, 5];
            case 4:
              return e6 && (n3 = Ws.of(this._iid).sessionManager, this.channel._runIfHandleableWithGroupChannel(function(e7) {
                var t9, r5;
                e7.myMutedState = H.UNMUTED;
                var a5 = { source: Ks.EVENT_CHANNEL_UNMUTED, user: n3.currentUser };
                null === (r5 = null === (t9 = s6._handler) || void 0 === t9 ? void 0 : t9.onChannelUpdated) || void 0 === r5 || r5.call(t9, a5, s6.channel);
              })), [7];
            case 5:
              return [2];
          }
        });
      });
    }, e5 + 1e3);
  }, e4.prototype._clearCheckMyMutedTimer = function() {
    this._checkMyMutedStateTimer && (clearTimeout(this._checkMyMutedStateTimer), this._checkMyMutedStateTimer = void 0);
  }, e4.prototype._setHasNextAndHasPrevious = function(e5, t7) {
    for (var n3 = e5.map(function(e6) {
      return e6.createdAt;
    }), s6 = 0, r4 = 0, a5 = 0; a5 < n3.length; a5++) {
      var i4 = n3[a5];
      i4 < this._startingPoint ? s6++ : i4 > this._startingPoint && r4++;
    }
    this._hasPrevious = s6 >= this._prevResultLimit, this._hasNext = null != t7 ? t7 : r4 >= this._nextResultLimit;
  }, e4.prototype.initialize = function(e5) {
    var t7 = this, n3 = new Ds2();
    this._messages = [], this._unsentMessages = [], this._syncRange = new ds2({}), this._hasNext = true, this._hasPrevious = true;
    var s6 = [], r4 = { messages: [], prevMessagesCount: 0, nextMessagesCount: 0 };
    return os(function() {
      return r(t7, void 0, void 0, function() {
        var t8, a5, i4, o3, u4, c4 = this;
        return s(this, function(l3) {
          switch (l3.label) {
            case 0:
              return [4, null === (u4 = this._backgroundSync) || void 0 === u4 ? void 0 : u4.loadMetadata()];
            case 1:
              if (t8 = l3.sent(), a5 = Ws.of(this._iid), i4 = a5.cacheContext, o3 = a5.statManager, e5 === gs2.CACHE_AND_REPLACE_BY_API) this._getLocalMessages(this._startingPoint, { prevLimit: this._prevResultLimit, nextLimit: this._nextResultLimit }).then(function(e6) {
                return r(c4, void 0, void 0, function() {
                  return s(this, function(t9) {
                    switch (t9.label) {
                      case 0:
                        return r4 = e6, s6 = this._filterUnderOffsetMessage(r4.messages), this._addMessagesToView(s6, Ks.REQUEST_MESSAGE), [4, this._loadUnsentMessages()];
                      case 1:
                        return t9.sent(), n3._invokeResponse("local", null, s6), [2];
                    }
                  });
                });
              }).catch(function(e6) {
                if (g(e6)) throw e6;
                n3._invokeResponse("local", e6, null);
              }).finally(function() {
                return r(c4, void 0, void 0, function() {
                  var a6, i5, u5, c5, l4, h4, p4, v5 = this;
                  return s(this, function(f4) {
                    switch (f4.label) {
                      case 0:
                        return a6 = Ws.of(this._iid).cacheContext, i5 = true, u5 = true, c5 = false, a6.localCacheEnabled && s6.length > 0 && (l4 = t8.range).includes.apply(l4, c([], a(s6.map(function(e6) {
                          return e6.createdAt;
                        })), false)) && (!t8.previousComplete && r4.prevMessagesCount < this._prevResultLimit ? u5 = true : this._startingPoint > t8.range.bottom || r4.nextMessagesCount < this._nextResultLimit ? c5 = true : u5 = false), [4, this._refreshChannel(Ks.REFRESH_CHANNEL, c5)];
                      case 1:
                        return f4.sent(), c5 && this._channel._runIfHandleableWithGroupChannel(function(e6) {
                          var t9 = Math.max.apply(Math, c([], a(s6.map(function(e7) {
                            return e7.createdAt;
                          })), false));
                          e6._latestMessageInfo && t9 >= e6._latestMessageInfo.createdAt && (u5 = false);
                        }), u5 ? (i5 = false, this._getRemoteMessages(this._startingPoint, { prevLimit: this._prevResultLimit, nextLimit: this._nextResultLimit, reverse: true, checkingHasNext: true, checkingContinuousMessages: a6.localCacheEnabled }).then(function(e6) {
                          var t9, s7, r5, a7 = e6.messages, i6 = e6.isContinuousMessages, o4 = e6.hasNext, u6 = v5._filterUnderOffsetMessage(a7);
                          v5._messages = [], u6.length > 0 ? (v5._setHasNextAndHasPrevious(u6, o4), (t9 = v5._syncRange).extends.apply(t9, c([], a(u6.map(function(e7) {
                            return e7.createdAt;
                          })), false)), i6 && (null === (s7 = v5._backgroundSync) || void 0 === s7 ? void 0 : s7.range.overlap(v5._syncRange)) && (null === (r5 = v5._backgroundSync) || void 0 === r5 || r5.range.extends(v5._syncRange.top, v5._syncRange.bottom)), v5._addMessagesToView(u6, Ks.REQUEST_MESSAGE)) : (v5._hasPrevious = false, v5._hasNext = false), n3._invokeResponse("remote", null, u6);
                        }).catch(function(e6) {
                          if (g(e6)) throw e6;
                          n3._invokeResponse("remote", e6, null);
                        })) : (this._setHasNextAndHasPrevious(s6), n3._invokeResponse("remote", null, s6)), a6.localCacheEnabled && o3.put(new Ze({ type: Le.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, starting_point: this._startingPoint, measured_on: "initial_load", event: i5 ? "cache_hit" : "cache_miss", max_db_size: null !== (p4 = null === (h4 = a6.localCacheConfig) || void 0 === h4 ? void 0 : h4.maxSize) && void 0 !== p4 ? p4 : 0, message_init_policy: e5, use_local_cache: a6.localCacheEnabled, collection_id: this._key } })), [2];
                    }
                  });
                });
              });
              return o3.put(new qs({ type: Le.FEATURE_LOCALCACHE, data: { use_local_cache: i4.localCacheEnabled, collection_interface: { message_init_policy: e5, message: true } } })), [2];
          }
        });
      });
    }), n3;
  }, e4.prototype.loadPrevious = function() {
    var e5, t7, n3;
    return r(this, void 0, void 0, function() {
      var s6, r4, a5, i4, o3, u4, c4, l3, v5 = this;
      return s(this, function(m5) {
        switch (m5.label) {
          case 0:
            if (this._isDisposed) throw new v({ code: u.COLLECTION_DISPOSED, message: "Collection has been disposed." });
            return s6 = Ws.of(this._iid), r4 = s6.cacheContext, a5 = s6.statManager, i4 = s6.logger, this._hasPrevious ? this._isLoadingPrevious ? (i4.warn("Messages are already fetching."), [2, []]) : (this._isLoadingPrevious = true, o3 = this.viewTop, u4 = [], [4, as(function() {
              return r(v5, void 0, void 0, function() {
                var e6;
                return s(this, function(t8) {
                  switch (t8.label) {
                    case 0:
                      return [4, this._getLocalMessages(o3, { prevLimit: this._prevResultLimit, inclusive: false })];
                    case 1:
                      return e6 = t8.sent(), u4 = this._filterUnderOffsetMessage(e6.messages), [2];
                  }
                });
              });
            })]) : [2, []];
          case 1:
            return m5.sent(), c4 = u4.length >= this._prevResultLimit, r4.localCacheEnabled && a5.put(new Ze({ type: Le.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, starting_point: this._startingPoint, measured_on: "load_prev", event: c4 ? "cache_hit" : "cache_miss", max_db_size: null !== (t7 = null === (e5 = r4.localCacheConfig) || void 0 === e5 ? void 0 : e5.maxSize) && void 0 !== t7 ? t7 : 0, use_local_cache: r4.localCacheEnabled, collection_id: this._key, message_init_policy: "" } })), c4 && (null === (n3 = this._backgroundSync) || void 0 === n3 ? void 0 : n3.isWrappingMessages(u4)) ? [3, 3] : (l3 = false, [4, as(function() {
              return r(v5, void 0, void 0, function() {
                var e6, t8, n4, s7, r5, i5, c5, h4 = this;
                return s(this, function(p4) {
                  switch (p4.label) {
                    case 0:
                      return e6 = Ws.of(this._iid).cacheContext, [4, this._getRemoteMessages(o3, { prevLimit: this._prevResultLimit, reverse: true, checkingContinuousMessages: e6.localCacheEnabled })];
                    case 1:
                      return t8 = p4.sent(), (u4 = this._filterUnderOffsetMessage(t8.messages)).length > 0 && ((n4 = this._syncRange).extends.apply(n4, c([], a(u4.map(function(e7) {
                        return e7.createdAt;
                      })), false)), (null === (s7 = this._backgroundSync) || void 0 === s7 ? void 0 : s7.range.overlap(this._syncRange)) && t8.isContinuousMessages && (l3 = true, null === (r5 = this._backgroundSync) || void 0 === r5 || r5.range.extends(this._syncRange.top))), u4 = u4.filter(function(e7) {
                        return fs2(h4._messages, e7) < 0;
                      }), this._hasPrevious = u4.length >= this._prevResultLimit, l3 && a5.put(new Ze({ type: Le.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, starting_point: this._startingPoint, measured_on: "load_prev", event: "cache_fetch", max_db_size: null !== (c5 = null === (i5 = e6.localCacheConfig) || void 0 === i5 ? void 0 : i5.maxSize) && void 0 !== c5 ? c5 : 0, use_local_cache: e6.localCacheEnabled, collection_id: this._key, message_init_policy: "" } })), [2];
                  }
                });
              });
            })]);
          case 2:
            return m5.sent(), this._addMessagesToView(u4, Ks.REQUEST_MESSAGE), [3, 4];
          case 3:
            this._hasPrevious = u4.length >= this._prevResultLimit, u4.length > 0 && this._addMessagesToView(u4, Ks.REQUEST_MESSAGE), m5.label = 4;
          case 4:
            return this._isLoadingPrevious = false, [2, u4];
        }
      });
    });
  }, e4.prototype.loadNext = function() {
    var e5, t7, n3;
    return r(this, void 0, void 0, function() {
      var s6, r4, a5, i4, o3, u4, c4, l3, v5 = this;
      return s(this, function(m5) {
        switch (m5.label) {
          case 0:
            if (this._isDisposed) throw new v({ code: u.COLLECTION_DISPOSED, message: "Collection has been disposed." });
            return s6 = Ws.of(this._iid), r4 = s6.cacheContext, a5 = s6.statManager, i4 = s6.logger, this._hasNext ? this._isLoadingNext ? (i4.warn("Messages are already fetching."), [2, []]) : (this._isLoadingNext = true, o3 = this.viewBottom, u4 = [], [4, as(function() {
              return r(v5, void 0, void 0, function() {
                var e6;
                return s(this, function(t8) {
                  switch (t8.label) {
                    case 0:
                      return [4, this._getLocalMessages(o3, { nextLimit: this._nextResultLimit, inclusive: false })];
                    case 1:
                      return e6 = t8.sent(), u4 = this._filterUnderOffsetMessage(e6.messages), [2];
                  }
                });
              });
            })]) : [2, []];
          case 1:
            return m5.sent(), c4 = u4.length >= this._nextResultLimit, r4.localCacheEnabled && a5.put(new Ze({ type: Le.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, starting_point: this._startingPoint, measured_on: "load_next", event: c4 ? "cache_hit" : "cache_miss", max_db_size: null !== (t7 = null === (e5 = r4.localCacheConfig) || void 0 === e5 ? void 0 : e5.maxSize) && void 0 !== t7 ? t7 : 0, use_local_cache: r4.localCacheEnabled, collection_id: this._key, message_init_policy: "" } })), c4 && (null === (n3 = this._backgroundSync) || void 0 === n3 ? void 0 : n3.isWrappingMessages(u4)) ? [3, 3] : (l3 = false, [4, as(function() {
              return r(v5, void 0, void 0, function() {
                var e6, t8, n4, s7, r5, i5, c5, h4, p4 = this;
                return s(this, function(f4) {
                  switch (f4.label) {
                    case 0:
                      return e6 = Ws.of(this._iid).cacheContext, [4, this._getRemoteMessages(o3, { nextLimit: this._nextResultLimit, reverse: true, checkingHasNext: true, checkingContinuousMessages: e6.localCacheEnabled })];
                    case 1:
                      return t8 = f4.sent(), (u4 = this._filterUnderOffsetMessage(t8.messages)).length > 0 && ((n4 = this._syncRange).extends.apply(n4, c([], a(u4.map(function(e7) {
                        return e7.createdAt;
                      })), false)), (null === (s7 = this._backgroundSync) || void 0 === s7 ? void 0 : s7.range.overlap(this._syncRange)) && t8.isContinuousMessages && (l3 = true, null === (r5 = this._backgroundSync) || void 0 === r5 || r5.range.extends(this._syncRange.bottom))), u4 = u4.filter(function(e7) {
                        return fs2(p4._messages, e7) < 0;
                      }), this._hasNext = null !== (i5 = t8.hasNext) && void 0 !== i5 ? i5 : u4.length >= this._nextResultLimit, l3 && a5.put(new Ze({ type: Le.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: this.channel.url, starting_point: this._startingPoint, measured_on: "load_next", event: "cache_fetch", max_db_size: null !== (h4 = null === (c5 = e6.localCacheConfig) || void 0 === c5 ? void 0 : c5.maxSize) && void 0 !== h4 ? h4 : 0, use_local_cache: e6.localCacheEnabled, collection_id: this._key, message_init_policy: "" } })), [2];
                  }
                });
              });
            })]);
          case 2:
            return m5.sent(), this._addMessagesToView(u4, Ks.REQUEST_MESSAGE), [3, 4];
          case 3:
            this._hasNext = u4.length >= this._nextResultLimit, u4.length > 0 && this._addMessagesToView(u4, Ks.REQUEST_MESSAGE), m5.label = 4;
          case 4:
            return this._isLoadingNext = false, [2, u4];
        }
      });
    });
  }, e4.prototype.removeFailedMessage = function(e5) {
    return r(this, void 0, void 0, function() {
      var t7;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            if (this._isDisposed) throw new v({ code: u.COLLECTION_DISPOSED, message: "Collection has been disposed." });
            return [4, this._channelManager.removeFailedMessageFromCache(e5)];
          case 1:
            return n3.sent(), (t7 = this._unsentMessages.findIndex(function(t8) {
              return t8.reqId === e5;
            })) > -1 && this._unsentMessages.splice(t7, 1), [2];
        }
      });
    });
  }, e4.prototype.dispose = function() {
    var e5, t7, n3, s6 = this;
    if (!this._isDisposed) {
      this._isDisposed = true;
      var r4 = Ws.of(this._iid), a5 = r4.cacheContext, i4 = r4.dispatcher;
      this._messages = [], this._clearCheckMyMutedTimer(), this._channel._runIfHandleableWithGroupChannel(function(e6) {
        e6.myMemberState !== Wt2.NONE && (s6._channel._updateMessageCollectionLastAccessedAt(), i4.dispatch(new En2({ channels: [s6._channel], context: { source: Ks.CHANNEL_LASTACCESSEDAT_UPDATED } })));
      }), a5.localCacheEnabled && (this._prevFill.stop(), this._nextFill.stop()), null === (e5 = this._backgroundSync) || void 0 === e5 || e5.close(), null === (t7 = this._changelogSync) || void 0 === t7 || t7.close(), null === (n3 = this._pollChangelogSync) || void 0 === n3 || n3.close(), this._channelManager.unsubscribeChannelEvent(this._key), this._channelManager.unsubscribeMessageEvent(this._key), this._connectionEventContext && this._connectionEventContext.close();
    }
  }, e4;
}();
var Rs2 = function(t7) {
  function n3(e4, n4) {
    return t7.call(this, e4, n(n({}, n4), { channelManager: ps2.of(e4) })) || this;
  }
  return t(n3, t7), n3.prototype.keyOf = function(e4) {
    return e4.messageId;
  }, n3.prototype.initialize = function(e4) {
    var n4 = this;
    return as(function() {
      return r(n4, void 0, void 0, function() {
        var e5;
        return s(this, function(t8) {
          switch (t8.label) {
            case 0:
              return [4, this.channel.getMyMutedInfo()];
            case 1:
              return (e5 = t8.sent()).isMuted && -1 !== e5.remainingDuration && this._startCheckMyMutedTimer(e5.remainingDuration), [2];
          }
        });
      });
    }), t7.prototype.initialize.call(this, e4);
  }, n3.prototype.setMessageCollectionHandler = function(e4) {
    this._setBaseMessageCollectionHandler(e4);
  }, n3.prototype._activate = function() {
    return r(this, void 0, void 0, function() {
      var e4 = this;
      return s(this, function(n4) {
        switch (n4.label) {
          case 0:
            return [4, t7.prototype._activate.call(this)];
          case 1:
            return n4.sent(), [4, as(function() {
              return r(e4, void 0, void 0, function() {
                var e5;
                return s(this, function(t8) {
                  switch (t8.label) {
                    case 0:
                      return [4, this.channel.getMyMutedInfo()];
                    case 1:
                      return (e5 = t8.sent()).isMuted && -1 !== e5.remainingDuration && this._startCheckMyMutedTimer(e5.remainingDuration), [2];
                  }
                });
              });
            })];
          case 2:
            return n4.sent(), [2];
        }
      });
    });
  }, n3.prototype._addMessagesToView = function(e4, t8) {
    var n4, s6, r4 = this, a5 = this._filterUnderOffsetMessage(e4), i4 = [], o3 = [];
    try {
      for (var u4 = o(a5), c4 = u4.next(); !c4.done; c4 = u4.next()) {
        var l3 = c4.value;
        if (t8 === Ks.SYNC_MESSAGE_FILL) {
          if (l3.messageId > 0) {
            if ((E4 = fs2(this._messages, l3)) < 0) {
              fs2(this._unsentMessages, l3) < 0 && i4.push(l3);
              var h4 = ms2(this._messages, l3);
              this._messages.splice(h4, 0, l3);
            }
          } else if (l3 instanceof mt) {
            (E4 = fs2(this._unsentMessages, l3)) < 0 && fs2(this._messages, l3) < 0 && (this._unsentMessages.push(l3), i4.push(l3));
          }
        } else if (l3.messageId > 0) {
          if ((E4 = fs2(this._messages, l3)) < 0) {
            var m5 = fs2(this._unsentMessages, l3);
            m5 < 0 ? i4.push(l3) : (this._unsentMessages.splice(m5, 1), o3.push(l3));
            h4 = ms2(this._messages, l3);
            this._messages.splice(h4, 0, l3);
          } else o3.push(l3), this._messages[E4] = l3;
          if (l3.updatedAt > 0) {
            var g4 = this._updateChildMessagesInView(l3);
            o3.push.apply(o3, c([], a(g4), false));
          }
        } else if (l3 instanceof mt) {
          var E4;
          (E4 = fs2(this._unsentMessages, l3)) < 0 ? fs2(this._messages, l3) < 0 && (this._unsentMessages.push(l3), i4.push(l3)) : (o3.push(l3), this._unsentMessages[E4] = l3);
        }
      }
    } catch (e5) {
      n4 = { error: e5 };
    } finally {
      try {
        c4 && !c4.done && (s6 = u4.return) && s6.call(u4);
      } finally {
        if (n4) throw n4.error;
      }
    }
    Js(t8) && os(function() {
      return r(r4, void 0, void 0, function() {
        var e5, n5, s7, r5, a6;
        return s(this, function(u5) {
          return e5 = { source: t8 }, i4.length > 0 && (null === (s7 = null === (n5 = this._handler) || void 0 === n5 ? void 0 : n5.onMessagesAdded) || void 0 === s7 || s7.call(n5, e5, this.channel, i4)), o3.length > 0 && (null === (a6 = null === (r5 = this._handler) || void 0 === r5 ? void 0 : r5.onMessagesUpdated) || void 0 === a6 || a6.call(r5, e5, this.channel, o3)), [2];
        });
      });
    });
  }, n3.prototype._updateMessagesToView = function(e4, t8) {
    var n4, s6, r4 = this, a5 = [], i4 = [], o3 = [];
    try {
      for (var u4 = o(e4), c4 = u4.next(); !c4.done; c4 = u4.next()) {
        var l3, h4 = c4.value;
        if (h4.messageId > 0) if ((l3 = fs2(this._messages, h4)) >= 0) i4.push(h4), this._messages[l3] = h4;
        else {
          var m5 = fs2(this._unsentMessages, h4);
          if (m5 >= 0) {
            var g4 = a(this._unsentMessages.splice(m5, 1), 1)[0];
            if (this.hasNext && g4) o3.push(g4);
            else {
              i4.push(h4);
              var E4 = ms2(this._messages, h4);
              this._messages.splice(E4, 0, h4);
            }
          } else {
            var C3 = this._messages.map(function(e5) {
              return e5.createdAt;
            });
            (h4.createdAt < Math.min.apply(Math, c([], a(C3), false)) && !this._hasPrevious || h4.createdAt > Math.max.apply(Math, c([], a(C3), false)) && !this._hasNext) && a5.push(h4);
          }
        }
        else if (h4 instanceof mt) (l3 = fs2(this._unsentMessages, h4)) >= 0 && (i4.push(h4), this._unsentMessages[l3] = h4);
      }
    } catch (e5) {
      n4 = { error: e5 };
    } finally {
      try {
        c4 && !c4.done && (s6 = u4.return) && s6.call(u4);
      } finally {
        if (n4) throw n4.error;
      }
    }
    return Js(t8) && os(function() {
      return r(r4, void 0, void 0, function() {
        var e5, n5, s7, r5, u5;
        return s(this, function(c5) {
          return e5 = { source: t8 }, i4.length > 0 ? null === (s7 = null === (n5 = this._handler) || void 0 === n5 ? void 0 : n5.onMessagesUpdated) || void 0 === s7 || s7.call(n5, e5, this.channel, i4) : o3.length > 0 ? null === (u5 = null === (r5 = this._handler) || void 0 === r5 ? void 0 : r5.onMessagesDeleted) || void 0 === u5 || u5.call(r5, e5, this.channel, [], o3) : a5.length > 0 && this._addMessagesToView(a5, t8), [2];
        });
      });
    }), i4;
  }, n3;
}(xs2);
var Fs2 = { coverUrl: void 0, coverImage: void 0, isDistinct: void 0, isPublic: void 0, isDiscoverable: void 0, accessCode: void 0, name: void 0, data: void 0, customType: void 0, operatorUserIds: void 0, messageSurvivalSeconds: void 0 };
var Ps3 = function(t7) {
  function n3(e4) {
    var n4 = this, s6 = e4.channelUrl, r4 = e4.token, a5 = e4.limit, i4 = e4.order, o3 = e4.mutedMemberFilter, u4 = e4.memberStateFilter, c4 = e4.nicknameStartsWithFilter, l3 = e4.operatorFilter;
    return (n4 = t7.call(this) || this).method = oe.GET, n4.path = "".concat(he, "/").concat(encodeURIComponent(s6), "/members"), n4.params = { token: r4, limit: a5, order: i4, muted_member_filter: o3, member_state_filter: u4, nickname_startswith: c4, operator_filter: l3, show_member_is_muted: true, show_read_receipt: true, show_delivery_receipt: true }, n4;
  }
  return t(n3, t7), n3;
}(xe);
var ks2 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    s6.members = [];
    var r4 = n4.next, a5 = n4.members;
    return s6.token = r4, a5 && a5.length > 0 && (s6.members = a5.map(function(t8) {
      return new tn2(e4, t8);
    })), s6;
  }
  return t(n3, t7), n3;
}(Ue);
!function(e4) {
  e4.ALL = "all", e4.MUTED = "muted", e4.UNMUTED = "unmuted";
}(Is2 || (Is2 = {})), function(e4) {
  e4.MEMBER_NICKNAME_ALPHABETICAL = "member_nickname_alphabetical", e4.OPERATOR_THEN_MEMBER_ALPHABETICAL = "operator_then_member_alphabetical";
}(ws2 || (ws2 = {})), function(e4) {
  e4.ALL = "all", e4.JOINED = "joined_only", e4.INVITED = "invited_only", e4.INVITED_BY_FRIEND = "invited_by_friend", e4.INVITED_BY_NON_FRIEND = "invited_by_non_friend";
}(Ls2 || (Ls2 = {}));
var Os2 = function(t7) {
  function a5(e4, n3, s6) {
    var r4, a6, o3, u4, c4 = this;
    return (c4 = t7.call(this, e4, n3, q.GROUP, s6) || this).mutedMemberFilter = Is2.ALL, c4.memberStateFilter = Ls2.ALL, c4.nicknameStartsWithFilter = null, c4.operatorFilter = Zt2.ALL, c4.order = ws2.MEMBER_NICKNAME_ALPHABETICAL, c4.mutedMemberFilter = null !== (r4 = s6.mutedMemberFilter) && void 0 !== r4 ? r4 : Is2.ALL, c4.memberStateFilter = null !== (a6 = s6.memberStateFilter) && void 0 !== a6 ? a6 : Ls2.ALL, c4.nicknameStartsWithFilter = null !== (o3 = s6.nicknameStartsWithFilter) && void 0 !== o3 ? o3 : null, c4.order = null !== (u4 = s6.order) && void 0 !== u4 ? u4 : ws2.MEMBER_NICKNAME_ALPHABETICAL, c4;
  }
  return t(a5, t7), a5.prototype._validate = function() {
    return t7.prototype._validate.call(this) && S(Is2, this.mutedMemberFilter) && S(Ls2, this.memberStateFilter) && (w("string", this.nicknameStartsWithFilter) || null === this.nicknameStartsWithFilter) && S(Zt2, this.operatorFilter) && S(ws2, this.order);
  }, a5.prototype.next = function() {
    return r(this, void 0, void 0, function() {
      var e4, t8, r4, a6, i4, o3;
      return s(this, function(u4) {
        switch (u4.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e4 = Ws.of(this._iid).requestQueue, t8 = new Ps3(se(n(n({}, this), { token: this._token }))), [4, e4.send(t8)]) : [3, 2] : [3, 5];
          case 1:
            return r4 = u4.sent(), a6 = r4.as(ks2), i4 = a6.members, o3 = a6.token, this._token = o3, this._hasNext = !!o3, this._isLoading = false, [2, i4];
          case 2:
            return [2, []];
          case 3:
            throw v.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw v.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, a5;
}(fo);
var Hs2 = function(t7) {
  function n3(e4) {
    var n4 = this, s6 = e4.channelUrl, r4 = e4.userId, a5 = e4.accessCode;
    return (n4 = t7.call(this) || this).method = oe.PUT, n4.path = "".concat(he, "/").concat(encodeURIComponent(s6), "/accept"), n4.params = { user_id: r4, access_code: a5 }, n4;
  }
  return t(n3, t7), n3;
}(xe);
var Vs2 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    return s6.channel = new ur2(e4, n4), s6.channel.myMemberState = Wt2.JOINED, s6;
  }
  return t(n3, t7), n3;
}(Ue);
var Gs2 = function(n3) {
  function s6(e4) {
    var s7 = this, r4 = e4.channelUrl, a5 = e4.isDistinct, i4 = e4.isPublic, o3 = e4.isDiscoverable, u4 = e4.coverUrl, c4 = e4.coverImage, l3 = e4.accessCode, h4 = e4.name, d5 = e4.data, _2 = e4.customType, p4 = e4.operatorUserIds, f4 = e4.messageSurvivalSeconds;
    return (s7 = n3.call(this) || this).method = oe.PUT, s7.path = "".concat(he, "/").concat(encodeURIComponent(r4)), s7.params = re({ is_distinct: a5, is_public: i4, is_discoverable: o3, name: h4, data: d5, custom_type: _2, cover_url: u4, cover_file: c4, access_code: l3, operator_ids: p4, message_survival_seconds: f4 }), s7;
  }
  return t(s6, n3), s6;
}(xe);
var Bs2 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    return s6.channel = new ur2(e4, n4), s6;
  }
  return t(n3, t7), n3;
}(Ue);
var qs3 = function(t7) {
  function n3(e4) {
    var n4 = this, s6 = e4.channelUrl;
    return (n4 = t7.call(this) || this).method = oe.DELETE, n4.path = "".concat(he, "/").concat(encodeURIComponent(s6)), n4;
  }
  return t(n3, t7), n3;
}(xe);
!function(t7) {
  function n3(e4, n4) {
    return t7.call(this, e4, n4) || this;
  }
  t(n3, t7);
}(Ue);
var zs2 = function(t7) {
  function n3(e4) {
    var n4 = this, s6 = e4.channelUrl;
    return (n4 = t7.call(this) || this).method = oe.DELETE, n4.path = "".concat(he, "/").concat(encodeURIComponent(s6), "/hide"), n4;
  }
  return t(n3, t7), n3;
}(xe);
!function(t7) {
  function n3() {
    return null !== t7 && t7.apply(this, arguments) || this;
  }
  t(n3, t7);
}(Ue);
var js2 = function(t7) {
  function n3(e4) {
    var n4 = e4.userId, s6 = e4.channelUrl, r4 = e4.countPreference, a5 = t7.call(this) || this;
    return a5.method = oe.PUT, a5.path = "".concat(ce, "/").concat(encodeURIComponent(n4), "/count_preference/").concat(encodeURIComponent(s6)), a5.params = { count_preference: r4 }, a5;
  }
  return t(n3, t7), n3;
}(xe);
var Ws3 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    return s6.countPreference = n4.count_preference, s6;
  }
  return t(n3, t7), n3;
}(Ue);
var Qs2 = function(n3) {
  function s6(e4) {
    var s7 = this, r4 = e4.channelUrl, a5 = e4.locale;
    return (s7 = n3.call(this) || this).method = oe.PUT, s7.path = "".concat(he, "/").concat(encodeURIComponent(r4), "/reset_user_history"), s7.params = re({ locale: a5 }), s7;
  }
  return t(s6, n3), s6;
}(xe);
var Ys2 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this, r4 = n4.ts_message_offset;
    return s6.messageOffsetTimestamp = r4, s6;
  }
  return t(n3, t7), n3;
}(Ue);
var Ks3 = n(n({}, mn), { scheduledAt: void 0, file: void 0, fileUrl: void 0, fileName: void 0, mimeType: void 0, fileSize: void 0, thumbnailSizes: void 0, requireAuth: false });
var Js3 = n(n({}, yn), { scheduledAt: void 0 });
var Xs2 = function(s6) {
  function r4(e4) {
    var r5, a5, i4 = this;
    i4 = s6.call(this) || this;
    var o3 = [];
    e4.mentionType === K.USERS && (e4.mentionedUserIds ? o3 = e4.mentionedUserIds : e4.mentionedUsers && (o3 = e4.mentionedUsers.map(function(e5) {
      return e5.userId;
    })));
    var u4 = e4.channelType, c4 = e4.channelUrl, l3 = e4.scheduledMessageId;
    return i4.method = oe.PUT, i4.path = "".concat(Ie(u4), "/").concat(encodeURIComponent(c4), "/scheduled_messages/").concat(encodeURIComponent(l3)), i4.params = re(se({ req_id: e4.reqId, scheduled_at: e4.scheduledAt, message_type: j.FILE, url: e4.fileUrl, file_name: e4.fileName, file_size: e4.fileSize, file_type: e4.mimeType, thumbnails: null === (r5 = e4._thumbnails) || void 0 === r5 ? void 0 : r5.map(function(e5) {
      return Oe2.payloadify(e5);
    }), custom_type: e4.customType, data: e4.data, require_auth: e4.requireAuth, mention_type: e4.mentionType, mentioned_user_ids: o3, sorted_metaarray: null === (a5 = e4.metaArrays) || void 0 === a5 ? void 0 : a5.map(function(e5) {
      return je.payloadify(e5);
    }), apple_critical_alert_options: e4.appleCriticalAlertOptions ? ze.payloadify(e4.appleCriticalAlertOptions) : null, push_option: e4.pushNotificationDeliveryOption })), i4;
  }
  return t(r4, s6), r4;
}(xe);
var Zs3 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    return s6.message = new St(e4, n4), s6;
  }
  return t(n3, t7), n3;
}(Ue);
var $s3 = function(s6) {
  function r4(e4) {
    var r5, a5 = this;
    a5 = s6.call(this) || this;
    var i4 = [];
    e4.mentionType === K.USERS && (e4.mentionedUserIds ? i4 = e4.mentionedUserIds : e4.mentionedUsers && (i4 = e4.mentionedUsers.map(function(e5) {
      return e5.userId;
    })));
    var o3 = e4.channelType, u4 = e4.channelUrl, c4 = e4.scheduledMessageId;
    return a5.method = oe.PUT, a5.path = "".concat(Ie(o3), "/").concat(encodeURIComponent(u4), "/scheduled_messages/").concat(encodeURIComponent(c4)), a5.params = re(se({ req_id: e4.reqId, scheduled_at: e4.scheduledAt, message_type: j.USER, message: e4.message, custom_type: e4.customType, data: e4.data, mention_type: e4.mentionType, mentioned_user_ids: i4, sorted_metaarray: null === (r5 = e4.metaArrays) || void 0 === r5 ? void 0 : r5.map(function(e5) {
      return je.payloadify(e5);
    }), apple_critical_alert_options: e4.appleCriticalAlertOptions ? ze.payloadify(e4.appleCriticalAlertOptions) : null, target_langs: e4.translationTargetLanguages, push_option: e4.pushNotificationDeliveryOption })), a5;
  }
  return t(r4, s6), r4;
}(xe);
!function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    return s6.message = new It(e4, n4), s6;
  }
  t(n3, t7);
}(Ue);
var er2;
var tr2;
var nr2 = function(t7) {
  function n3(e4) {
    var n4 = t7.call(this) || this, s6 = e4.channelType, r4 = e4.channelUrl, a5 = e4.scheduledMessageId;
    return n4.method = oe.DELETE, n4.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/scheduled_messages/").concat(encodeURIComponent(a5)), n4;
  }
  return t(n3, t7), n3;
}(xe);
var sr2 = function(t7) {
  function n3(e4) {
    var n4 = t7.call(this) || this, s6 = e4.channelType, r4 = e4.channelUrl, a5 = e4.scheduledMessageId;
    return n4.method = oe.POST, n4.path = "".concat(Ie(s6), "/").concat(encodeURIComponent(r4), "/scheduled_messages/").concat(encodeURIComponent(a5), "/send_now"), n4;
  }
  return t(n3, t7), n3;
}(xe);
var rr2 = function(t7) {
  function n3(e4) {
    var n4 = e4.userId, s6 = e4.channelUrl, r4 = e4.pushTriggerOption, a5 = t7.call(this) || this;
    return a5.method = oe.PUT, a5.path = "".concat(ce, "/").concat(encodeURIComponent(n4), "/push_preference/").concat(encodeURIComponent(s6)), a5.params = { push_trigger_option: r4 }, a5;
  }
  return t(n3, t7), n3;
}(xe);
var ar2 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    return s6.pushTriggerOption = n4.push_trigger_option, s6.enabled = n4.enable, s6;
  }
  return t(n3, t7), n3;
}(Ue);
var ir2 = function(t7) {
  function n3(e4) {
    var n4 = e4.userId, s6 = e4.channelUrl, r4 = t7.call(this) || this;
    return r4.method = oe.GET, r4.path = "".concat(ce, "/").concat(encodeURIComponent(n4), "/push_preference/").concat(encodeURIComponent(s6)), r4;
  }
  return t(n3, t7), n3;
}(xe);
var or2 = function(t7) {
  function n3(e4, n4) {
    var s6 = t7.call(this, e4, n4) || this;
    return s6.pushTriggerOption = n4.push_trigger_option, s6.enabled = n4.enable, s6;
  }
  return t(n3, t7), n3;
}(Ue);
!function(e4) {
  e4.ALL = "all", e4.UNREAD_MESSAGE_COUNT_ONLY = "unread_message_count_only", e4.UNREAD_MENTION_COUNT_ONLY = "unread_mention_count_only", e4.OFF = "off";
}(er2 || (er2 = {})), function(e4) {
  e4.UNHIDDEN = "unhidden", e4.HIDDEN_ALLOW_AUTO_UNHIDE = "hidden_allow_auto_unhide", e4.HIDDEN_PREVENT_AUTO_UNHIDE = "hidden_prevent_auto_unhide";
}(tr2 || (tr2 = {}));
var ur2 = function(u4) {
  function c4(e4, t7) {
    var n3, c5, l3, h4, p4, f4, v5, m5, E4, C3, y6, M5, b6, N3, U2, S6, T4, A3, I5, w4, L5 = this;
    return (L5 = u4.call(this, e4, t7) || this)._unreadMemberStateMap = /* @__PURE__ */ new Map(), L5._undeliveredMemberStateMap = /* @__PURE__ */ new Map(), L5._typingStatus = /* @__PURE__ */ new Map(), L5._lastMemberCountUpdated = 0, L5._typingStarted = 0, L5._typingEnded = 0, L5._hasBotInfo = { general: false, ai: false }, L5.isDistinct = false, L5.isSuper = false, L5.isBroadcast = false, L5.isExclusive = false, L5.isPublic = false, L5.isDiscoverable = true, L5.isChatNotification = false, L5.isAccessCodeRequired = false, L5.isPushEnabled = false, L5.unreadMessageCount = 0, L5.unreadMentionCount = 0, L5.totalUnreadReplyCount = 0, L5.members = [], L5.memberCount = 0, L5.joinedMemberCount = 0, L5.hiddenState = tr2.UNHIDDEN, L5.lastMessage = null, L5.messageOffsetTimestamp = 0, L5.messageSurvivalSeconds = -1, L5.myMemberState = Wt2.NONE, L5.myRole = V.NONE, L5.myMutedState = H.UNMUTED, L5.myLastRead = 0, L5.myCountPreference = er2.ALL, L5.myPushTriggerOption = _.DEFAULT, L5.inviter = null, L5.invitedAt = 0, L5.joinedAt = 0, L5.lastPinnedMessage = null, L5._latestMessageInfo = null, L5._pinnedMessagesUpdatedAt = 0, L5._myMutedRemainingTime = -1, L5.channelType = q.GROUP, L5.isDistinct = null !== (c5 = t7.is_distinct) && void 0 !== c5 && c5, L5.isSuper = null !== (l3 = t7.is_super) && void 0 !== l3 && l3, L5.isBroadcast = null !== (h4 = t7.is_broadcast) && void 0 !== h4 && h4, L5.isExclusive = null !== (p4 = t7.is_exclusive) && void 0 !== p4 && p4, L5.isPublic = null !== (f4 = t7.is_public) && void 0 !== f4 && f4, L5.isDiscoverable = null !== (v5 = t7.is_discoverable) && void 0 !== v5 ? v5 : L5.isPublic, L5.isChatNotification = null !== (m5 = t7.is_chat_notification) && void 0 !== m5 && m5, L5.isAccessCodeRequired = null !== (E4 = t7.is_access_code_required) && void 0 !== E4 && E4, L5.isPushEnabled = null !== (C3 = t7.is_push_enabled) && void 0 !== C3 && C3, Array.isArray(t7.members) && (n3 = L5.members).push.apply(n3, c([], a(t7.members.map(function(e5) {
      return new tn2(L5._iid, e5);
    })), false)), L5.memberCount = null !== (y6 = t7.member_count) && void 0 !== y6 ? y6 : 0, L5.joinedMemberCount = null !== (M5 = t7.joined_member_count) && void 0 !== M5 ? M5 : 0, L5.hiddenState = S(tr2, t7.hidden_state) ? t7.hidden_state : tr2.UNHIDDEN, L5.messageOffsetTimestamp = null !== (b6 = t7.ts_message_offset) && void 0 !== b6 ? b6 : 0, L5.messageSurvivalSeconds = null !== (N3 = t7.message_survival_seconds) && void 0 !== N3 ? N3 : -1, L5.lastMessage = t7.last_message ? Mt(L5._iid, n({ channel_type: L5.channelType }, t7.last_message)) : null, t7.read_receipt && Object.keys(t7.read_receipt).forEach(function(e5) {
      w("number", t7.read_receipt[e5]) && L5._updateUnreadMemberState(e5, t7.read_receipt[e5]);
    }), t7.delivery_receipt && Object.keys(t7.delivery_receipt).forEach(function(e5) {
      w("number", t7.delivery_receipt[e5]) && L5._updateUndeliveredMemberState(e5, t7.delivery_receipt[e5]);
    }), L5.myMemberState = S(Wt2, t7.member_state) ? t7.member_state : Wt2.NONE, L5.myRole = S(V, t7.my_role) ? t7.my_role : V.NONE, S(H, t7.is_muted) ? L5.myMutedState = t7.is_muted : w("boolean", t7.is_muted) ? L5.myMutedState = t7.is_muted ? H.MUTED : H.UNMUTED : L5.myMutedState = H.UNMUTED, L5.myCountPreference = S(er2, t7.count_preference) ? t7.count_preference : er2.ALL, L5.myPushTriggerOption = S(_, t7.push_trigger_option) ? t7.push_trigger_option : _.ALL, L5.myLastRead = null !== (U2 = t7.user_last_read) && void 0 !== U2 ? U2 : 0, L5.inviter = t7.inviter ? new es(L5._iid, t7.inviter) : null, L5.invitedAt = null !== (S6 = t7.invited_at) && void 0 !== S6 ? S6 : 0, L5.joinedAt = null !== (T4 = t7.joined_ts) && void 0 !== T4 ? T4 : 0, L5._updateUnreadCount(null !== (A3 = t7.unread_message_count) && void 0 !== A3 ? A3 : 0, null !== (I5 = t7.unread_mention_count) && void 0 !== I5 ? I5 : 0), L5.totalUnreadReplyCount = null !== (w4 = t7.total_unread_thread_message_count) && void 0 !== w4 ? w4 : 0, L5.lastPinnedMessage = t7.latest_pinned_message ? Mt(L5._iid, n({ channel_type: L5.channelType }, t7.latest_pinned_message)) : null, t7.latest_message && (L5._latestMessageInfo = { messageId: t7.latest_message.message_id, createdAt: t7.latest_message.created_at }), L5._hasBotInfo = { general: !!t7.has_bot, ai: !!t7.has_ai_bot }, L5;
  }
  return t(c4, u4), Object.defineProperty(c4.prototype, "isHidden", { get: function() {
    return this.hiddenState !== tr2.UNHIDDEN;
  }, enumerable: false, configurable: true }), Object.defineProperty(c4.prototype, "isTyping", { get: function() {
    return this._typingStatus.size > 0;
  }, enumerable: false, configurable: true }), Object.defineProperty(c4.prototype, "cachedUnreadMemberState", { get: function() {
    var e4, t7, n3 = {};
    try {
      for (var s6 = o(this._unreadMemberStateMap), r4 = s6.next(); !r4.done; r4 = s6.next()) {
        var a5 = a(r4.value, 2), i4 = a5[0], o3 = a5[1];
        n3[i4] = o3;
      }
    } catch (t8) {
      e4 = { error: t8 };
    } finally {
      try {
        r4 && !r4.done && (t7 = s6.return) && t7.call(s6);
      } finally {
        if (e4) throw e4.error;
      }
    }
    return n3;
  }, enumerable: false, configurable: true }), Object.defineProperty(c4.prototype, "cachedUndeliveredMemberState", { get: function() {
    var e4, t7, n3 = {};
    try {
      for (var s6 = o(this._undeliveredMemberStateMap), r4 = s6.next(); !r4.done; r4 = s6.next()) {
        var a5 = a(r4.value, 2), i4 = a5[0], o3 = a5[1];
        n3[i4] = o3;
      }
    } catch (t8) {
      e4 = { error: t8 };
    } finally {
      try {
        r4 && !r4.done && (t7 = s6.return) && t7.call(s6);
      } finally {
        if (e4) throw e4.error;
      }
    }
    return n3;
  }, enumerable: false, configurable: true }), Object.defineProperty(c4.prototype, "hasBot", { get: function() {
    return this._hasBotInfo.general;
  }, enumerable: false, configurable: true }), Object.defineProperty(c4.prototype, "hasAiBot", { get: function() {
    return this._hasBotInfo.ai;
  }, enumerable: false, configurable: true }), c4.payloadify = function(e4) {
    return re(se(n(n({}, u4.payloadify.call(this, e4)), { is_access_code_required: e4.isAccessCodeRequired, is_distinct: e4.isDistinct, is_super: e4.isSuper, is_broadcast: e4.isBroadcast, is_exclusive: e4.isExclusive, is_public: e4.isPublic, is_discoverable: e4.isDiscoverable, is_muted: e4.myMutedState, is_push_enabled: e4.isPushEnabled, unread_message_count: e4.unreadMessageCount, unread_mention_count: e4.unreadMentionCount, total_unread_thread_message_count: e4.totalUnreadReplyCount, push_trigger_option: e4.myPushTriggerOption, count_preference: e4.myCountPreference, hidden_state: e4.hiddenState, member_count: e4.memberCount, joined_member_count: e4.joinedMemberCount, member_state: e4.myMemberState, my_role: e4.myRole, user_last_read: e4.myLastRead, ts_message_offset: e4.messageOffsetTimestamp, message_survival_seconds: e4.messageSurvivalSeconds, read_receipt: e4.cachedUnreadMemberState, delivery_receipt: e4.cachedUndeliveredMemberState, members: e4.members.map(function(e5) {
      return tn2.payloadify(e5);
    }), last_message: e4.lastMessage ? wt(e4.lastMessage) : null, inviter: e4.inviter ? es.payloadify(e4.inviter) : null, invited_at: e4.invitedAt, joined_ts: e4.joinedAt, latest_pinned_message: e4.lastPinnedMessage ? wt(e4.lastPinnedMessage) : null, latest_message: e4._latestMessageInfo ? { message_id: e4._latestMessageInfo.messageId, created_at: e4._latestMessageInfo.createdAt } : null, has_bot: e4.hasBot, has_ai_bot: e4.hasAiBot })));
  }, c4.prototype._shouldUpdateLastMessageWith = function(e4) {
    if (e4.silent) return false;
    var t7 = Ws.of(this._iid).appInfo;
    switch (null == t7 ? void 0 : t7.lastMessageThreadingPolicy) {
      case Ir.NONE:
      case Ir.INCLUDE_REPLY:
        break;
      case Ir.EXCLUDE_REPLY:
        if (e4.parentMessageId > 0) return false;
        break;
      case Ir.INCLUDE_REPLY_TO_CHANNEL:
        if (e4 instanceof mt && e4.parentMessageId > 0 && !e4.replyToChannel) return false;
    }
    return !this.lastMessage || this.lastMessage.createdAt < e4.createdAt || this.lastMessage.createdAt === e4.createdAt && this.lastMessage.messageId === e4.messageId && this.lastMessage.updatedAt < e4.updatedAt;
  }, c4.prototype._tryUpdateLastMessageAndCallEvents = function(e4, t7) {
    var n3 = Ws.of(this._iid).dispatcher, s6 = ps2.of(this._iid);
    this._updateLastMessage(t7), s6.handlers.map(function(t8) {
      t8.onChannelChanged && t8.onChannelChanged(e4);
    }), n3.dispatch(new En2({ channels: [e4], context: { source: Ks.EVENT_MESSAGE_SENT } }));
  }, c4.prototype._shouldUpdateUnreadCountWith = function(e4) {
    var t7 = Ws.of(this._iid).appInfo;
    switch (null == t7 ? void 0 : t7.unreadCountThreadingPolicy) {
      case Ar.NONE:
      case Ar.INCLUDE_REPLY:
        break;
      case Ar.EXCLUDE_REPLY:
        if (e4.parentMessageId > 0) return false;
        break;
      case Ar.INCLUDE_REPLY_TO_CHANNEL:
        if (e4 instanceof mt && e4.parentMessageId > 0 && !e4.replyToChannel) return false;
    }
    return true;
  }, c4.prototype._updateLastMessage = function(e4) {
    return !!this._shouldUpdateLastMessageWith(e4) && (this.lastMessage = e4, true);
  }, c4.prototype._updateUnreadCount = function(e4, t7) {
    if ("number" == typeof e4 && e4 >= 0) if (this.myCountPreference === er2.ALL || this.myCountPreference === er2.UNREAD_MESSAGE_COUNT_ONLY) if (this.isExclusive || this.isSuper || this.isBroadcast) {
      var n3 = Ws.of(this._iid).maxSuperGroupChannelUnreadCount;
      this.unreadMessageCount = n3 && e4 >= n3 ? n3 : e4;
    } else this.unreadMessageCount = e4;
    else this.unreadMessageCount = 0;
    else this.unreadMessageCount = 0;
    "number" == typeof t7 && t7 >= 0 && (this.myCountPreference === er2.ALL || this.myCountPreference === er2.UNREAD_MENTION_COUNT_ONLY) ? this.unreadMentionCount = t7 : this.unreadMentionCount = 0;
  }, c4.prototype._updateUnreadMemberState = function(e4, t7) {
    var n3 = this._unreadMemberStateMap.get(e4);
    return (!n3 || n3 < t7) && (this._unreadMemberStateMap.set(e4, t7), Ws.of(this._iid).sdkState.userId === e4 && (this.myLastRead = t7), true);
  }, c4.prototype._updateUndeliveredMemberState = function(e4, t7) {
    var n3 = this._undeliveredMemberStateMap.get(e4);
    return (!n3 || n3 < t7) && (this._undeliveredMemberStateMap.set(e4, t7), true);
  }, c4.prototype._updateTypingStatus = function(e4, t7) {
    void 0 === t7 && (t7 = (/* @__PURE__ */ new Date()).getTime()), t7 > 0 ? this._typingStatus.set(e4.userId, { user: e4, ts: t7 }) : this._typingStatus.delete(e4.userId);
  }, c4.prototype._clearTypingStatus = function() {
    this._typingStatus.clear(), this._typingStarted = 0, this._typingEnded = 0;
  }, c4.prototype._setLatestMemberCount = function(e4, t7, n3) {
    var s6 = false;
    return n3 >= this._lastMemberCountUpdated && (this._lastMemberCountUpdated = n3, s6 = e4 !== this.memberCount || t7 !== this.joinedMemberCount, this.memberCount = e4, this.joinedMemberCount = t7), s6;
  }, c4.prototype.isReadMessage = function(e4) {
    var t7 = Ws.of(this._iid).sdkState, n3 = this._unreadMemberStateMap.get(t7.userId);
    return !!n3 && n3 >= e4.createdAt;
  }, c4.prototype.serialize = function() {
    var e4 = this;
    return Yr(this, function(t7) {
      t7.cachedUnreadMemberState = e4.cachedUnreadMemberState, t7.cachedUndeliveredMemberState = e4.cachedUndeliveredMemberState, Object.assign(t7, e4._serializeCachedMetaData());
    });
  }, c4.prototype.createMessageCollection = function(e4) {
    return void 0 === e4 && (e4 = {}), new Rs2(this._iid, n(n({}, e4), { channel: this }));
  }, c4.prototype.createMemberListQuery = function(e4) {
    return void 0 === e4 && (e4 = {}), new Os2(this._iid, this.url, e4);
  }, c4.prototype.createThreadedParentMessageListQuery = function(e4) {
    return void 0 === e4 && (e4 = {}), new ua(this._iid, this.url, this.channelType, e4);
  }, c4.prototype.addMember = function(e4, t7) {
    if (void 0 === t7 && (t7 = 0), !this.isExclusive && !this.isSuper && !this.isBroadcast) {
      var n3 = this.members.findIndex(function(t8) {
        return t8.userId === e4.userId;
      });
      if (n3 > -1) {
        var s6 = this.members[n3];
        s6.state === Wt2.JOINED && (e4.state = s6.state), this.members.splice(n3, 1), this.memberCount--;
      }
      this.members.push(e4), this.memberCount++, this._updateUnreadMemberState(e4.userId, t7), this._updateUndeliveredMemberState(e4.userId, t7);
    }
  }, c4.prototype.removeMember = function(e4) {
    if (!this.isExclusive && !this.isSuper && !this.isBroadcast) {
      var t7 = e4 instanceof tn2 ? e4.userId : e4, n3 = this.members.findIndex(function(e5) {
        return e5.userId === t7;
      });
      if (n3 > -1) return this.members.splice(n3, 1), this.memberCount--, true;
    }
    return false;
  }, c4.prototype.getUnreadMemberCount = function(e4) {
    var t7, n3;
    if (e4 instanceof mt && !this.isExclusive && !this.isSuper && !this.isBroadcast) {
      var s6 = Ws.of(this._iid).sdkState, r4 = e4.createdAt, a5 = 0;
      try {
        for (var i4 = o(this.members), o3 = i4.next(); !o3.done; o3 = i4.next()) {
          var u5 = o3.value;
          if (s6.userId !== u5.userId && u5.state === Wt2.JOINED && e4.sender.userId !== u5.userId) (this.cachedUnreadMemberState[u5.userId] || 0) < r4 && a5++;
        }
      } catch (e5) {
        t7 = { error: e5 };
      } finally {
        try {
          o3 && !o3.done && (n3 = i4.return) && n3.call(i4);
        } finally {
          if (t7) throw t7.error;
        }
      }
      return a5;
    }
    return 0;
  }, c4.prototype.getUndeliveredMemberCount = function(e4) {
    var t7, n3;
    if (e4 instanceof mt && !this.isExclusive && !this.isSuper && !this.isBroadcast) {
      var s6 = Ws.of(this._iid).sdkState, r4 = e4.createdAt, a5 = 0;
      try {
        for (var i4 = o(this.members), o3 = i4.next(); !o3.done; o3 = i4.next()) {
          var u5 = o3.value;
          if (s6.userId !== u5.userId && u5.state === Wt2.JOINED && e4.sender.userId !== u5.userId) (this.cachedUndeliveredMemberState[u5.userId] || 0) < r4 && a5++;
        }
      } catch (e5) {
        t7 = { error: e5 };
      } finally {
        try {
          o3 && !o3.done && (n3 = i4.return) && n3.call(i4);
        } finally {
          if (t7) throw t7.error;
        }
      }
      return a5;
    }
    return 0;
  }, c4.prototype.getReadMembers = function(e4, t7) {
    var n3 = this;
    void 0 === t7 && (t7 = false);
    var s6 = Ws.of(this._iid).sdkState;
    if (!s6.userId || this.isExclusive || this.isSuper || this.isBroadcast) return [];
    var r4 = e4 instanceof mt ? e4.sender : null, a5 = [];
    return this.members.forEach(function(i4) {
      if (t7 || i4.userId !== s6.userId && i4.userId !== (null == r4 ? void 0 : r4.userId)) {
        var o3 = n3._unreadMemberStateMap.get(i4.userId);
        o3 && o3 >= e4.createdAt && a5.push(i4);
      }
    }), a5;
  }, c4.prototype.getUnreadMembers = function(e4, t7) {
    var n3 = this;
    void 0 === t7 && (t7 = false);
    var s6 = Ws.of(this._iid).sdkState;
    if (!s6.userId || this.isExclusive || this.isSuper || this.isBroadcast) return [];
    var r4 = e4 instanceof mt ? e4.sender : null, a5 = [];
    return this.members.forEach(function(i4) {
      if (t7 || i4.userId !== s6.userId && i4.userId !== (null == r4 ? void 0 : r4.userId)) {
        var o3 = n3._unreadMemberStateMap.get(i4.userId);
        o3 && o3 < e4.createdAt && a5.push(i4);
      }
    }), a5;
  }, c4.prototype.getReadStatus = function(e4) {
    var t7 = this;
    void 0 === e4 && (e4 = false);
    var n3 = Ws.of(this._iid).sdkState;
    if (!n3.userId || this.isExclusive || this.isSuper || this.isBroadcast) return null;
    var s6 = {};
    return this.members.forEach(function(r4) {
      if (e4 || r4.userId !== n3.userId) {
        var a5 = t7._unreadMemberStateMap.get(r4.userId);
        s6[r4.userId] = new Ve(t7._iid, { channel_url: t7.url, channel_type: t7.channelType, user: tn2.payloadify(r4), ts: null != a5 ? a5 : 0 });
      }
    }), s6;
  }, c4.prototype.getDeliveryStatus = function(e4) {
    var t7 = this;
    void 0 === e4 && (e4 = true);
    var n3 = Ws.of(this._iid).sdkState;
    if (!n3.userId || this.isExclusive || this.isSuper || this.isBroadcast) return null;
    var s6 = {};
    return this.members.forEach(function(r4) {
      if (e4 || r4.userId !== n3.userId) {
        var a5 = t7._undeliveredMemberStateMap.get(r4.userId);
        s6[r4.userId] = new nn2(t7._iid, { channel_url: t7.url, channel_type: t7.channelType, user: tn2.payloadify(r4), ts: null != a5 ? a5 : 0 });
      }
    }), s6;
  }, c4.prototype.getTypingUsers = function() {
    var e4 = [];
    return this._typingStatus.forEach(function(t7) {
      var n3 = t7.user;
      e4.push(n3);
    }), e4;
  }, c4.prototype.invalidateTypingStatus = function() {
    var e4 = this, t7 = Ws.of(this._iid).typingIndicatorInvalidateTime, n3 = Date.now(), s6 = false;
    return this._typingStatus.forEach(function(r4, a5) {
      var i4 = r4.ts;
      n3 - i4 >= t7 && (e4._typingStatus.delete(a5), s6 = true);
    }), s6;
  }, c4.prototype.refresh = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        return [2, this._refresh()];
      });
    });
  }, c4.prototype._refresh = function(e4) {
    return void 0 === e4 && (e4 = false), r(this, void 0, void 0, function() {
      var t7, n3, s6, r4, a5, i4;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return t7 = Ws.of(this._iid), n3 = t7.requestQueue, s6 = t7.dispatcher, r4 = new Nn2({ channelUrl: this.url }), [4, n3.send(r4)];
          case 1:
            return a5 = o3.sent(), i4 = a5.as(Un2).channel, this._update(i4), e4 || s6.dispatch(new En2({ channels: [i4], context: { source: Ks.REFRESH_CHANNEL } })), [2, this];
        }
      });
    });
  }, c4.prototype.freeze = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, u4.prototype.freeze.call(this)];
          case 1:
            return e4.sent(), Ws.of(this._iid).dispatcher.dispatch(new En2({ channels: [this], context: { source: Ks.EVENT_CHANNEL_FROZEN }, isWebSocketEventComing: true })), [2];
        }
      });
    });
  }, c4.prototype.unfreeze = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, u4.prototype.unfreeze.call(this)];
          case 1:
            return e4.sent(), Ws.of(this._iid).dispatcher.dispatch(new En2({ channels: [this], context: { source: Ks.EVENT_CHANNEL_UNFROZEN }, isWebSocketEventComing: true })), [2];
        }
      });
    });
  }, c4.prototype.updateChannel = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, a5, i4, o3, u5;
      return s(this, function(c5) {
        switch (c5.label) {
          case 0:
            return t7 = n(n({}, Fs2), e4), Jr(function(e5) {
              return w("string", e5.coverUrl, true) && (k(e5.coverImage) || w("string", e5.coverImage, true)) && w("boolean", e5.isDistinct, true) && w("boolean", e5.isPublic, true) && w("boolean", e5.isDiscoverable, true) && w("string", e5.accessCode, true) && w("string", e5.name, true) && w("string", e5.data, true) && w("string", e5.customType, true) && N("string", e5.operatorUserIds, true) && w("number", e5.messageSurvivalSeconds, true);
            }(t7)).throw(v.invalidParameters), n3 = Ws.of(this._iid), r4 = n3.dispatcher, a5 = n3.requestQueue, i4 = new Gs2(n({ channelUrl: this.url }, t7)), [4, a5.send(i4)];
          case 1:
            return o3 = c5.sent(), u5 = o3.as(Bs2).channel, this._update(u5), r4.dispatch(new En2({ channels: [u5], context: { source: Ks.EVENT_CHANNEL_UPDATED }, isWebSocketEventComing: true })), [2, this];
        }
      });
    });
  }, c4.prototype.invite = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        return Jr(e4.every(function(e5) {
          return e5 instanceof es;
        })).throw(v.invalidParameters), [2, this.inviteWithUserIds(e4.map(function(e5) {
          return e5.userId;
        }))];
      });
    });
  }, c4.prototype.inviteWithUserIds = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n3, s6, r4, a5, i4, o3;
      return s(this, function(u5) {
        switch (u5.label) {
          case 0:
            return Jr(N("string", e4)).throw(v.invalidParameters), t7 = Ws.of(this._iid), n3 = t7.dispatcher, s6 = t7.requestQueue, r4 = t7.sessionManager, a5 = new Yn2({ channelUrl: this.url, userIds: e4 }), [4, s6.send(a5)];
          case 1:
            return i4 = u5.sent(), o3 = i4.as(Kn2).channel, this._update(o3), n3.dispatch(new En2({ channels: [o3], context: { source: Ks.EVENT_CHANNEL_INVITED, inviter: r4.currentUser, invitees: [] }, isWebSocketEventComing: true })), [2, this];
        }
      });
    });
  }, c4.prototype.join = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n3, s6, r4, a5, i4, o3;
      return s(this, function(u5) {
        switch (u5.label) {
          case 0:
            return Jr(w("string", e4, true)).throw(v.invalidParameters), t7 = Ws.of(this._iid), n3 = t7.dispatcher, s6 = t7.sdkState, r4 = t7.requestQueue, a5 = new qn2({ channelUrl: this.url, userId: s6.userId, accessCode: e4 }), [4, r4.send(a5)];
          case 1:
            return i4 = u5.sent(), (o3 = i4.as(zn2).channel).myMemberState = this.myMemberState = Wt2.JOINED, this._update(o3), n3.dispatch(new En2({ channels: [o3], context: { source: Ks.EVENT_CHANNEL_JOINED, users: [] }, isWebSocketEventComing: true })), [2, this];
        }
      });
    });
  }, c4.prototype.leave = function(e4) {
    return void 0 === e4 && (e4 = false), r(this, void 0, void 0, function() {
      var t7, n3, s6, r4;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return t7 = Ws.of(this._iid), n3 = t7.sdkState, s6 = t7.requestQueue, r4 = new Wn2({ channelUrl: this.url, userId: n3.userId, shouldRemoveOperatorStatus: e4 }), [4, s6.send(r4)];
          case 1:
            return a5.sent(), this.myMemberState = Wt2.NONE, [2];
        }
      });
    });
  }, c4.prototype.acceptInvitation = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n3, s6, r4, a5, i4, o3;
      return s(this, function(u5) {
        switch (u5.label) {
          case 0:
            return Jr(w("string", e4, true)).throw(v.invalidParameters), t7 = Ws.of(this._iid), n3 = t7.dispatcher, s6 = t7.sdkState, r4 = t7.requestQueue, a5 = new Hs2({ channelUrl: this.url, userId: s6.userId, accessCode: e4 }), [4, r4.send(a5)];
          case 1:
            return i4 = u5.sent(), (o3 = i4.as(Vs2).channel).myMemberState = this.myMemberState = Wt2.JOINED, this._update(o3), n3.dispatch(new En2({ channels: [o3], context: { source: Ks.EVENT_CHANNEL_ACCEPTED_INVITE }, isWebSocketEventComing: true })), [2, this];
        }
      });
    });
  }, c4.prototype.declineInvitation = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n3, s6;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return e4 = Ws.of(this._iid), t7 = e4.sdkState, n3 = e4.requestQueue, s6 = new Xn2({ channelUrl: this.url, userId: t7.userId }), [4, n3.send(s6)];
          case 1:
            return r4.sent(), this.myMemberState = Wt2.NONE, [2, this];
        }
      });
    });
  }, c4.prototype.sendUserMessage = function(e4) {
    var t7 = this, n3 = new Xt(), s6 = Ws.of(this._iid).dispatcher, r4 = S2.of(this._iid);
    return u4.prototype.sendUserMessage.call(this, e4).onPending(function(e5) {
      r4.completeCurrentAndProcessNextAutoResend(e5), n3._trigger(e5);
    }).onFailed(function(e5, t8) {
      t8 && r4.completeCurrentAndProcessNextAutoResend(t8), n3._triggerFailed(e5, t8);
    }).onSucceeded(function(e5) {
      r4.completeCurrentAndProcessNextAutoResend(e5), t7._updateLastMessage(e5), ps2.of(t7._iid).handlers.map(function(e6) {
        e6.onChannelChanged && e6.onChannelChanged(t7);
      }), s6.dispatch(new En2({ channels: [t7], context: { source: Ks.EVENT_MESSAGE_SENT } })), n3._trigger(e5);
    }), n3;
  }, c4.prototype.updateUserMessage = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var n3, s6, r4, a5, i4 = this;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return n3 = Ws.of(this._iid).dispatcher, [4, u4.prototype.updateUserMessage.call(this, e4, t7)];
          case 1:
            return s6 = o3.sent(), r4 = this._updateLastMessage(s6), a5 = false, this.lastPinnedMessage && this.lastPinnedMessage.messageId === s6.messageId && (this.lastPinnedMessage = s6, r4 = true, a5 = true), r4 && (ps2.of(this._iid).handlers.map(function(e5) {
              e5.onChannelChanged && e5.onChannelChanged(i4);
            }), n3.dispatch(new En2({ channels: [this], context: { source: a5 ? Ks.EVENT_PINNED_MESSAGE_UPDATED : Ks.EVENT_MESSAGE_UPDATED } }))), a5 && ps2.of(this._iid).handlers.map(function(e5) {
              e5.onPinnedMessageUpdated && e5.onPinnedMessageUpdated(i4);
            }), n3.dispatch(new $s({ messages: [s6], source: Ks.EVENT_MESSAGE_UPDATED })), [2, s6];
        }
      });
    });
  }, c4.prototype._autoResendUserMessage = function(e4) {
    var t7 = this, n3 = new Xt(), s6 = Ws.of(this._iid).dispatcher, r4 = S2.of(this._iid);
    return u4.prototype._autoResendUserMessage.call(this, e4).onPending(function(e5) {
      r4.completeCurrentAndProcessNextAutoResend(e5), n3._trigger(e5);
    }).onFailed(function(e5, t8) {
      r4.completeCurrentAndProcessNextAutoResend(t8), n3._triggerFailed(e5, t8);
    }).onSucceeded(function(e5) {
      var a5 = ps2.of(t7._iid);
      r4.completeCurrentAndProcessNextAutoResend(e5), t7._updateLastMessage(e5), a5.handlers.map(function(e6) {
        e6.onChannelChanged && e6.onChannelChanged(t7);
      }), s6.dispatch(new En2({ channels: [t7], context: { source: Ks.EVENT_MESSAGE_SENT } })), n3._trigger(e5);
    }), n3;
  }, c4.prototype.sendFileMessage = function(e4) {
    var t7 = this, n3 = new Xt(), s6 = Ws.of(this._iid).dispatcher, r4 = S2.of(this._iid);
    return u4.prototype.sendFileMessage.call(this, e4).onPending(function(e5) {
      r4.completeCurrentAndProcessNextAutoResend(e5), n3._trigger(e5);
    }).onFailed(function(e5, t8) {
      t8 && r4.completeCurrentAndProcessNextAutoResend(t8), n3._triggerFailed(e5, t8);
    }).onSucceeded(function(e5) {
      var a5 = ps2.of(t7._iid);
      r4.completeCurrentAndProcessNextAutoResend(e5), t7._updateLastMessage(e5), a5.handlers.map(function(e6) {
        e6.onChannelChanged && e6.onChannelChanged(t7);
      }), s6.dispatch(new En2({ channels: [t7], context: { source: Ks.EVENT_MESSAGE_SENT } })), n3._trigger(e5);
    }), n3;
  }, c4.prototype.sendMultipleFilesMessage = function(e4) {
    var t7 = this, n3 = new ii(), s6 = Ws.of(this._iid).dispatcher;
    return u4.prototype.sendMultipleFilesMessage.call(this, e4).onPending(function(e5) {
      n3._trigger(e5);
    }).onFailed(function(e5, t8) {
      n3._triggerFailed(e5, t8);
    }).onSucceeded(function(e5) {
      var r4 = ps2.of(t7._iid);
      t7._updateLastMessage(e5), r4.handlers.map(function(e6) {
        e6.onChannelChanged && e6.onChannelChanged(t7);
      }), s6.dispatch(new En2({ channels: [t7], context: { source: Ks.EVENT_MESSAGE_SENT } })), n3._trigger(e5);
    }).onFileUploaded(function(e5, t8, s7, r4) {
      n3._triggerOnFileUploaded(e5, t8, s7, r4);
    }), n3;
  }, c4.prototype.updateFileMessage = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var n3, s6, r4, a5, i4 = this;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return n3 = Ws.of(this._iid).dispatcher, [4, u4.prototype.updateFileMessage.call(this, e4, t7)];
          case 1:
            return s6 = o3.sent(), r4 = this._updateLastMessage(s6), a5 = false, this.lastPinnedMessage && this.lastPinnedMessage.messageId === s6.messageId && (this.lastPinnedMessage = s6, r4 = true, a5 = true), r4 && (ps2.of(this._iid).handlers.map(function(e5) {
              e5.onChannelChanged && e5.onChannelChanged(i4);
            }), n3.dispatch(new En2({ channels: [this], context: { source: a5 ? Ks.EVENT_PINNED_MESSAGE_UPDATED : Ks.EVENT_MESSAGE_UPDATED } }))), a5 && ps2.of(this._iid).handlers.map(function(e5) {
              e5.onPinnedMessageUpdated && e5.onPinnedMessageUpdated(i4);
            }), n3.dispatch(new $s({ messages: [s6], source: Ks.EVENT_MESSAGE_UPDATED })), [2, s6];
        }
      });
    });
  }, c4.prototype._autoResendFileMessage = function(e4) {
    var t7 = this, n3 = new Xt(), s6 = Ws.of(this._iid).dispatcher, r4 = S2.of(this._iid);
    return u4.prototype._autoResendFileMessage.call(this, e4).onPending(function(e5) {
      r4.completeCurrentAndProcessNextAutoResend(e5), n3._trigger(e5);
    }).onFailed(function(e5, t8) {
      r4.completeCurrentAndProcessNextAutoResend(t8), n3._triggerFailed(e5, t8);
    }).onSucceeded(function(e5) {
      var a5 = ps2.of(t7._iid);
      r4.completeCurrentAndProcessNextAutoResend(e5), t7._updateLastMessage(e5), a5.handlers.map(function(e6) {
        e6.onChannelChanged && e6.onChannelChanged(t7);
      }), s6.dispatch(new En2({ channels: [t7], context: { source: Ks.EVENT_MESSAGE_SENT } })), n3._trigger(e5);
    }), n3;
  }, c4.prototype.deleteMessage = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return [4, u4.prototype.deleteMessage.call(this, e4)];
          case 1:
            return t7.sent(), 0 === e4.messageId && e4 instanceof mt && Ws.of(this._iid).dispatcher.dispatch(new io({ reqId: e4.reqId, source: Ks.EVENT_MESSAGE_DELETED })), [2];
        }
      });
    });
  }, c4.prototype.hide = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n3, r4, a5, i4, o3, u5, c5;
      return s(this, function(d5) {
        switch (d5.label) {
          case 0:
            return t7 = n(n({}, $n2), e4), Jr(function(e5) {
              return w("boolean", e5.hidePreviousMessages, true) && w("boolean", e5.allowAutoUnhide, true);
            }(t7)).throw(v.invalidParameters), n3 = Ws.of(this._iid), r4 = n3.dispatcher, a5 = n3.sdkState, i4 = n3.requestQueue, o3 = new es3(n({ channelUrl: this.url, userId: a5.userId }, t7)), [4, i4.send(o3)];
          case 1:
            return u5 = d5.sent(), c5 = u5.as(ts3).messageOffsetTimestamp, this.hiddenState = t7.allowAutoUnhide ? tr2.HIDDEN_ALLOW_AUTO_UNHIDE : tr2.HIDDEN_PREVENT_AUTO_UNHIDE, t7.hidePreviousMessages && this._updateUnreadCount(0, 0), c5 && (this.messageOffsetTimestamp = c5), r4.dispatch(new En2({ channels: [this], context: { source: Ks.EVENT_CHANNEL_HIDDEN }, isWebSocketEventComing: true })), [2, this];
        }
      });
    });
  }, c4.prototype.unhide = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n3, s6;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return e4 = Ws.of(this._iid), t7 = e4.dispatcher, n3 = e4.requestQueue, s6 = new zs2({ channelUrl: this.url }), [4, n3.send(s6)];
          case 1:
            return r4.sent(), this.hiddenState = tr2.UNHIDDEN, t7.dispatch(new En2({ channels: [this], context: { source: Ks.EVENT_CHANNEL_UNHIDDEN }, isWebSocketEventComing: true })), [2, this];
        }
      });
    });
  }, c4.prototype.delete = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return e4 = Ws.of(this._iid).requestQueue, t7 = new qs3({ channelUrl: this.url }), [4, e4.send(t7)];
          case 1:
            return n3.sent(), [2];
        }
      });
    });
  }, c4.prototype.markAsRead = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n3, s6, r4, a5, i4, o3 = this;
      return s(this, function(u5) {
        switch (u5.label) {
          case 0:
            return e4 = Ws.of(this._iid), t7 = e4.sdkState, n3 = e4.dispatcher, s6 = e4.requestQueue, r4 = new He({ channelUrl: this.url }), [4, s6.send(r4)];
          case 1:
            return a5 = u5.sent(), i4 = a5.as(Ye2).readStatus, this._updateUnreadMemberState(t7.userId, i4.readAt), (this.unreadMessageCount > 0 || this.unreadMentionCount > 0) && (this._updateUnreadCount(0, 0), ps2.of(this._iid).handlers.map(function(e5) {
              e5.onChannelChanged && e5.onChannelChanged(o3);
            })), n3.dispatch(new En2({ channels: [this], context: { source: Ks.EVENT_CHANNEL_READ } })), [2];
        }
      });
    });
  }, c4.prototype.markAsDelivered = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n3, s6;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return e4 = Ws.of(this._iid), t7 = e4.sdkState, n3 = e4.requestQueue, s6 = new cs2({ channelUrl: this.url, userId: t7.userId }), [4, n3.send(s6)];
          case 1:
            return r4.sent(), [2];
        }
      });
    });
  }, c4.prototype.startTyping = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n3, s6, r4;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return e4 = Ws.of(this._iid), t7 = e4.requestQueue, n3 = e4.typingIndicatorThrottle, (s6 = (/* @__PURE__ */ new Date()).getTime()) - this._typingStarted >= n3 ? (this._typingStarted = s6, this._typingEnded = 0, r4 = new ss2({ channelUrl: this.url, time: this._typingStarted }), [4, t7.send(r4)]) : [3, 2];
          case 1:
            a5.sent(), a5.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, c4.prototype.endTyping = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n3, s6, r4;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return e4 = Ws.of(this._iid), t7 = e4.requestQueue, n3 = e4.typingIndicatorThrottle, (s6 = (/* @__PURE__ */ new Date()).getTime()) - this._typingEnded >= n3 ? (this._typingStarted = 0, this._typingEnded = s6, r4 = new as3({ channelUrl: this.url, time: this._typingStarted }), [4, t7.send(r4)]) : [3, 2];
          case 1:
            a5.sent(), a5.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, c4.prototype.createScheduledUserMessage = function(e4) {
    e4 = n(n({}, xs), e4), Jr(Ds(e4)).throw(v.invalidParameters);
    var t7 = new Xt();
    return this._createScheduledUserMessage(e4, t7), t7;
  }, c4.prototype.updateScheduledUserMessage = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var n3, r4, a5, i4;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return n3 = n(n({}, Js3), t7), Jr(function(e5) {
              return _n(e5) && w("number", e5.scheduledAt, true);
            }(n3)).throw(v.invalidParameters), r4 = Ws.of(this._iid).requestQueue, a5 = new $s3(n({ reqId: this._generateRequestId(), scheduledMessageId: e4, channelType: this.channelType, channelUrl: this.url }, n3)), [4, r4.send(a5)];
          case 1:
            return i4 = o3.sent(), [2, i4.as(Sr2).message];
        }
      });
    });
  }, c4.prototype.createScheduledFileMessage = function(e4) {
    var t7 = this;
    e4 = n(n({}, Ls), e4), Jr(Fs(e4)).throw(v.invalidParameters);
    var n3 = Date.now(), r4 = this._generateRequestId(), a5 = new Xt();
    return hs(hi).then(function() {
      var s6 = t7._createPendingScheduledFileMessage(e4, r4, n3);
      os(function() {
        return r(t7, void 0, void 0, function() {
          return s(this, function(e5) {
            return [2, a5._trigger(s6)];
          });
        });
      });
    }), k(e4.file) ? this._uploadFileAndUpdateParams(e4).then(function() {
      return t7._createScheduledFileMessage(e4, a5, r4, n3);
    }) : this._createScheduledFileMessage(e4, a5, r4, n3), a5;
  }, c4.prototype.updateScheduledFileMessage = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      var n3, r4, a5;
      return s(this, function(i4) {
        switch (i4.label) {
          case 0:
            return n3 = n(n({}, Ks3), t7), Jr(function(e5) {
              return vn(e5) && w("number", e5.scheduledAt, true) && (k(e5.file) || w("string", e5.fileUrl)) && w("string", e5.fileName, true) && w("string", e5.mimeType, true) && w("number", e5.fileSize, true) && (null === e5.thumbnailSizes || void 0 === e5.thumbnailSizes || e5.thumbnailSizes.every(function(e6) {
                return w("object", e6) && e6.maxWidth > 0 && e6.maxHeight > 0;
              }));
            }(n3)).throw(v.invalidParameters), k(n3.file) ? [4, this._uploadFileAndUpdateParams(n3)] : [3, 2];
          case 1:
            i4.sent(), i4.label = 2;
          case 2:
            return r4 = new Xs2(n({ reqId: this._generateRequestId(), scheduledMessageId: e4, channelType: this.channelType, channelUrl: this.url }, n3)), [4, Ws.of(this._iid).requestQueue.send(r4)];
          case 3:
            return a5 = i4.sent(), [2, a5.as(Zs3).message];
        }
      });
    });
  }, c4.prototype.cancelScheduledMessage = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return t7 = new nr2({ scheduledMessageId: e4, channelType: this.channelType, channelUrl: this.url }), [4, Ws.of(this._iid).requestQueue.send(t7)];
          case 1:
            return n3.sent(), [2];
        }
      });
    });
  }, c4.prototype.sendScheduledMessageNow = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return t7 = new sr2({ scheduledMessageId: e4, channelType: this.channelType, channelUrl: this.url }), [4, Ws.of(this._iid).requestQueue.send(t7)];
          case 1:
            return n3.sent(), [2];
        }
      });
    });
  }, c4.prototype.getMyPushTriggerOption = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n3, s6, r4, a5;
      return s(this, function(i4) {
        switch (i4.label) {
          case 0:
            return e4 = Ws.of(this._iid), t7 = e4.sdkState, n3 = e4.requestQueue, s6 = new ir2({ userId: t7.userId, channelUrl: this.url }), [4, n3.send(s6)];
          case 1:
            return r4 = i4.sent(), a5 = r4.as(or2).pushTriggerOption, this.myPushTriggerOption = a5, [2, a5];
        }
      });
    });
  }, c4.prototype.setMyPushTriggerOption = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n3, s6, a5, i4, o3, u5;
      return s(this, function(c5) {
        switch (c5.label) {
          case 0:
            return Jr(S(_, e4)).throw(v.invalidParameters), t7 = Ws.of(this._iid), n3 = t7.dispatcher, s6 = t7.sdkState, a5 = t7.requestQueue, i4 = new rr2({ userId: s6.userId, channelUrl: this.url, pushTriggerOption: e4 }), [4, a5.send(i4)];
          case 1:
            return o3 = c5.sent(), u5 = o3.as(ar2).pushTriggerOption, this.myPushTriggerOption = u5, n3.dispatch(new En2({ channels: [this], context: { source: Ks.EVENT_CHANNEL_UPDATED }, isWebSocketEventComing: true })), [2, u5];
        }
      });
    });
  }, c4.prototype.setMyCountPreference = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n3, s6, a5, i4, o3, u5;
      return s(this, function(c5) {
        switch (c5.label) {
          case 0:
            return Jr(S(er2, e4)).throw(v.invalidParameters), t7 = Ws.of(this._iid), n3 = t7.dispatcher, s6 = t7.sdkState, a5 = t7.requestQueue, i4 = new js2({ channelUrl: this.url, userId: s6.userId, countPreference: e4 }), [4, a5.send(i4)];
          case 1:
            return o3 = c5.sent(), u5 = o3.as(Ws3).countPreference, this.myCountPreference = u5, this._updateUnreadCount(this.unreadMessageCount, this.unreadMentionCount), n3.dispatch(new En2({ channels: [this], context: { source: Ks.EVENT_CHANNEL_UPDATED }, isWebSocketEventComing: true })), [2, u5];
        }
      });
    });
  }, c4.prototype.resetMyHistory = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n3, s6, r4, a5, i4;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return e4 = Ws.of(this._iid), t7 = e4.dispatcher, n3 = e4.requestQueue, s6 = e4.sdkState, r4 = new Qs2({ channelUrl: this.url, locale: s6.localeForChatbot }), [4, n3.send(r4)];
          case 1:
            return a5 = o3.sent(), i4 = a5.as(Ys2).messageOffsetTimestamp, this.messageOffsetTimestamp = i4, this.lastMessage && this.lastMessage.createdAt < i4 && (this.lastMessage = null), this._updateUnreadCount(0, 0), this.totalUnreadReplyCount = 0, t7.dispatch(new En2({ channels: [this], context: { source: Ks.EVENT_CHANNEL_RESET_HISTORY }, isWebSocketEventComing: true })), [2, this];
        }
      });
    });
  }, c4.prototype._uploadFileAndUpdateParams = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n3, s6, r4, a5, i4, o3, u5, c5, l3;
      return s(this, function(h4) {
        switch (h4.label) {
          case 0:
            return k(e4.file) ? (t7 = Ws.of(this._iid).requestQueue, n3 = new Pe({ file: e4.file, channelUrl: this.url, thumbnailSizes: e4.thumbnailSizes, requestId: this._generateRequestId() }), [4, t7.send(n3)]) : [3, 2];
          case 1:
            s6 = h4.sent(), r4 = s6.as(ke2), a5 = r4.url, i4 = r4.fileSize, o3 = void 0 === i4 ? e4.fileSize : i4, u5 = r4.thumbnails, c5 = r4.requireAuth, l3 = void 0 !== c5 && c5, e4.fileUrl = a5, e4.fileSize = o3, e4.requireAuth = l3, e4._thumbnails = u5, h4.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, c4.prototype.resendMessage = function(e4, t7) {
    var n3, s6 = this;
    if (Jr(e4 instanceof mt && !e4.scheduledInfo && e4.isResendable).throw(v.invalidParameters), e4.isUserMessage()) {
      var r4 = null !== (n3 = e4.messageParams) && void 0 !== n3 ? n3 : sn(e4), a5 = new Xt();
      return this._sendUserMessage(r4, di.RESEND, e4.reqId).onPending(function(e5) {
        a5._trigger(e5);
      }).onFailed(function(e5, t8) {
        a5._triggerFailed(e5, t8);
      }).onSucceeded(function(e5) {
        s6._tryUpdateLastMessageAndCallEvents(s6, e5), a5._trigger(e5);
      }), a5;
    }
    if (e4.isFileMessage()) {
      var i4 = this._validateFailedFileMessageHasFile(e4, t7);
      Jr(i4).throw(v.invalidParameters);
      r4 = fn(e4, t7);
      var o3 = new Xt();
      return this._sendFileMessage(r4, di.RESEND, e4.reqId).onPending(function(e5) {
        o3._trigger(e5);
      }).onFailed(function(e5, t8) {
        o3._triggerFailed(e5, t8);
      }).onSucceeded(function(e5) {
        s6._tryUpdateLastMessageAndCallEvents(s6, e5), o3._trigger(e5);
      }), o3;
    }
    if (e4.isMultipleFilesMessage()) {
      r4 = e4.messageParams;
      var u5 = new ii();
      return this._sendMultipleFilesMessage(r4, di.RESEND, e4.reqId).onPending(function(e5) {
        u5._trigger(e5);
      }).onFailed(function(e5, t8) {
        u5._triggerFailed(e5, t8);
      }).onSucceeded(function(e5) {
        s6._tryUpdateLastMessageAndCallEvents(s6, e5), u5._trigger(e5);
      }).onFileUploaded(function(e5, t8, n4, s7) {
        u5._triggerOnFileUploaded(e5, t8, n4, s7);
      }), u5;
    }
  }, c4.prototype.copyMessage = function(e4, t7) {
    var n3 = this;
    if (Jr(e4 instanceof pi && t7 instanceof mt && t7.sendingStatus === W.SUCCEEDED && this.url === t7.channelUrl && !t7.scheduledInfo).throw(v.invalidParameters), t7.isUserMessage()) {
      Jr(!t7.poll).throw(v.notSupportedError);
      var s6 = nn(t7), r4 = new Xt();
      return e4._sendUserMessage(s6).onPending(function(e5) {
        r4._trigger(e5);
      }).onFailed(function(e5, t8) {
        r4._triggerFailed(e5, t8);
      }).onSucceeded(function(t8) {
        e4.isGroupChannel() && n3._tryUpdateLastMessageAndCallEvents(e4, t8), r4._trigger(t8);
      }), r4;
    }
    if (t7.isFileMessage()) {
      s6 = dn(t7);
      var a5 = new Xt();
      return e4._sendFileMessage(s6).onPending(function(e5) {
        a5._trigger(e5);
      }).onFailed(function(e5, t8) {
        a5._triggerFailed(e5, t8);
      }).onSucceeded(function(t8) {
        e4.isGroupChannel() && n3._tryUpdateLastMessageAndCallEvents(e4, t8), a5._trigger(t8);
      }), a5;
    }
    if (t7.isMultipleFilesMessage()) {
      if (e4.isGroupChannel()) {
        s6 = ti(t7);
        var i4 = new ii();
        return e4._sendMultipleFilesMessage(s6, di.COPY).onPending(function(e5) {
          i4._trigger(e5);
        }).onFailed(function(e5, t8) {
          i4._triggerFailed(e5, t8);
        }).onSucceeded(function(t8) {
          n3._tryUpdateLastMessageAndCallEvents(e4, t8), i4._trigger(t8);
        }).onFileUploaded(function(e5, t8, n4, s7) {
          i4._triggerOnFileUploaded(e5, t8, n4, s7);
        }), i4;
      }
      throw v.channelTypeNotSupportedError;
    }
  }, c4;
}(pi);

// node_modules/@sendbird/chat/lib/__bundle-123134d8.js
var t2 = function() {
  this.onUserMuted = st, this.onUserUnmuted = st, this.onUserBanned = st, this.onUserUnbanned = st, this.onChannelChanged = st, this.onChannelDeleted = st, this.onChannelFrozen = st, this.onChannelUnfrozen = st, this.onOperatorUpdated = st, this.onChannelMemberCountChanged = st, this.onMetaDataCreated = st, this.onMetaDataUpdated = st, this.onMetaDataDeleted = st, this.onMetaCounterCreated = st, this.onMetaCounterUpdated = st, this.onMetaCounterDeleted = st, this.onMessageReceived = st, this.onMessageUpdated = st, this.onMessageDeleted = st, this.onMentionReceived = st, this.onReactionUpdated = st, this.onThreadInfoUpdated = st;
};

// node_modules/@sendbird/chat/groupChannel.js
var De3;
var Pe2 = {};
var He2 = function() {
  function t7(t8) {
    var n3 = t8._iid, a5 = t8.limit, r4 = void 0 === a5 ? 100 : a5, o3 = this;
    this.ref = 0, this._iid = n3, this._limit = r4;
    var l3, u4 = Ws.of(this._iid), c4 = u4.sdkState, d5 = u4.dispatcher, p4 = u4.logger, m5 = u4.cacheContext, C3 = u4.statManager;
    this._metadataKey = (l3 = c4.userId, "sendbird:".concat(l3, "@groupchannel/sync.meta"));
    var b6 = function(e4) {
      return "sendbird:".concat(e4, "@groupchannel/sync");
    }(c4.userId);
    this._sync = new Es2(b6, function() {
      return r(o3, void 0, void 0, function() {
        var e4, t9, n4, a6, r5, i4, o4, l4, u5, h4, d6, f4, b7, S6, M5, w4;
        return s(this, function(s6) {
          switch (s6.label) {
            case 0:
              return e4 = { hasNext: true, nextToken: "" }, [4, this.loadMetadata()];
            case 1:
              if (s6.sent(), p4.debug("channel background sync from", null === (u5 = this._metadata) || void 0 === u5 ? void 0 : u5.token), null === (h4 = this._metadata) || void 0 === h4 ? void 0 : h4.completed) return [3, 14];
              t9 = { includeEmpty: true, includeMetaData: true, order: E.CHRONOLOGICAL }, s6.label = 2;
            case 2:
              if (s6.trys.push([2, 9, 12, 13]), t9.order !== E.LATEST_LAST_MESSAGE) return [3, 6];
              s6.label = 3;
            case 3:
              return s6.trys.push([3, 5, , 6]), [4, m5.preference.get(xr(c4.appId))];
            case 4:
              return n4 = s6.sent(), t9.includeChatNotification = Boolean(n4), [3, 6];
            case 5:
              return s6.sent(), t9.includeChatNotification = false, [3, 6];
            case 6:
              return [4, ps2.of(this._iid).getMyGroupChannels(null !== (f4 = null === (d6 = this._metadata) || void 0 === d6 ? void 0 : d6.token) && void 0 !== f4 ? f4 : "", t9, this._limit, Ks.SYNC_CHANNEL_BACKGROUND)];
            case 7:
              return a6 = s6.sent(), r5 = a6.channels, i4 = a6.token, e4.hasNext = r5.length >= this._limit && !!i4, e4.nextToken = i4, this._metadata && (this._metadata.token = i4, (l4 = this._metadata.range).extends.apply(l4, c([], a(r5.map(function(e5) {
                return e5.createdAt;
              })), false)), this._metadata.completed = !e4.hasNext), p4.debug("channel background sync progress", e4), [4, this.saveMetadata()];
            case 8:
              return s6.sent(), [3, 13];
            case 9:
              return o4 = s6.sent(), p4.debug("channel background sync error", o4), o4 instanceof v && o4.isInvalidTokenError ? [4, this.clearMetaData()] : [3, 11];
            case 10:
              s6.sent(), s6.label = 11;
            case 11:
              throw o4;
            case 12:
              return C3.put(new Ze({ type: Le.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: "", measured_on: "channel_back_sync", event: "cache_fetch", max_db_size: null !== (S6 = null === (b7 = m5.localCacheConfig) || void 0 === b7 ? void 0 : b7.maxSize) && void 0 !== S6 ? S6 : 0, use_local_cache: m5.localCacheEnabled, starting_point: 0, message_init_policy: null !== (w4 = null === (M5 = t9.order) || void 0 === M5 ? void 0 : M5.toString()) && void 0 !== w4 ? w4 : "", collection_id: c4.userId } })), [7];
            case 13:
              return [3, 15];
            case 14:
              e4.hasNext = false, e4.nextToken = "", s6.label = 15;
            case 15:
              return [2, e4];
          }
        });
      });
    }), this._connectionEventContext = d5.on(function(e4) {
      if (e4 instanceof kr) if (e4.stateType === Sr.CONNECTED) o3.resume();
      else o3.pause();
    });
  }
  return t7.of = function(e4) {
    return Pe2[e4] || (Pe2[e4] = new t7({ _iid: e4 })), Pe2[e4].ref++, Pe2[e4];
  }, t7.clear = function(e4) {
    Pe2[e4] && (Pe2[e4].close(), delete Pe2[e4]);
  }, Object.defineProperty(t7.prototype, "range", { get: function() {
    var e4, t8;
    return null !== (t8 = null === (e4 = this._metadata) || void 0 === e4 ? void 0 : e4.range) && void 0 !== t8 ? t8 : new ds2({});
  }, enumerable: false, configurable: true }), Object.defineProperty(t7.prototype, "completed", { get: function() {
    var e4;
    return !!(null === (e4 = this._metadata) || void 0 === e4 ? void 0 : e4.completed);
  }, enumerable: false, configurable: true }), t7.prototype.loadMetadata = function() {
    return r(this, void 0, void 0, function() {
      var e4;
      return s(this, function(t8) {
        switch (t8.label) {
          case 0:
            return this._metadata ? [3, 2] : [4, Ws.of(this._iid).cacheContext.preference.get(this._metadataKey)];
          case 1:
            e4 = t8.sent(), this._metadata = { token: e4 ? e4.token : "", range: new ds2(e4 ? e4.range : { top: Number.MAX_SAFE_INTEGER, bottom: 0 }), completed: !!e4 && e4.completed }, t8.label = 2;
          case 2:
            return [2, this._metadata];
        }
      });
    });
  }, t7.prototype.saveMetadata = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        switch (e4.label) {
          case 0:
            return this._metadata ? [4, Ws.of(this._iid).cacheContext.preference.set(this._metadataKey, this._metadata)] : [3, 2];
          case 1:
            return e4.sent(), [2, true];
          case 2:
            return [2, false];
        }
      });
    });
  }, t7.prototype.clearMetaData = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, Ws.of(this._iid).cacheContext.preference.remove(this._metadataKey)];
          case 1:
            return e4.sent(), this._metadata = void 0, [2];
        }
      });
    });
  }, t7.prototype.resume = function() {
    var e4, t8, n3 = Ws.of(this._iid), a5 = n3.logger;
    n3.sessionManager.session.hasSession && (a5.debug("channel background sync resume()"), this._sync.start(null !== (t8 = null === (e4 = this._metadata) || void 0 === e4 ? void 0 : e4.token) && void 0 !== t8 ? t8 : ""));
  }, t7.prototype.pause = function() {
    Ws.of(this._iid).logger.debug("channel background sync stop()"), this._sync.stop();
  }, t7.prototype.close = function() {
    this.ref--, this.ref <= 0 && (this.ref = 0, this.pause(), this._connectionEventContext.close(), delete Pe2[this._iid]);
  }, t7;
}();
var Re2 = {};
var Ve2 = function() {
  function t7(t8) {
    var n3 = t8._iid, a5 = this;
    this.ref = 0, this._iid = n3;
    var r4, o3 = Ws.of(this._iid), l3 = o3.logger, u4 = o3.sdkState, c4 = o3.dispatcher, d5 = o3.cacheContext, p4 = o3.statManager;
    this._metadataKey = (r4 = u4.userId, "sendbird:".concat(r4, "@groupchannel/changelogs.meta")), this._subscribers = new te();
    var m5 = function(e4) {
      return "sendbird:".concat(e4, "@groupchannel/changelogs");
    }(u4.userId);
    this._sync = new Es2(m5, function() {
      return r(a5, void 0, void 0, function() {
        var e4, t9, n4, a6, r5, i4, o4, c5, h4, f4, m6, y6;
        return s(this, function(s6) {
          switch (s6.label) {
            case 0:
              return e4 = { hasNext: true, nextToken: 0 }, [4, this.loadMetadata()];
            case 1:
              s6.sent(), l3.debug("channel changelog sync from", null === (f4 = this._metadata) || void 0 === f4 ? void 0 : f4.token), s6.label = 2;
            case 2:
              s6.trys.push([2, 9, , 12]), t9 = { includeEmpty: true, includeMetaData: true }, s6.label = 3;
            case 3:
              return s6.trys.push([3, 5, , 6]), [4, d5.preference.get(xr(u4.appId))];
            case 4:
              return n4 = s6.sent(), t9.includeChatNotification = Boolean(n4), [3, 6];
            case 5:
              return s6.sent(), t9.includeChatNotification = false, [3, 6];
            case 6:
              return [4, ps2.of(this._iid).getMyGroupChannelChangeLogs(null !== (y6 = null === (m6 = this._metadata) || void 0 === m6 ? void 0 : m6.token) && void 0 !== y6 ? y6 : "", t9, Ks.SYNC_CHANNEL_CHANGELOGS)];
            case 7:
              return a6 = s6.sent(), r5 = a6.updatedChannels, i4 = a6.deletedChannelUrls, o4 = a6.hasMore, c5 = a6.token, this._subscribers.dispatch("progress", { updatedChannels: r5, deletedChannelUrls: i4, hasMore: o4, token: c5 }), e4.hasNext = o4, e4.nextToken = c5, this._metadata && (this._metadata.token = c5), l3.debug("channel changelog sync progress", e4), [4, this.saveMetadata()];
            case 8:
              return s6.sent(), d5.localCacheEnabled && p4.put(new Ze({ type: Le.FEATURE_LOCALCACHE_EVENT, ts: Date.now(), data: { channel_url: "", measured_on: "channel_change_log_sync", event: r5.length > 0 || i4.length > 0 ? "cache_miss" : "cache_hit", max_db_size: r5.length, use_local_cache: d5.localCacheEnabled, starting_point: 0, message_init_policy: i4.length.toString(), collection_id: u4.userId } })), [3, 12];
            case 9:
              return h4 = s6.sent(), l3.debug("channel changelog sync error", h4), h4 instanceof v && h4.isInvalidTokenError ? [4, this.clearMetadata()] : [3, 11];
            case 10:
              s6.sent(), s6.label = 11;
            case 11:
              throw h4;
            case 12:
              return [2, e4];
          }
        });
      });
    }), this._sync.on("stop", function() {
      a5._subscribers.dispatch("pause");
    }), this._connectionEventContext = c4.on(function(e4) {
      if (e4 instanceof kr) if (e4.stateType === Sr.CONNECTED) a5.resume();
      else a5.pause();
    });
  }
  return t7.of = function(e4) {
    return Re2[e4] || (Re2[e4] = new t7({ _iid: e4 })), Re2[e4].ref++, Re2[e4];
  }, t7.clear = function(e4) {
    Re2[e4] && (Re2[e4].close(), delete Re2[e4]);
  }, Object.defineProperty(t7.prototype, "isRunning", { get: function() {
    return this._sync.isRunning;
  }, enumerable: false, configurable: true }), t7.prototype.loadMetadata = function() {
    return r(this, void 0, void 0, function() {
      var e4, t8, n3, a5;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return this._metadata ? [3, 2] : (e4 = Ws.of(this._iid), t8 = e4.cacheContext, n3 = e4.firstConnectedAt, [4, t8.preference.get(this._metadataKey)]);
          case 1:
            a5 = r4.sent(), this._metadata = { token: a5 ? a5.token : n3 }, r4.label = 2;
          case 2:
            return [2, this._metadata];
        }
      });
    });
  }, t7.prototype.saveMetadata = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        switch (e4.label) {
          case 0:
            return this._metadata ? [4, Ws.of(this._iid).cacheContext.preference.set(this._metadataKey, this._metadata)] : [3, 2];
          case 1:
            return e4.sent(), [2, true];
          case 2:
            return [2, false];
        }
      });
    });
  }, t7.prototype.clearMetadata = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, Ws.of(this._iid).cacheContext.preference.remove(this._metadataKey)];
          case 1:
            return e4.sent(), this._metadata = void 0, [2];
        }
      });
    });
  }, t7.prototype.on = function(e4, t8) {
    return this._subscribers.on(e4, t8);
  }, t7.prototype.resume = function() {
    Ws.of(this._iid).sessionManager.session.hasSession && this._sync.start(0);
  }, t7.prototype.pause = function() {
    this._sync.stop();
  }, t7.prototype.close = function() {
    this.ref--, this.ref <= 0 && (this.ref = 0, this.pause(), this._connectionEventContext.close(), delete Re2[this._iid]);
  }, t7;
}();
var Ke2 = function(e4, t7) {
  return e4.findIndex(function(e5) {
    return e5.isIdentical(t7);
  });
};
var ze2 = function(e4, t7, n3) {
  if (e4.length > 0) {
    for (var a5 = Ke2(e4, t7), r4 = 0, i4 = e4.length - 1, s6 = Math.floor((r4 + i4) / 2); r4 < i4; ) {
      var o3 = Qe3(e4[s6], t7, n3);
      if (o3 > 0) i4 = s6, s6 = Math.floor((r4 + i4) / 2);
      else {
        if (!(o3 < 0)) return { place: s6, oldPosition: a5 };
        r4 = s6 + 1, s6 = Math.floor((r4 + i4) / 2);
      }
    }
    return { place: Qe3(e4[s6], t7, n3) >= 0 ? s6 : s6 + 1, oldPosition: a5 };
  }
  return { place: e4.length, oldPosition: -1 };
};
var Qe3 = function(e4, t7, n3) {
  switch (n3) {
    case E.LATEST_LAST_MESSAGE:
      return e4.lastMessage && t7.lastMessage ? 0 === (a5 = t7.lastMessage.createdAt - e4.lastMessage.createdAt) ? t7.createdAt - e4.createdAt : a5 : e4.lastMessage ? -1 : t7.lastMessage ? 1 : t7.createdAt - e4.createdAt;
    case E.CHRONOLOGICAL:
      return t7.createdAt - e4.createdAt;
    case E.CHANNEL_NAME_ALPHABETICAL:
      var a5;
      return 0 === (a5 = e4.name.localeCompare(t7.name)) ? e4.createdAt - t7.createdAt : a5;
    default:
      return 0;
  }
};
var je2 = function() {
  function t7(t8, n3) {
    var a5 = n3.filter, r4 = void 0 === a5 ? new rn2() : a5, o3 = n3.order, l3 = void 0 === o3 ? E.LATEST_LAST_MESSAGE : o3, u4 = n3.limit, c4 = void 0 === u4 ? Br : u4, d5 = n3.includeChangesOnInitialLoad, p4 = void 0 !== d5 && d5, _2 = this;
    this.channels = [], this._isInitialized = false, this._iid = t8, this._key = "gcc-".concat($()), this._isDisposed = false, this._isGetRemoteChannelsSucceeded = true, this._includeChangesOnInitialLoad = p4, this.filter = r4, this.order = l3, this._hasMore = true, this._token = "", this._limit = c4;
    var v5 = Ws.of(this._iid), m5 = v5.sdkState, g4 = v5.cacheContext, y6 = v5.dispatcher;
    g4.localCacheEnabled && (this._backgroundSync = He2.of(t8), this._backgroundSync.resume()), this._changelogSync = Ve2.of(t8), this._changelogSync.resume(), ps2.of(this._iid).subscribeChannelEvent(this._key, { onUpdate: function(e4, t9) {
      var n4 = t9.source;
      if (gn2(n4)) {
        var a6 = e4.filter(function(e5) {
          return _2.filter.match(e5, m5.userId);
        }), r5 = e4.filter(function(e5) {
          return !_2.filter.match(e5, m5.userId);
        }).map(function(e5) {
          return e5.url;
        });
        a6.length > 0 && _2._addChannelsToView(a6, t9), r5.length > 0 && _2._removeChannelsFromView(r5, t9);
      }
    }, onRemove: function(e4, t9) {
      _2._removeChannelsFromView(e4, t9);
    } }), y6.on(function(t9) {
      t9 instanceof kr && (t9.stateType === Sr.CONNECTED ? _2._isGetRemoteChannelsSucceeded || r(_2, void 0, void 0, function() {
        return s(this, function(e4) {
          switch (e4.label) {
            case 0:
              return [4, this._revokeLoadMore()];
            case 1:
              return e4.sent(), [2];
          }
        });
      }) : t9.stateType === Sr.LOGOUT && _2.dispose());
    });
  }
  return Object.defineProperty(t7.prototype, "hasMore", { get: function() {
    return !this._isDisposed && this._hasMore;
  }, enumerable: false, configurable: true }), t7.prototype.setGroupChannelCollectionHandler = function(e4) {
    this._handler = e4;
  }, t7.prototype._addChannelsToView = function(t8, n3, a5) {
    var r4, i4, o3, l3, u4 = this;
    void 0 === a5 && (a5 = false);
    var c4 = [], h4 = [], d5 = [];
    try {
      for (var p4 = o(t8), f4 = p4.next(); !f4.done; f4 = p4.next()) {
        var _2 = f4.value, v5 = Ke2(this.channels, _2);
        v5 >= 0 && this.channels.splice(v5, 1);
        var m5 = ze2(this.channels, _2, this.order).place;
        if (v5 < 0) m5 === this.channels.length ? !a5 && this._hasMore || (c4.push(_2), this.channels.push(_2)) : (c4.push(_2), this.channels.splice(m5, 0, _2));
        else switch (n3.source) {
          case Ks.EVENT_CHANNEL_UPDATED:
          case Ks.EVENT_MESSAGE_RECEIVED:
          case Ks.SYNC_CHANNEL_CHANGELOGS:
          case Ks.EVENT_MESSAGE_SENT:
            this.order === E.CHANNEL_NAME_ALPHABETICAL && this._hasMore && m5 === this.channels.length ? d5.push(_2) : (this.channels.splice(m5, 0, _2), h4.push(_2));
            break;
          default:
            this.channels.splice(m5, 0, _2), h4.push(_2);
        }
      }
    } catch (e4) {
      r4 = { error: e4 };
    } finally {
      try {
        f4 && !f4.done && (i4 = p4.return) && i4.call(p4);
      } finally {
        if (r4) throw r4.error;
      }
    }
    if (d5.length > 0) try {
      for (var g4 = o(d5), y6 = g4.next(); !y6.done; y6 = g4.next()) {
        _2 = y6.value;
        var C3 = Ke2(this.channels, _2);
        -1 !== C3 && this.channels.splice(C3, 1);
      }
    } catch (e4) {
      o3 = { error: e4 };
    } finally {
      try {
        y6 && !y6.done && (l3 = g4.return) && l3.call(g4);
      } finally {
        if (o3) throw o3.error;
      }
    }
    gn2(n3.source) && os(function() {
      return r(u4, void 0, void 0, function() {
        var e4, t9, a6;
        return s(this, function(r5) {
          return c4.length > 0 && (null === (e4 = this._handler) || void 0 === e4 ? void 0 : e4.onChannelsAdded) && this._handler.onChannelsAdded(n3, c4), h4.length > 0 && (null === (t9 = this._handler) || void 0 === t9 ? void 0 : t9.onChannelsUpdated) && this._handler.onChannelsUpdated(n3, h4), d5.length > 0 && (null === (a6 = this._handler) || void 0 === a6 ? void 0 : a6.onChannelsDeleted) && this._handler.onChannelsDeleted(n3, d5.map(function(e5) {
            return e5.url;
          })), [2];
        });
      });
    });
  }, t7.prototype._removeChannelsFromView = function(t8, n3) {
    var a5, r4, i4 = this, o3 = [], l3 = function(e4) {
      var t9 = u4.channels.findIndex(function(t10) {
        return t10.url === e4;
      });
      t9 >= 0 && (o3.push(u4.channels[t9].url), u4.channels.splice(t9, 1));
    }, u4 = this;
    try {
      for (var c4 = o(t8), h4 = c4.next(); !h4.done; h4 = c4.next()) {
        l3(h4.value);
      }
    } catch (e4) {
      a5 = { error: e4 };
    } finally {
      try {
        h4 && !h4.done && (r4 = c4.return) && r4.call(c4);
      } finally {
        if (a5) throw a5.error;
      }
    }
    return gn2(n3.source) && o3.length > 0 && os(function() {
      return r(i4, void 0, void 0, function() {
        var e4;
        return s(this, function(t9) {
          return (null === (e4 = this._handler) || void 0 === e4 ? void 0 : e4.onChannelsDeleted) && this._handler.onChannelsDeleted(n3, o3), [2];
        });
      });
    }), o3;
  }, t7.prototype._getLocalChannels = function() {
    return r(this, void 0, void 0, function() {
      var e4, t8;
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return e4 = ps2.of(this._iid), t8 = this.channels.length > 0 ? function(e5, t9) {
              var n4, a5, r4, i4;
              switch (t9) {
                case E.LATEST_LAST_MESSAGE:
                  return null !== (a5 = null === (n4 = e5.lastMessage) || void 0 === n4 ? void 0 : n4.createdAt) && void 0 !== a5 ? a5 : e5.createdAt;
                case E.CHRONOLOGICAL:
                  return e5.createdAt;
                case E.CHANNEL_NAME_ALPHABETICAL:
                  return e5.name;
                default:
                  return null !== (i4 = null === (r4 = e5.lastMessage) || void 0 === r4 ? void 0 : r4.createdAt) && void 0 !== i4 ? i4 : e5.createdAt;
              }
            }(this.channels[this.channels.length - 1], this.order) : null, [4, e4.getChannelsFromCache(t8, this.filter, this.order, this._limit, t8 ? this.channels[this.channels.length - 1].url : void 0)];
          case 1:
            return [2, n3.sent()];
        }
      });
    });
  }, t7.prototype._getRemoteChannels = function() {
    return r(this, void 0, void 0, function() {
      var e4, t8, n3;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return [4, ps2.of(this._iid).getMyGroupChannels(this._token, se(n(n({}, this.filter), { userIdsFilter: this.filter.userIdsFilter, searchFilter: this.filter.searchFilter, order: this.order })), this._limit)];
          case 1:
            return e4 = a5.sent(), t8 = e4.channels, n3 = e4.token, this._token = n3, this._hasMore = !!n3, [2, t8];
        }
      });
    });
  }, t7.prototype._revokeLoadMore = function() {
    return r(this, void 0, void 0, function() {
      var e4;
      return s(this, function(t8) {
        switch (t8.label) {
          case 0:
            if (this._isDisposed) return [2];
            t8.label = 1;
          case 1:
            return t8.trys.push([1, 3, , 4]), [4, this._getRemoteChannels()];
          case 2:
            return e4 = t8.sent(), this._isGetRemoteChannelsSucceeded = true, this._addChannelsToView(e4, { source: Ks.REQUEST_CHANNEL }, true), [3, 4];
          case 3:
            return t8.sent(), this._isGetRemoteChannelsSucceeded = false, [3, 4];
          case 4:
            return [2];
        }
      });
    });
  }, t7.prototype.loadMore = function() {
    var t8;
    return r(this, void 0, void 0, function() {
      var n3, a5, r4, o3, l3, u4, c4, h4, d5, p4, f4, _2, m5, y6, C3, b6, S6, M5, E4, w4 = this;
      return s(this, function(L5) {
        switch (L5.label) {
          case 0:
            if (this._isDisposed) throw new v({ code: u.COLLECTION_DISPOSED, message: "Collection has been disposed." });
            return n3 = null, this._includeChangesOnInitialLoad && 0 === this.channels.length && this._changelogSync.isRunning ? [4, new Promise(function(e4) {
              w4._changelogSyncSubscriberContext = w4._changelogSync.on("progress", function(t9) {
                return e4(t9);
              }).on("pause", function() {
                return e4(null);
              });
            })] : [3, 2];
          case 1:
            n3 = L5.sent(), null === (t8 = this._changelogSyncSubscriberContext) || void 0 === t8 || t8.close(), L5.label = 2;
          case 2:
            return a5 = Ws.of(this._iid), r4 = a5.cacheContext, o3 = a5.connectionManager, l3 = a5.statManager, this._isInitialized ? [3, 5] : (this._isInitialized = true, r4.localCacheEnabled ? [4, this._backgroundSync.loadMetadata()] : [3, 4]);
          case 3:
            L5.sent(), L5.label = 4;
          case 4:
            l3.put(new qs({ type: Le.FEATURE_LOCALCACHE, data: { use_local_cache: r4.localCacheEnabled, collection_interface: { group_channel: true } } })), L5.label = 5;
          case 5:
            return u4 = [], this._hasMore ? !r4.localCacheEnabled || o3.isConnected && !this._backgroundSync.completed ? [3, 7] : [4, as(function() {
              return r(w4, void 0, void 0, function() {
                return s(this, function(e4) {
                  switch (e4.label) {
                    case 0:
                      return [4, this._getLocalChannels()];
                    case 1:
                      return u4 = e4.sent(), [2];
                  }
                });
              });
            })] : [3, 11];
          case 6:
            return L5.sent(), this._hasMore = u4.length >= this._limit, [3, 10];
          case 7:
            return L5.trys.push([7, 9, , 10]), [4, this._getRemoteChannels()];
          case 8:
            return u4 = L5.sent(), this._isGetRemoteChannelsSucceeded = true, [3, 10];
          case 9:
            return L5.sent(), this._isGetRemoteChannelsSucceeded = false, [3, 10];
          case 10:
            this._addChannelsToView(u4, { source: Ks.REQUEST_CHANNEL }, true), L5.label = 11;
          case 11:
            if (n3) {
              try {
                for (c4 = o(n3.updatedChannels), h4 = c4.next(); !h4.done; h4 = c4.next()) d5 = h4.value, (C3 = Ke2(u4, d5)) >= 0 ? u4[C3] = d5 : (p4 = ze2(u4, d5, this.order).place, u4.splice(p4, 0, d5));
              } catch (e4) {
                b6 = { error: e4 };
              } finally {
                try {
                  h4 && !h4.done && (S6 = c4.return) && S6.call(c4);
                } finally {
                  if (b6) throw b6.error;
                }
              }
              f4 = u4.map(function(e4) {
                return e4.url;
              });
              try {
                for (_2 = o(n3.deletedChannelUrls), m5 = _2.next(); !m5.done; m5 = _2.next()) y6 = m5.value, (C3 = f4.indexOf(y6)) >= 0 && (u4.splice(C3, 1), f4.splice(C3, 1));
              } catch (e4) {
                M5 = { error: e4 };
              } finally {
                try {
                  m5 && !m5.done && (E4 = _2.return) && E4.call(_2);
                } finally {
                  if (M5) throw M5.error;
                }
              }
            }
            return [2, u4];
        }
      });
    });
  }, t7.prototype.dispose = function() {
    var e4, t8, n3;
    this._isDisposed || (this._isDisposed = true, this.channels.length > 0 && this.channels.splice(0, this.channels.length), null === (e4 = this._backgroundSync) || void 0 === e4 || e4.close(), null === (t8 = this._changelogSync) || void 0 === t8 || t8.close(), null === (n3 = this._changelogSyncSubscriberContext) || void 0 === n3 || n3.close(), ps2.of(this._iid).unsubscribeChannelEvent(this._key));
  }, t7;
}();
var We3 = function(e4) {
  function t7(t8) {
    var n3 = this, a5 = t8.token, r4 = t8.limit, i4 = t8.order, s6 = t8.includeEmpty, o3 = t8.membershipFilter, l3 = t8.channelNameContainsFilter, u4 = t8.channelUrlsFilter, c4 = t8.customTypesFilter, h4 = t8.customTypeStartsWithFilter, d5 = t8.superChannelFilter, p4 = t8.metadataOrderKeyFilter, f4 = t8.metadataKey, _2 = t8.metadataValues, v5 = t8.metadataValueStartsWith, m5 = t8.includeFrozen, g4 = t8.includeMetaData;
    return (n3 = e4.call(this) || this).method = oe.GET, n3.path = he, n3.params = re(se({ token: a5, limit: r4, order: i4, show_member: true, show_read_receipt: true, show_delivery_receipt: true, show_empty: s6, public_mode: Qt2.PUBLIC, public_membership_mode: o3, name_contains: l3, channel_urls: u4, custom_types: c4, custom_type_startswith: h4, super_mode: d5, metadata_order_key: p4, metadata_key: f4, metadata_values: _2, metadata_value_startswith: v5, show_frozen: m5, show_metadata: g4 })), n3;
  }
  return t(t7, e4), t7;
}(xe);
var Be3 = function(e4) {
  function t7(t8, n3) {
    var a5 = e4.call(this, t8, n3) || this;
    a5.channels = [];
    var r4 = n3.next, i4 = n3.channels, s6 = n3.ts;
    return a5.token = r4, i4 && i4.length > 0 && (a5.channels = i4.map(function(e5) {
      return e5.ts = s6, new ur2(t8, e5);
    })), a5.ts = "number" == typeof s6 ? s6 : 0, a5;
  }
  return t(t7, e4), t7;
}(Ue);
!function(e4) {
  e4.ALL = "all", e4.JOINED = "joined";
}(De3 || (De3 = {}));
var qe3 = function(t7) {
  function n3(e4, n4) {
    var a5, r4, i4, s6, o3, l3, u4, c4, h4, d5, p4, f4, _2, v5, m5 = this;
    return (m5 = t7.call(this, e4, n4) || this).includeEmpty = false, m5.includeFrozen = true, m5.includeMetaData = true, m5.channelUrlsFilter = null, m5.customTypesFilter = null, m5.customTypeStartsWithFilter = null, m5.channelNameContainsFilter = null, m5.membershipFilter = De3.ALL, m5.superChannelFilter = Kt2.ALL, m5.metadataKey = null, m5.metadataValues = null, m5.metadataOrderKeyFilter = null, m5.metadataValueStartsWith = null, m5.order = p2.CHRONOLOGICAL, m5.includeEmpty = null !== (a5 = n4.includeEmpty) && void 0 !== a5 && a5, m5.includeFrozen = null === (r4 = n4.includeFrozen) || void 0 === r4 || r4, m5.includeMetaData = null === (i4 = n4.includeMetaData) || void 0 === i4 || i4, m5.channelUrlsFilter = null !== (s6 = n4.channelUrlsFilter) && void 0 !== s6 ? s6 : null, m5.customTypesFilter = null !== (o3 = n4.customTypesFilter) && void 0 !== o3 ? o3 : null, m5.customTypeStartsWithFilter = null !== (l3 = n4.customTypeStartsWithFilter) && void 0 !== l3 ? l3 : null, m5.channelNameContainsFilter = null !== (u4 = n4.channelNameContainsFilter) && void 0 !== u4 ? u4 : null, m5.membershipFilter = null !== (c4 = n4.membershipFilter) && void 0 !== c4 ? c4 : De3.ALL, m5.superChannelFilter = null !== (h4 = n4.superChannelFilter) && void 0 !== h4 ? h4 : Kt2.ALL, m5.metadataKey = null !== (d5 = n4.metadataKey) && void 0 !== d5 ? d5 : null, m5.metadataValues = null !== (p4 = n4.metadataValues) && void 0 !== p4 ? p4 : null, m5.metadataOrderKeyFilter = null !== (f4 = n4.metadataOrderKeyFilter) && void 0 !== f4 ? f4 : null, m5.metadataValueStartsWith = null !== (_2 = n4.metadataValueStartsWith) && void 0 !== _2 ? _2 : null, m5.order = null !== (v5 = n4.order) && void 0 !== v5 ? v5 : p2.CHRONOLOGICAL, m5;
  }
  return t(n3, t7), n3.prototype._validate = function() {
    return t7.prototype._validate.call(this) && w("boolean", this.includeEmpty) && w("boolean", this.includeFrozen) && w("boolean", this.includeMetaData) && w("string", this.channelNameContainsFilter, true) && N("string", this.channelUrlsFilter, true) && N("string", this.customTypesFilter, true) && w("string", this.customTypeStartsWithFilter, true) && S(De3, this.membershipFilter) && S(Kt2, this.superChannelFilter) && S(p2, this.order) && w("string", this.metadataOrderKeyFilter, true) && w("string", this.metadataKey, true) && N("string", this.metadataValues, true) && w("string", this.metadataValueStartsWith, true);
  }, n3.prototype.next = function() {
    return r(this, void 0, void 0, function() {
      var e4, t8, n4, a5, r4, o3, l3;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : (e4 = [], this._hasNext ? (this._isLoading = true, t8 = Ws.of(this._iid).requestQueue, n4 = new We3(se(n(n({}, this), { token: this._token }))), [4, t8.send(n4)]) : [3, 2]) : [3, 5];
          case 1:
            return a5 = s6.sent(), r4 = a5.as(Be3), o3 = r4.channels, l3 = r4.token, this._token = l3, this._hasNext = !!l3, this._isLoading = false, [2, o3];
          case 2:
            return [2, e4];
          case 3:
            throw v.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw v.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, n3;
}(_o);
var Ye3 = function(e4) {
  function t7(t8) {
    void 0 === t8 && (t8 = {});
    var n3 = e4.call(this) || this;
    return Object.keys(t8).forEach(function(e5) {
      n3.hasOwnProperty(e5) && (n3[e5] = t8[e5]);
    }), n3;
  }
  return t(t7, e4), t7;
}(function(e4) {
  function t7() {
    var t8 = null !== e4 && e4.apply(this, arguments) || this;
    return t8.onUserJoined = st, t8.onUserLeft = st, t8.onUserReceivedInvitation = st, t8.onUserDeclinedInvitation = st, t8.onChannelHidden = st, t8.onUnreadMemberStatusUpdated = st, t8.onUndeliveredMemberStatusUpdated = st, t8.onTypingStatusUpdated = st, t8.onPollUpdated = st, t8.onPollVoted = st, t8.onPollDeleted = st, t8.onPinnedMessageUpdated = st, t8;
  }
  return t(t7, e4), t7;
}(t2));
var Xe2 = function(e4) {
  function t7(t8) {
    var n3 = this, a5 = t8.token, r4 = t8.limit, i4 = t8.order, s6 = t8.reverse, o3 = t8.channelUrl, l3 = t8.messageTypeFilter, u4 = t8.scheduledStatus;
    return (n3 = e4.call(this) || this).method = oe.GET, n3.path = "".concat(me), n3.params = re(se({ token: a5, limit: r4, reverse: s6, channel_url: o3, order: i4, message_type: l3, status: u4 })), n3;
  }
  return t(t7, e4), t7;
}(xe);
var Je3 = function(e4) {
  function t7(t8, n3) {
    var a5 = e4.call(this, t8, n3) || this;
    a5.scheduledMessages = [];
    var r4 = n3.next, i4 = n3.scheduled_messages;
    return a5.token = r4, a5.scheduledMessages = i4.map(function(e5) {
      return Mt(t8, e5);
    }), a5;
  }
  return t(t7, e4), t7;
}(Ue);
var Ze3 = function(t7) {
  function n3(e4, n4) {
    var a5, r4, i4, s6, o3, l3 = this;
    return (l3 = t7.call(this, e4, n4) || this).channelUrl = null, l3.order = null, l3.reverse = false, l3.scheduledStatus = null, l3.messageTypeFilter = G.ALL, l3.channelUrl = null !== (a5 = n4.channelUrl) && void 0 !== a5 ? a5 : null, l3.order = null !== (r4 = n4.order) && void 0 !== r4 ? r4 : null, l3.reverse = null !== (i4 = n4.reverse) && void 0 !== i4 && i4, l3.scheduledStatus = null !== (s6 = n4.scheduledStatus) && void 0 !== s6 ? s6 : null, l3.messageTypeFilter = null !== (o3 = n4.messageTypeFilter) && void 0 !== o3 ? o3 : G.ALL, l3;
  }
  return t(n3, t7), n3.prototype._validate = function() {
    return t7.prototype._validate.call(this) && w("string", this.channelUrl, true) && (S(R2, this.order) || null === this.order) && w("boolean", this.reverse) && (N(ut, this.scheduledStatus) || null === this.scheduledStatus) && S(G, this.messageTypeFilter);
  }, n3.prototype.next = function() {
    return r(this, void 0, void 0, function() {
      var e4, t8, n4, a5, r4, o3;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e4 = Ws.of(this._iid).requestQueue, t8 = new Xe2(se(n(n({}, this), { token: this._token }))), [4, e4.send(t8)]) : [3, 2] : [3, 5];
          case 1:
            return n4 = s6.sent(), a5 = n4.as(Je3), r4 = a5.scheduledMessages, o3 = a5.token, this._token = o3, this._hasNext = !!o3, this._isLoading = false, [2, r4];
          case 2:
            return [2, []];
          case 3:
            throw v.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw v.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, n3;
}(_o);
var $e2 = function(t7) {
  function n3() {
    var e4 = null !== t7 && t7.apply(this, arguments) || this;
    return e4.name = "groupChannel", e4;
  }
  return t(n3, t7), n3.prototype.init = function(e4, n4) {
    var a5 = n4.sdkState, r4 = n4.dispatcher, i4 = n4.sessionManager, s6 = n4.requestQueue, o3 = n4.logger, l3 = n4.onlineDetector, u4 = n4.cacheContext;
    t7.prototype.init.call(this, e4, { sdkState: a5, dispatcher: r4, sessionManager: i4, requestQueue: s6, logger: o3, onlineDetector: l3, cacheContext: u4 }), this._manager = new ps2(e4, { sdkState: a5, cacheContext: u4, dispatcher: r4, sessionManager: i4, requestQueue: s6, logger: o3 });
  }, n3.prototype.createGroupChannelCollection = function(e4) {
    return void 0 === e4 && (e4 = {}), new je2(this._iid, e4);
  }, n3.prototype.createMyGroupChannelListQuery = function(e4) {
    return void 0 === e4 && (e4 = {}), new us2(this._iid, e4);
  }, n3.prototype.createPublicGroupChannelListQuery = function(e4) {
    return void 0 === e4 && (e4 = {}), new qe3(this._iid, e4);
  }, n3.prototype.createScheduledMessageListQuery = function(e4) {
    return void 0 === e4 && (e4 = {}), new Ze3(this._iid, e4);
  }, n3.prototype.addGroupChannelHandler = function(e4, t8) {
    Jr(w("string", e4) && t8 instanceof Ye3).throw(v.invalidParameters), this._manager.addHandler(e4, t8);
  }, n3.prototype.removeGroupChannelHandler = function(e4) {
    Jr(w("string", e4)).throw(v.invalidParameters), this._manager.removeHandler(e4);
  }, n3.prototype.removeAllGroupChannelHandlers = function() {
    this._manager.clearHandler();
  }, n3.prototype.buildGroupChannelFromSerializedData = function(e4) {
    return this._manager.buildGroupChannelFromSerializedData(e4);
  }, n3.prototype.buildGroupChannelListQueryFromSerializedData = function(e4) {
    return this._manager.buildGroupChannelListQueryFromSerializedData(e4);
  }, n3.prototype.buildMemberFromSerializedData = function(e4) {
    return this._manager.buildMemberFromSerializedData(e4);
  }, n3.prototype.getChannel = function(t8) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        return Jr(w("string", t8)).throw(v.invalidParameters), [2, this._manager.getChannel(t8)];
      });
    });
  }, n3.prototype.getChannelWithoutCache = function(t8) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        return Jr(w("string", t8)).throw(v.invalidParameters), [2, this._manager.getChannelWithoutCache(t8)];
      });
    });
  }, n3.prototype.getMyGroupChannelChangeLogsByToken = function(t8, n4) {
    return void 0 === n4 && (n4 = {}), r(this, void 0, void 0, function() {
      var e4;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return e4 = n(n({}, cn2), n4), Jr(w("string", t8) && ln2(e4)).throw(v.invalidParameters), [4, this._manager.getMyGroupChannelChangeLogs(t8, e4)];
          case 1:
            return [2, a5.sent()];
        }
      });
    });
  }, n3.prototype.getMyGroupChannelChangeLogsByTimestamp = function(t8, n4) {
    return void 0 === n4 && (n4 = {}), r(this, void 0, void 0, function() {
      var e4;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return e4 = n(n({}, cn2), n4), Jr(w("number", t8) && ln2(e4)).throw(v.invalidParameters), [4, this._manager.getMyGroupChannelChangeLogs(t8, e4)];
          case 1:
            return [2, a5.sent()];
        }
      });
    });
  }, n3.prototype.getGroupChannelCount = function(t8) {
    return r(this, void 0, void 0, function() {
      var e4;
      return s(this, function(n4) {
        return e4 = n(n({}, hn2), t8), Jr(dn2(e4)).throw(v.invalidParameters), [2, this._manager.getGroupChannelCount(e4)];
      });
    });
  }, n3.prototype.getUnreadItemCount = function(t8) {
    return void 0 === t8 && (t8 = {}), r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, this._manager.getUnreadItemCount(t8)];
          case 1:
            return [2, e4.sent()];
        }
      });
    });
  }, n3.prototype.getTotalUnreadChannelCount = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, this._manager.getTotalUnreadChannelCount()];
          case 1:
            return [2, e4.sent()];
        }
      });
    });
  }, n3.prototype.getTotalUnreadMessageCount = function(t8) {
    return void 0 === t8 && (t8 = {}), r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, this._manager.getTotalUnreadMessageCount(t8)];
          case 1:
            return [2, e4.sent()];
        }
      });
    });
  }, n3.prototype.getTotalScheduledMessageCount = function(t8) {
    return void 0 === t8 && (t8 = {}), r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, this._manager.getTotalScheduledMessageCount(t8)];
          case 1:
            return [2, e4.sent()];
        }
      });
    });
  }, n3.prototype.getSubscribedTotalUnreadMessageCount = function() {
    return this._manager.getSubscribedTotalUnreadMessageCount();
  }, n3.prototype.getSubscribedCustomTypeTotalUnreadMessageCount = function() {
    return this._manager.getSubscribedCustomTypeTotalUnreadMessageCount();
  }, n3.prototype.getSubscribedCustomTypeUnreadMessageCount = function(e4) {
    return this._manager.getSubscribedCustomTypeUnreadMessageCount(e4);
  }, n3.prototype.createChannel = function(t8) {
    return void 0 === t8 && (t8 = {}), r(this, void 0, void 0, function() {
      var e4;
      return s(this, function(n4) {
        return e4 = n(n({}, on2), t8), Jr(un2(e4)).throw(v.invalidParameters), [2, this._manager.createChannel(e4)];
      });
    });
  }, n3.prototype.createDistinctChannelIfNotExist = function(t8) {
    return void 0 === t8 && (t8 = {}), r(this, void 0, void 0, function() {
      var e4;
      return s(this, function(n4) {
        return e4 = n(n({}, on2), t8), Jr(un2(e4)).throw(v.invalidParameters), e4 && (e4.isDistinct = true), [2, this.createChannel(e4)];
      });
    });
  }, n3.prototype.createChannelWithUserIds = function(t8, n4, a5, r4, i4, o3) {
    return void 0 === n4 && (n4 = false), void 0 === i4 && (i4 = ""), void 0 === o3 && (o3 = ""), r(this, void 0, void 0, function() {
      var e4;
      return s(this, function(s6) {
        return e4 = n(n({}, on2), { invitedUserIds: t8, isDistinct: n4, name: a5, data: i4, customType: o3 }), "string" == typeof r4 ? e4.coverUrl = r4 : e4.coverImage = r4, [2, this.createChannel(e4)];
      });
    });
  }, n3.prototype.markAsReadAll = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        return this._manager.markAsReadAll(), [2];
      });
    });
  }, n3.prototype.markAsReadWithChannelUrls = function(t8) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        return Jr(N("string", t8)).throw(v.invalidParameters), this._manager.markAsReadWithChannelUrls(t8), [2];
      });
    });
  }, n3.prototype.markAsDelivered = function(t8) {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        switch (e4.label) {
          case 0:
            return Jr(w("string", t8)).throw(v.invalidParameters), [4, this.getChannel(t8)];
          case 1:
            return [4, e4.sent().markAsDelivered()];
          case 2:
            return e4.sent(), [2];
        }
      });
    });
  }, n3;
}(Zs);

// node_modules/@sendbird/uikit-tools/dist/esm/constants/sbuConstants.js
var sbuConstants = {
  collection: {
    groupChannel: {
      defaultLimit: 20,
      defaultOrder: E.LATEST_LAST_MESSAGE,
      defaultIncludeEmpty: false
    },
    message: {
      defaultLimit: { next: 25, prev: 25 },
      searchLimit: { next: 10, prev: 10 }
    }
  }
};

// node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelList/index.js
var import_react6 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-tools/dist/esm/hooks/useAsyncEffect.js
var import_react = __toESM(require_react(), 1);
var __awaiter2 = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e4) {
        reject(e4);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e4) {
        reject(e4);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var useAsyncEffect = (asyncEffect, deps) => {
  (0, import_react.useEffect)(createAsyncEffectCallback(asyncEffect), deps);
};
var useAsyncLayoutEffect = (asyncEffect, deps) => {
  (0, import_react.useLayoutEffect)(createAsyncEffectCallback(asyncEffect), deps);
};
var iife = (callback) => typeof callback === "function" && callback();
var createAsyncEffectCallback = (asyncEffect) => () => {
  const destructor = iife(asyncEffect);
  return () => {
    if (!destructor)
      return;
    if (destructor instanceof Promise) {
      iife(() => __awaiter2(void 0, void 0, void 0, function* () {
        const awaitedDestructor = yield destructor;
        if (typeof awaitedDestructor === "function")
          awaitedDestructor();
      }));
    } else if (typeof destructor === "function") {
      iife(destructor);
    }
  };
};

// node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelHandler.js
var import_react3 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-tools/dist/esm/hooks/useUniqId.js
var import_react2 = __toESM(require_react(), 1);
var id = 0;
function useUniqId() {
  return (0, import_react2.useState)(() => `${id++}`)[0];
}

// node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelHandler.js
var useGroupChannelHandler = (sdk, hookHandler, handlerId) => {
  const handlerRef = (0, import_react3.useRef)(hookHandler);
  const id2 = useUniqId();
  const internalHandlerId = handlerId !== null && handlerId !== void 0 ? handlerId : id2;
  handlerRef.current = hookHandler;
  (0, import_react3.useEffect)(() => {
    var _a3;
    const handlerMapper = (handler) => {
      const handlerKeys = Object.keys(handler);
      handlerKeys.forEach((key) => {
        handler[key] = (...args) => {
          var _a4, _b2;
          return (_b2 = (_a4 = handlerRef.current) === null || _a4 === void 0 ? void 0 : _a4[key]) === null || _b2 === void 0 ? void 0 : _b2.call(_a4, ...args);
        };
      });
      return handler;
    };
    (_a3 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a3 === void 0 ? void 0 : _a3.addGroupChannelHandler(internalHandlerId, handlerMapper(new Ye3()));
    return () => {
      var _a4;
      (_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a4 === void 0 ? void 0 : _a4.removeGroupChannelHandler(internalHandlerId);
    };
  }, [sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel, internalHandlerId]);
};

// node_modules/@sendbird/uikit-tools/dist/esm/hooks/usePreservedCallback.js
var import_react4 = __toESM(require_react(), 1);
function usePreservedCallback(callback) {
  const callbackRef = (0, import_react4.useRef)(callback);
  callbackRef.current = callback;
  return (0, import_react4.useCallback)((...args) => callbackRef.current(...args), [callbackRef]);
}

// node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelList/reducer.js
var import_react5 = __toESM(require_react(), 1);
var __rest2 = function(s6, e4) {
  var t7 = {};
  for (var p4 in s6) if (Object.prototype.hasOwnProperty.call(s6, p4) && e4.indexOf(p4) < 0)
    t7[p4] = s6[p4];
  if (s6 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i4 = 0, p4 = Object.getOwnPropertySymbols(s6); i4 < p4.length; i4++) {
      if (e4.indexOf(p4[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s6, p4[i4]))
        t7[p4[i4]] = s6[p4[i4]];
    }
  return t7;
};
var defaultReducer = (_a3, action) => {
  var draft = __rest2(_a3, []);
  const compareByOrder = createCompareByOrder(draft.order);
  switch (action.type) {
    case "update_refreshing": {
      draft.refreshing = action.value.status;
      break;
    }
    case "update_initialized": {
      draft.initialized = action.value.status;
      break;
    }
    case "update_channels": {
      getGroupChannels(action.value.channels).forEach((freshChannel) => {
        const idx = draft.groupChannels.findIndex((staleChannel) => staleChannel.url === freshChannel.url);
        if (idx > -1)
          draft.groupChannels[idx] = freshChannel;
      });
      compareByOrder && (draft.groupChannels = draft.groupChannels.sort(compareByOrder));
      break;
    }
    case "delete_channels": {
      action.value.channelUrls.forEach((url) => {
        const idx = draft.groupChannels.findIndex((c4) => c4.url === url);
        if (idx > -1)
          draft.groupChannels.splice(idx, 1);
      });
      compareByOrder && (draft.groupChannels = draft.groupChannels.sort(compareByOrder));
      break;
    }
    case "append_channels": {
      const groupChannels = getGroupChannels(action.value.channels);
      if (action.value.clearBeforeAction) {
        draft.groupChannels = groupChannels;
      } else {
        draft.groupChannels = mergeObjectArrays(draft.groupChannels, groupChannels, "url");
      }
      compareByOrder && (draft.groupChannels = draft.groupChannels.sort(compareByOrder));
      break;
    }
    case "update_order": {
      draft.order = action.value.order;
      const compareByOrder2 = createCompareByOrder(draft.order);
      compareByOrder2 && (draft.groupChannels = draft.groupChannels.sort(compareByOrder2));
      break;
    }
  }
  return draft;
};
var useGroupChannelListReducer = (order) => {
  const [{ initialized, refreshing, groupChannels }, dispatch] = (0, import_react5.useReducer)(defaultReducer, {
    initialized: false,
    refreshing: false,
    groupChannels: [],
    order
  });
  const updateChannels = (channels) => {
    dispatch({ type: "update_channels", value: { channels } });
  };
  const deleteChannels = (channelUrls) => {
    dispatch({ type: "delete_channels", value: { channelUrls } });
  };
  const appendChannels = (channels, clearBeforeAction) => {
    dispatch({ type: "append_channels", value: { channels, clearBeforeAction } });
  };
  const updateInitialized = (status) => {
    dispatch({ type: "update_initialized", value: { status } });
  };
  const updateRefreshing = (status) => {
    dispatch({ type: "update_refreshing", value: { status } });
  };
  const updateOrder = (order2) => {
    dispatch({ type: "update_order", value: { order: order2 } });
  };
  return {
    updateInitialized,
    updateRefreshing,
    updateChannels,
    deleteChannels,
    appendChannels,
    updateOrder,
    initialized,
    refreshing,
    groupChannels
  };
};
var createCompareByOrder = (order) => {
  if (!order)
    return void 0;
  return (channel1, channel2) => {
    switch (order) {
      case "latest_last_message": {
        if (channel1.lastMessage && channel2.lastMessage) {
          return channel2.lastMessage.createdAt - channel1.lastMessage.createdAt;
        } else if (channel1.lastMessage) {
          return -1;
        } else if (channel2.lastMessage) {
          return 1;
        } else {
          return channel2.createdAt - channel1.createdAt;
        }
      }
      case "chronological": {
        return channel2.createdAt - channel1.createdAt;
      }
      case "channel_name_alphabetical": {
        return channel1.name.localeCompare(channel2.name);
      }
      default: {
        return 0;
      }
    }
  };
};
function mergeObjectArrays(A3, B3, key) {
  const uniqueValues = new Set(A3.map((obj) => obj[key]));
  const newArr = [...A3];
  for (let i4 = 0; i4 < B3.length; i4++) {
    if (!uniqueValues.has(B3[i4][key])) {
      newArr.push(B3[i4]);
      uniqueValues.add(B3[i4][key]);
    }
  }
  return newArr;
}
function getGroupChannels(channels) {
  return channels.filter((it3) => it3.isGroupChannel());
}

// node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelList/index.js
var __awaiter3 = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e4) {
        reject(e4);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e4) {
        reject(e4);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var createGroupChannelListCollection = (sdk, collectionCreator) => {
  const basicParams = {
    includeEmpty: sbuConstants.collection.groupChannel.defaultIncludeEmpty,
    limit: sbuConstants.collection.groupChannel.defaultLimit,
    order: sbuConstants.collection.groupChannel.defaultOrder
  };
  const passedCollection = collectionCreator === null || collectionCreator === void 0 ? void 0 : collectionCreator(basicParams);
  if (passedCollection)
    return passedCollection;
  return sdk.groupChannel.createGroupChannelCollection(Object.assign(Object.assign({}, basicParams), { filter: new rn2(basicParams) }));
};
var useGroupChannelList = (sdk, options) => {
  var _a3, _b2, _c;
  const deliveryReceiptEnabled = Boolean((_b2 = (_a3 = sdk.appInfo) === null || _a3 === void 0 ? void 0 : _a3.premiumFeatureList) === null || _b2 === void 0 ? void 0 : _b2.includes(premiumFeatures.delivery_receipt));
  const collectionRef = (0, import_react6.useRef)();
  const internalOptions = (0, import_react6.useRef)(options);
  internalOptions.current = options;
  const { initialized, groupChannels, refreshing, appendChannels, deleteChannels, updateRefreshing, updateInitialized } = useGroupChannelListReducer();
  const updateChannelsAndMarkAsDelivered = (shouldMarkAsDelivered, source, updatedChannels) => {
    var _a4, _b3, _c2, _d;
    const channels = (_b3 = (_a4 = collectionRef.current) === null || _a4 === void 0 ? void 0 : _a4.channels) !== null && _b3 !== void 0 ? _b3 : [];
    appendChannels(channels, true);
    if (shouldMarkAsDelivered && deliveryReceiptEnabled) {
      switch (source) {
        case mn2.EVENT_MESSAGE_RECEIVED:
        case mn2.EVENT_MESSAGE_SENT:
        case mn2.SYNC_CHANNEL_BACKGROUND:
        case mn2.SYNC_CHANNEL_CHANGELOGS:
        case void 0:
          (_d = (_c2 = internalOptions.current) === null || _c2 === void 0 ? void 0 : _c2.markAsDelivered) === null || _d === void 0 ? void 0 : _d.call(_c2, updatedChannels !== null && updatedChannels !== void 0 ? updatedChannels : channels);
          break;
      }
    }
  };
  const init = usePreservedCallback((uid) => __awaiter3(void 0, void 0, void 0, function* () {
    var _d, _e3, _f, _g2;
    if (collectionRef.current)
      (_d = collectionRef.current) === null || _d === void 0 ? void 0 : _d.dispose();
    if (uid) {
      collectionRef.current = createGroupChannelListCollection(sdk, options === null || options === void 0 ? void 0 : options.collectionCreator);
      (_e3 = collectionRef.current) === null || _e3 === void 0 ? void 0 : _e3.setGroupChannelCollectionHandler({
        onChannelsAdded: (context, channels) => {
          var _a4, _b3;
          const groupChannels2 = channels.filter((channel) => channel.isGroupChannel());
          updateChannelsAndMarkAsDelivered(true, context.source, groupChannels2);
          (_b3 = (_a4 = internalOptions.current) === null || _a4 === void 0 ? void 0 : _a4.onChannelsAdded) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, groupChannels2);
        },
        onChannelsUpdated: (context, channels) => {
          var _a4, _b3;
          const groupChannels2 = channels.filter((channel) => channel.isGroupChannel());
          updateChannelsAndMarkAsDelivered(true, context.source, groupChannels2);
          (_b3 = (_a4 = internalOptions.current) === null || _a4 === void 0 ? void 0 : _a4.onChannelsUpdated) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, groupChannels2);
        },
        onChannelsDeleted: (_2, channelUrls) => {
          var _a4, _b3;
          updateChannelsAndMarkAsDelivered(false);
          (_b3 = (_a4 = internalOptions.current) === null || _a4 === void 0 ? void 0 : _a4.onChannelsDeleted) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, channelUrls);
        }
      });
      if ((_f = collectionRef.current) === null || _f === void 0 ? void 0 : _f.hasMore) {
        yield (_g2 = collectionRef.current) === null || _g2 === void 0 ? void 0 : _g2.loadMore();
        updateChannelsAndMarkAsDelivered(true);
      }
    }
  }));
  (0, import_react6.useEffect)(() => {
    return () => {
      var _a4;
      if (collectionRef.current)
        (_a4 = collectionRef.current) === null || _a4 === void 0 ? void 0 : _a4.dispose();
    };
  }, []);
  useAsyncEffect(() => __awaiter3(void 0, void 0, void 0, function* () {
    updateInitialized(false);
    if (sdk.currentUser) {
      yield init(sdk.currentUser.userId);
      updateInitialized(true);
    }
  }), [sdk, (_c = sdk.currentUser) === null || _c === void 0 ? void 0 : _c.userId]);
  useGroupChannelHandler(sdk, {
    onUserBanned: (channel, user) => {
      var _a4, _b3, _c2;
      const isMe = user.userId === ((_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
      if (isMe) {
        deleteChannels([channel.url]);
        (_c2 = (_b3 = internalOptions.current) === null || _b3 === void 0 ? void 0 : _b3.onChannelsDeleted) === null || _c2 === void 0 ? void 0 : _c2.call(_b3, [channel.url]);
      } else {
        updateChannelsAndMarkAsDelivered(false);
      }
    }
  });
  const refresh = usePreservedCallback(() => __awaiter3(void 0, void 0, void 0, function* () {
    if (sdk.currentUser) {
      updateRefreshing(true);
      yield init(sdk.currentUser.userId);
      updateRefreshing(false);
    }
  }));
  const loadMore = usePreservedCallback(() => __awaiter3(void 0, void 0, void 0, function* () {
    var _h, _j;
    if ((_h = collectionRef.current) === null || _h === void 0 ? void 0 : _h.hasMore) {
      yield (_j = collectionRef.current) === null || _j === void 0 ? void 0 : _j.loadMore();
      updateChannelsAndMarkAsDelivered(true);
    }
  }));
  return {
    /**
     * Initializing state, only available on first render
     * */
    initialized,
    /**
     * Get group channels state
     * */
    groupChannels,
    /**
     * Refresh, clear and reload messages from latest
     * @return {Promise<void>}
     * */
    refresh,
    /**
     * Refreshing state, status is changes when the refresh is called.
     * */
    refreshing,
    /**
     * Fetch more channels to state
     * @return {Promise<void>}
     * */
    loadMore
  };
};

// node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelMessages/index.js
var import_react9 = __toESM(require_react(), 1);

// node_modules/@sendbird/chat/poll.js
var b3 = function(a5) {
  function b6() {
    var t7 = null !== a5 && a5.apply(this, arguments) || this;
    return t7.name = "poll", t7;
  }
  return t(b6, a5), b6.prototype.init = function(t7, r4) {
    var n3 = r4.sdkState, o3 = r4.dispatcher, i4 = r4.sessionManager, s6 = r4.requestQueue, l3 = r4.logger, u4 = r4.onlineDetector, c4 = r4.cacheContext;
    a5.prototype.init.call(this, t7, { sdkState: n3, dispatcher: o3, sessionManager: i4, requestQueue: s6, logger: l3, onlineDetector: u4, cacheContext: c4 }), this._manager = new Do(t7, { sdkState: n3, dispatcher: o3, sessionManager: i4, requestQueue: s6, logger: l3, onlineDetector: u4, cacheContext: c4 });
  }, b6.prototype.create = function(t7) {
    return r(this, void 0, void 0, function() {
      var e4;
      return s(this, function(r4) {
        return e4 = n(n({}, To), t7), Jr(No(e4)).throw(v.invalidParameters), [2, this._manager.create(e4)];
      });
    });
  }, b6.prototype.get = function(t7) {
    return r(this, void 0, void 0, function() {
      var e4;
      return s(this, function(r4) {
        return e4 = n(n({}, Io), t7), Jr(ko(e4)).throw(v.invalidParameters), [2, this._manager.get(e4)];
      });
    });
  }, b6.prototype.getOption = function(t7) {
    return r(this, void 0, void 0, function() {
      var e4;
      return s(this, function(r4) {
        return e4 = n(n({}, Co), t7), Jr(Ao(e4)).throw(v.invalidParameters), [2, this._manager.getOption(e4)];
      });
    });
  }, b6.prototype.buildPollFromSerializedData = function(t7) {
    return this._manager.buildPollFromSerializedData(t7);
  }, b6;
}(Zs);

// node_modules/@sendbird/chat/lib/__bundle-31d4ecef.js
var e = function(t7) {
  return ["-lastMessageUpdatedAt", "-createdAt", "syncIndex"];
};
var r2 = function(n3) {
  function e4() {
    return null !== n3 && n3.apply(this, arguments) || this;
  }
  return t(e4, n3), e4;
}(ie);

// node_modules/@sendbird/chat/index.js
var vt2 = function(e4) {
  this.key = e4.key, this.url = e4.url;
};
var gt2 = function(e4) {
  this.id = e4.id, this.name = e4.name, this.url = e4.url, this.emojis = e4.emojis ? e4.emojis.map(function(e5) {
    return new vt2(e5);
  }) : [];
};
var mt2 = function(e4) {
  this.emojiHash = e4.emoji_hash || "", this.emojiCategories = e4.emoji_categories ? e4.emoji_categories.map(function(e5) {
    return new gt2(e5);
  }) : [];
};
var bt2 = { profileImage: void 0, profileUrl: void 0, nickname: void 0 };
var _t2 = function(e4) {
  return function(t7, n3) {
    return r(void 0, void 0, void 0, function() {
      var r4, s6, o3, c4;
      return s(this, function(d5) {
        switch (d5.label) {
          case 0:
            switch (t7) {
              case 1:
              case 2:
              case 3:
              case 4:
                return [3, 1];
              case 5:
                return [3, 2];
              case 6:
                return [3, 4];
            }
            return [3, 11];
          case 1:
            return n3(), [3, 12];
          case 2:
            return [4, e4.reset()];
          case 3:
            return d5.sent(), n3(), [3, 12];
          case 4:
            return d5.trys.push([4, 9, , 10]), r4 = /* @__PURE__ */ function(e5) {
              return { v2: function() {
                return r(void 0, void 0, void 0, function() {
                  return s(this, function(t8) {
                    switch (t8.label) {
                      case 0:
                        return [4, e5.commitSchema([{ collectionName: Kr, keyName: jr, index: [L2(E.LATEST_LAST_MESSAGE), L2(E.CHRONOLOGICAL), L2(E.CHANNEL_NAME_ALPHABETICAL)] }, { collectionName: Gr, keyName: Vr2, index: [ks(Ns.CHANNEL_LATEST), ks(Ns.NEWEST_CHILD_MESSAGE)] }, { collectionName: qs2, keyName: zs, index: [ks(Ns.CHANNEL_LATEST), ks(Ns.NEWEST_CHILD_MESSAGE)] }, { collectionName: Jr2, keyName: Xr2 }])];
                      case 1:
                        return [2, t8.sent()];
                    }
                  });
                });
              }, v3: function() {
                return r(void 0, void 0, void 0, function() {
                  return s(this, function(t8) {
                    switch (t8.label) {
                      case 0:
                        return [4, e5.commitSchema([{ collectionName: $r, keyName: ei, index: [e("latest_last_message")] }])];
                      case 1:
                        return [2, t8.sent()];
                    }
                  });
                });
              }, v4: function() {
                return r(void 0, void 0, void 0, function() {
                  return s(this, function(t8) {
                    switch (t8.label) {
                      case 0:
                        return [4, e5.commitSchema([{ collectionName: Wr, keyName: Yr2, index: [Rs()] }])];
                      case 1:
                        return [2, t8.sent()];
                    }
                  });
                });
              } };
            }(e4), s6 = r4.v2, o3 = r4.v3, c4 = r4.v4, [4, s6()];
          case 5:
            return d5.sent(), [4, o3()];
          case 6:
            return d5.sent(), [4, c4()];
          case 7:
            return d5.sent(), [4, e4.collection(Gr).removeIf({ where: { channelType: q.OPEN } })];
          case 8:
          case 9:
            return d5.sent(), [3, 10];
          case 10:
            return n3(), [3, 12];
          case 11:
            n3(), d5.label = 12;
          case 12:
            return [2];
        }
      });
    });
  };
};
var yt2 = function() {
  return "undefined" != typeof document ? document.visibilityState : "visible";
};
var wt2 = function(e4) {
  function t7(t8) {
    var n3 = t8.getVisibilityState, r4 = void 0 === n3 ? yt2 : n3, i4 = t8.initialState, s6 = void 0 === i4 ? "visible" : i4, o3 = t8.isEnabled, a5 = void 0 === o3 || o3, u4 = t8.pauseCheckDelay, c4 = void 0 === u4 ? 3e4 : u4, d5 = e4.call(this) || this;
    return d5._pauseCheckDelay = 3e4, d5._currentState = "visible", d5._getVisibilityState = r4, d5._pauseCheckDelay = c4, d5._currentState = s6, d5._isEnabled = a5, d5._boundToggleState = d5._toggleState.bind(d5), d5;
  }
  return t(t7, e4), Object.defineProperty(t7.prototype, "currentState", { get: function() {
    return this._currentState;
  }, enumerable: false, configurable: true }), Object.defineProperty(t7.prototype, "isAvailable", { get: function() {
    return "undefined" != typeof window && !!window.addEventListener && !!window.removeEventListener;
  }, enumerable: false, configurable: true }), t7.prototype._toggleState = function() {
    var e5 = this, t8 = this._getVisibilityState();
    "hidden" !== t8 ? "hidden" === this._currentState && (this._pauseDelayTimer && (clearTimeout(this._pauseDelayTimer), this._pauseDelayTimer = void 0), this.dispatch("resume")) : "hidden" !== this._currentState && (this._pauseDelayTimer = setTimeout(function() {
      e5._pauseDelayTimer = void 0, e5.dispatch("pause");
    }, this._pauseCheckDelay)), this._currentState = t8;
  }, t7.prototype.start = function() {
    this._isEnabled && this.isAvailable && (this._boundToggleState = this._toggleState.bind(this), window.addEventListener("visibilitychange", this._boundToggleState, { capture: true }));
  }, t7.prototype.stop = function() {
    this._isEnabled && this.isAvailable && this._boundToggleState && window.removeEventListener("visibilitychange", this._boundToggleState, { capture: true });
  }, t7;
}(te);
var kt2 = function() {
  function e4(e5) {
    var t7 = e5.logger, n3 = e5.connectionDelegate, r4 = void 0 === n3 ? null : n3, i4 = this;
    this._onlineWorker = function() {
      var e6;
      return null === (e6 = i4.connectionDelegate) || void 0 === e6 ? void 0 : e6.reconnect();
    }, this._offlineWorker = function() {
      var e6;
      return null === (e6 = i4.connectionDelegate) || void 0 === e6 ? void 0 : e6.disconnect();
    }, this.unsubscribes = [], this._onlineListener = function(e6) {
      if (i4.isAvailableOnWeb) return window.addEventListener("online", e6), function() {
        return window.removeEventListener("online", e6, false);
      };
    }, this._offlineListener = function(e6) {
      if (i4.isAvailableOnWeb) return window.addEventListener("offline", e6), function() {
        return window.removeEventListener("offline", e6, false);
      };
    }, this.logger = t7, r4 && (this.connectionDelegate = r4);
  }
  return Object.defineProperty(e4.prototype, "isAvailableOnWeb", { get: function() {
    return "undefined" != typeof window && !!window.addEventListener && "ononline" in window && "onoffline" in window && "undefined" != typeof navigator && void 0 !== navigator.onLine;
  }, enumerable: false, configurable: true }), e4.prototype.setOnlineListener = function(e5) {
    Boolean(e5) && "function" == typeof e5 && (this._onlineListener = e5);
  }, e4.prototype.setOfflineListener = function(e5) {
    Boolean(e5) && "function" == typeof e5 && (this._offlineListener = e5);
  }, e4.prototype.start = function() {
    this.unsubscribes = [this._onlineListener(this._onlineWorker), this._offlineListener(this._offlineWorker)];
  }, e4.prototype.stop = function() {
    var e5 = this;
    this.unsubscribes.forEach(function(t7) {
      try {
        null == t7 || t7();
      } catch (t8) {
        e5.logger.warn(t8.message);
      }
    }), this.unsubscribes = [];
  }, e4.prototype.isOnline = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e5) {
        return this.isAvailableOnWeb ? [2, navigator.onLine] : [2, new Promise(function(e6) {
          fetch("https://www.google.com", { method: oe.GET, mode: "no-cors" }).then(function() {
            return e6(true);
          }).catch(function() {
            return e6(false);
          });
        })];
      });
    });
  }, e4;
}();
var St2 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.nickname, i4 = t8.profileUrl, s6 = t8.profileImage, o3 = t8.preferredLanguages, a5 = e4.call(this) || this;
    return a5.method = oe.PUT, a5.path = "".concat(ce, "/").concat(encodeURIComponent(n3)), a5.params = re(se({ nickname: r4, profile_url: i4, profile_file: s6, preferred_languages: o3 })), a5;
  }
  return t(t7, e4), t7;
}(xe);
var It2 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.user = new es(t8, n({}, n3)), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Ct2 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.token, i4 = t8.deviceOS, s6 = t8.deviceManufacturer, o3 = t8.systemPushEnabled, a5 = e4.call(this) || this;
    return a5.method = oe.POST, a5.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/push/apns"), a5.params = re({ apns_device_token: r4, always_push: true, device_os: i4, device_manufacturer: s6, system_push_enabled: o3 }), a5;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.token = n3.token, r4.type = n3.type ? f[n3.type.toLowerCase()] : f.UNKNOWN, r4.user = new es(t8, n3.user), r4;
  }
  t(t7, e4);
}(Ue);
var Et2 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.token, i4 = t8.deviceOS, s6 = t8.deviceManufacturer, o3 = t8.systemPushEnabled, a5 = e4.call(this) || this;
    return a5.method = oe.POST, a5.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/push/gcm"), a5.params = re({ gcm_reg_token: r4, always_push: true, device_os: i4, device_manufacturer: s6, system_push_enabled: o3 }), a5;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.token = n3.token, r4.type = n3.type ? f[n3.type.toLowerCase()] : f.UNKNOWN, r4.user = new es(t8, n3.user), r4;
  }
  t(t7, e4);
}(Ue);
var Tt2 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.token, i4 = e4.call(this) || this;
    return i4.method = oe.DELETE, i4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/push/apns/").concat(encodeURIComponent(r4)), i4;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.token = n3.token, r4.user = new es(t8, n3.user), r4.lastDeletedAt = n3.device_token_last_deleted_at, r4;
  }
  t(t7, e4);
}(Ue);
var Pt2 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.token, i4 = e4.call(this) || this;
    return i4.method = oe.DELETE, i4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/push/gcm/").concat(encodeURIComponent(r4)), i4;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.token = n3.token, r4.user = new es(t8, n3.user), r4.lastDeletedAt = n3.device_token_last_deleted_at, r4;
  }
  t(t7, e4);
}(Ue);
var Dt2 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = e4.call(this) || this;
    return r4.method = oe.DELETE, r4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/push/apns"), r4;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.type = n3.type ? f[n3.type.toLowerCase()] : f.UNKNOWN, r4.user = new es(t8, n3.user), r4.lastDeletedAt = n3.device_token_last_deleted_at, r4;
  }
  t(t7, e4);
}(Ue);
var Ut2 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = e4.call(this) || this;
    return r4.method = oe.DELETE, r4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/push/gcm"), r4;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.type = n3.type ? f[n3.type.toLowerCase()] : f.UNKNOWN, r4.user = new es(t8, n3.user), r4.lastDeletedAt = n3.device_token_last_deleted_at, r4;
  }
  t(t7, e4);
}(Ue);
var Ot2 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.type, i4 = t8.token, s6 = t8.ts, o3 = e4.call(this) || this;
    return o3.method = oe.GET, o3.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/push/").concat(encodeURIComponent(r4), "/device_tokens"), o3.params = { created_ts: s6, token: i4 }, o3;
  }
  return t(t7, e4), t7;
}(xe);
var At2 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.pushTokens = { type: n3.type ? f[n3.type.toLowerCase()] : f.UNKNOWN, deviceTokens: n3.device_tokens, hasMore: n3.has_more, token: n3.token }, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Nt2 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = e4.call(this) || this;
    return r4.method = oe.GET, r4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/channel_invitation_preference"), r4;
  }
  return t(t7, e4), t7;
}(xe);
var Mt2 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.autoAccept = n3.auto_accept, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Lt2 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.willAutoAccept, i4 = e4.call(this) || this;
    return i4.method = oe.PUT, i4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/channel_invitation_preference"), i4.params = { auto_accept: r4 }, i4;
  }
  return t(t7, e4), t7;
}(xe);
var Rt2 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.autoAccept = n3.auto_accept, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var zt2 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = e4.call(this) || this;
    return r4.method = oe.GET, r4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/push_preference"), r4;
  }
  return t(t7, e4), t7;
}(xe);
var Qt3 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.preference = { doNotDisturbOn: n3.do_not_disturb, startHour: n3.start_hour, startMin: n3.start_min, endHour: n3.end_hour, endMin: n3.end_min, timezone: n3.timezone }, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var jt2 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.doNotDisturbOn, i4 = t8.startHour, s6 = t8.startMin, o3 = t8.endHour, a5 = t8.endMin, u4 = t8.timezone, c4 = e4.call(this) || this;
    return c4.method = oe.PUT, c4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/push_preference"), c4.params = { do_not_disturb: r4, start_hour: i4, start_min: s6, end_hour: o3, end_min: a5, timezone: u4 }, c4;
  }
  return t(t7, e4), t7;
}(xe);
var Ft2 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.preference = { doNotDisturbOn: n3.do_not_disturb, startHour: n3.start_hour, startMin: n3.start_min, endHour: n3.end_hour, endMin: n3.end_min, timezone: n3.timezone }, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var qt2 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = e4.call(this) || this;
    return r4.method = oe.GET, r4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/push_preference"), r4;
  }
  return t(t7, e4), t7;
}(xe);
var Ht2 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.snoozePeriod = { isSnoozeOn: n3.snooze_enabled }, "number" == typeof n3.snooze_start_ts && (r4.snoozePeriod.startTs = n3.snooze_start_ts), "number" == typeof n3.snooze_end_ts && (r4.snoozePeriod.endTs = n3.snooze_end_ts), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var xt2 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.snoozeOn, i4 = t8.startTs, s6 = t8.endTs, o3 = e4.call(this) || this;
    return o3.method = oe.PUT, o3.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/push_preference"), o3.params = { snooze_enabled: r4, snooze_start_ts: i4, snooze_end_ts: s6 }, o3;
  }
  return t(t7, e4), t7;
}(xe);
var Kt3 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.snoozePeriod = { isSnoozeOn: n3.snooze_enabled }, "number" == typeof n3.snooze_start_ts && (r4.snoozePeriod.startTs = n3.snooze_start_ts), "number" == typeof n3.snooze_end_ts && (r4.snoozePeriod.endTs = n3.snooze_end_ts), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Gt2 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.blockedUserId, i4 = e4.call(this) || this;
    return i4.method = oe.POST, i4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/block"), i4.params = { target_id: r4 }, i4;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.user = new es(t8, n3), r4;
  }
  t(t7, e4);
}(Ue);
var Wt3 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.unblockedUserId, i4 = e4.call(this) || this;
    return i4.method = oe.DELETE, i4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/block/").concat(encodeURIComponent(r4)), i4;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7() {
    return null !== e4 && e4.apply(this, arguments) || this;
  }
  t(t7, e4);
}(Ue);
var Vt2 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = e4.call(this) || this;
    return r4.method = oe.GET, r4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/push_preference"), r4;
  }
  return t(t7, e4), t7;
}(xe);
var Bt2 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.pushTriggerOption = n3.push_trigger_option, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Jt3 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.pushTriggerOption, i4 = e4.call(this) || this;
    return i4.method = oe.PUT, i4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/push_preference"), i4.params = { push_trigger_option: r4 }, i4;
  }
  return t(t7, e4), t7;
}(xe);
var Yt3 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.pushTriggerOption = n3.push_trigger_option, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Zt3 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = e4.call(this) || this;
    return r4.method = oe.GET, r4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/push/template"), r4;
  }
  return t(t7, e4), t7;
}(xe);
var $t3 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.name = n3.name, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var Xt3 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.templateName, i4 = e4.call(this) || this;
    return i4.method = oe.PUT, i4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/push/template"), i4.params = { name: r4 }, i4;
  }
  return t(t7, e4), t7;
}(xe);
var en3 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.name = n3.name, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var tn3 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.token, i4 = e4.call(this) || this;
    return i4.method = oe.GET, i4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/friends/changelogs"), i4.params = { token: r4 }, i4;
  }
  return t(t7, e4), t7;
}(xe);
var nn3 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.changelogs = { addedUsers: n3.added.map(function(e5) {
      return new es(t8, e5);
    }), updatedUsers: n3.updated.map(function(e5) {
      return new es(t8, e5);
    }), deletedUserIds: n3.deleted, hasMore: n3.has_more, token: n3.next }, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var rn3 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.discoveries, i4 = e4.call(this) || this;
    return i4.method = oe.PUT, i4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/friend_discoveries"), i4.params = { friend_discoveries: r4.map(function(e5) {
      return { friend_discovery_key: e5.friendDiscoveryKey, friend_name: e5.friendName };
    }) }, i4;
  }
  return t(t7, e4), t7;
}(xe);
var sn3 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.friendDiscoveryRequestId = n3.friend_discovery_request_id, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var on3 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.discoveryKeys, i4 = e4.call(this) || this;
    return i4.method = oe.DELETE, i4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/friend_discoveries"), i4.params = { friend_discovery_keys: r4 }, i4;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7() {
    return null !== e4 && e4.apply(this, arguments) || this;
  }
  t(t7, e4);
}(Ue);
var an3 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.userIds, i4 = e4.call(this) || this;
    return i4.method = oe.POST, i4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/friends"), i4.params = { user_ids: r4 }, i4;
  }
  return t(t7, e4), t7;
}(xe);
var un3 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.users = n3.users.map(function(e5) {
      return new es(t8, e5);
    }), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var cn3 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.userIds, i4 = e4.call(this) || this;
    return i4.method = oe.DELETE, i4.path = "".concat(ce, "/").concat(encodeURIComponent(n3), "/friends"), i4.params = { user_ids: r4 }, i4;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7() {
    return null !== e4 && e4.apply(this, arguments) || this;
  }
  t(t7, e4);
}(Ue);
var dn3 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = e4.call(this) || this;
    return r4.method = oe.GET, r4.path = "".concat(ce, "/").concat(n3, "/allow_friend_discovery"), r4.params = {}, r4;
  }
  return t(t7, e4), t7;
}(xe);
var ln3 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.allowFriendDiscovery = n3.allow_friend_discovery, r4;
  }
  return t(t7, e4), t7;
}(Ue);
var hn3 = function(e4) {
  function t7(t8) {
    var n3 = t8.userId, r4 = t8.allowFriendDiscovery, i4 = e4.call(this) || this;
    return i4.method = oe.PUT, i4.path = "".concat(ce, "/").concat(n3, "/allow_friend_discovery"), i4.params = { allow_friend_discovery: r4 }, i4;
  }
  return t(t7, e4), t7;
}(xe);
!function(e4) {
  function t7() {
    return null !== e4 && e4.apply(this, arguments) || this;
  }
  t(t7, e4);
}(Ue);
var fn3;
var pn3 = function(e4) {
  function t7() {
    var t8 = e4.call(this) || this;
    return t8.method = oe.GET, t8.path = ve, t8;
  }
  return t(t7, e4), t7;
}(xe);
var vn3 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.emojiContainer = new mt2(n3), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var gn3 = function(e4) {
  function t7(t8) {
    var n3 = t8.categoryId, r4 = e4.call(this) || this;
    return r4.method = oe.GET, r4.path = "".concat(ve, "/").concat(n3), r4;
  }
  return t(t7, e4), t7;
}(xe);
var mn3 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.emojiCategory = new gt2(n3), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var bn3 = function(e4) {
  function t7(t8) {
    var n3 = t8.key, r4 = e4.call(this) || this;
    return r4.method = oe.GET, r4.path = "".concat(ge, "/").concat(n3), r4;
  }
  return t(t7, e4), t7;
}(xe);
var _n3 = function(e4) {
  function t7(t8, n3) {
    var r4 = e4.call(this, t8, n3) || this;
    return r4.emoji = new vt2(n3), r4;
  }
  return t(t7, e4), t7;
}(Ue);
var yn3 = function(e4) {
  function t7() {
    var t8 = e4.call(this) || this;
    return t8.method = oe.GET, t8.path = "".concat(ye), t8;
  }
  return t(t7, e4), t7;
}(xe);
var wn3 = function(e4) {
  function t7(t8, n3) {
    var r4, i4 = this, s6 = null != n3 ? n3 : {};
    return (i4 = e4.call(this, t8, n3) || this).uikitConfiguration = { string: JSON.stringify(s6), json: s6 }, i4.updatedAt = null !== (r4 = null == n3 ? void 0 : n3.updated_at) && void 0 !== r4 ? r4 : 0, i4;
  }
  return t(t7, e4), t7;
}(Ue);
!function(e4) {
  e4.DELIVERED = "DELIVERED", e4.CLICKED = "CLICKED";
}(fn3 || (fn3 = {}));
var kn3;
var Sn3 = function(e4) {
  function t7(t8) {
    var n3 = t8.deviceToken, r4 = t8.pushTrackingId, i4 = t8.messageId, s6 = t8.allowedPushNotification, o3 = t8.channelKey, a5 = t8.templateKey, u4 = t8.eventType, c4 = t8.notificationEventDeadline, d5 = e4.call(this) || this;
    return d5.method = oe.POST, d5.path = Ce, d5.params = re({ device_token: n3, push_tracking_id: r4, message_id: i4, allowed_push_notification: s6, channel_key: o3, template_key: a5, event_type: u4, notification_event_deadline: c4 }), d5;
  }
  return t(t7, e4), t7;
}(xe);
var In3 = function() {
  function n3(e4, t7, n4) {
    var r4 = this;
    this._storeInitialized = false, this._iid = e4, this.options = t7;
    var s6 = Ws.of(e4), o3 = s6.sdkState, u4 = s6.cacheContext, c4 = s6.dispatcher, d5 = s6.sessionManager, l3 = s6.requestQueue, h4 = s6.logger, f4 = s6.userEventHandlers, p4 = s6.appStateToggleEnabled;
    this._onlineDetector = new kt2({ logger: h4, connectionDelegate: { reconnect: function() {
      return r(r4, void 0, void 0, function() {
        var t8, n5, r5, i4, s7, o4;
        return s(this, function(a5) {
          switch (a5.label) {
            case 0:
              if (t8 = Ws.of(e4), n5 = t8.sdkState, r5 = t8.connectionManager, (i4 = t8.sessionManager).session.hasSession) return [3, 5];
              a5.label = 1;
            case 1:
              return a5.trys.push([1, 3, , 4]), [4, r5.connect(i4.session.authToken)];
            case 2:
              return a5.sent(), [3, 4];
            case 3:
              if (s7 = a5.sent(), g(s7)) throw s7;
              return h4.debug("connect failed by reconnect event = ", s7), [3, 4];
            case 4:
              return [3, 9];
            case 5:
              if ("foreground" !== n5.appState) return [3, 9];
              a5.label = 6;
            case 6:
              return a5.trys.push([6, 8, , 9]), [4, r5.resetAndReconnect()];
            case 7:
              return a5.sent(), [3, 9];
            case 8:
              if (o4 = a5.sent(), g(o4)) throw o4;
              return h4.debug("resetAndReconnect failed by reconnect event = ", o4), [3, 9];
            case 9:
              return c4.dispatch(new r2()), [2];
          }
        });
      });
    }, disconnect: function() {
      as(function() {
        return r(r4, void 0, void 0, function() {
          return s(this, function(t8) {
            switch (t8.label) {
              case 0:
                return [4, Ws.of(e4).connectionManager.disconnect()];
              case 1:
                return t8.sent(), [2];
            }
          });
        });
      });
    } } });
    var v5 = new S2(e4, { localCacheEnabled: u4.localCacheEnabled, enableAutoResend: u4.localCacheConfig.enableAutoResend, dispatcher: c4, sdkState: o3, logger: h4 });
    n4.forEach(function(t8) {
      t8.init(e4, { sdkState: o3, cacheContext: u4, dispatcher: c4, sessionManager: d5, requestQueue: l3, logger: h4, onlineDetector: r4._onlineDetector }), r4[t8.name] = t8;
    }), this._appStateChangeDetector = new wt2({ isEnabled: p4 }), this._appStateChangeDetector.on("resume", function() {
      h4.debug("the page resumes from freeze"), r4.setForegroundState();
    }).on("pause", function() {
      h4.debug("the page freezes"), r4.setBackgroundState();
    }), c4.on(function(t8) {
      var n5;
      if (t8 instanceof kr) {
        if (t8.stateType === Sr.CONNECTED) v5.processNonAutoResendRegisteredPendingMessages();
      } else if (t8 instanceof Fe) {
        if ("USEV" === t8.code) {
          var s7 = t8.as(T).event;
          if (s7.category === C2.FRIEND_DISCOVERED) {
            var c5 = N2.getDataAsFriendDiscoveredEvent(e4, s7).friendDiscoveries;
            os(function() {
              return r(r4, void 0, void 0, function() {
                return s(this, function(e5) {
                  return [2, f4.forEach(function(e6) {
                    e6.onFriendsDiscovered && e6.onFriendsDiscovered(c5);
                  })];
                });
              });
            });
          }
        }
      } else if (t8 instanceof Nr) {
        var d6 = Ws.of(r4._iid).subscribedUnreadMessageCount, l4 = false, p5 = t8.ts;
        "number" == typeof p5 && p5 > d6.ts && (d6.all !== t8.all && (l4 = true), d6.all = t8.all >= 0 ? t8.all : 0, t8.customTypes && Object.keys(t8.customTypes).forEach(function(e5) {
          d6.customTypes[e5] !== t8.customTypes[e5] && (l4 = true), d6.customTypes[e5] = t8.customTypes[e5];
        }), l4 = l4 && d6.ts > 0, d6.ts = p5), l4 && os(function() {
          return r(r4, void 0, void 0, function() {
            return s(this, function(e5) {
              return [2, f4.forEach(function(e6) {
                e6.onTotalUnreadMessageCountChanged && e6.onTotalUnreadMessageCountChanged({ groupChannelCount: d6.all, feedChannelCount: d6.feed, customTypeUnreadCount: d6.customTypes }), e6.onTotalUnreadMessageCountUpdated && e6.onTotalUnreadMessageCountUpdated(d6.all, d6.customTypes);
              })];
            });
          });
        });
      } else t8 instanceof ts ? (u4.preference.set(r4._getUserProfileCacheKey(o3.userId), ns.payloadify(t8.userProfile)), (null === (n5 = t8.userProfile.appInfo.notificationInfo) || void 0 === n5 ? void 0 : n5.isEnabled) && u4.preference.set(xr(r4.appId), { value: true })) : t8 instanceof Me && t8.error && t8.error.isSessionInvalidatedError && (h4.debug("session revoked."), r4._internalDisconnect(t8.error));
    });
  }
  return n3.init = function(e4) {
    var t7 = e4.appId, r4 = e4.appVersion, i4 = e4.modules, s6 = void 0 === i4 ? [] : i4, o3 = e4.options, a5 = void 0 === o3 ? new R() : o3, u4 = e4.debugMode, c4 = void 0 !== u4 && u4, d5 = e4.customApiHost, l3 = e4.customWebSocketHost, h4 = e4.newInstance, f4 = void 0 !== h4 && h4, p4 = e4.logLevel, v5 = e4.localCacheEnabled, g4 = void 0 !== v5 && v5, m5 = e4.localCacheConfig, b6 = void 0 === m5 ? new F() : m5, _2 = e4.localCacheEncryption, y6 = e4.useAsyncStorageStore, w4 = void 0 === y6 ? null : y6, k3 = e4.useMMKVStorageStore, S6 = void 0 === k3 ? null : k3, I5 = e4.appStateToggleEnabled, C3 = void 0 === I5 || I5;
    if (!kn3 || f4) {
      var E4 = "su-".concat($()), T4 = null != _2 ? _2 : { encrypt: function(e5) {
        return e5;
      }, decrypt: function(e5) {
        return e5;
      } }, P2 = new Cs();
      P2.level = null != p4 ? p4 : As.WARN;
      var D3 = new Is({ encryption: T4 });
      c4 || (Ye() ? S6 ? D3 = new Ss({ MMKV: S6, encryption: T4 }) : w4 && (D3 = new Ms({ AsyncStorage: w4, encryption: T4 }), P2.warn("AsyncStorage store is deprecated due to the small size limit. Please use MMKVStorage store instead.")) : D3 = new ws({ encryption: T4 })), new Ws(E4, { appId: t7, appVersion: r4, options: a5, apiHost: null != d5 ? d5 : "https://api-".concat(t7, ".sendbird.com"), websocketHost: null != l3 ? l3 : "wss://ws-".concat(t7, ".sendbird.com"), store: D3, encryption: T4, logger: P2, localCacheEnabled: g4, localCacheConfig: b6, debugMode: c4, appStateToggleEnabled: C3 });
      var U2 = [new da(), new b3()], O4 = new n3(E4, a5, c(c([], a(s6), false), a(U2), false));
      return kn3 || (kn3 = O4), O4;
    }
    return kn3;
  }, Object.defineProperty(n3, "instance", { get: function() {
    return kn3;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3, "version", { get: function() {
    return l;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "appId", { get: function() {
    return Ws.of(this._iid).sdkState.appId;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "appInfo", { get: function() {
    var e4 = Ws.of(this._iid).appInfo;
    return null != e4 ? e4 : null;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "appVersion", { get: function() {
    var e4;
    return null !== (e4 = Ws.of(this._iid).sdkState.appVersion) && void 0 !== e4 ? e4 : "";
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "debugMode", { get: function() {
    return !!Ws.of(this._iid).debugMode;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "logLevel", { get: function() {
    return Ws.of(this._iid).logger.level;
  }, set: function(e4) {
    Ws.of(this._iid).logger.level = e4;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "isCacheEnabled", { get: function() {
    return Ws.of(this._iid).cacheContext.localCacheEnabled;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "localCacheConfig", { get: function() {
    var e4 = Ws.of(this._iid).cacheContext;
    return e4.localCacheEnabled ? e4.localCacheConfig : null;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "ekey", { get: function() {
    return Ws.of(this._iid).sessionManager.ekey;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "currentUser", { get: function() {
    var e4;
    return null !== (e4 = Ws.of(this._iid).sessionManager.currentUser) && void 0 !== e4 ? e4 : null;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "connectionState", { get: function() {
    var e4 = Ws.of(this._iid).connectionManager;
    return e4.isConnected ? mr.OPEN : e4.isConnecting ? mr.CONNECTING : mr.CLOSED;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "lastConnectedAt", { get: function() {
    var e4 = Ws.of(this._iid), t7 = e4.connectedAt;
    return e4.connectionManager.isConnected ? t7 : 0;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "fcmPushToken", { get: function() {
    var e4;
    return null !== (e4 = this._fcmPushToken) && void 0 !== e4 ? e4 : null;
  }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "apnsPushToken", { get: function() {
    var e4;
    return null !== (e4 = this._apnsPushToken) && void 0 !== e4 ? e4 : null;
  }, enumerable: false, configurable: true }), n3.prototype._getNestDBVersion = function() {
    return 7;
  }, n3.prototype._getPreferenceCacheKey = function(e4) {
    return "sendbird@".concat(this.appId, "/").concat(e4, ".pref");
  }, n3.prototype._getUserProfileCacheKey = function(e4) {
    return "sendbird@".concat(this.appId, "/").concat(e4, ".profile");
  }, n3.prototype._internalDisconnect = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n4, r4, i4;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return t7 = Ws.of(this._iid), n4 = t7.connectionManager, r4 = t7.sdkState, i4 = t7.requestQueue, this._appStateChangeDetector.stop(), this._onlineDetector.stop(), i4.cancelAll(), [4, n4.logout(e4)];
          case 1:
            return s6.sent(), [4, this.clearCachedData()];
          case 2:
            return s6.sent(), r4.appState = "foreground", [2];
        }
      });
    });
  }, n3.prototype.getMemoryStoreForDebugging = function() {
    var e4 = Ws.of(this._iid), t7 = e4.debugMode, n4 = e4.cacheContext;
    if (t7) return n4.store instanceof Is ? n4.store : null;
    throw v.debugModeRequired;
  }, n3.prototype.addExtension = function(e4, t7) {
    var n4 = Ws.of(this._iid).sdkState;
    ["sb_uikit", "sb_syncmanager", "device-os-platform"].indexOf(e4) > -1 && n4.extensions && (n4.extensions[e4] = t7);
  }, n3.prototype.addSendbirdExtensions = function(e4, t7, n4) {
    var r4, i4, s6 = Ws.of(this._iid), o3 = s6.logger, a5 = s6.sdkState, u4 = new RegExp(Je);
    if (0 === e4.length) return o3.debug("sb.addSendbirdExtensions() has failed because the given sendbirdExtensions is empty."), false;
    if (e4.find(function(e5) {
      return !u4.test(e5.version);
    })) return o3.debug("sb.addSendbirdExtensions() has failed because the given version did not satisfy the SemVer specification."), false;
    if (n4) try {
      for (var c4 = o(Object.entries(n4)), d5 = c4.next(); !d5.done; d5 = c4.next()) {
        var l3 = a(d5.value, 2), h4 = l3[0], f4 = l3[1];
        if (/&|=/.test(h4) || /&|=/.test(f4)) return o3.debug("sb.addSendbirdExtensions() has failed because the given customData includes at least one invalid character: = or &."), false;
      }
    } catch (e5) {
      r4 = { error: e5 };
    } finally {
      try {
        d5 && !d5.done && (i4 = c4.return) && i4.call(c4);
      } finally {
        if (r4) throw r4.error;
      }
    }
    return a5.sendbirdRuntimeEnvironment = { sendbirdExtensions: e4, deviceOS: t7, customData: n4 }, true;
  }, n3.prototype.setOnlineListener = function(e4) {
    this._onlineDetector.setOnlineListener(e4);
  }, n3.prototype.setOfflineListener = function(e4) {
    this._onlineDetector.setOfflineListener(e4);
  }, n3.prototype._safeInitializeStore = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7;
      return s(this, function(n4) {
        switch (n4.label) {
          case 0:
            t7 = Ws.of(this._iid).cacheContext, n4.label = 1;
          case 1:
            return n4.trys.push([1, 3, , 5]), [4, t7.store.init(e4)];
          case 2:
            return n4.sent(), this._storeInitialized = true, [3, 5];
          case 3:
            return n4.sent(), t7.replaceStore(new Is()), [4, this._safeInitializeStore(e4)];
          case 4:
            return n4.sent(), [3, 5];
          case 5:
            return [2];
        }
      });
    });
  }, n3.prototype.setLocaleForChatbot = function(e4) {
    var t7 = Ws.of(this._iid).sdkState, n4 = function(e5) {
      return e5.replace(/[^a-zA-Z-_.]/g, "");
    }(e4.trim());
    n4 && (t7.localeForChatbot = n4);
  }, n3.prototype.initializeCache = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n4, r4, i4, s6, o3, u4, c4, d5;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            if (t7 = Ws.of(this._iid), n4 = t7.sdkState, r4 = t7.cacheContext, i4 = t7.dispatcher, s6 = t7.logger, n4.userId && n4.userId === e4) return [3, 13];
            o3 = "sendbird@".concat(n4.appId, "/").concat(e4, ".db"), a5.label = 1;
          case 1:
            return a5.trys.push([1, 9, 11, 13]), r4.localCacheEnabled ? r4.nestdb && r4.nestdb.state !== Ts.CLOSED && r4.nestdb.name === o3 ? [3, 3] : (u4 = "sendbird@".concat(n4.appId, "/").concat(e4, ".db"), (c4 = r4.nestdb = new Us({ name: u4, version: this._getNestDBVersion(), store: r4.store, config: new Ui({ dbname: u4, itemSizeLimit: 61440 }) })).on("upgrade", _t2(c4)), c4.on("storeReplaced", function(e5) {
              r4.replaceStore(e5), r4.localCacheEnabled = false, c4.on("upgrade", _t2(c4));
            }), [4, c4.open()]) : [3, 6];
          case 2:
            return a5.sent(), this._storeInitialized = true, i4.dispatch(new v2(this._iid, { userId: e4 })), [3, 5];
          case 3:
            return [4, this._safeInitializeStore(o3)];
          case 4:
            a5.sent(), a5.label = 5;
          case 5:
            return n4.userId = e4, [3, 8];
          case 6:
            return [4, this._safeInitializeStore(o3)];
          case 7:
            a5.sent(), n4.userId = e4, a5.label = 8;
          case 8:
            return [3, 13];
          case 9:
            return d5 = a5.sent(), s6.warn("Nest DB Open Failed. ", d5), r4.store instanceof Is || (r4.replaceStore(new Is()), r4.localCacheEnabled = false), [4, this._safeInitializeStore(o3)];
          case 10:
            throw a5.sent(), n4.userId = e4, v.databaseError;
          case 11:
            return [4, this._setupPreference(e4)];
          case 12:
            return a5.sent(), [7];
          case 13:
            return [2];
        }
      });
    });
  }, n3.prototype.getCacheDataSize = function() {
    return r(this, void 0, void 0, function() {
      var e4;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return (e4 = Ws.of(this._iid).cacheContext).localCacheEnabled && e4.nestdb ? [4, e4.nestdb.estimateUsage()] : [3, 2];
          case 1:
            return [2, t7.sent()];
          case 2:
            return [2, 0];
        }
      });
    });
  }, n3.prototype.clearCachedData = function() {
    return r(this, void 0, void 0, function() {
      var e4;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return (e4 = Ws.of(this._iid).cacheContext).localCacheEnabled && e4.nestdb ? [4, e4.nestdb.clear()] : [3, 2];
          case 1:
            t7.sent(), t7.label = 2;
          case 2:
            return this._storeInitialized ? [4, e4.preference.clear()] : [3, 4];
          case 3:
            t7.sent(), t7.label = 4;
          case 4:
            return [2];
        }
      });
    });
  }, n3.prototype.clearCachedMessages = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n4, r4 = this;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return Jr(N("string", e4)).throw(v.invalidParameters), t7 = Qs.of(this._iid), n4 = Ks2.of(this._iid), t7 && n4 ? [4, Promise.all(e4.map(function(e5) {
              return r(r4, void 0, void 0, function() {
                return s(this, function(r5) {
                  switch (r5.label) {
                    case 0:
                      return [4, t7.removeMessagesOfChannel(e5)];
                    case 1:
                      return r5.sent(), [4, n4.removeMessagesOfChannel(e5)];
                    case 2:
                      return r5.sent(), [2];
                  }
                });
              });
            }))] : [3, 2];
          case 1:
            s6.sent(), s6.label = 2;
          case 2:
            return [2];
        }
      });
    });
  }, n3.prototype._setupPreference = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n4, r4, i4, s6;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return t7 = Ws.of(this._iid), n4 = t7.sdkState, r4 = t7.cacheContext, i4 = t7.statManager, [4, r4.preference.init(this._getPreferenceCacheKey(e4), this._getNestDBVersion())];
          case 1:
            return o3.sent(), [4, r4.preference.get(this._getUserProfileCacheKey(e4))];
          case 2:
            return (s6 = o3.sent()) && new ns(this._iid, s6).apply(), [4, i4.init("sendbird@".concat(n4.appId, "/").concat(e4, ".statlog"))];
          case 3:
            return o3.sent(), [2];
        }
      });
    });
  }, n3.prototype._ready = function(e4, n4, r4) {
    return void 0 === r4 && (r4 = {}), r(this, void 0, void 0, function() {
      var i4, s6, o3, u4, c4, d5;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return Jr(w("string", e4) && w("string", n4, true)).throw(v.invalidParameters), i4 = Ws.of(this._iid), s6 = i4.sdkState, o3 = i4.cacheContext, u4 = i4.connectionManager, c4 = r4.errorForOtherUser, s6.userId && s6.userId !== e4 ? c4 ? [3, 2] : [4, u4.logout()] : [3, 3];
          case 1:
            return a5.sent(), [3, 3];
          case 2:
            throw c4;
          case 3:
            return a5.trys.push([3, 5, , 6]), [4, this.initializeCache(e4)];
          case 4:
            return a5.sent(), Ws.of(this._iid).dispatcher.dispatch(new D()), [3, 6];
          case 5:
            return a5.sent(), d5 = Ws.of(this._iid).logger, o3.localCacheEnabled = false, d5.warn("Cache initialization failed - cache is not available."), [3, 6];
          case 6:
            return [2];
        }
      });
    });
  }, n3.prototype.authenticateFeed = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n4) {
        switch (n4.label) {
          case 0:
            return [4, this.authenticate(e4, t7)];
          case 1:
            return [2, n4.sent()];
        }
      });
    });
  }, n3.prototype.authenticate = function(e4, t7) {
    var n4;
    return r(this, void 0, void 0, function() {
      var r4, i4, s6, o3;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return r4 = Ws.of(this._iid), i4 = r4.sessionManager, s6 = r4.connectionManager, [4, this._ready(e4, t7, { errorForOtherUser: s6.isConnected ? v.alreadyConnectedAsAnotherUser : void 0 })];
          case 1:
            return a5.sent(), (null === (n4 = i4.session.services) || void 0 === n4 ? void 0 : n4.includes(P.CHAT)) ? [3, 3] : (t7 || i4.handler || (o3 = new vi(), this.setSessionHandler(o3)), [4, i4.authenticate(e4, t7)]);
          case 2:
            a5.sent(), a5.label = 3;
          case 3:
            return [2, this.currentUser];
        }
      });
    });
  }, n3.prototype.connect = function(e4, t7) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n4) {
        switch (n4.label) {
          case 0:
            return [4, this._ready(e4, t7)];
          case 1:
            n4.sent(), n4.label = 2;
          case 2:
            return n4.trys.push([2, , 4, 5]), [4, Ws.of(this._iid).connectionManager.connect(t7)];
          case 3:
            return n4.sent(), [3, 5];
          case 4:
            return this._onlineDetector.start(), this._appStateChangeDetector.start(), [7];
          case 5:
            return [2, this.currentUser];
        }
      });
    });
  }, n3.prototype.reconnect = function() {
    var e4 = Ws.of(this._iid), t7 = e4.connectionManager, n4 = e4.sdkState, r4 = e4.sessionManager.session.hasSession;
    return r4 && (this._appStateChangeDetector.start(), this._onlineDetector.start(), t7.resetAndReconnect().then(function() {
      n4.appState = "foreground";
    }).catch(function() {
    })), r4;
  }, n3.prototype.disconnect = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, this._internalDisconnect()];
          case 1:
            return e4.sent(), [2];
        }
      });
    });
  }, n3.prototype.disconnectWebSocket = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n4;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return e4 = Ws.of(this._iid), t7 = e4.connectionManager, n4 = e4.requestQueue, this._appStateChangeDetector.stop(), this._onlineDetector.stop(), n4.cancelAll(), [4, t7.disconnectWebSocket(true)];
          case 1:
            return r4.sent(), [2];
        }
      });
    });
  }, n3.prototype.setBackgroundState = function() {
    var e4 = Ws.of(this._iid), t7 = e4.connectionManager, n4 = e4.sdkState, r4 = e4.logger;
    "foreground" === n4.appState && (n4.appState = "background", r4.debug("going background state"), t7.background().catch(function(e5) {
      r4.debug("setBackgroundState error = ", e5);
    }));
  }, n3.prototype.setForegroundState = function() {
    var e4 = Ws.of(this._iid), t7 = e4.connectionManager, n4 = e4.sdkState, r4 = e4.dispatcher, i4 = e4.logger;
    "background" === n4.appState && (n4.appState = "foreground", i4.debug("going foreground state"), t7.resetAndReconnect().catch(function(e5) {
      i4.debug("setForgroundState error = ", e5);
    }), r4.dispatch(new r2()));
  }, n3.prototype.setSessionHandler = function(e4) {
    Jr(e4 instanceof vi).throw(v.invalidParameters), Ws.of(this._iid).sessionManager.handler = e4;
  }, n3.prototype.addUserEventHandler = function(e4, n4) {
    Jr(w("string", e4) && n4 instanceof yi).throw(v.invalidParameters), Ws.of(this._iid).userEventHandlers.set(e4, n4);
  }, n3.prototype.removeUserEventHandler = function(e4) {
    Ws.of(this._iid).userEventHandlers.delete(e4);
  }, n3.prototype.removeAllUserEventHandler = function() {
    Ws.of(this._iid).userEventHandlers.clear();
  }, n3.prototype.addConnectionHandler = function(e4, n4) {
    Jr(w("string", e4) && n4 instanceof mi).throw(v.invalidParameters), Ws.of(this._iid).connectionHandlers.set(e4, n4);
  }, n3.prototype.removeConnectionHandler = function(e4) {
    Ws.of(this._iid).connectionHandlers.delete(e4);
  }, n3.prototype.removeAllConnectionHandler = function() {
    Ws.of(this._iid).connectionHandlers.clear();
  }, n3.prototype.createApplicationUserListQuery = function(e4) {
    return void 0 === e4 && (e4 = {}), new bi(this._iid, e4);
  }, n3.prototype.createBlockedUserListQuery = function(e4) {
    return void 0 === e4 && (e4 = {}), new Ti(this._iid, e4);
  }, n3.prototype.createFriendListQuery = function(e4) {
    return void 0 === e4 && (e4 = {}), new Si(this._iid, e4);
  }, n3.prototype.createMessageSearchQuery = function(e4) {
    return new sa(this._iid, e4);
  }, n3.prototype.createPollListQuery = function(e4) {
    return new xo(this._iid, n({}, e4));
  }, n3.prototype.createPollVoterListQuery = function(e4) {
    return new Mo(this._iid, n({}, e4));
  }, n3.prototype.buildUserFromSerializedData = function(e4) {
    var t7 = Xr(e4);
    return new es(this._iid, es.payloadify(t7));
  }, n3.prototype.updateCurrentUserInfo = function(n4) {
    return void 0 === n4 && (n4 = {}), r(this, void 0, void 0, function() {
      var r4, i4, s6, o3, u4, c4, d5;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return r4 = n(n({}, bt2), n4), Jr(function(n5) {
              return k(n5.profileImage, true) && w("string", n5.profileUrl, true) && w("string", n5.nickname, true);
            }(r4)).throw(v.invalidParameters), this.currentUser ? (i4 = Ws.of(this._iid), s6 = i4.sdkState, o3 = i4.requestQueue, u4 = new St2(n({ userId: s6.userId }, r4)), [4, o3.send(u4)]) : [3, 2];
          case 1:
            return c4 = a5.sent(), d5 = c4.as(It2).user, this.currentUser && (r4.nickname && (this.currentUser.nickname = d5.nickname), (r4.profileUrl || r4.profileImage) && (this.currentUser.plainProfileUrl = d5.profileUrl)), [2, d5];
          case 2:
            throw v.connectionRequired;
        }
      });
    });
  }, n3.prototype.updateCurrentUserInfoWithPreferredLanguages = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n4, r4, i4, s6, o3;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return Jr(N("string", e4)).throw(v.invalidParameters), this.currentUser ? (t7 = Ws.of(this._iid), n4 = t7.sdkState, r4 = t7.requestQueue, i4 = new St2({ userId: n4.userId, preferredLanguages: e4 }), [4, r4.send(i4)]) : [3, 2];
          case 1:
            return s6 = a5.sent(), o3 = s6.as(It2).user, this.currentUser && (this.currentUser.preferredLanguages = o3.preferredLanguages), [2, o3];
          case 2:
            throw v.connectionRequired;
        }
      });
    });
  }, n3.prototype.registerFCMPushTokenForCurrentUser = function(e4, n4) {
    var r4, s6;
    return r(this, void 0, void 0, function() {
      var o3, u4, c4, d5, l3, h4, f4 = this;
      return s(this, function(p4) {
        switch (p4.label) {
          case 0:
            if (Jr(w("string", e4) && w("string", null == n4 ? void 0 : n4.deviceManufacturer, true)).throw(v.invalidParameters), (null == n4 ? void 0 : n4.deviceOS) && Jr(S(We, n4.deviceOS.platform, true) && w("string", n4.deviceOS.version, true)).throw(v.invalidParameters), !this.currentUser) return [3, 6];
            o3 = { deviceOS: "".concat((null === (r4 = null == n4 ? void 0 : n4.deviceOS) || void 0 === r4 ? void 0 : r4.platform) || We.ANDROID, "-").concat((null === (s6 = null == n4 ? void 0 : n4.deviceOS) || void 0 === s6 ? void 0 : s6.version) || "unknown"), deviceManufacturer: null == n4 ? void 0 : n4.deviceManufacturer, systemPushEnabled: null == n4 ? void 0 : n4.systemPushEnabled }, p4.label = 1;
          case 1:
            return p4.trys.push([1, 4, , 5]), u4 = Ws.of(this._iid), c4 = u4.sessionManager, d5 = u4.sdkState, l3 = u4.requestQueue, c4.hasDeviceToken(f.FCM, e4) ? [2, d.SUCCESS] : (h4 = new Et2({ userId: d5.userId, token: e4, deviceOS: o3.deviceOS, deviceManufacturer: o3.deviceManufacturer, systemPushEnabled: o3.systemPushEnabled }), [4, l3.send(h4)]);
          case 2:
            return p4.sent(), [4, as(function() {
              return r(f4, void 0, void 0, function() {
                return s(this, function(t7) {
                  switch (t7.label) {
                    case 0:
                      return c4.setDeviceToken(f.FCM, e4, o3), [4, c4.saveDeviceToken()];
                    case 1:
                      return t7.sent(), [2];
                  }
                });
              });
            })];
          case 3:
            return p4.sent(), this._fcmPushToken = "", [2, d.SUCCESS];
          case 4:
            return p4.sent(), [2, d.ERROR];
          case 5:
            return [3, 7];
          case 6:
            return this._fcmPushToken = e4, [2, d.PENDING];
          case 7:
            return [2];
        }
      });
    });
  }, n3.prototype.unregisterFCMPushTokenForCurrentUser = function(e4) {
    return r(this, void 0, void 0, function() {
      var n4, r4, s6, o3, u4, c4, d5 = this;
      return s(this, function(l3) {
        switch (l3.label) {
          case 0:
            if (Jr(w("string", e4)).throw(v.invalidParameters), !this.currentUser) return [3, 6];
            l3.label = 1;
          case 1:
            return l3.trys.push([1, 4, , 5]), n4 = Ws.of(this._iid), r4 = n4.sessionManager, s6 = n4.sdkState, o3 = n4.requestQueue, u4 = new Pt2({ userId: s6.userId, token: e4 }), [4, o3.send(u4)];
          case 2:
            return c4 = l3.sent().lastDeletedAt, [4, as(function() {
              return r(d5, void 0, void 0, function() {
                return s(this, function(t7) {
                  switch (t7.label) {
                    case 0:
                      return r4.unsetDeviceToken(f.FCM, e4), r4.setDeviceTokenDeletedAt(c4), [4, r4.saveDeviceToken()];
                    case 1:
                      return t7.sent(), [2];
                  }
                });
              });
            })];
          case 3:
            return l3.sent(), this._fcmPushToken = "", [2, d.SUCCESS];
          case 4:
            return l3.sent(), [2, d.ERROR];
          case 5:
            return [3, 7];
          case 6:
            return this._fcmPushToken = e4, [2, d.PENDING];
          case 7:
            return [2];
        }
      });
    });
  }, n3.prototype.unregisterFCMPushTokenAllForCurrentUser = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n4, r4, s6, o3, u4 = this;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return this.currentUser ? (e4 = Ws.of(this._iid), t7 = e4.sessionManager, n4 = e4.sdkState, r4 = e4.requestQueue, s6 = new Ut2({ userId: n4.userId }), [4, r4.send(s6)]) : [3, 3];
          case 1:
            return o3 = c4.sent().lastDeletedAt, [4, as(function() {
              return r(u4, void 0, void 0, function() {
                return s(this, function(e5) {
                  switch (e5.label) {
                    case 0:
                      return t7.unsetDeviceTokens(f.FCM), t7.setDeviceTokenDeletedAt(o3), [4, t7.saveDeviceToken()];
                    case 1:
                      return e5.sent(), [2];
                  }
                });
              });
            })];
          case 2:
            c4.sent(), c4.label = 3;
          case 3:
            return [2];
        }
      });
    });
  }, n3.prototype.registerAPNSPushTokenForCurrentUser = function(e4, n4) {
    var r4, s6;
    return r(this, void 0, void 0, function() {
      var o3, u4, c4, d5, l3, h4, f4 = this;
      return s(this, function(p4) {
        switch (p4.label) {
          case 0:
            if (Jr(w("string", e4) && w("string", null == n4 ? void 0 : n4.deviceManufacturer, true)).throw(v.invalidParameters), (null == n4 ? void 0 : n4.deviceOS) && Jr(S(We, n4.deviceOS.platform, true) && w("string", n4.deviceOS.version, true)).throw(v.invalidParameters), !this.currentUser) return [3, 6];
            o3 = { deviceOS: "".concat((null === (r4 = null == n4 ? void 0 : n4.deviceOS) || void 0 === r4 ? void 0 : r4.platform) || We.IOS, "-").concat((null === (s6 = null == n4 ? void 0 : n4.deviceOS) || void 0 === s6 ? void 0 : s6.version) || "unknown"), deviceManufacturer: null == n4 ? void 0 : n4.deviceManufacturer, systemPushEnabled: null == n4 ? void 0 : n4.systemPushEnabled }, p4.label = 1;
          case 1:
            return p4.trys.push([1, 4, , 5]), u4 = Ws.of(this._iid), c4 = u4.sessionManager, d5 = u4.sdkState, l3 = u4.requestQueue, c4.hasDeviceToken(f.APNS, e4) ? [2, d.SUCCESS] : (h4 = new Ct2({ userId: d5.userId, token: e4, deviceOS: o3.deviceOS, deviceManufacturer: o3.deviceManufacturer, systemPushEnabled: o3.systemPushEnabled }), [4, l3.send(h4)]);
          case 2:
            return p4.sent(), [4, as(function() {
              return r(f4, void 0, void 0, function() {
                return s(this, function(t7) {
                  switch (t7.label) {
                    case 0:
                      return c4.setDeviceToken(f.APNS, e4, o3), [4, c4.saveDeviceToken()];
                    case 1:
                      return t7.sent(), [2];
                  }
                });
              });
            })];
          case 3:
            return p4.sent(), this._apnsPushToken = "", [2, d.SUCCESS];
          case 4:
            return p4.sent(), [2, d.ERROR];
          case 5:
            return [3, 7];
          case 6:
            return this._apnsPushToken = e4, [2, d.PENDING];
          case 7:
            return [2];
        }
      });
    });
  }, n3.prototype.unregisterAPNSPushTokenForCurrentUser = function(e4) {
    return r(this, void 0, void 0, function() {
      var n4, r4, s6, o3, u4, c4, d5 = this;
      return s(this, function(l3) {
        switch (l3.label) {
          case 0:
            if (Jr(w("string", e4)).throw(v.invalidParameters), !this.currentUser) return [3, 6];
            l3.label = 1;
          case 1:
            return l3.trys.push([1, 4, , 5]), n4 = Ws.of(this._iid), r4 = n4.sessionManager, s6 = n4.sdkState, o3 = n4.requestQueue, u4 = new Tt2({ userId: s6.userId, token: e4 }), [4, o3.send(u4)];
          case 2:
            return c4 = l3.sent().lastDeletedAt, [4, as(function() {
              return r(d5, void 0, void 0, function() {
                return s(this, function(t7) {
                  switch (t7.label) {
                    case 0:
                      return r4.unsetDeviceToken(f.APNS, e4), r4.setDeviceTokenDeletedAt(c4), [4, r4.saveDeviceToken()];
                    case 1:
                      return t7.sent(), [2];
                  }
                });
              });
            })];
          case 3:
            return l3.sent(), this._apnsPushToken = "", [2, d.SUCCESS];
          case 4:
            return l3.sent(), [2, d.ERROR];
          case 5:
            return [3, 7];
          case 6:
            return this._apnsPushToken = e4, [2, d.PENDING];
          case 7:
            return [2];
        }
      });
    });
  }, n3.prototype.unregisterAPNSPushTokenAllForCurrentUser = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n4, r4, s6, o3, u4 = this;
      return s(this, function(c4) {
        switch (c4.label) {
          case 0:
            return this.currentUser ? (e4 = Ws.of(this._iid), t7 = e4.sessionManager, n4 = e4.sdkState, r4 = e4.requestQueue, s6 = new Dt2({ userId: n4.userId }), [4, r4.send(s6)]) : [3, 3];
          case 1:
            return o3 = c4.sent().lastDeletedAt, [4, as(function() {
              return r(u4, void 0, void 0, function() {
                return s(this, function(e5) {
                  switch (e5.label) {
                    case 0:
                      return t7.unsetDeviceTokens(f.APNS), t7.setDeviceTokenDeletedAt(o3), [4, t7.saveDeviceToken()];
                    case 1:
                      return e5.sent(), [2];
                  }
                });
              });
            })];
          case 2:
            c4.sent(), c4.label = 3;
          case 3:
            return [2];
        }
      });
    });
  }, n3.prototype.markPushNotificationAsDelivered = function(e4, t7) {
    var n4;
    return void 0 === t7 && (t7 = true), r(this, void 0, void 0, function() {
      var r4, i4, s6, o3, u4, c4, d5, l3, h4, f4, p4, v5, g4, m5, b6, _2, y6, w4, k3;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            if (r4 = Ws.of(this._iid), i4 = r4.logger, s6 = r4.sessionManager, o3 = r4.requestQueue, u4 = r4.pushNotificationAckManager, i4.debug("markPushNotificationAsDelivered:", e4), c4 = fn3.DELIVERED, d5 = u4.parseData(e4), l3 = d5.pushTrackingId, h4 = d5.sessionTopics, f4 = d5.sessionKey, p4 = d5.messageId, v5 = d5.channelKey, g4 = d5.templateKey, m5 = d5.notificationEventDeadline, !f4) throw i4.info("Can't use markPushNotificationAsDelivered() feature."), v.malformedDataError;
            if (!h4.includes(Ps.PUSH_ACKNOWLEDGEMENT)) throw i4.info("Can't use markPushNotificationAsDelivered() feature."), v.malformedDataError;
            if (u4.isAcked(l3, c4)) return i4.info("already delivered push notification:", l3), [2];
            b6 = Boolean(v5), _2 = t7 && b6, y6 = null === (n4 = s6.deviceTokens[0]) || void 0 === n4 ? void 0 : n4.token, w4 = new Sn3({ deviceToken: null != y6 ? y6 : "", pushTrackingId: l3, eventType: c4, messageId: p4, channelKey: v5, templateKey: g4, notificationEventDeadline: m5, allowedPushNotification: _2 }), f4 && (w4.headers["Session-Key"] = f4), a5.label = 1;
          case 1:
            return a5.trys.push([1, 3, , 4]), [4, o3.send(w4)];
          case 2:
            return a5.sent(), u4.markAsAcked(l3, c4), [3, 4];
          case 3:
            throw k3 = a5.sent(), i4.debug("failed to mark push notification as delivered. push tracking id: ".concat(l3, ". error: ").concat(k3)), k3;
          case 4:
            return [2];
        }
      });
    });
  }, n3.prototype.markPushNotificationAsClicked = function(e4) {
    var t7;
    return r(this, void 0, void 0, function() {
      var n4, r4, i4, s6, o3, u4, c4, d5, l3, h4, f4, p4, v5, g4, m5, b6, _2;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            if (n4 = Ws.of(this._iid), r4 = n4.logger, i4 = n4.sessionManager, s6 = n4.requestQueue, o3 = n4.pushNotificationAckManager, r4.debug("markPushNotificationAsClicked:", e4), u4 = fn3.CLICKED, c4 = o3.parseData(e4), d5 = c4.pushTrackingId, l3 = c4.sessionTopics, h4 = c4.sessionKey, f4 = c4.messageId, p4 = c4.channelKey, v5 = c4.templateKey, g4 = c4.notificationEventDeadline, !h4) throw r4.info("Can't use markPushNotificationAsDelivered() feature."), v.malformedDataError;
            if (!l3.includes(Ps.PUSH_ACKNOWLEDGEMENT)) throw r4.info("Can't use markPushNotificationAsDelivered() feature."), v.malformedDataError;
            if (o3.isAcked(d5, u4)) return r4.info("already clicked push notification:", d5), [2];
            m5 = null === (t7 = i4.deviceTokens[0]) || void 0 === t7 ? void 0 : t7.token, b6 = new Sn3({ deviceToken: null != m5 ? m5 : "", pushTrackingId: d5, eventType: u4, messageId: f4, channelKey: p4, templateKey: v5, notificationEventDeadline: g4 }), h4 && (b6.headers["Session-Key"] = h4), a5.label = 1;
          case 1:
            return a5.trys.push([1, 3, , 4]), [4, s6.send(b6)];
          case 2:
            return a5.sent(), o3.markAsAcked(d5, u4), [3, 4];
          case 3:
            throw _2 = a5.sent(), r4.debug("failed to mark push notification as clicked. push tracking id: ".concat(d5, ". error: ").concat(_2)), _2;
          case 4:
            return [2];
        }
      });
    });
  }, n3.prototype.getChannelInvitationPreference = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n4, r4, i4;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return e4 = Ws.of(this._iid), t7 = e4.sdkState, n4 = e4.requestQueue, r4 = new Nt2({ userId: t7.userId }), [4, n4.send(r4)];
          case 1:
            return i4 = s6.sent(), [2, { autoAccept: i4.as(Mt2).autoAccept }];
        }
      });
    });
  }, n3.prototype.setChannelInvitationPreference = function(e4) {
    return r(this, void 0, void 0, function() {
      var n4, r4, i4, s6, o3;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return Jr(w("boolean", e4)).throw(v.invalidParameters), n4 = Ws.of(this._iid), r4 = n4.sdkState, i4 = n4.requestQueue, s6 = new Lt2({ userId: r4.userId, willAutoAccept: e4 }), [4, i4.send(s6)];
          case 1:
            return o3 = a5.sent(), [2, { autoAccept: o3.as(Rt2).autoAccept }];
        }
      });
    });
  }, n3.prototype.getDoNotDisturb = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n4, r4, i4;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return e4 = Ws.of(this._iid), t7 = e4.sdkState, n4 = e4.requestQueue, r4 = new zt2({ userId: t7.userId }), [4, n4.send(r4)];
          case 1:
            return i4 = s6.sent(), [2, i4.as(Qt3).preference];
        }
      });
    });
  }, n3.prototype.setDoNotDisturb = function(e4, n4, r4, s6, o3, u4) {
    return void 0 === n4 && (n4 = 0), void 0 === r4 && (r4 = 0), void 0 === s6 && (s6 = 0), void 0 === o3 && (o3 = 0), void 0 === u4 && (u4 = ""), r(this, void 0, void 0, function() {
      var i4, c4, d5, l3, h4;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return Jr(w("boolean", e4) && w("number", n4) && w("number", r4) && w("number", s6) && w("number", o3) && w("string", u4)).throw(v.invalidParameters), i4 = Ws.of(this._iid), c4 = i4.sdkState, d5 = i4.requestQueue, l3 = new jt2({ userId: c4.userId, doNotDisturbOn: e4, startHour: n4, startMin: r4, endHour: s6, endMin: o3, timezone: u4 }), [4, d5.send(l3)];
          case 1:
            return h4 = a5.sent(), [2, h4.as(Ft2).preference];
        }
      });
    });
  }, n3.prototype.getSnoozePeriod = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n4, r4, i4;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return e4 = Ws.of(this._iid), t7 = e4.sdkState, n4 = e4.requestQueue, r4 = new qt2({ userId: t7.userId }), [4, n4.send(r4)];
          case 1:
            return i4 = s6.sent(), [2, i4.as(Ht2).snoozePeriod];
        }
      });
    });
  }, n3.prototype.setSnoozePeriod = function(e4, n4, r4) {
    return void 0 === n4 && (n4 = 0), void 0 === r4 && (r4 = 0), r(this, void 0, void 0, function() {
      var i4, s6, o3, u4, c4;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return Jr(w("boolean", e4) && w("number", n4) && w("number", r4)).throw(v.invalidParameters), i4 = Ws.of(this._iid), s6 = i4.sdkState, o3 = i4.requestQueue, u4 = new xt2({ userId: s6.userId, snoozeOn: e4, startTs: n4, endTs: r4 }), [4, o3.send(u4)];
          case 1:
            return c4 = a5.sent(), [2, c4.as(Kt3).snoozePeriod];
        }
      });
    });
  }, n3.prototype.getMyPushTokensByToken = function(e4, n4) {
    return r(this, void 0, void 0, function() {
      var r4, i4, s6, o3, u4, c4, d5, l3, h4, f4, p4, v5;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return Jr(w("string", e4) && S(f, n4)).throw(v.invalidParameters), r4 = Ws.of(this._iid), i4 = r4.sdkState, s6 = r4.requestQueue, o3 = r4.sessionManager, u4 = new Ot2({ userId: i4.userId, type: n4, token: e4 }), [4, s6.send(u4)];
          case 1:
            c4 = a5.sent(), d5 = c4.as(At2).pushTokens;
            try {
              for (l3 = o(d5.deviceTokens), h4 = l3.next(); !h4.done; h4 = l3.next()) f4 = h4.value, o3.setDeviceToken(d5.type, f4);
            } catch (e5) {
              p4 = { error: e5 };
            } finally {
              try {
                h4 && !h4.done && (v5 = l3.return) && v5.call(l3);
              } finally {
                if (p4) throw p4.error;
              }
            }
            return [4, o3.saveDeviceToken()];
          case 2:
            return a5.sent(), [2, d5];
        }
      });
    });
  }, n3.prototype.getPushTriggerOption = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n4, r4;
      return s(this, function(i4) {
        switch (i4.label) {
          case 0:
            return e4 = Ws.of(this._iid), t7 = e4.sdkState, n4 = e4.requestQueue, r4 = new Vt2({ userId: t7.userId }), [4, n4.send(r4)];
          case 1:
            return [2, i4.sent().as(Bt2).pushTriggerOption];
        }
      });
    });
  }, n3.prototype.setPushTriggerOption = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n4, r4, i4;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return Jr(S(_, e4)).throw(v.invalidParameters), t7 = Ws.of(this._iid), n4 = t7.sdkState, r4 = t7.requestQueue, i4 = new Jt3({ userId: n4.userId, pushTriggerOption: e4 }), [4, r4.send(i4)];
          case 1:
            return [2, s6.sent().as(Yt3).pushTriggerOption];
        }
      });
    });
  }, n3.prototype.getPushTemplate = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n4, r4;
      return s(this, function(i4) {
        switch (i4.label) {
          case 0:
            return e4 = Ws.of(this._iid), t7 = e4.sdkState, n4 = e4.requestQueue, r4 = new Zt3({ userId: t7.userId }), [4, n4.send(r4)];
          case 1:
            return [2, i4.sent().as($t3).name];
        }
      });
    });
  }, n3.prototype.setPushTemplate = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n4, r4, i4;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return Jr(S(p, e4)).throw(v.invalidParameters), t7 = Ws.of(this._iid), n4 = t7.sdkState, r4 = t7.requestQueue, i4 = new Xt3({ userId: n4.userId, templateName: e4 }), [4, r4.send(i4)];
          case 1:
            return [2, s6.sent().as(en3).name];
        }
      });
    });
  }, n3.prototype.blockUser = function(e4) {
    return r(this, void 0, void 0, function() {
      var n4, r4, i4, s6;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return Jr(e4 instanceof es || w("string", e4)).throw(v.invalidParameters), n4 = Ws.of(this._iid), r4 = n4.sdkState, i4 = n4.requestQueue, s6 = new Gt2({ userId: r4.userId, blockedUserId: e4 instanceof es ? e4.userId : e4 }), [4, i4.send(s6)];
          case 1:
            return o3.sent(), [2];
        }
      });
    });
  }, n3.prototype.blockUserWithUserId = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        return [2, this.blockUser(e4)];
      });
    });
  }, n3.prototype.unblockUser = function(e4) {
    return r(this, void 0, void 0, function() {
      var n4, r4, i4, s6;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return Jr(e4 instanceof es || w("string", e4)).throw(v.invalidParameters), n4 = Ws.of(this._iid), r4 = n4.sdkState, i4 = n4.requestQueue, s6 = new Wt3({ userId: r4.userId, unblockedUserId: e4 instanceof es ? e4.userId : e4 }), [4, i4.send(s6)];
          case 1:
            return o3.sent(), [2];
        }
      });
    });
  }, n3.prototype.unblockUserWithUserId = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        return [2, this.unblockUser(e4)];
      });
    });
  }, n3.prototype.getFriendChangeLogsByToken = function(e4) {
    return r(this, void 0, void 0, function() {
      var n4, r4, i4, s6, o3;
      return s(this, function(a5) {
        switch (a5.label) {
          case 0:
            return Jr(w("string", e4)).throw(v.invalidParameters), n4 = Ws.of(this._iid), r4 = n4.sdkState, i4 = n4.requestQueue, s6 = new tn3({ userId: r4.userId, token: e4 }), [4, i4.send(s6)];
          case 1:
            return o3 = a5.sent(), [2, o3.as(nn3).changelogs];
        }
      });
    });
  }, n3.prototype.getAllowFriendDiscovery = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n4, r4, i4;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return e4 = Ws.of(this._iid), t7 = e4.sdkState, n4 = e4.requestQueue, r4 = new dn3({ userId: t7.userId }), [4, n4.send(r4)];
          case 1:
            return i4 = s6.sent(), [2, i4.as(ln3).allowFriendDiscovery];
        }
      });
    });
  }, n3.prototype.setAllowFriendDiscovery = function(e4) {
    return r(this, void 0, void 0, function() {
      var n4, r4, i4, s6;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return Jr(w("boolean", e4)).throw(v.invalidParameters), n4 = Ws.of(this._iid), r4 = n4.sdkState, i4 = n4.requestQueue, s6 = new hn3({ userId: r4.userId, allowFriendDiscovery: e4 }), [4, i4.send(s6)];
          case 1:
            return o3.sent(), [2, e4];
        }
      });
    });
  }, n3.prototype.uploadFriendDiscoveries = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n4, r4, i4, s6;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return t7 = Ws.of(this._iid), n4 = t7.sdkState, r4 = t7.requestQueue, i4 = new rn3({ userId: n4.userId, discoveries: e4 }), [4, r4.send(i4)];
          case 1:
            return s6 = o3.sent(), [2, s6.as(sn3).friendDiscoveryRequestId];
        }
      });
    });
  }, n3.prototype.deleteFriendDiscovery = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        return [2, this.deleteFriendDiscoveries([e4])];
      });
    });
  }, n3.prototype.deleteFriendDiscoveries = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n4, r4, i4;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return Jr(N("string", e4)).throw(v.invalidParameters), t7 = Ws.of(this._iid), n4 = t7.sdkState, r4 = t7.requestQueue, i4 = new on3({ userId: n4.userId, discoveryKeys: e4 }), [4, r4.send(i4)];
          case 1:
            return s6.sent(), [2];
        }
      });
    });
  }, n3.prototype.addFriends = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n4, r4, i4, s6;
      return s(this, function(o3) {
        switch (o3.label) {
          case 0:
            return Jr(N("string", e4)).throw(v.invalidParameters), t7 = Ws.of(this._iid), n4 = t7.sdkState, r4 = t7.requestQueue, i4 = new an3({ userId: n4.userId, userIds: e4 }), [4, r4.send(i4)];
          case 1:
            return s6 = o3.sent(), [2, s6.as(un3).users];
        }
      });
    });
  }, n3.prototype.deleteFriend = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(t7) {
        return [2, this.deleteFriends([e4])];
      });
    });
  }, n3.prototype.deleteFriends = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n4, r4, i4;
      return s(this, function(s6) {
        switch (s6.label) {
          case 0:
            return Jr(N("string", e4)).throw(v.invalidParameters), t7 = Ws.of(this._iid), n4 = t7.sdkState, r4 = t7.requestQueue, i4 = new cn3({ userId: n4.userId, userIds: e4 }), [4, r4.send(i4)];
          case 1:
            return s6.sent(), [2];
        }
      });
    });
  }, n3.prototype.getAllEmoji = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n4;
      return s(this, function(r4) {
        switch (r4.label) {
          case 0:
            return e4 = Ws.of(this._iid).requestQueue, t7 = new pn3(), [4, e4.send(t7)];
          case 1:
            return n4 = r4.sent(), [2, n4.as(vn3).emojiContainer];
        }
      });
    });
  }, n3.prototype.getEmojiCategory = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n4, r4;
      return s(this, function(i4) {
        switch (i4.label) {
          case 0:
            return t7 = Ws.of(this._iid).requestQueue, n4 = new gn3({ categoryId: e4 }), [4, t7.send(n4)];
          case 1:
            return r4 = i4.sent(), [2, r4.as(mn3).emojiCategory];
        }
      });
    });
  }, n3.prototype.getEmoji = function(e4) {
    return r(this, void 0, void 0, function() {
      var t7, n4, r4;
      return s(this, function(i4) {
        switch (i4.label) {
          case 0:
            return t7 = Ws.of(this._iid).requestQueue, n4 = new bn3({ key: e4 }), [4, t7.send(n4)];
          case 1:
            return r4 = i4.sent(), [2, r4.as(_n3).emoji];
        }
      });
    });
  }, n3.prototype.getUIKitConfiguration = function() {
    return r(this, void 0, void 0, function() {
      var e4, t7, n4, r4;
      return s(this, function(i4) {
        switch (i4.label) {
          case 0:
            return e4 = Ws.of(this._iid), Jr(e4.hasExtension("sb_uikit")).throw(v.notSupportedError), t7 = e4.requestQueue, n4 = new yn3(), [4, t7.send(n4)];
          case 1:
            return r4 = i4.sent(), [2, r4.as(wn3).uikitConfiguration];
        }
      });
    });
  }, n3;
}();

// node_modules/@sendbird/uikit-tools/dist/esm/utils/channel.js
function isDifferentChannel(a5, b6) {
  if (!a5 || !b6)
    return true;
  return a5.url !== b6.url;
}

// node_modules/@sendbird/uikit-tools/dist/esm/utils/message.js
function isSendableMessage(msg) {
  return msg !== void 0 && msg !== null && "sendingStatus" in msg;
}
function isMyMessage(msg, currentUserId = "##__USER_ID_IS_NOT_PROVIDED__##") {
  var _a3;
  if (!isSendableMessage(msg))
    return false;
  return ((_a3 = msg.sender) === null || _a3 === void 0 ? void 0 : _a3.userId) === currentUserId;
}
function isNewMessage(msg, currentUserId) {
  const myMessage = isMyMessage(msg, currentUserId);
  if (myMessage)
    return false;
  if (msg.isAdminMessage())
    return false;
  return msg.updatedAt === 0;
}
function getMessageUniqId(msg) {
  if ("sendingStatus" in msg) {
    if (msg.sendingStatus === "succeeded")
      return String(msg.messageId);
    return msg.reqId;
  }
  return String(msg.messageId);
}

// node_modules/@sendbird/uikit-tools/dist/esm/utils/validators.js
function isBoolean(val) {
  return typeof val === "boolean";
}
function isOneOf(val, values) {
  return values.includes(val);
}
function isSet(val) {
  return val instanceof Set;
}
function isNotEmptyArray(arr) {
  if (!arr || !Array.isArray(arr))
    return false;
  return arr.length !== 0;
}
function isSameType(a5, b6) {
  return Object.prototype.toString.call(a5) === Object.prototype.toString.call(b6);
}

// node_modules/@sendbird/uikit-tools/dist/esm/hooks/useForceUpdate.js
var import_react7 = __toESM(require_react(), 1);
var useForceUpdate = () => {
  const [, updater] = (0, import_react7.useState)(0);
  return (0, import_react7.useCallback)(() => updater((prev) => prev + 1), []);
};

// node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelMessages/reducer.js
var import_react8 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-tools/dist/esm/utils/convertors.js
function snakeToCamel(obj) {
  if (typeof obj !== "object" || obj === null) {
    return obj;
  }
  if (Array.isArray(obj)) {
    return obj.map((item) => snakeToCamel(item));
  }
  const result = {};
  Object.keys(obj).forEach((key) => {
    const camelKey = key.replace(/_\w/g, (m5) => m5[1].toUpperCase());
    result[camelKey] = snakeToCamel(obj[key]);
  });
  return result;
}
function arrayToMapWithGetter(arr, getSelector) {
  return arr.reduce((accum, curr) => {
    const _key = getSelector(curr);
    accum[_key] = curr;
    return accum;
  }, {});
}

// node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelMessages/reducer.js
var __rest3 = function(s6, e4) {
  var t7 = {};
  for (var p4 in s6) if (Object.prototype.hasOwnProperty.call(s6, p4) && e4.indexOf(p4) < 0)
    t7[p4] = s6[p4];
  if (s6 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i4 = 0, p4 = Object.getOwnPropertySymbols(s6); i4 < p4.length; i4++) {
      if (e4.indexOf(p4[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s6, p4[i4]))
        t7[p4[i4]] = s6[p4[i4]];
    }
  return t7;
};
var defaultReducer2 = (_a3, action) => {
  var draft = __rest3(_a3, []);
  switch (action.type) {
    case "update_initialized": {
      draft["initialized"] = action.value.status;
      return draft;
    }
    case "update_refreshing": {
      draft["refreshing"] = action.value.status;
      return draft;
    }
    case "update_loading": {
      draft["loading"] = action.value.status;
      return draft;
    }
    case "update_messages": {
      if (action.value.clearBeforeAction) {
        draft["messageMap"] = messagesToObject(action.value.messages);
      } else {
        const draftMessageMap = Object.assign({}, draft["messageMap"]);
        const messagesToDelete = [];
        const messagesToAdd = [];
        action.value.messages.forEach((next) => {
          const requestId = isSendableMessage(next) ? next.reqId : void 0;
          const messageId = next.messageId || void 0;
          [requestId, messageId].forEach((id2) => {
            if (!id2)
              return;
            const prev = draftMessageMap[id2];
            if (shouldUpdateMessage(prev, next)) {
              prev && messagesToDelete.push(prev);
              messagesToAdd.push(next);
            }
          });
        });
        messagesToDelete.forEach((it3) => {
          if (isSendableMessage(it3))
            delete draftMessageMap[it3.reqId];
          delete draftMessageMap[it3.messageId];
        });
        messagesToAdd.forEach((it3) => {
          if (isSendableMessage(it3))
            draftMessageMap[it3.reqId] = it3;
          draftMessageMap[it3.messageId] = it3;
        });
        draft["messageMap"] = draftMessageMap;
      }
      return draft;
    }
    case "update_new_messages": {
      const userId = action.value.currentUserId;
      const newMessages = action.value.messages.filter((it3) => isNewMessage(it3, userId));
      if (action.value.clearBeforeAction) {
        draft["newMessageMap"] = arrayToMapWithGetter(newMessages, getMessageUniqId);
      } else {
        const messageKeys = newMessages.map((it3) => it3.messageId);
        messageKeys.forEach((key) => delete draft["newMessageMap"][key]);
        draft["newMessageMap"] = Object.assign(Object.assign({}, draft["newMessageMap"]), arrayToMapWithGetter(newMessages, getMessageUniqId));
      }
      return draft;
    }
    case "delete_messages":
    case "delete_new_messages": {
      const key = action.type === "delete_messages" ? "messageMap" : "newMessageMap";
      draft[key] = Object.assign({}, draft[key]);
      action.value.messageIds.forEach((msgId) => {
        const message = draft[key][msgId];
        if (message) {
          if (isSendableMessage(message))
            delete draft[key][message.reqId];
          delete draft[key][message.messageId];
        }
      });
      action.value.reqIds.forEach((reqId) => {
        const message = draft[key][reqId];
        if (message) {
          if (isSendableMessage(message))
            delete draft[key][message.reqId];
          delete draft[key][message.messageId];
        }
      });
      return draft;
    }
  }
};
var messagesToObject = (messages) => {
  return messages.reduce((accum, curr) => {
    if (isSendableMessage(curr)) {
      accum[curr.reqId] = curr;
      if (curr.sendingStatus === W.SUCCEEDED) {
        accum[curr.messageId] = curr;
      }
    } else {
      accum[curr.messageId] = curr;
    }
    return accum;
  }, {});
};
var shouldUpdateMessage = (prev, next) => {
  if (!isSendableMessage(prev) || !isSendableMessage(next))
    return true;
  if (prev.sendingStatus === W.SUCCEEDED)
    return next.sendingStatus === W.SUCCEEDED;
  return prev.sendingStatus !== next.sendingStatus;
};
var useChannelMessagesReducer = (sortComparator = defaultMessageComparator) => {
  const [{ initialized, loading, refreshing, messageMap, newMessageMap }, dispatch] = (0, import_react8.useReducer)(defaultReducer2, {
    initialized: false,
    loading: true,
    refreshing: false,
    messageMap: {},
    newMessageMap: {}
  });
  const updateMessages = (messages2, clearBeforeAction, currentUserId) => {
    dispatch({ type: "update_messages", value: { messages: messages2, clearBeforeAction, currentUserId } });
  };
  const deleteMessages = (messageIds, reqIds) => {
    dispatch({ type: "delete_messages", value: { messageIds, reqIds } });
  };
  const updateNewMessages = (messages2, clearBeforeAction, currentUserId) => {
    dispatch({ type: "update_new_messages", value: { messages: messages2, clearBeforeAction, currentUserId } });
  };
  const deleteNewMessages = (messageIds, reqIds) => {
    dispatch({ type: "delete_new_messages", value: { messageIds, reqIds } });
  };
  const updateInitialized = (status) => {
    dispatch({ type: "update_initialized", value: { status } });
  };
  const updateLoading = (status) => {
    dispatch({ type: "update_loading", value: { status } });
  };
  const updateRefreshing = (status) => {
    dispatch({ type: "update_refreshing", value: { status } });
  };
  const newMessages = Object.values(newMessageMap);
  const messages = (0, import_react8.useMemo)(() => Array.from(new Set(Object.values(messageMap))).sort(sortComparator), [messageMap]);
  return {
    updateInitialized,
    updateLoading,
    updateRefreshing,
    updateMessages,
    deleteMessages,
    initialized,
    loading,
    refreshing,
    messages,
    newMessages,
    updateNewMessages,
    deleteNewMessages
  };
};
var LARGE_OFFSET = Math.floor(Number.MAX_SAFE_INTEGER / 10);
function defaultMessageComparator(a5, b6) {
  let aStatusOffset = 0;
  let bStatusOffset = 0;
  if (isSendableMessage(a5) && a5.sendingStatus !== "succeeded")
    aStatusOffset = LARGE_OFFSET;
  if (isSendableMessage(b6) && b6.sendingStatus !== "succeeded")
    bStatusOffset = LARGE_OFFSET;
  return a5.createdAt + aStatusOffset - (b6.createdAt + bStatusOffset);
}

// node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelMessages/index.js
var __awaiter4 = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e4) {
        reject(e4);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e4) {
        reject(e4);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var createMessageCollection = (channel, limit, options) => {
  var _a3;
  const basicParams = {
    prevResultLimit: limit.prev,
    nextResultLimit: limit.next,
    startingPoint: options === null || options === void 0 ? void 0 : options.startingPoint,
    replyType: options === null || options === void 0 ? void 0 : options.replyType
  };
  const passedCollection = (_a3 = options === null || options === void 0 ? void 0 : options.collectionCreator) === null || _a3 === void 0 ? void 0 : _a3.call(options, basicParams);
  if (passedCollection)
    return passedCollection;
  return channel.createMessageCollection(Object.assign(Object.assign({}, basicParams), { filter: new Os(basicParams) }));
};
function getCollectionLimitBy(startingPoint) {
  return startingPoint < Date.now() ? sbuConstants.collection.message.searchLimit : sbuConstants.collection.message.defaultLimit;
}
var useGroupChannelMessages = (sdk, channel, options = {}) => {
  var _a3, _b2, _c;
  const internalOptions = (0, import_react9.useRef)(options);
  internalOptions.current = options;
  const channelRef = (0, import_react9.useRef)(channel);
  channelRef.current = channel;
  const logger = internalOptions.current.logger;
  const initialStartingPoint = (_a3 = internalOptions.current.startingPoint) !== null && _a3 !== void 0 ? _a3 : Number.MAX_SAFE_INTEGER;
  const initialLimit = getCollectionLimitBy(initialStartingPoint);
  const isFetching = (0, import_react9.useRef)({ prev: false, next: false });
  const forceUpdate = useForceUpdate();
  const collectionRef = (0, import_react9.useRef)({
    initialized: false,
    apiInitialized: false,
    instance: null
  });
  const { initialized, loading, refreshing, messages, newMessages, updateMessages, updateNewMessages, deleteNewMessages, deleteMessages, updateInitialized, updateLoading, updateRefreshing } = useChannelMessagesReducer(options === null || options === void 0 ? void 0 : options.sortComparator);
  const markAsReadBySource = usePreservedCallback((source) => {
    var _a4, _b3, _c2, _d;
    if (!channelRef.current || !channelRef.current.url)
      return (_a4 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "[useGroupChannelMessages] channel is required");
    try {
      switch (source) {
        case Ks.EVENT_MESSAGE_RECEIVED:
        case Ks.EVENT_MESSAGE_SENT_SUCCESS:
        case Ks.SYNC_MESSAGE_FILL:
        case void 0:
          (_c2 = (_b3 = internalOptions.current).markAsRead) === null || _c2 === void 0 ? void 0 : _c2.call(_b3, [channelRef.current]);
          break;
      }
    } catch (e4) {
      (_d = logger === null || logger === void 0 ? void 0 : logger.warn) === null || _d === void 0 ? void 0 : _d.call(logger, "[useGroupChannelMessages/markAsReadBySource]", e4);
    }
  });
  const updateNewMessagesReceived = usePreservedCallback((source, messages2) => {
    var _a4, _b3, _c2, _d, _e3;
    const incomingMessages = messages2.filter((it3) => {
      var _a5;
      return !isMyMessage(it3, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
    });
    if (incomingMessages.length > 0) {
      switch (source) {
        case Ks.EVENT_MESSAGE_RECEIVED:
        case Ks.SYNC_MESSAGE_FILL: {
          if ((_b3 = (_a4 = internalOptions.current).shouldCountNewMessages) === null || _b3 === void 0 ? void 0 : _b3.call(_a4)) {
            updateNewMessages(incomingMessages, false, (_c2 = sdk.currentUser) === null || _c2 === void 0 ? void 0 : _c2.userId);
          }
          (_e3 = (_d = internalOptions.current).onMessagesReceived) === null || _e3 === void 0 ? void 0 : _e3.call(_d, incomingMessages);
          break;
        }
      }
    }
  });
  const init = usePreservedCallback((startingPoint, limit) => __awaiter4(void 0, void 0, void 0, function* () {
    return new Promise((resolve) => {
      var _a4, _b3;
      if (!channelRef.current || !channelRef.current.url)
        return (_a4 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "[useGroupChannelMessages] channel is required");
      if (collectionRef.current.instance)
        collectionRef.current.instance.dispose();
      markAsReadBySource();
      updateNewMessages([], true, (_b3 = sdk.currentUser) === null || _b3 === void 0 ? void 0 : _b3.userId);
      const updateUnsentMessages = () => {
        var _a5, _b4, _c2;
        const { pendingMessages, failedMessages } = (_a5 = collectionRef.current.instance) !== null && _a5 !== void 0 ? _a5 : {};
        if (isNotEmptyArray(pendingMessages))
          updateMessages(pendingMessages, false, (_b4 = sdk.currentUser) === null || _b4 === void 0 ? void 0 : _b4.userId);
        if (isNotEmptyArray(failedMessages))
          updateMessages(failedMessages, false, (_c2 = sdk.currentUser) === null || _c2 === void 0 ? void 0 : _c2.userId);
      };
      const collectionInstance = createMessageCollection(channelRef.current, limit, Object.assign(Object.assign({}, internalOptions.current), { startingPoint }));
      collectionRef.current = { apiInitialized: false, initialized: false, instance: collectionInstance };
      collectionInstance.setMessageCollectionHandler({
        onMessagesAdded: (ctx, __, messages2) => {
          var _a5;
          markAsReadBySource(ctx.source);
          updateNewMessagesReceived(ctx.source, messages2);
          updateMessages(messages2, false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        },
        onMessagesUpdated: (ctx, __, messages2) => {
          var _a5, _b4, _c2;
          markAsReadBySource(ctx.source);
          updateNewMessagesReceived(ctx.source, messages2);
          updateMessages(messages2, false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
          if (ctx.source === Ks.EVENT_MESSAGE_UPDATED) {
            (_c2 = (_b4 = internalOptions.current).onMessagesUpdated) === null || _c2 === void 0 ? void 0 : _c2.call(_b4, messages2);
          }
        },
        onMessagesDeleted: (_2, __, ___, messages2) => {
          const msgIds = messages2.map((it3) => it3.messageId);
          const reqIds = messages2.filter(isSendableMessage).map((it3) => it3.reqId);
          deleteMessages(msgIds, reqIds);
          deleteNewMessages(msgIds, reqIds);
        },
        onChannelDeleted: (_2, channelUrl) => {
          var _a5, _b4;
          (_b4 = (_a5 = internalOptions.current).onChannelDeleted) === null || _b4 === void 0 ? void 0 : _b4.call(_a5, channelUrl);
        },
        onChannelUpdated: (_2, channel2) => {
          var _a5, _b4;
          forceUpdate();
          (_b4 = (_a5 = internalOptions.current).onChannelUpdated) === null || _b4 === void 0 ? void 0 : _b4.call(_a5, channel2);
        },
        onHugeGapDetected: () => {
          init(Number.MAX_SAFE_INTEGER, sbuConstants.collection.message.defaultLimit);
        }
      });
      collectionInstance.initialize(gs2.CACHE_AND_REPLACE_BY_API).onCacheResult((err, messages2) => {
        var _a5, _b4, _c2;
        if (err)
          sdk.isCacheEnabled && ((_a5 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a5 === void 0 ? void 0 : _a5.call(logger, "[useGroupChannelMessages/onCacheResult]", err));
        else if (messages2) {
          (_b4 = logger === null || logger === void 0 ? void 0 : logger.debug) === null || _b4 === void 0 ? void 0 : _b4.call(logger, "[useGroupChannelMessages/onCacheResult]", "message length:", messages2.length);
          updateMessages(messages2, true, (_c2 = sdk.currentUser) === null || _c2 === void 0 ? void 0 : _c2.userId);
          updateUnsentMessages();
          if (messages2.length > 0) {
            collectionRef.current.initialized = true;
            resolve();
          }
        }
      }).onApiResult((err, messages2) => {
        var _a5, _b4, _c2, _d, _e3;
        if (err)
          (_a5 = logger === null || logger === void 0 ? void 0 : logger.warn) === null || _a5 === void 0 ? void 0 : _a5.call(logger, "[useGroupChannelMessages/onApiResult]", err);
        else if (messages2) {
          (_b4 = logger === null || logger === void 0 ? void 0 : logger.debug) === null || _b4 === void 0 ? void 0 : _b4.call(logger, "[useGroupChannelMessages/onApiResult]", "message length:", messages2.length);
          updateMessages(messages2, true, (_c2 = sdk.currentUser) === null || _c2 === void 0 ? void 0 : _c2.userId);
          if (!internalOptions.current.startingPoint)
            (_e3 = (_d = internalOptions.current).onMessagesReceived) === null || _e3 === void 0 ? void 0 : _e3.call(_d, messages2);
          if (sdk.isCacheEnabled)
            updateUnsentMessages();
        }
        collectionRef.current.initialized = true;
        collectionRef.current.apiInitialized = true;
        resolve();
      });
    });
  }));
  useGroupChannelHandler(sdk, {
    onUserBanned(eventChannel, bannedUser) {
      var _a4, _b3, _c2;
      if (eventChannel.isGroupChannel() && !isDifferentChannel(eventChannel, channelRef.current)) {
        if (bannedUser.userId === ((_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId)) {
          (_c2 = (_b3 = internalOptions.current).onCurrentUserBanned) === null || _c2 === void 0 ? void 0 : _c2.call(_b3);
        } else {
          forceUpdate();
        }
      }
    }
  });
  (0, import_react9.useLayoutEffect)(() => {
    const timeout = setTimeout(() => __awaiter4(void 0, void 0, void 0, function* () {
      if (sdk.currentUser && channelRef.current) {
        updateInitialized(false);
        updateLoading(true);
        yield init(initialStartingPoint, initialLimit);
        updateLoading(false);
        updateInitialized(true);
      }
    }));
    return () => clearTimeout(timeout);
  }, [sdk, (_b2 = sdk.currentUser) === null || _b2 === void 0 ? void 0 : _b2.userId, (_c = channelRef.current) === null || _c === void 0 ? void 0 : _c.url, internalOptions.current.replyType]);
  (0, import_react9.useEffect)(() => {
    return () => {
      if (collectionRef.current.instance)
        collectionRef.current.instance.dispose();
    };
  }, []);
  const refresh = usePreservedCallback(() => __awaiter4(void 0, void 0, void 0, function* () {
    if (sdk.currentUser && channelRef.current) {
      updateRefreshing(true);
      yield init(Number.MAX_SAFE_INTEGER, sbuConstants.collection.message.defaultLimit);
      updateRefreshing(false);
    }
  }));
  const loadPrevious = usePreservedCallback(() => __awaiter4(void 0, void 0, void 0, function* () {
    var _d;
    const collection = collectionRef.current.instance;
    if ((collection === null || collection === void 0 ? void 0 : collection.hasPrevious) && !isFetching.current.prev) {
      try {
        isFetching.current.prev = true;
        const list = yield collection.loadPrevious();
        updateMessages(list, false, (_d = sdk.currentUser) === null || _d === void 0 ? void 0 : _d.userId);
      } catch (_e3) {
      } finally {
        isFetching.current.prev = false;
      }
    }
  }));
  const hasPrevious = usePreservedCallback(() => {
    const { initialized: initialized2, instance } = collectionRef.current;
    if (initialized2 && instance) {
      return instance.hasPrevious;
    } else {
      return false;
    }
  });
  const loadNext = usePreservedCallback(() => __awaiter4(void 0, void 0, void 0, function* () {
    var _f;
    const collection = collectionRef.current.instance;
    if ((collection === null || collection === void 0 ? void 0 : collection.hasNext) && !isFetching.current.next) {
      try {
        isFetching.current.next = true;
        const list = yield collection.loadNext();
        updateMessages(list, false, (_f = sdk.currentUser) === null || _f === void 0 ? void 0 : _f.userId);
      } catch (_g2) {
      } finally {
        isFetching.current.next = false;
      }
    }
  }));
  const hasNext = usePreservedCallback(() => {
    const { initialized: initialized2, apiInitialized, instance } = collectionRef.current;
    if (apiInitialized && initialized2 && instance) {
      return instance.hasNext;
    } else {
      return false;
    }
  });
  const sendUserMessage = usePreservedCallback((params, onPending) => {
    var _a4;
    if (!channelRef.current || !channelRef.current.url) {
      (_a4 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    return new Promise((resolve, reject) => {
      channelRef.current.sendUserMessage(params).onPending((pendingMessage) => {
        var _a5;
        if (pendingMessage.channelUrl === channelRef.current.url) {
          updateMessages([pendingMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        onPending === null || onPending === void 0 ? void 0 : onPending(pendingMessage);
      }).onSucceeded((sentMessage) => {
        var _a5;
        if (sentMessage.channelUrl === channelRef.current.url) {
          updateMessages([sentMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        resolve(sentMessage);
      }).onFailed((err, failedMessage) => {
        var _a5;
        if (failedMessage && failedMessage.channelUrl === channelRef.current.url) {
          updateMessages([failedMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        reject(err);
      });
    });
  });
  const sendFileMessage = usePreservedCallback((params, onPending) => {
    var _a4;
    if (!channelRef.current || !channelRef.current.url) {
      (_a4 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    return new Promise((resolve, reject) => {
      channelRef.current.sendFileMessage(params).onPending((pendingMessage) => {
        var _a5;
        if (pendingMessage.channelUrl === channelRef.current.url) {
          updateMessages([pendingMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        onPending === null || onPending === void 0 ? void 0 : onPending(pendingMessage);
      }).onSucceeded((sentMessage) => {
        var _a5;
        if (sentMessage.channelUrl === channelRef.current.url) {
          updateMessages([sentMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        resolve(sentMessage);
      }).onFailed((err, failedMessage) => {
        var _a5;
        if (failedMessage && failedMessage.channelUrl === channelRef.current.url) {
          updateMessages([failedMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        reject(err);
      });
    });
  });
  const sendFileMessages = usePreservedCallback((paramsList, onPending) => __awaiter4(void 0, void 0, void 0, function* () {
    var _h;
    if (!channelRef.current || !channelRef.current.url) {
      (_h = logger === null || logger === void 0 ? void 0 : logger.error) === null || _h === void 0 ? void 0 : _h.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    return new Promise((resolve) => {
      const messages2 = [];
      channelRef.current.sendFileMessages(paramsList).onPending((pendingMessage) => {
        var _a4;
        if (pendingMessage.channelUrl === channelRef.current.url) {
          updateMessages([pendingMessage], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
        }
        onPending === null || onPending === void 0 ? void 0 : onPending(pendingMessage);
      }).onSucceeded((sentMessage) => {
        var _a4;
        if (sentMessage.isFileMessage() && sentMessage.channelUrl === channelRef.current.url) {
          updateMessages([sentMessage], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
          messages2.push(sentMessage);
        }
        if (messages2.length === paramsList.length)
          resolve(messages2);
      }).onFailed((_2, failedMessage) => {
        var _a4;
        if (failedMessage && failedMessage.channelUrl === channelRef.current.url) {
          updateMessages([failedMessage], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
          messages2.push(failedMessage);
        } else {
          messages2.push(null);
        }
        if (messages2.length === paramsList.length)
          resolve(messages2);
      });
    });
  }));
  const sendMultipleFilesMessage = usePreservedCallback((params, onPending) => {
    var _a4;
    if (!channelRef.current || !channelRef.current.url) {
      (_a4 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    return new Promise((resolve, reject) => {
      channelRef.current.sendMultipleFilesMessage(params).onPending((pendingMessage) => {
        var _a5;
        if (pendingMessage.channelUrl === channelRef.current.url) {
          updateMessages([pendingMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        onPending === null || onPending === void 0 ? void 0 : onPending(pendingMessage);
      }).onFileUploaded(() => {
        forceUpdate();
      }).onSucceeded((sentMessage) => {
        var _a5;
        if (sentMessage.channelUrl === channelRef.current.url) {
          updateMessages([sentMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        resolve(sentMessage);
      }).onFailed((err, failedMessage) => {
        var _a5;
        if (failedMessage && failedMessage.channelUrl === channelRef.current.url) {
          updateMessages([failedMessage], false, (_a5 = sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
        }
        reject(err);
      });
    });
  });
  const updateUserMessage = usePreservedCallback((messageId, params) => __awaiter4(void 0, void 0, void 0, function* () {
    var _j, _k;
    if (!channelRef.current || !channelRef.current.url) {
      (_j = logger === null || logger === void 0 ? void 0 : logger.error) === null || _j === void 0 ? void 0 : _j.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    const updatedMessage = yield channelRef.current.updateUserMessage(messageId, params);
    if (updatedMessage.channelUrl === channelRef.current.url) {
      updateMessages([updatedMessage], false, (_k = sdk.currentUser) === null || _k === void 0 ? void 0 : _k.userId);
    }
    return updatedMessage;
  }));
  const updateFileMessage = usePreservedCallback((messageId, params) => __awaiter4(void 0, void 0, void 0, function* () {
    var _l, _m;
    if (!channelRef.current || !channelRef.current.url) {
      (_l = logger === null || logger === void 0 ? void 0 : logger.error) === null || _l === void 0 ? void 0 : _l.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    const updatedMessage = yield channelRef.current.updateFileMessage(messageId, params);
    if (updatedMessage.channelUrl === channelRef.current.url) {
      updateMessages([updatedMessage], false, (_m = sdk.currentUser) === null || _m === void 0 ? void 0 : _m.userId);
    }
    return updatedMessage;
  }));
  const resendMessage = usePreservedCallback((failedMessage) => __awaiter4(void 0, void 0, void 0, function* () {
    var _o2;
    if (!channelRef.current || !channelRef.current.url) {
      (_o2 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _o2 === void 0 ? void 0 : _o2.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    return new Promise((resolve, reject) => {
      let handler = void 0;
      if (failedMessage.isUserMessage())
        handler = channelRef.current.resendMessage(failedMessage);
      if (failedMessage.isFileMessage())
        handler = channelRef.current.resendMessage(failedMessage);
      if (failedMessage.isMultipleFilesMessage())
        handler = channelRef.current.resendMessage(failedMessage);
      if (handler) {
        if ("onPending" in handler) {
          handler.onPending((message) => {
            var _a4;
            if (message.channelUrl === channelRef.current.url) {
              updateMessages([message], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
            }
          });
        }
        if ("onFileUploaded" in handler) {
          handler.onFileUploaded(() => {
            forceUpdate();
          });
        }
        if ("onSucceeded" in handler) {
          handler.onSucceeded((message) => {
            var _a4;
            if (message.channelUrl === channelRef.current.url) {
              updateMessages([message], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
            }
            resolve(message);
          });
        }
        if ("onFailed" in handler) {
          handler.onFailed((err, message) => {
            var _a4;
            if (message && message.channelUrl === channelRef.current.url) {
              updateMessages([message], false, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
            }
            reject(err);
          });
        }
      }
    });
  }));
  const deleteMessage = usePreservedCallback((message) => __awaiter4(void 0, void 0, void 0, function* () {
    var _p, _q;
    if (!channelRef.current || !channelRef.current.url) {
      (_p = logger === null || logger === void 0 ? void 0 : logger.error) === null || _p === void 0 ? void 0 : _p.call(logger, "[useGroupChannelMessages] channel is required");
      throw new Error("Channel is required");
    }
    if (message.sendingStatus === "succeeded") {
      if (message.isUserMessage())
        yield channelRef.current.deleteMessage(message);
      if (message.isFileMessage())
        yield channelRef.current.deleteMessage(message);
      if (message.isMultipleFilesMessage())
        yield channelRef.current.deleteMessage(message);
    } else {
      try {
        yield (_q = collectionRef.current.instance) === null || _q === void 0 ? void 0 : _q.removeFailedMessage(message.reqId);
      } finally {
        deleteMessages([message.messageId], [message.reqId]);
      }
    }
  }));
  const resetNewMessages = usePreservedCallback(() => {
    var _a4;
    updateNewMessages([], true, (_a4 = sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
  });
  const resetWithStartingPoint = usePreservedCallback((startingPoint) => __awaiter4(void 0, void 0, void 0, function* () {
    var _r2;
    if (sdk.currentUser && channelRef.current) {
      const limit = getCollectionLimitBy(startingPoint);
      updateLoading(true);
      updateMessages([], true, (_r2 = sdk.currentUser) === null || _r2 === void 0 ? void 0 : _r2.userId);
      yield init(startingPoint, limit);
      updateLoading(false);
    }
  }));
  return {
    /**
     * Initialized state, only available on first render
     * */
    initialized,
    /**
     * Loading state, status is changes on first mount or when the resetWithStartingPoint is called.
     * */
    loading,
    /**
     * Refreshing state, status is changes when the refresh is called.
     * */
    refreshing,
    /**
     * Get messages, this state is for render
     * For example, if a user receives a new messages while searching for an old message
     * for this case, new messages will be included here.
     * */
    messages,
    /**
     * If the `shouldCountNewMessages()` is true, only then push in the newMessages state.
     * (Return false for the `shouldCountNewMessages()` if the message scroll is the most recent; otherwise, return true.)
     *
     * A new message means a message that meets the below conditions
     * - Not admin message
     * - Not updated message
     * - Not current user's message
     * */
    newMessages,
    /**
     * Reset new message list
     * @return {void}
     * */
    resetNewMessages,
    /**
     * Reset message list and create a new collection for latest messages
     * @return {Promise<void>}
     * */
    refresh,
    /**
     * Load previous messages to state
     * @return {Promise<void>}
     * */
    loadPrevious,
    /**
     * Check if there are more previous messages to fetch
     * @return {boolean}
     * */
    hasPrevious,
    /**
     * Load next messages to state
     * @return {Promise<void>}
     * */
    loadNext,
    /**
     * Check if there are more next messages to fetch
     * @return {boolean}
     * */
    hasNext,
    /**
     * Send user message
     * @param {UserMessageCreateParams} params user message create params
     * @param {function} [onPending] pending message callback
     * @return {Promise<UserMessage>} succeeded message
     * */
    sendUserMessage,
    /**
     * Send file message
     * @param {FileMessageCreateParams} params file message create params
     * @param {function} [onPending] pending message callback
     * @return {Promise<FileMessage>} succeeded message
     * */
    sendFileMessage,
    /**
     * Send file messages
     * @param {FileMessageCreateParams[]} paramList file message create params
     * @param {function} [onPending] pending message callback for each message request
     * @return {Promise<FileMessage[]>} succeeded or failed message
     * */
    sendFileMessages,
    /**
     * Send multiple files message
     * @param {MultipleFilesMessageCreateParams} params multiple files message create params
     * @param {function} [onPending] pending message callback
     * @return {Promise<MultipleFilesMessage>} succeeded message
     * */
    sendMultipleFilesMessage,
    /**
     * Update user message
     * @param {number} messageId
     * @param {UserMessageUpdateParams} params user message update params
     * @return {Promise<UserMessage>}
     * */
    updateUserMessage,
    /**
     * Update file message
     * @param {number} messageId
     * @param {FileMessageUpdateParams} params file message update params
     * @return {Promise<FileMessage>}
     * */
    updateFileMessage,
    /**
     * Resend failed message
     * @template {UserMessage | FileMessage | MultipleFilesMessage} T
     * @param {T} failedMessage message to resend
     * @return {Promise<T>}
     * */
    resendMessage,
    /**
     * Delete a message
     * @template {UserMessage | FileMessage | MultipleFilesMessage} T
     * @param {T} message succeeded or failed message
     * @return {Promise<void>}
     * */
    deleteMessage,
    /**
     * Reset message list and create a new collection with starting point
     * @param {number} startingPoint
     * @param {function} callback
     * @return {void}
     * */
    resetWithStartingPoint,
    /**
     * Do not use this api
     * */
    _dangerous_reducer_updateMessages: updateMessages,
    /**
     * Do not use this api
     * */
    _dangerous_reducer_deleteMessages: deleteMessages
  };
};

// node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelThreadMessages/index.js
var import_react11 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-tools/dist/esm/hooks/useGroupChannelThreadMessages/reducer.js
var import_react10 = __toESM(require_react(), 1);
var LARGE_OFFSET2 = Math.floor(Number.MAX_SAFE_INTEGER / 10);

// node_modules/@sendbird/uikit-tools/dist/esm/hooks/useIIFE.js
var useIIFE = (callback) => {
  return iife2(callback);
};
var iife2 = (callback) => typeof callback === "function" && callback();

// node_modules/@sendbird/uikit-tools/dist/esm/utils/mergeObject.js
function mergeObject(target, subset) {
  const object = Object.assign({}, target);
  Object.keys(subset).forEach((key) => {
    if (Object.prototype.hasOwnProperty.call(object, key) && isSameType(object[key], subset[key])) {
      if (typeof subset[key] === "object" && !Array.isArray(subset[key])) {
        object[key] = mergeObject(object[key], subset[key]);
      } else {
        object[key] = subset[key];
      }
    }
  });
  return object;
}

// node_modules/@sendbird/uikit-tools/dist/esm/uikitConfiguration/internal/initialConfig.js
var createInitialConfig = () => ({
  common: {
    enableUsingDefaultUserProfile: false
  },
  groupChannel: {
    channel: {
      enableMention: false,
      enableOgtag: true,
      enableReactions: true,
      enableReactionsSupergroup: false,
      enableTypingIndicator: true,
      enableVoiceMessage: false,
      input: {
        camera: {
          enablePhoto: true,
          enableVideo: true
        },
        enableDocument: true,
        gallery: {
          enablePhoto: true,
          enableVideo: true
        }
      },
      replyType: "quote_reply",
      threadReplySelectType: "thread",
      typingIndicatorTypes: /* @__PURE__ */ new Set(["text"]),
      enableFeedback: false,
      enableSuggestedReplies: false,
      showSuggestedRepliesFor: "last_message_only",
      suggestedRepliesDirection: "vertical",
      enableMarkdownForUserMessage: false,
      enableFormTypeMessage: false
    },
    channelList: {
      enableMessageReceiptStatus: false,
      enableTypingIndicator: false
    },
    setting: {
      enableMessageSearch: false
    }
  },
  openChannel: {
    channel: {
      enableOgtag: true,
      input: {
        camera: {
          enablePhoto: true,
          enableVideo: true
        },
        enableDocument: true,
        gallery: {
          enablePhoto: true,
          enableVideo: true
        }
      }
    }
  }
});
function deleteLocalConfigs(config) {
  delete config.groupChannel.channel.typingIndicatorTypes;
  delete config.groupChannel.channel.enableFeedback;
  delete config.groupChannel.channel.enableSuggestedReplies;
  delete config.groupChannel.channel.showSuggestedRepliesFor;
  delete config.groupChannel.channel.suggestedRepliesDirection;
  delete config.groupChannel.channel.enableMarkdownForUserMessage;
  delete config.groupChannel.channel.enableFormTypeMessage;
  return config;
}
var createInitialRemoteConfig = () => {
  const config = createInitialConfig();
  return deleteLocalConfigs(config);
};
var initialConfig = createInitialConfig();
var initialRemoteConfig = createInitialRemoteConfig();

// node_modules/@sendbird/uikit-tools/dist/esm/uikitConfiguration/internal/configManager.js
var __awaiter5 = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e4) {
        reject(e4);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e4) {
        reject(e4);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var MemoryStorage = {
  items: {},
  getItem(key) {
    var _a3;
    return __awaiter5(this, void 0, void 0, function* () {
      return (_a3 = MemoryStorage.items[key]) !== null && _a3 !== void 0 ? _a3 : null;
    });
  },
  setItem(key, value) {
    return __awaiter5(this, void 0, void 0, function* () {
      MemoryStorage.items[key] = value;
    });
  }
};
var UIKitConfigManager = class {
  constructor(storage) {
    this.storage = storage !== null && storage !== void 0 ? storage : MemoryStorage;
  }
  init(appId) {
    this.key = `sbu@${appId}.uikitConfiguration`;
    return this.get();
  }
  get safeKey() {
    if (!this.key)
      throw new Error("Please UIKitConfigManager.init() first");
    return this.key;
  }
  update(remoteConfigPayload) {
    return __awaiter5(this, void 0, void 0, function* () {
      const storedConfigPayload = yield this.get();
      const mergedConfigPayload = {
        updatedAt: remoteConfigPayload.updatedAt,
        configuration: mergeObject(storedConfigPayload.configuration, remoteConfigPayload.configuration)
      };
      yield this.storage.setItem(this.safeKey, JSON.stringify(mergedConfigPayload));
      return mergedConfigPayload;
    });
  }
  get() {
    return __awaiter5(this, void 0, void 0, function* () {
      const initialPayload = {
        updatedAt: 0,
        configuration: initialRemoteConfig
      };
      try {
        const storedConfig = yield this.storage.getItem(this.safeKey);
        if (storedConfig) {
          return JSON.parse(storedConfig);
        } else {
          return initialPayload;
        }
      } catch (_a3) {
        return initialPayload;
      }
    });
  }
};

// node_modules/@sendbird/uikit-tools/dist/esm/uikitConfiguration/internal/updators/updateCommonConfigs.js
function updateCommonConfigs(target, local, remote) {
  var _a3, _b2;
  if (remote.common && isBoolean((_a3 = remote.common) === null || _a3 === void 0 ? void 0 : _a3.enableUsingDefaultUserProfile)) {
    target.enableUsingDefaultUserProfile = remote.common.enableUsingDefaultUserProfile;
  }
  if (local.common && isBoolean((_b2 = local.common) === null || _b2 === void 0 ? void 0 : _b2.enableUsingDefaultUserProfile)) {
    target.enableUsingDefaultUserProfile = local.common.enableUsingDefaultUserProfile;
  }
}

// node_modules/@sendbird/uikit-tools/dist/esm/uikitConfiguration/internal/updators/updateGroupChannelConfigs.js
function updateGroupChannelConfigs(target, local, remote) {
  updateChannelConfig(target, local, remote);
  updateChannelInputConfig(target, local, remote);
  updateChannelListConfig(target, local, remote);
  updateChannelSettingConfig(target, local, remote);
}
function updateChannelConfig(target, local, remote) {
  var _a3, _b2, _c, _d, _e3, _f, _g2, _h, _j, _k, _l, _m, _o2, _p, _q, _r2, _s4, _t3, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84, _85, _86;
  if (((_a3 = remote.groupChannel) === null || _a3 === void 0 ? void 0 : _a3.channel) && isBoolean((_c = (_b2 = remote.groupChannel) === null || _b2 === void 0 ? void 0 : _b2.channel) === null || _c === void 0 ? void 0 : _c.enableOgtag)) {
    target.channel.enableOgtag = remote.groupChannel.channel.enableOgtag;
  }
  if (((_d = local.groupChannel) === null || _d === void 0 ? void 0 : _d.channel) && isBoolean((_f = (_e3 = local.groupChannel) === null || _e3 === void 0 ? void 0 : _e3.channel) === null || _f === void 0 ? void 0 : _f.enableOgtag)) {
    target.channel.enableOgtag = (_h = (_g2 = local.groupChannel) === null || _g2 === void 0 ? void 0 : _g2.channel) === null || _h === void 0 ? void 0 : _h.enableOgtag;
  }
  if (((_j = remote.groupChannel) === null || _j === void 0 ? void 0 : _j.channel) && isBoolean((_l = (_k = remote.groupChannel) === null || _k === void 0 ? void 0 : _k.channel) === null || _l === void 0 ? void 0 : _l.enableTypingIndicator)) {
    target.channel.enableTypingIndicator = (_o2 = (_m = remote.groupChannel) === null || _m === void 0 ? void 0 : _m.channel) === null || _o2 === void 0 ? void 0 : _o2.enableTypingIndicator;
  }
  if (((_p = local.groupChannel) === null || _p === void 0 ? void 0 : _p.channel) && isBoolean((_r2 = (_q = local.groupChannel) === null || _q === void 0 ? void 0 : _q.channel) === null || _r2 === void 0 ? void 0 : _r2.enableTypingIndicator)) {
    target.channel.enableTypingIndicator = (_t3 = (_s4 = local.groupChannel) === null || _s4 === void 0 ? void 0 : _s4.channel) === null || _t3 === void 0 ? void 0 : _t3.enableTypingIndicator;
  }
  if (((_u = remote.groupChannel) === null || _u === void 0 ? void 0 : _u.channel) && isBoolean((_w = (_v = remote.groupChannel) === null || _v === void 0 ? void 0 : _v.channel) === null || _w === void 0 ? void 0 : _w.enableReactions)) {
    target.channel.enableReactions = (_y = (_x = remote.groupChannel) === null || _x === void 0 ? void 0 : _x.channel) === null || _y === void 0 ? void 0 : _y.enableReactions;
  }
  if (((_z = local.groupChannel) === null || _z === void 0 ? void 0 : _z.channel) && isBoolean((_1 = (_0 = local.groupChannel) === null || _0 === void 0 ? void 0 : _0.channel) === null || _1 === void 0 ? void 0 : _1.enableReactions)) {
    target.channel.enableReactions = (_3 = (_2 = local.groupChannel) === null || _2 === void 0 ? void 0 : _2.channel) === null || _3 === void 0 ? void 0 : _3.enableReactions;
  }
  if (((_4 = remote.groupChannel) === null || _4 === void 0 ? void 0 : _4.channel) && isBoolean((_6 = (_5 = remote.groupChannel) === null || _5 === void 0 ? void 0 : _5.channel) === null || _6 === void 0 ? void 0 : _6.enableReactionsSupergroup)) {
    target.channel.enableReactionsSupergroup = (_8 = (_7 = remote.groupChannel) === null || _7 === void 0 ? void 0 : _7.channel) === null || _8 === void 0 ? void 0 : _8.enableReactionsSupergroup;
  }
  if (((_9 = local.groupChannel) === null || _9 === void 0 ? void 0 : _9.channel) && isBoolean((_11 = (_10 = local.groupChannel) === null || _10 === void 0 ? void 0 : _10.channel) === null || _11 === void 0 ? void 0 : _11.enableReactionsSupergroup)) {
    console.warn("Currently, EnableReactionsSupergroup feature is turned off by default. If you wish to use this feature, contact us: https://dashboard.sendbird.com/settings/contact_us?category=feedback_and_feature_requests&product=UIKit");
  }
  if (((_12 = remote.groupChannel) === null || _12 === void 0 ? void 0 : _12.channel) && isBoolean((_14 = (_13 = remote.groupChannel) === null || _13 === void 0 ? void 0 : _13.channel) === null || _14 === void 0 ? void 0 : _14.enableMention)) {
    target.channel.enableMention = (_16 = (_15 = remote.groupChannel) === null || _15 === void 0 ? void 0 : _15.channel) === null || _16 === void 0 ? void 0 : _16.enableMention;
  }
  if (((_17 = local.groupChannel) === null || _17 === void 0 ? void 0 : _17.channel) && isBoolean((_19 = (_18 = local.groupChannel) === null || _18 === void 0 ? void 0 : _18.channel) === null || _19 === void 0 ? void 0 : _19.enableMention)) {
    target.channel.enableMention = (_21 = (_20 = local.groupChannel) === null || _20 === void 0 ? void 0 : _20.channel) === null || _21 === void 0 ? void 0 : _21.enableMention;
  }
  if (((_22 = remote.groupChannel) === null || _22 === void 0 ? void 0 : _22.channel) && isOneOf((_24 = (_23 = remote.groupChannel) === null || _23 === void 0 ? void 0 : _23.channel) === null || _24 === void 0 ? void 0 : _24.replyType, ["none", "quote_reply", "thread"])) {
    target.channel.replyType = (_26 = (_25 = remote.groupChannel) === null || _25 === void 0 ? void 0 : _25.channel) === null || _26 === void 0 ? void 0 : _26.replyType;
  }
  if (((_27 = local.groupChannel) === null || _27 === void 0 ? void 0 : _27.channel) && isOneOf((_29 = (_28 = local.groupChannel) === null || _28 === void 0 ? void 0 : _28.channel) === null || _29 === void 0 ? void 0 : _29.replyType, ["none", "quote_reply", "thread"])) {
    target.channel.replyType = (_31 = (_30 = local.groupChannel) === null || _30 === void 0 ? void 0 : _30.channel) === null || _31 === void 0 ? void 0 : _31.replyType;
  }
  if (((_32 = remote.groupChannel) === null || _32 === void 0 ? void 0 : _32.channel) && isOneOf((_34 = (_33 = remote.groupChannel) === null || _33 === void 0 ? void 0 : _33.channel) === null || _34 === void 0 ? void 0 : _34.threadReplySelectType, ["thread", "parent"])) {
    target.channel.threadReplySelectType = (_36 = (_35 = remote.groupChannel) === null || _35 === void 0 ? void 0 : _35.channel) === null || _36 === void 0 ? void 0 : _36.threadReplySelectType;
  }
  if (((_37 = local.groupChannel) === null || _37 === void 0 ? void 0 : _37.channel) && isOneOf((_39 = (_38 = local.groupChannel) === null || _38 === void 0 ? void 0 : _38.channel) === null || _39 === void 0 ? void 0 : _39.threadReplySelectType, ["thread", "parent"])) {
    target.channel.threadReplySelectType = (_41 = (_40 = local.groupChannel) === null || _40 === void 0 ? void 0 : _40.channel) === null || _41 === void 0 ? void 0 : _41.threadReplySelectType;
  }
  if (((_42 = remote.groupChannel) === null || _42 === void 0 ? void 0 : _42.channel) && isBoolean((_44 = (_43 = remote.groupChannel) === null || _43 === void 0 ? void 0 : _43.channel) === null || _44 === void 0 ? void 0 : _44.enableVoiceMessage)) {
    target.channel.enableVoiceMessage = (_46 = (_45 = remote.groupChannel) === null || _45 === void 0 ? void 0 : _45.channel) === null || _46 === void 0 ? void 0 : _46.enableVoiceMessage;
  }
  if (((_47 = local.groupChannel) === null || _47 === void 0 ? void 0 : _47.channel) && isBoolean((_49 = (_48 = local.groupChannel) === null || _48 === void 0 ? void 0 : _48.channel) === null || _49 === void 0 ? void 0 : _49.enableVoiceMessage)) {
    target.channel.enableVoiceMessage = (_51 = (_50 = local.groupChannel) === null || _50 === void 0 ? void 0 : _50.channel) === null || _51 === void 0 ? void 0 : _51.enableVoiceMessage;
  }
  if (((_52 = local.groupChannel) === null || _52 === void 0 ? void 0 : _52.channel) && isSet((_54 = (_53 = local.groupChannel) === null || _53 === void 0 ? void 0 : _53.channel) === null || _54 === void 0 ? void 0 : _54.typingIndicatorTypes)) {
    target.channel.typingIndicatorTypes = (_56 = (_55 = local.groupChannel) === null || _55 === void 0 ? void 0 : _55.channel) === null || _56 === void 0 ? void 0 : _56.typingIndicatorTypes;
  }
  if (((_57 = local.groupChannel) === null || _57 === void 0 ? void 0 : _57.channel) && isBoolean((_59 = (_58 = local.groupChannel) === null || _58 === void 0 ? void 0 : _58.channel) === null || _59 === void 0 ? void 0 : _59.enableFeedback)) {
    target.channel.enableFeedback = (_61 = (_60 = local.groupChannel) === null || _60 === void 0 ? void 0 : _60.channel) === null || _61 === void 0 ? void 0 : _61.enableFeedback;
  }
  if (((_62 = local.groupChannel) === null || _62 === void 0 ? void 0 : _62.channel) && isBoolean((_64 = (_63 = local.groupChannel) === null || _63 === void 0 ? void 0 : _63.channel) === null || _64 === void 0 ? void 0 : _64.enableSuggestedReplies)) {
    target.channel.enableSuggestedReplies = (_66 = (_65 = local.groupChannel) === null || _65 === void 0 ? void 0 : _65.channel) === null || _66 === void 0 ? void 0 : _66.enableSuggestedReplies;
  }
  if (((_67 = local.groupChannel) === null || _67 === void 0 ? void 0 : _67.channel) && isOneOf((_69 = (_68 = local.groupChannel) === null || _68 === void 0 ? void 0 : _68.channel) === null || _69 === void 0 ? void 0 : _69.showSuggestedRepliesFor, ["all_messages", "last_message_only"])) {
    target.channel.showSuggestedRepliesFor = (_71 = (_70 = local.groupChannel) === null || _70 === void 0 ? void 0 : _70.channel) === null || _71 === void 0 ? void 0 : _71.showSuggestedRepliesFor;
  }
  if (((_72 = local.groupChannel) === null || _72 === void 0 ? void 0 : _72.channel) && isOneOf((_74 = (_73 = local.groupChannel) === null || _73 === void 0 ? void 0 : _73.channel) === null || _74 === void 0 ? void 0 : _74.suggestedRepliesDirection, ["vertical", "horizontal"])) {
    target.channel.suggestedRepliesDirection = (_76 = (_75 = local.groupChannel) === null || _75 === void 0 ? void 0 : _75.channel) === null || _76 === void 0 ? void 0 : _76.suggestedRepliesDirection;
  }
  if (((_77 = local.groupChannel) === null || _77 === void 0 ? void 0 : _77.channel) && isBoolean((_79 = (_78 = local.groupChannel) === null || _78 === void 0 ? void 0 : _78.channel) === null || _79 === void 0 ? void 0 : _79.enableMarkdownForUserMessage)) {
    target.channel.enableMarkdownForUserMessage = (_81 = (_80 = local.groupChannel) === null || _80 === void 0 ? void 0 : _80.channel) === null || _81 === void 0 ? void 0 : _81.enableMarkdownForUserMessage;
  }
  if (((_82 = local.groupChannel) === null || _82 === void 0 ? void 0 : _82.channel) && isBoolean((_84 = (_83 = local.groupChannel) === null || _83 === void 0 ? void 0 : _83.channel) === null || _84 === void 0 ? void 0 : _84.enableFormTypeMessage)) {
    target.channel.enableFormTypeMessage = (_86 = (_85 = local.groupChannel) === null || _85 === void 0 ? void 0 : _85.channel) === null || _86 === void 0 ? void 0 : _86.enableFormTypeMessage;
  }
}
function updateChannelInputConfig(target, local, remote) {
  var _a3, _b2, _c, _d, _e3, _f, _g2, _h, _j, _k, _l, _m, _o2, _p, _q, _r2, _s4, _t3, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79;
  if (((_b2 = (_a3 = remote.groupChannel) === null || _a3 === void 0 ? void 0 : _a3.channel) === null || _b2 === void 0 ? void 0 : _b2.input) && isBoolean((_e3 = (_d = (_c = remote.groupChannel) === null || _c === void 0 ? void 0 : _c.channel) === null || _d === void 0 ? void 0 : _d.input) === null || _e3 === void 0 ? void 0 : _e3.enableDocument)) {
    target.channel.input.enableDocument = (_h = (_g2 = (_f = remote.groupChannel) === null || _f === void 0 ? void 0 : _f.channel) === null || _g2 === void 0 ? void 0 : _g2.input) === null || _h === void 0 ? void 0 : _h.enableDocument;
  }
  if (((_k = (_j = local.groupChannel) === null || _j === void 0 ? void 0 : _j.channel) === null || _k === void 0 ? void 0 : _k.input) && isBoolean((_o2 = (_m = (_l = local.groupChannel) === null || _l === void 0 ? void 0 : _l.channel) === null || _m === void 0 ? void 0 : _m.input) === null || _o2 === void 0 ? void 0 : _o2.enableDocument)) {
    target.channel.input.enableDocument = (_r2 = (_q = (_p = local.groupChannel) === null || _p === void 0 ? void 0 : _p.channel) === null || _q === void 0 ? void 0 : _q.input) === null || _r2 === void 0 ? void 0 : _r2.enableDocument;
  }
  if (((_u = (_t3 = (_s4 = remote.groupChannel) === null || _s4 === void 0 ? void 0 : _s4.channel) === null || _t3 === void 0 ? void 0 : _t3.input) === null || _u === void 0 ? void 0 : _u.camera) && isBoolean((_y = (_x = (_w = (_v = remote.groupChannel) === null || _v === void 0 ? void 0 : _v.channel) === null || _w === void 0 ? void 0 : _w.input) === null || _x === void 0 ? void 0 : _x.camera) === null || _y === void 0 ? void 0 : _y.enablePhoto)) {
    target.channel.input.camera.enablePhoto = (_2 = (_1 = (_0 = (_z = remote.groupChannel) === null || _z === void 0 ? void 0 : _z.channel) === null || _0 === void 0 ? void 0 : _0.input) === null || _1 === void 0 ? void 0 : _1.camera) === null || _2 === void 0 ? void 0 : _2.enablePhoto;
  }
  if (((_5 = (_4 = (_3 = local.groupChannel) === null || _3 === void 0 ? void 0 : _3.channel) === null || _4 === void 0 ? void 0 : _4.input) === null || _5 === void 0 ? void 0 : _5.camera) && isBoolean((_9 = (_8 = (_7 = (_6 = local.groupChannel) === null || _6 === void 0 ? void 0 : _6.channel) === null || _7 === void 0 ? void 0 : _7.input) === null || _8 === void 0 ? void 0 : _8.camera) === null || _9 === void 0 ? void 0 : _9.enablePhoto)) {
    target.channel.input.camera.enablePhoto = (_13 = (_12 = (_11 = (_10 = local.groupChannel) === null || _10 === void 0 ? void 0 : _10.channel) === null || _11 === void 0 ? void 0 : _11.input) === null || _12 === void 0 ? void 0 : _12.camera) === null || _13 === void 0 ? void 0 : _13.enablePhoto;
  }
  if (((_16 = (_15 = (_14 = remote.groupChannel) === null || _14 === void 0 ? void 0 : _14.channel) === null || _15 === void 0 ? void 0 : _15.input) === null || _16 === void 0 ? void 0 : _16.camera) && isBoolean((_20 = (_19 = (_18 = (_17 = remote.groupChannel) === null || _17 === void 0 ? void 0 : _17.channel) === null || _18 === void 0 ? void 0 : _18.input) === null || _19 === void 0 ? void 0 : _19.camera) === null || _20 === void 0 ? void 0 : _20.enableVideo)) {
    target.channel.input.camera.enableVideo = (_24 = (_23 = (_22 = (_21 = remote.groupChannel) === null || _21 === void 0 ? void 0 : _21.channel) === null || _22 === void 0 ? void 0 : _22.input) === null || _23 === void 0 ? void 0 : _23.camera) === null || _24 === void 0 ? void 0 : _24.enableVideo;
  }
  if (((_27 = (_26 = (_25 = local.groupChannel) === null || _25 === void 0 ? void 0 : _25.channel) === null || _26 === void 0 ? void 0 : _26.input) === null || _27 === void 0 ? void 0 : _27.camera) && isBoolean((_31 = (_30 = (_29 = (_28 = local.groupChannel) === null || _28 === void 0 ? void 0 : _28.channel) === null || _29 === void 0 ? void 0 : _29.input) === null || _30 === void 0 ? void 0 : _30.camera) === null || _31 === void 0 ? void 0 : _31.enableVideo)) {
    target.channel.input.camera.enableVideo = (_35 = (_34 = (_33 = (_32 = local.groupChannel) === null || _32 === void 0 ? void 0 : _32.channel) === null || _33 === void 0 ? void 0 : _33.input) === null || _34 === void 0 ? void 0 : _34.camera) === null || _35 === void 0 ? void 0 : _35.enableVideo;
  }
  if (((_38 = (_37 = (_36 = remote.groupChannel) === null || _36 === void 0 ? void 0 : _36.channel) === null || _37 === void 0 ? void 0 : _37.input) === null || _38 === void 0 ? void 0 : _38.gallery) && isBoolean((_42 = (_41 = (_40 = (_39 = remote.groupChannel) === null || _39 === void 0 ? void 0 : _39.channel) === null || _40 === void 0 ? void 0 : _40.input) === null || _41 === void 0 ? void 0 : _41.gallery) === null || _42 === void 0 ? void 0 : _42.enablePhoto)) {
    target.channel.input.gallery.enablePhoto = (_46 = (_45 = (_44 = (_43 = remote.groupChannel) === null || _43 === void 0 ? void 0 : _43.channel) === null || _44 === void 0 ? void 0 : _44.input) === null || _45 === void 0 ? void 0 : _45.gallery) === null || _46 === void 0 ? void 0 : _46.enablePhoto;
  }
  if (((_49 = (_48 = (_47 = local.groupChannel) === null || _47 === void 0 ? void 0 : _47.channel) === null || _48 === void 0 ? void 0 : _48.input) === null || _49 === void 0 ? void 0 : _49.gallery) && isBoolean((_53 = (_52 = (_51 = (_50 = local.groupChannel) === null || _50 === void 0 ? void 0 : _50.channel) === null || _51 === void 0 ? void 0 : _51.input) === null || _52 === void 0 ? void 0 : _52.gallery) === null || _53 === void 0 ? void 0 : _53.enablePhoto)) {
    target.channel.input.gallery.enablePhoto = (_57 = (_56 = (_55 = (_54 = local.groupChannel) === null || _54 === void 0 ? void 0 : _54.channel) === null || _55 === void 0 ? void 0 : _55.input) === null || _56 === void 0 ? void 0 : _56.gallery) === null || _57 === void 0 ? void 0 : _57.enablePhoto;
  }
  if (((_60 = (_59 = (_58 = remote.groupChannel) === null || _58 === void 0 ? void 0 : _58.channel) === null || _59 === void 0 ? void 0 : _59.input) === null || _60 === void 0 ? void 0 : _60.gallery) && isBoolean((_64 = (_63 = (_62 = (_61 = remote.groupChannel) === null || _61 === void 0 ? void 0 : _61.channel) === null || _62 === void 0 ? void 0 : _62.input) === null || _63 === void 0 ? void 0 : _63.gallery) === null || _64 === void 0 ? void 0 : _64.enableVideo)) {
    target.channel.input.gallery.enableVideo = (_68 = (_67 = (_66 = (_65 = remote.groupChannel) === null || _65 === void 0 ? void 0 : _65.channel) === null || _66 === void 0 ? void 0 : _66.input) === null || _67 === void 0 ? void 0 : _67.gallery) === null || _68 === void 0 ? void 0 : _68.enableVideo;
  }
  if (((_71 = (_70 = (_69 = local.groupChannel) === null || _69 === void 0 ? void 0 : _69.channel) === null || _70 === void 0 ? void 0 : _70.input) === null || _71 === void 0 ? void 0 : _71.gallery) && isBoolean((_75 = (_74 = (_73 = (_72 = local.groupChannel) === null || _72 === void 0 ? void 0 : _72.channel) === null || _73 === void 0 ? void 0 : _73.input) === null || _74 === void 0 ? void 0 : _74.gallery) === null || _75 === void 0 ? void 0 : _75.enableVideo)) {
    target.channel.input.gallery.enableVideo = (_79 = (_78 = (_77 = (_76 = local.groupChannel) === null || _76 === void 0 ? void 0 : _76.channel) === null || _77 === void 0 ? void 0 : _77.input) === null || _78 === void 0 ? void 0 : _78.gallery) === null || _79 === void 0 ? void 0 : _79.enableVideo;
  }
}
function updateChannelListConfig(target, local, remote) {
  var _a3, _b2, _c, _d, _e3, _f, _g2, _h, _j, _k, _l, _m, _o2, _p, _q, _r2, _s4, _t3;
  if (((_a3 = remote.groupChannel) === null || _a3 === void 0 ? void 0 : _a3.channelList) && isBoolean((_c = (_b2 = remote.groupChannel) === null || _b2 === void 0 ? void 0 : _b2.channelList) === null || _c === void 0 ? void 0 : _c.enableTypingIndicator)) {
    target.channelList.enableTypingIndicator = remote.groupChannel.channelList.enableTypingIndicator;
  }
  if (((_d = local.groupChannel) === null || _d === void 0 ? void 0 : _d.channelList) && isBoolean((_f = (_e3 = local.groupChannel) === null || _e3 === void 0 ? void 0 : _e3.channelList) === null || _f === void 0 ? void 0 : _f.enableTypingIndicator)) {
    target.channelList.enableTypingIndicator = (_h = (_g2 = local.groupChannel) === null || _g2 === void 0 ? void 0 : _g2.channelList) === null || _h === void 0 ? void 0 : _h.enableTypingIndicator;
  }
  if (((_j = remote.groupChannel) === null || _j === void 0 ? void 0 : _j.channelList) && isBoolean((_l = (_k = remote.groupChannel) === null || _k === void 0 ? void 0 : _k.channelList) === null || _l === void 0 ? void 0 : _l.enableMessageReceiptStatus)) {
    target.channelList.enableMessageReceiptStatus = (_o2 = (_m = remote.groupChannel) === null || _m === void 0 ? void 0 : _m.channelList) === null || _o2 === void 0 ? void 0 : _o2.enableMessageReceiptStatus;
  }
  if (((_p = local.groupChannel) === null || _p === void 0 ? void 0 : _p.channelList) && isBoolean((_r2 = (_q = local.groupChannel) === null || _q === void 0 ? void 0 : _q.channelList) === null || _r2 === void 0 ? void 0 : _r2.enableMessageReceiptStatus)) {
    target.channelList.enableMessageReceiptStatus = (_t3 = (_s4 = local.groupChannel) === null || _s4 === void 0 ? void 0 : _s4.channelList) === null || _t3 === void 0 ? void 0 : _t3.enableMessageReceiptStatus;
  }
}
function updateChannelSettingConfig(target, local, remote) {
  var _a3, _b2, _c, _d, _e3, _f, _g2, _h;
  if (((_a3 = remote.groupChannel) === null || _a3 === void 0 ? void 0 : _a3.setting) && isBoolean((_c = (_b2 = remote.groupChannel) === null || _b2 === void 0 ? void 0 : _b2.setting) === null || _c === void 0 ? void 0 : _c.enableMessageSearch)) {
    target.setting.enableMessageSearch = remote.groupChannel.setting.enableMessageSearch;
  }
  if (((_d = local.groupChannel) === null || _d === void 0 ? void 0 : _d.setting) && isBoolean((_f = (_e3 = local.groupChannel) === null || _e3 === void 0 ? void 0 : _e3.setting) === null || _f === void 0 ? void 0 : _f.enableMessageSearch)) {
    target.setting.enableMessageSearch = (_h = (_g2 = local.groupChannel) === null || _g2 === void 0 ? void 0 : _g2.setting) === null || _h === void 0 ? void 0 : _h.enableMessageSearch;
  }
}

// node_modules/@sendbird/uikit-tools/dist/esm/uikitConfiguration/internal/updators/updateOpenChannelConfigs.js
function updateOpenChannelConfigs(target, local, remote) {
  updateChannelConfig2(target, local, remote);
  updateChannelInputConfig2(target, local, remote);
}
function updateChannelConfig2(target, local, remote) {
  var _a3, _b2, _c, _d, _e3, _f, _g2, _h;
  if (((_a3 = remote.openChannel) === null || _a3 === void 0 ? void 0 : _a3.channel) && isBoolean((_c = (_b2 = remote.openChannel) === null || _b2 === void 0 ? void 0 : _b2.channel) === null || _c === void 0 ? void 0 : _c.enableOgtag)) {
    target.channel.enableOgtag = remote.openChannel.channel.enableOgtag;
  }
  if (((_d = local.openChannel) === null || _d === void 0 ? void 0 : _d.channel) && isBoolean((_f = (_e3 = local.openChannel) === null || _e3 === void 0 ? void 0 : _e3.channel) === null || _f === void 0 ? void 0 : _f.enableOgtag)) {
    target.channel.enableOgtag = (_h = (_g2 = local.openChannel) === null || _g2 === void 0 ? void 0 : _g2.channel) === null || _h === void 0 ? void 0 : _h.enableOgtag;
  }
}
function updateChannelInputConfig2(target, local, remote) {
  var _a3, _b2, _c, _d, _e3, _f, _g2, _h, _j, _k, _l, _m, _o2, _p, _q, _r2, _s4, _t3, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79;
  if (((_b2 = (_a3 = remote.openChannel) === null || _a3 === void 0 ? void 0 : _a3.channel) === null || _b2 === void 0 ? void 0 : _b2.input) && isBoolean((_e3 = (_d = (_c = remote.openChannel) === null || _c === void 0 ? void 0 : _c.channel) === null || _d === void 0 ? void 0 : _d.input) === null || _e3 === void 0 ? void 0 : _e3.enableDocument)) {
    target.channel.input.enableDocument = (_h = (_g2 = (_f = remote.openChannel) === null || _f === void 0 ? void 0 : _f.channel) === null || _g2 === void 0 ? void 0 : _g2.input) === null || _h === void 0 ? void 0 : _h.enableDocument;
  }
  if (((_k = (_j = local.openChannel) === null || _j === void 0 ? void 0 : _j.channel) === null || _k === void 0 ? void 0 : _k.input) && isBoolean((_o2 = (_m = (_l = local.openChannel) === null || _l === void 0 ? void 0 : _l.channel) === null || _m === void 0 ? void 0 : _m.input) === null || _o2 === void 0 ? void 0 : _o2.enableDocument)) {
    target.channel.input.enableDocument = (_r2 = (_q = (_p = local.openChannel) === null || _p === void 0 ? void 0 : _p.channel) === null || _q === void 0 ? void 0 : _q.input) === null || _r2 === void 0 ? void 0 : _r2.enableDocument;
  }
  if (((_u = (_t3 = (_s4 = remote.openChannel) === null || _s4 === void 0 ? void 0 : _s4.channel) === null || _t3 === void 0 ? void 0 : _t3.input) === null || _u === void 0 ? void 0 : _u.camera) && isBoolean((_y = (_x = (_w = (_v = remote.openChannel) === null || _v === void 0 ? void 0 : _v.channel) === null || _w === void 0 ? void 0 : _w.input) === null || _x === void 0 ? void 0 : _x.camera) === null || _y === void 0 ? void 0 : _y.enablePhoto)) {
    target.channel.input.camera.enablePhoto = (_2 = (_1 = (_0 = (_z = remote.openChannel) === null || _z === void 0 ? void 0 : _z.channel) === null || _0 === void 0 ? void 0 : _0.input) === null || _1 === void 0 ? void 0 : _1.camera) === null || _2 === void 0 ? void 0 : _2.enablePhoto;
  }
  if (((_5 = (_4 = (_3 = local.openChannel) === null || _3 === void 0 ? void 0 : _3.channel) === null || _4 === void 0 ? void 0 : _4.input) === null || _5 === void 0 ? void 0 : _5.camera) && isBoolean((_9 = (_8 = (_7 = (_6 = local.openChannel) === null || _6 === void 0 ? void 0 : _6.channel) === null || _7 === void 0 ? void 0 : _7.input) === null || _8 === void 0 ? void 0 : _8.camera) === null || _9 === void 0 ? void 0 : _9.enablePhoto)) {
    target.channel.input.camera.enablePhoto = (_13 = (_12 = (_11 = (_10 = local.openChannel) === null || _10 === void 0 ? void 0 : _10.channel) === null || _11 === void 0 ? void 0 : _11.input) === null || _12 === void 0 ? void 0 : _12.camera) === null || _13 === void 0 ? void 0 : _13.enablePhoto;
  }
  if (((_16 = (_15 = (_14 = remote.openChannel) === null || _14 === void 0 ? void 0 : _14.channel) === null || _15 === void 0 ? void 0 : _15.input) === null || _16 === void 0 ? void 0 : _16.camera) && isBoolean((_20 = (_19 = (_18 = (_17 = remote.openChannel) === null || _17 === void 0 ? void 0 : _17.channel) === null || _18 === void 0 ? void 0 : _18.input) === null || _19 === void 0 ? void 0 : _19.camera) === null || _20 === void 0 ? void 0 : _20.enableVideo)) {
    target.channel.input.camera.enableVideo = (_24 = (_23 = (_22 = (_21 = remote.openChannel) === null || _21 === void 0 ? void 0 : _21.channel) === null || _22 === void 0 ? void 0 : _22.input) === null || _23 === void 0 ? void 0 : _23.camera) === null || _24 === void 0 ? void 0 : _24.enableVideo;
  }
  if (((_27 = (_26 = (_25 = local.openChannel) === null || _25 === void 0 ? void 0 : _25.channel) === null || _26 === void 0 ? void 0 : _26.input) === null || _27 === void 0 ? void 0 : _27.camera) && isBoolean((_31 = (_30 = (_29 = (_28 = local.openChannel) === null || _28 === void 0 ? void 0 : _28.channel) === null || _29 === void 0 ? void 0 : _29.input) === null || _30 === void 0 ? void 0 : _30.camera) === null || _31 === void 0 ? void 0 : _31.enableVideo)) {
    target.channel.input.camera.enableVideo = (_35 = (_34 = (_33 = (_32 = local.openChannel) === null || _32 === void 0 ? void 0 : _32.channel) === null || _33 === void 0 ? void 0 : _33.input) === null || _34 === void 0 ? void 0 : _34.camera) === null || _35 === void 0 ? void 0 : _35.enableVideo;
  }
  if (((_38 = (_37 = (_36 = remote.openChannel) === null || _36 === void 0 ? void 0 : _36.channel) === null || _37 === void 0 ? void 0 : _37.input) === null || _38 === void 0 ? void 0 : _38.gallery) && isBoolean((_42 = (_41 = (_40 = (_39 = remote.openChannel) === null || _39 === void 0 ? void 0 : _39.channel) === null || _40 === void 0 ? void 0 : _40.input) === null || _41 === void 0 ? void 0 : _41.gallery) === null || _42 === void 0 ? void 0 : _42.enablePhoto)) {
    target.channel.input.gallery.enablePhoto = (_46 = (_45 = (_44 = (_43 = remote.openChannel) === null || _43 === void 0 ? void 0 : _43.channel) === null || _44 === void 0 ? void 0 : _44.input) === null || _45 === void 0 ? void 0 : _45.gallery) === null || _46 === void 0 ? void 0 : _46.enablePhoto;
  }
  if (((_49 = (_48 = (_47 = local.openChannel) === null || _47 === void 0 ? void 0 : _47.channel) === null || _48 === void 0 ? void 0 : _48.input) === null || _49 === void 0 ? void 0 : _49.gallery) && isBoolean((_53 = (_52 = (_51 = (_50 = local.openChannel) === null || _50 === void 0 ? void 0 : _50.channel) === null || _51 === void 0 ? void 0 : _51.input) === null || _52 === void 0 ? void 0 : _52.gallery) === null || _53 === void 0 ? void 0 : _53.enablePhoto)) {
    target.channel.input.gallery.enablePhoto = (_57 = (_56 = (_55 = (_54 = local.openChannel) === null || _54 === void 0 ? void 0 : _54.channel) === null || _55 === void 0 ? void 0 : _55.input) === null || _56 === void 0 ? void 0 : _56.gallery) === null || _57 === void 0 ? void 0 : _57.enablePhoto;
  }
  if (((_60 = (_59 = (_58 = remote.openChannel) === null || _58 === void 0 ? void 0 : _58.channel) === null || _59 === void 0 ? void 0 : _59.input) === null || _60 === void 0 ? void 0 : _60.gallery) && isBoolean((_64 = (_63 = (_62 = (_61 = remote.openChannel) === null || _61 === void 0 ? void 0 : _61.channel) === null || _62 === void 0 ? void 0 : _62.input) === null || _63 === void 0 ? void 0 : _63.gallery) === null || _64 === void 0 ? void 0 : _64.enableVideo)) {
    target.channel.input.gallery.enableVideo = (_68 = (_67 = (_66 = (_65 = remote.openChannel) === null || _65 === void 0 ? void 0 : _65.channel) === null || _66 === void 0 ? void 0 : _66.input) === null || _67 === void 0 ? void 0 : _67.gallery) === null || _68 === void 0 ? void 0 : _68.enableVideo;
  }
  if (((_71 = (_70 = (_69 = local.openChannel) === null || _69 === void 0 ? void 0 : _69.channel) === null || _70 === void 0 ? void 0 : _70.input) === null || _71 === void 0 ? void 0 : _71.gallery) && isBoolean((_75 = (_74 = (_73 = (_72 = local.openChannel) === null || _72 === void 0 ? void 0 : _72.channel) === null || _73 === void 0 ? void 0 : _73.input) === null || _74 === void 0 ? void 0 : _74.gallery) === null || _75 === void 0 ? void 0 : _75.enableVideo)) {
    target.channel.input.gallery.enableVideo = (_79 = (_78 = (_77 = (_76 = local.openChannel) === null || _76 === void 0 ? void 0 : _76.channel) === null || _77 === void 0 ? void 0 : _77.input) === null || _78 === void 0 ? void 0 : _78.gallery) === null || _79 === void 0 ? void 0 : _79.enableVideo;
  }
}

// node_modules/@sendbird/uikit-tools/dist/esm/uikitConfiguration/internal/utils.js
function getConfigsByPriority(localConfigs, remoteConfigs) {
  const prioritizedConfigs = createInitialConfig();
  updateCommonConfigs(prioritizedConfigs.common, localConfigs, remoteConfigs);
  updateGroupChannelConfigs(prioritizedConfigs.groupChannel, localConfigs, remoteConfigs);
  updateOpenChannelConfigs(prioritizedConfigs.openChannel, localConfigs, remoteConfigs);
  return prioritizedConfigs;
}
function isRawSBUConfigPayload(json) {
  return typeof json === "object" && "configuration" in json && "updated_at" in json;
}

// node_modules/@sendbird/uikit-tools/dist/esm/uikitConfiguration/internal/context.js
var __awaiter6 = function(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e4) {
        reject(e4);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e4) {
        reject(e4);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
function getApplicationAttributes(sdk) {
  var _a3, _b2;
  return (_b2 = (_a3 = sdk.appInfo) === null || _a3 === void 0 ? void 0 : _a3.applicationAttributes) !== null && _b2 !== void 0 ? _b2 : [];
}
var UIKitConfigContext = (0, import_react12.createContext)({
  initDashboardConfigs: () => Promise.resolve(),
  configs: initialConfig,
  configsWithAppAttr: () => initialConfig
});
var UIKitConfigProvider = ({ storage, children, localConfigs = {} }) => {
  const [remoteConfigs, setRemoteConfigs] = (0, import_react12.useState)(createInitialRemoteConfig);
  const [manager] = (0, import_react12.useState)(() => new UIKitConfigManager(storage));
  const initDashboardConfigs = (0, import_react12.useCallback)((sdk) => __awaiter6(void 0, void 0, void 0, function* () {
    const storedConfigPayload = yield manager.init(sdk.appId);
    if (sdk.appInfo && sdk.appInfo.uikitConfigInfo.lastUpdatedAt === storedConfigPayload.updatedAt) {
      setRemoteConfigs(storedConfigPayload.configuration);
    } else {
      try {
        const response = yield sdk.getUIKitConfiguration();
        if (isRawSBUConfigPayload(response.json)) {
          const remoteConfigPayload = snakeToCamel(response.json);
          const updatedConfigPayload = yield manager.update(remoteConfigPayload);
          setRemoteConfigs(updatedConfigPayload.configuration);
        }
      } catch (_a3) {
        setRemoteConfigs(storedConfigPayload.configuration);
      }
    }
  }), [manager]);
  const configs = getConfigsByPriority(localConfigs, remoteConfigs);
  const configsWithAppAttr = usePreservedCallback((sdk) => ({
    groupChannel: {
      channel: {
        get enableReactions() {
          return configs.groupChannel.channel.enableReactions && getApplicationAttributes(sdk).includes(applicationAttributes.reactions);
        },
        get enableReactionsSupergroup() {
          return configs.groupChannel.channel.enableReactionsSupergroup && getApplicationAttributes(sdk).includes(applicationAttributes.reactions);
        },
        get enableOgtag() {
          return configs.groupChannel.channel.enableOgtag && getApplicationAttributes(sdk).includes(applicationAttributes.enable_og_tag);
        }
      },
      setting: {
        get enableMessageSearch() {
          return configs.groupChannel.setting.enableMessageSearch && getApplicationAttributes(sdk).includes(applicationAttributes.message_search_v3);
        }
      }
    },
    openChannel: {
      channel: {
        get enableOgtag() {
          return configs.openChannel.channel.enableOgtag && getApplicationAttributes(sdk).includes(applicationAttributes.enable_og_tag);
        }
      }
    }
  }));
  return import_react12.default.createElement(UIKitConfigContext.Provider, { value: { initDashboardConfigs, configs, configsWithAppAttr } }, children);
};
var useUIKitConfig = () => (0, import_react12.useContext)(UIKitConfigContext);

// node_modules/@sendbird/uikit-react/withSendbird.js
var import_react13 = __toESM(require_react(), 1);
var SendbirdSdkContext = import_react13.default.createContext(null);
var withSendbirdContext = function(OriginalComponent, mapStoreToProps) {
  var ContextAwareComponent = function(props) {
    return import_react13.default.createElement(SendbirdSdkContext.Consumer, null, function(context) {
      if (mapStoreToProps && typeof mapStoreToProps !== "function") {
        console.warn("Second parameter to withSendbirdContext must be a pure function");
      }
      var mergedProps = mapStoreToProps && typeof mapStoreToProps === "function" ? __assign(__assign({}, mapStoreToProps(context)), props) : __assign(__assign({}, context), props);
      return import_react13.default.createElement(OriginalComponent, __assign({}, mergedProps));
    });
  };
  var componentName = OriginalComponent.displayName || OriginalComponent.name || "Component";
  ContextAwareComponent.displayName = "SendbirdAware".concat(componentName);
  return ContextAwareComponent;
};

// node_modules/@sendbird/uikit-react/chunks/bundle-NL8iE1lF.js
var import_react24 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/utils/message/getOutgoingMessageState.js
var OutgoingMessageStates;
(function(OutgoingMessageStates2) {
  OutgoingMessageStates2["NONE"] = "NONE";
  OutgoingMessageStates2["PENDING"] = "PENDING";
  OutgoingMessageStates2["SENT"] = "SENT";
  OutgoingMessageStates2["FAILED"] = "FAILED";
  OutgoingMessageStates2["DELIVERED"] = "DELIVERED";
  OutgoingMessageStates2["READ"] = "READ";
})(OutgoingMessageStates || (OutgoingMessageStates = {}));
var getOutgoingMessageState = function(channel, message) {
  var _a3, _b2, _c, _d, _e3;
  if (!message || !("sendingStatus" in message))
    return OutgoingMessageStates.NONE;
  if (message.sendingStatus === "pending") {
    return OutgoingMessageStates.PENDING;
  }
  if (message.sendingStatus === "failed") {
    return OutgoingMessageStates.FAILED;
  }
  if ((_a3 = channel === null || channel === void 0 ? void 0 : channel.isGroupChannel) === null || _a3 === void 0 ? void 0 : _a3.call(channel)) {
    if (((_c = (_b2 = channel).getUnreadMemberCount) === null || _c === void 0 ? void 0 : _c.call(_b2, message)) === 0) {
      return OutgoingMessageStates.READ;
    } else if (((_e3 = (_d = channel).getUndeliveredMemberCount) === null || _e3 === void 0 ? void 0 : _e3.call(_d, message)) === 0) {
      return OutgoingMessageStates.DELIVERED;
    }
  }
  if (message.sendingStatus === "succeeded") {
    return OutgoingMessageStates.SENT;
  }
  return OutgoingMessageStates.NONE;
};

// node_modules/@sendbird/uikit-react/chunks/bundle-eZsqrPY3.js
var isIOS = function(userAgent) {
  return /iPhone|iPad|iPod/i.test(userAgent);
};
var isWebkit = function(userAgent) {
  return /WebKit/i.test(userAgent);
};
var isChrome = function(userAgent) {
  return /Chrome/i.test(userAgent);
};
var isSafari = function(userAgent) {
  return !isChrome(userAgent) && /Safari/i.test(userAgent);
};
var isMobileIOS = function(userAgent) {
  return isIOS(userAgent) && (isWebkit(userAgent) || isSafari(userAgent));
};

// node_modules/@sendbird/uikit-react/chunks/bundle-DnujA9kt.js
function _typeof(o3) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o4) {
    return typeof o4;
  } : function(o4) {
    return o4 && "function" == typeof Symbol && o4.constructor === Symbol && o4 !== Symbol.prototype ? "symbol" : typeof o4;
  }, _typeof(o3);
}
function requiredArgs(required, args) {
  if (args.length < required) {
    throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
  }
}
function toDate(argument) {
  requiredArgs(1, arguments);
  var argStr = Object.prototype.toString.call(argument);
  if (argument instanceof Date || _typeof(argument) === "object" && argStr === "[object Date]") {
    return new Date(argument.getTime());
  } else if (typeof argument === "number" || argStr === "[object Number]") {
    return new Date(argument);
  } else {
    if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments");
      console.warn(new Error().stack);
    }
    return /* @__PURE__ */ new Date(NaN);
  }
}

// node_modules/@sendbird/uikit-react/chunks/bundle-D_-9RmNe.js
var n2 = Symbol("@ts-pattern/matcher");
var t3 = "@ts-pattern/anonymous-select-key";
var e2 = function(n3) {
  return Boolean(n3 && "object" == typeof n3);
};
var r3 = function(t7) {
  return t7 && !!t7[n2];
};
var u2 = function t4(u4, i4, c4) {
  if (e2(u4)) {
    if (r3(u4)) {
      var o3 = u4[n2]().match(i4), a5 = o3.matched, f4 = o3.selections;
      return a5 && f4 && Object.keys(f4).forEach(function(n3) {
        return c4(n3, f4[n3]);
      }), a5;
    }
    if (!e2(i4)) return false;
    if (Array.isArray(u4)) return !!Array.isArray(i4) && u4.length === i4.length && u4.every(function(n3, e4) {
      return t4(n3, i4[e4], c4);
    });
    if (u4 instanceof Map) return i4 instanceof Map && Array.from(u4.keys()).every(function(n3) {
      return t4(u4.get(n3), i4.get(n3), c4);
    });
    if (u4 instanceof Set) {
      if (!(i4 instanceof Set)) return false;
      if (0 === u4.size) return 0 === i4.size;
      if (1 === u4.size) {
        var s6 = Array.from(u4.values())[0];
        return r3(s6) ? Array.from(i4.values()).every(function(n3) {
          return t4(s6, n3, c4);
        }) : i4.has(s6);
      }
      return Array.from(u4.values()).every(function(n3) {
        return i4.has(n3);
      });
    }
    return Object.keys(u4).every(function(e4) {
      var o4, a6 = u4[e4];
      return (e4 in i4 || r3(o4 = a6) && "optional" === o4[n2]().matcherType) && t4(a6, i4[e4], c4);
    });
  }
  return Object.is(i4, u4);
};
var i2 = function t5(u4) {
  var i4, o3, a5;
  return e2(u4) ? r3(u4) ? null != (i4 = null == (o3 = (a5 = u4[n2]()).getSelectionKeys) ? void 0 : o3.call(a5)) ? i4 : [] : Array.isArray(u4) ? c2(u4, t5) : c2(Object.values(u4), t5) : [];
};
var c2 = function(n3, t7) {
  return n3.reduce(function(n4, e4) {
    return n4.concat(t7(e4));
  }, []);
};
function o2(t7) {
  var e4;
  return (e4 = {})[n2] = function() {
    return { match: function(n3) {
      var e5 = {}, r4 = function(n4, t8) {
        e5[n4] = t8;
      };
      return void 0 === n3 ? (i2(t7).forEach(function(n4) {
        return r4(n4, void 0);
      }), { matched: true, selections: e5 }) : { matched: u2(t7, n3, r4), selections: e5 };
    }, getSelectionKeys: function() {
      return i2(t7);
    }, matcherType: "optional" };
  }, e4;
}
function a2(t7) {
  var e4;
  return (e4 = {})[n2] = function() {
    return { match: function(n3) {
      if (!Array.isArray(n3)) return { matched: false };
      var e5 = {};
      if (0 === n3.length) return i2(t7).forEach(function(n4) {
        e5[n4] = [];
      }), { matched: true, selections: e5 };
      var r4 = function(n4, t8) {
        e5[n4] = (e5[n4] || []).concat([t8]);
      };
      return { matched: n3.every(function(n4) {
        return u2(t7, n4, r4);
      }), selections: e5 };
    }, getSelectionKeys: function() {
      return i2(t7);
    } };
  }, e4;
}
function f3() {
  var t7, e4 = [].slice.call(arguments);
  return (t7 = {})[n2] = function() {
    return { match: function(n3) {
      var t8 = {}, r4 = function(n4, e5) {
        t8[n4] = e5;
      };
      return { matched: e4.every(function(t9) {
        return u2(t9, n3, r4);
      }), selections: t8 };
    }, getSelectionKeys: function() {
      return c2(e4, i2);
    }, matcherType: "and" };
  }, t7;
}
function s3() {
  var t7, e4 = [].slice.call(arguments);
  return (t7 = {})[n2] = function() {
    return { match: function(n3) {
      var t8 = {}, r4 = function(n4, e5) {
        t8[n4] = e5;
      };
      return c2(e4, i2).forEach(function(n4) {
        return r4(n4, void 0);
      }), { matched: e4.some(function(t9) {
        return u2(t9, n3, r4);
      }), selections: t8 };
    }, getSelectionKeys: function() {
      return c2(e4, i2);
    }, matcherType: "or" };
  }, t7;
}
function l2(t7) {
  var e4;
  return (e4 = {})[n2] = function() {
    return { match: function(n3) {
      return { matched: !u2(t7, n3, function() {
      }) };
    }, getSelectionKeys: function() {
      return [];
    }, matcherType: "not" };
  }, e4;
}
function h(t7) {
  var e4;
  return (e4 = {})[n2] = function() {
    return { match: function(n3) {
      return { matched: Boolean(t7(n3)) };
    } };
  }, e4;
}
function v4() {
  var e4, r4 = [].slice.call(arguments), c4 = "string" == typeof r4[0] ? r4[0] : void 0, o3 = 2 === r4.length ? r4[1] : "string" == typeof r4[0] ? void 0 : r4[0];
  return (e4 = {})[n2] = function() {
    return { match: function(n3) {
      var e5, r5 = ((e5 = {})[null != c4 ? c4 : t3] = n3, e5);
      return { matched: void 0 === o3 || u2(o3, n3, function(n4, t7) {
        r5[n4] = t7;
      }), selections: r5 };
    }, getSelectionKeys: function() {
      return [null != c4 ? c4 : t3].concat(void 0 === o3 ? [] : i2(o3));
    } };
  }, e4;
}
var y3 = h(function(n3) {
  return true;
});
var m2 = y3;
var d2 = h(function(n3) {
  return "string" == typeof n3;
});
var g3 = h(function(n3) {
  return "number" == typeof n3;
});
var p3 = h(function(n3) {
  return "boolean" == typeof n3;
});
var b4 = h(function(n3) {
  return "bigint" == typeof n3;
});
var w2 = h(function(n3) {
  return "symbol" == typeof n3;
});
var A2 = h(function(n3) {
  return null == n3;
});
var S3 = { __proto__: null, optional: o2, array: a2, intersection: f3, union: s3, not: l2, when: h, select: v4, any: y3, _: m2, string: d2, number: g3, boolean: p3, bigint: b4, symbol: w2, nullish: A2, instanceOf: function(n3) {
  return h(/* @__PURE__ */ function(n4) {
    return function(t7) {
      return t7 instanceof n4;
    };
  }(n3));
}, typed: function() {
  return { array: a2, optional: o2, intersection: f3, union: s3, not: l2, select: v4, when: h };
} };
function K2(n3) {
  return new O2(n3, []);
}
var O2 = function() {
  function n3(n4, t7) {
    this.value = void 0, this.cases = void 0, this.value = n4, this.cases = t7;
  }
  var e4 = n3.prototype;
  return e4.with = function() {
    var e5 = [].slice.call(arguments), r4 = e5[e5.length - 1], i4 = [e5[0]], c4 = [];
    return 3 === e5.length && "function" == typeof e5[1] ? (i4.push(e5[0]), c4.push(e5[1])) : e5.length > 2 && i4.push.apply(i4, e5.slice(1, e5.length - 1)), new n3(this.value, this.cases.concat([{ match: function(n4) {
      var e6 = {}, r5 = Boolean(i4.some(function(t7) {
        return u2(t7, n4, function(n5, t8) {
          e6[n5] = t8;
        });
      }) && c4.every(function(t7) {
        return t7(n4);
      }));
      return { matched: r5, value: r5 && Object.keys(e6).length ? t3 in e6 ? e6[t3] : e6 : n4 };
    }, handler: r4 }]));
  }, e4.when = function(t7, e5) {
    return new n3(this.value, this.cases.concat([{ match: function(n4) {
      return { matched: Boolean(t7(n4)), value: n4 };
    }, handler: e5 }]));
  }, e4.otherwise = function(t7) {
    return new n3(this.value, this.cases.concat([{ match: function(n4) {
      return { matched: true, value: n4 };
    }, handler: t7 }])).run();
  }, e4.exhaustive = function() {
    return this.run();
  }, e4.run = function() {
    for (var n4 = this.value, t7 = void 0, e5 = 0; e5 < this.cases.length; e5++) {
      var r4 = this.cases[e5], u4 = r4.match(this.value);
      if (u4.matched) {
        n4 = u4.value, t7 = r4.handler;
        break;
      }
    }
    if (!t7) {
      var i4;
      try {
        i4 = JSON.stringify(this.value);
      } catch (n5) {
        i4 = this.value;
      }
      throw new Error("Pattern matching error: no pattern matches value " + i4);
    }
    return t7(n4, this.value);
  }, n3;
}();
function startOfSecond(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setMilliseconds(0);
  return date;
}
function isSameSecond(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeftStartOfSecond = startOfSecond(dirtyDateLeft);
  var dateRightStartOfSecond = startOfSecond(dirtyDateRight);
  return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();
}
var _a;
var SUPPORTED_MIMES = {
  IMAGE: [
    "image/jpeg",
    "image/jpg",
    "image/png",
    "image/gif",
    "image/svg+xml",
    "image/webp"
    // not supported in IE
  ],
  VIDEO: [
    "video/mpeg",
    "video/ogg",
    "video/webm",
    "video/mp4"
    // 'video/quicktime', // NOTE: Do not support ThumbnailMessage for the .mov video
  ],
  AUDIO: [
    "audio/aac",
    "audio/midi",
    "audio/x-midi",
    "audio/mpeg",
    "audio/ogg",
    "audio/opus",
    "audio/wav",
    "audio/webm",
    "audio/3gpp",
    "audio/3gpp2",
    "audio/mp3"
  ],
  DOCUMENT: [
    "text/plain",
    "text/css",
    "text/csv",
    "text/html",
    "text/calendar",
    "text/javascript",
    "text/xml",
    "video/quicktime"
    // NOTE: Assume this video is a normal file, not video
  ],
  APPLICATION: [
    "application/x-abiword",
    "application/x-freearc",
    "application/vnd.amazon.ebook",
    "application/octet-stream",
    "application/x-bzip",
    "application/x-bzip2",
    "application/x-cdf",
    "application/x-csh",
    "application/msword",
    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
    "application/vnd.ms-fontobject",
    "application/epub+zip",
    "application/gzip",
    "application/java-archive",
    "application/json",
    "application/ld+json",
    "application/vnd.apple.installer+xml",
    "application/vnd.oasis.opendocument.presentation",
    "application/vnd.oasis.opendocument.spreadsheet",
    "application/vnd.oasis.opendocument.text",
    "application/ogg",
    "application/pdf",
    "application/x-httpd-php",
    "application/vnd.ms-powerpoint",
    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
    "application/vnd.rar",
    "application/rtf",
    "application/x-sh",
    "application/x-tar",
    "application/vnd.visio",
    "application/xhtml+xml",
    "application/vnd.ms-excel",
    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
    "application/xml",
    "application/vnd.mozilla.xul+xml",
    "application/zip",
    "application/x-7z-compressed"
  ]
};
var getMimeTypesUIKitAccepts = function(acceptableMimeTypes) {
  if (Array.isArray(acceptableMimeTypes) && acceptableMimeTypes.length > 0) {
    return acceptableMimeTypes.reduce(function(prev, curr) {
      switch (curr) {
        case "image": {
          prev.push.apply(prev, SUPPORTED_MIMES.IMAGE);
          break;
        }
        case "video": {
          prev.push.apply(prev, SUPPORTED_MIMES.VIDEO);
          break;
        }
        case "audio": {
          prev.push.apply(prev, SUPPORTED_MIMES.AUDIO);
          break;
        }
        default: {
          prev.push(curr);
          break;
        }
      }
      return prev;
    }, []).join();
  }
  return Object.values(SUPPORTED_MIMES).reduce(function(prev, curr) {
    return prev.concat(curr);
  }, []).join();
};
var UIKitMessageTypes = {
  ADMIN: "ADMIN",
  TEXT: "TEXT",
  FILE: "FILE",
  MULTIPLE_FILES: "MULTIPLE_FILES",
  THUMBNAIL: "THUMBNAIL",
  OG: "OG",
  UNKNOWN: "UNKNOWN"
};
var UIKitFileTypes = {
  IMAGE: "IMAGE",
  AUDIO: "AUDIO",
  VIDEO: "VIDEO",
  GIF: "GIF",
  VOICE: "VOICE",
  OTHERS: "OTHERS"
};
var isTextuallyNull = function(text2) {
  if (text2 === "" || text2 === null) {
    return true;
  }
  return false;
};
var isMOVType = function(type) {
  return type === "video/quicktime";
};
var isSupportedVideoFileTypeInSafari = function(type) {
  return isSafari(navigator.userAgent) && isMOVType(type);
};
var isImage = function(type) {
  return SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0;
};
var isVideo = function(type) {
  return SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0 || isSupportedVideoFileTypeInSafari(type);
};
var isGif = function(type) {
  return type === "image/gif";
};
var isSupportedFileView = function(type) {
  return isImage(type) || isVideo(type);
};
var isAudio = function(type) {
  return SUPPORTED_MIMES.AUDIO.indexOf(type) >= 0;
};
var getUIKitFileTypes = function() {
  return __assign({}, UIKitFileTypes);
};
var getUIKitFileType = function(type) {
  if (isGif(type))
    return UIKitFileTypes.GIF;
  if (isImage(type))
    return UIKitFileTypes.IMAGE;
  if (isVideo(type))
    return UIKitFileTypes.VIDEO;
  if (isAudio(type))
    return UIKitFileTypes.AUDIO;
  return UIKitFileTypes.OTHERS;
};
var isSentMessage = function(message) {
  return message.sendingStatus === "succeeded";
};
var isReadMessage = function(channel, message) {
  return getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ;
};
var isFailedMessage = function(message) {
  return (message === null || message === void 0 ? void 0 : message.sendingStatus) === "failed";
};
var isPendingMessage = function(message) {
  return (message === null || message === void 0 ? void 0 : message.sendingStatus) === "pending";
};
var isSentStatus = function(state) {
  return state === OutgoingMessageStates.SENT || state === OutgoingMessageStates.DELIVERED || state === OutgoingMessageStates.READ;
};
var isAdminMessage = function(message) {
  return message && (message["isAdminMessage"] && typeof message.isAdminMessage === "function" ? message.isAdminMessage() : (message === null || message === void 0 ? void 0 : message.messageType) === "admin");
};
var isUserMessage = function(message) {
  return message && (message["isUserMessage"] && typeof message.isUserMessage === "function" ? message.isUserMessage() : (message === null || message === void 0 ? void 0 : message.messageType) === "user");
};
var isFileMessage = function(message) {
  return !!message && (message["isFileMessage"] && typeof message.isFileMessage === "function" ? message.isFileMessage() : (message === null || message === void 0 ? void 0 : message.messageType) === "file");
};
var isMultipleFilesMessage = function(message) {
  return message && (message["isMultipleFilesMessage"] && typeof message.isMultipleFilesMessage === "function" ? message.isMultipleFilesMessage() : message.messageType === "file" && Object.prototype.hasOwnProperty.call(message, "fileInfoList"));
};
var isThreadMessage = function(message) {
  return !!message.parentMessageId && !!message.parentMessage;
};
var isFormMessage = function(message) {
  return !!message.messageForm;
};
var isTemplateMessage = function(message) {
  var _a3;
  return !!(message && ((_a3 = message.extendedMessagePayload) === null || _a3 === void 0 ? void 0 : _a3[MESSAGE_TEMPLATE_KEY]));
};
var isValidTemplateMessageType = function(templatePayload) {
  var type = templatePayload["type"];
  return !(type && !MessageTemplateTypes[type]);
};
var MessageTemplateTypes = {
  default: "default"
};
var uiContainerType = (_a = {}, _a[MessageTemplateTypes.default] = "ui_container_type__default", _a);
var isOGMessage = function(message) {
  if (!message || !isUserMessage(message))
    return false;
  return !!message.ogMetaData && !!(message.ogMetaData.url || message.ogMetaData.title || message.ogMetaData.description || message.ogMetaData.defaultImage);
};
var isTextMessage = function(message) {
  return isUserMessage(message);
};
var isThumbnailMessage = function(message) {
  if (!message || !isFileMessage(message))
    return false;
  return isSupportedFileView(message.type);
};
var isImageMessage = function(message) {
  if (!message || !isFileMessage(message))
    return false;
  return isThumbnailMessage(message) && isImage(message.type);
};
var isVideoMessage = function(message) {
  if (!message || !isFileMessage(message))
    return false;
  return isThumbnailMessage(message) && isVideo(message.type);
};
var isGifMessage = function(message) {
  if (!message || !isFileMessage(message))
    return false;
  return isThumbnailMessage(message) && isGif(message.type);
};
var isAudioMessage = function(message) {
  if (!message || !isFileMessage(message))
    return false;
  return isAudio(message.type);
};
var isImageFileInfo = function(fileInfo) {
  if (!fileInfo)
    return false;
  return !!fileInfo.mimeType && (isImage(fileInfo.mimeType) || isGif(fileInfo.mimeType));
};
var isAudioMessageMimeType = function(type) {
  return /^audio\//.test(type);
};
var isVoiceMessageMimeType = function(type) {
  return /^voice\//.test(type);
};
var isVoiceMessage = function(message) {
  var _a3, _b2, _c, _d;
  if (!message || !isFileMessage(message) || !message.type)
    return false;
  var _e3 = message.type.split(";"), mimeType = _e3[0], typeParameter = _e3[1];
  if (!isAudioMessageMimeType(mimeType)) {
    return false;
  }
  if (typeParameter) {
    var _f = typeParameter.split("="), key = _f[0], value = _f[1];
    return key === "sbu_type" && value === "voice";
  }
  return isVoiceMessageMimeType((_d = (_c = (_b2 = (_a3 = message === null || message === void 0 ? void 0 : message.metaArrays) === null || _a3 === void 0 ? void 0 : _a3.find(function(metaArray) {
    return metaArray.key === "KEY_INTERNAL_MESSAGE_TYPE";
  })) === null || _b2 === void 0 ? void 0 : _b2.value) === null || _c === void 0 ? void 0 : _c[0]) !== null && _d !== void 0 ? _d : "");
};
var isEditedMessage = function(message) {
  return isUserMessage(message) && (message === null || message === void 0 ? void 0 : message.updatedAt) > 0;
};
var getUIKitMessageTypes = function() {
  return __assign({}, UIKitMessageTypes);
};
var getUIKitMessageType = function(message) {
  if (isAdminMessage(message))
    return UIKitMessageTypes.ADMIN;
  if (isUserMessage(message)) {
    return isOGMessage(message) ? UIKitMessageTypes.OG : UIKitMessageTypes.TEXT;
  }
  if (isMultipleFilesMessage(message)) {
    return UIKitMessageTypes.MULTIPLE_FILES;
  }
  if (isFileMessage(message)) {
    if (isThumbnailMessage(message)) {
      return UIKitMessageTypes.THUMBNAIL;
    }
    if (isVoiceMessage(message)) {
      return UIKitFileTypes.VOICE;
    }
    return UIKitMessageTypes.FILE;
  }
  return UIKitMessageTypes.UNKNOWN;
};
var reducer = function(accumulator, currentValue) {
  if (Array.isArray(currentValue)) {
    return __spreadArray(__spreadArray([], accumulator, true), currentValue, true);
  } else {
    accumulator.push(currentValue);
    return accumulator;
  }
};
var getClassName = function(classNames) {
  return Array.isArray(classNames) ? classNames.reduce(reducer, []).join(" ") : classNames;
};
var isReactedBy = function(userId, reaction) {
  return reaction.userIds.some(function(reactorUserId) {
    return reactorUserId === userId;
  });
};
var getEmojiTooltipString = function(reaction, userId, memberNicknamesMap, stringSet2) {
  var you = "";
  if (isReactedBy(userId, reaction)) {
    you = reaction.userIds.length === 1 ? stringSet2.TOOLTIP__YOU : stringSet2.TOOLTIP__AND_YOU;
  }
  return "".concat(reaction.userIds.filter(function(reactorUserId) {
    return reactorUserId !== userId;
  }).map(function(reactorUserId) {
    return memberNicknamesMap.get(reactorUserId) || stringSet2.TOOLTIP__UNKNOWN_USER;
  }).join(", ")).concat(you);
};
function getSuggestedReplies(message) {
  var _a3;
  if ((message === null || message === void 0 ? void 0 : message.extendedMessagePayload) && Array.isArray((_a3 = message === null || message === void 0 ? void 0 : message.extendedMessagePayload) === null || _a3 === void 0 ? void 0 : _a3.suggested_replies)) {
    return message.extendedMessagePayload.suggested_replies;
  } else {
    return [];
  }
}
var truncateString = function(fullStr, strLen) {
  if (!strLen)
    strLen = 40;
  if (fullStr === null || fullStr === void 0)
    return "";
  if (fullStr.length <= strLen)
    return fullStr;
  var separator = "...";
  var sepLen = separator.length;
  var charsToShow = strLen - sepLen;
  var frontChars = Math.ceil(charsToShow / 2);
  var backChars = Math.floor(charsToShow / 2);
  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);
};
var copyToClipboard = function(text2) {
  if (window.clipboardData && window.clipboardData.setData) {
    return window.clipboardData.setData("Text", text2);
  }
  if (document.queryCommandSupported && document.queryCommandSupported("copy")) {
    var textarea = document.createElement("textarea");
    textarea.textContent = text2;
    textarea.style.position = "fixed";
    document.body.appendChild(textarea);
    textarea.select();
    try {
      return document.execCommand("copy");
    } catch (ex) {
      return false;
    } finally {
      document.body.removeChild(textarea);
    }
  }
  return false;
};
var getEmojiListAll = function(emojiContainer) {
  var _a3;
  return (_a3 = emojiContainer === null || emojiContainer === void 0 ? void 0 : emojiContainer.emojiCategories) === null || _a3 === void 0 ? void 0 : _a3.map(function(emojiCategory) {
    return emojiCategory.emojis;
  }).reduce(function(prevArr, currArr) {
    return prevArr.concat(currArr);
  }, []);
};
var getEmojiMapAll = function(emojiContainer) {
  var _a3;
  var emojiMap = /* @__PURE__ */ new Map();
  (_a3 = emojiContainer === null || emojiContainer === void 0 ? void 0 : emojiContainer.emojiCategories) === null || _a3 === void 0 ? void 0 : _a3.forEach(function(category) {
    var _a4;
    (_a4 = category === null || category === void 0 ? void 0 : category.emojis) === null || _a4 === void 0 ? void 0 : _a4.forEach(function(emoji) {
      if (emoji && emoji.key) {
        emojiMap.set(emoji.key, emoji);
      }
    });
  });
  return emojiMap;
};
var getEmojiListByCategoryIds = function(emojiContainer, categoryIds) {
  var _a3;
  if (!categoryIds)
    return getEmojiListAll(emojiContainer);
  return ((_a3 = emojiContainer === null || emojiContainer === void 0 ? void 0 : emojiContainer.emojiCategories) === null || _a3 === void 0 ? void 0 : _a3.filter(function(emojiCategory) {
    return categoryIds.includes(emojiCategory.id);
  }).flatMap(function(emojiCategory) {
    return emojiCategory.emojis;
  })) || [];
};
var findEmojiUrl = function(targetKey) {
  return function(_a3) {
    var key = _a3.key;
    return key === targetKey;
  };
};
var getEmojiUrl = function(emojiContainer, emojiKey) {
  var _a3, _b2;
  var isFindingKey = findEmojiUrl(emojiKey !== null && emojiKey !== void 0 ? emojiKey : "");
  return ((_b2 = (_a3 = emojiContainer === null || emojiContainer === void 0 ? void 0 : emojiContainer.emojiCategories.find(function(category) {
    return category.emojis.some(isFindingKey);
  })) === null || _a3 === void 0 ? void 0 : _a3.emojis.find(isFindingKey)) === null || _b2 === void 0 ? void 0 : _b2.url) || "";
};
var getUserName = function(user) {
  return (user === null || user === void 0 ? void 0 : user.friendName) || (user === null || user === void 0 ? void 0 : user.nickname) || (user === null || user === void 0 ? void 0 : user.userId);
};
var getSenderName = function(message) {
  return (message === null || message === void 0 ? void 0 : message.sender) && getUserName(message === null || message === void 0 ? void 0 : message.sender);
};
var hasSameMembers = function(a5, b6) {
  if (a5 === b6) {
    return true;
  }
  if (a5 == null || b6 == null) {
    return false;
  }
  if (a5.length !== b6.length) {
    return false;
  }
  var sortedA = __spreadArray([], a5, true).sort();
  var sortedB = __spreadArray([], b6, true).sort();
  for (var i4 = 0; i4 < sortedA.length; ++i4) {
    if (sortedA[i4] !== sortedB[i4]) {
      return false;
    }
  }
  return true;
};
var isFriend = function(user) {
  if (!user)
    return false;
  return !!(user.friendDiscoveryKey || user.friendName);
};
var filterMessageListParams = function(params, message) {
  var _a3, _b2, _c, _d;
  var _e3 = params.customTypesFilter, customTypesFilter = _e3 === void 0 ? [] : _e3;
  if ((params === null || params === void 0 ? void 0 : params.messageTypeFilter) && params.messageTypeFilter !== message.messageType) {
    return false;
  }
  if ((customTypesFilter === null || customTypesFilter === void 0 ? void 0 : customTypesFilter.length) > 0) {
    var customTypes = customTypesFilter.filter(function(item) {
      return item !== "*";
    });
    if (customTypes.length > 0 && !customTypes.includes(message.customType)) {
      return false;
    }
  }
  if ((params === null || params === void 0 ? void 0 : params.senderUserIdsFilter) && ((_a3 = params === null || params === void 0 ? void 0 : params.senderUserIdsFilter) === null || _a3 === void 0 ? void 0 : _a3.length) > 0) {
    if (((_b2 = message === null || message === void 0 ? void 0 : message.isUserMessage) === null || _b2 === void 0 ? void 0 : _b2.call(message)) || ((_c = message === null || message === void 0 ? void 0 : message.isFileMessage) === null || _c === void 0 ? void 0 : _c.call(message))) {
      var messageSender = message.sender || message["_sender"];
      if (!((_d = params === null || params === void 0 ? void 0 : params.senderUserIdsFilter) === null || _d === void 0 ? void 0 : _d.includes(messageSender === null || messageSender === void 0 ? void 0 : messageSender.userId))) {
        return false;
      }
    } else {
      return false;
    }
  }
  if (!(params === null || params === void 0 ? void 0 : params.includeParentMessageInfo) && ((message === null || message === void 0 ? void 0 : message.parentMessageId) || (message === null || message === void 0 ? void 0 : message.parentMessage))) {
    return false;
  }
  return true;
};
var filterChannelListParams = function(params, channel, currentUserId) {
  var _a3, _b2, _c, _d, _e3, _f, _g2;
  var includeEmpty = params.includeEmpty, includeFrozen = params.includeFrozen, searchFilter = params.searchFilter, userIdsFilter = params.userIdsFilter, customTypesFilter = params.customTypesFilter, channelUrlsFilter = params.channelUrlsFilter, customTypeStartsWithFilter = params.customTypeStartsWithFilter, channelNameContainsFilter = params.channelNameContainsFilter, nicknameContainsFilter = params.nicknameContainsFilter, myMemberStateFilter = params.myMemberStateFilter, hiddenChannelFilter = params.hiddenChannelFilter, unreadChannelFilter = params.unreadChannelFilter, publicChannelFilter = params.publicChannelFilter, superChannelFilter = params.superChannelFilter, _h = params.metadataKey, metadataKey = _h === void 0 ? "" : _h, _j = params.metadataValues, metadataValues = _j === void 0 ? ["a", "b"] : _j, metadataValueStartsWith = params.metadataValueStartsWith;
  if (!includeEmpty && (channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null) {
    return false;
  }
  if ((searchFilter === null || searchFilter === void 0 ? void 0 : searchFilter.query) && ((_b2 = (_a3 = searchFilter === null || searchFilter === void 0 ? void 0 : searchFilter.fields) === null || _a3 === void 0 ? void 0 : _a3.length) !== null && _b2 !== void 0 ? _b2 : 0) > 0) {
    var searchQuery_1 = searchFilter.query;
    var searchFields = searchFilter.fields;
    if (searchQuery_1 && searchFields && searchFields.length > 0) {
      if (!searchFields.some(function(searchField) {
        var _a4, _b3;
        switch (searchField) {
          case "channel_name": {
            return (_a4 = channel === null || channel === void 0 ? void 0 : channel.name) === null || _a4 === void 0 ? void 0 : _a4.toLowerCase().includes(searchQuery_1.toLowerCase());
          }
          case "member_nickname": {
            return (_b3 = channel === null || channel === void 0 ? void 0 : channel.members) === null || _b3 === void 0 ? void 0 : _b3.some(function(member) {
              return member.nickname.toLowerCase().includes(searchQuery_1.toLowerCase());
            });
          }
          default: {
            return true;
          }
        }
      })) {
        return false;
      }
    }
  }
  if (((_c = userIdsFilter === null || userIdsFilter === void 0 ? void 0 : userIdsFilter.userIds) === null || _c === void 0 ? void 0 : _c.length) > 0) {
    var includeMode = userIdsFilter.includeMode, queryType = userIdsFilter.queryType;
    var userIds = userIdsFilter.userIds;
    var memberIds_1 = (_d = channel === null || channel === void 0 ? void 0 : channel.members) === null || _d === void 0 ? void 0 : _d.map(function(member) {
      return member.userId;
    });
    if (!includeMode) {
      if (!userIds.includes(currentUserId)) {
        userIds.push(currentUserId);
      }
      if (((_e3 = channel === null || channel === void 0 ? void 0 : channel.members) === null || _e3 === void 0 ? void 0 : _e3.length) > userIds.length) {
        return false;
      }
      if (!hasSameMembers(userIds, memberIds_1)) {
        return false;
      }
    } else if (userIds.length > 0) {
      switch (queryType) {
        case "AND": {
          if (userIds.some(function(userId) {
            return !memberIds_1.includes(userId);
          })) {
            return false;
          }
          break;
        }
        case "OR": {
          if (userIds.every(function(userId) {
            return !memberIds_1.includes(userId);
          })) {
            return false;
          }
          break;
        }
      }
    }
  }
  if (includeEmpty === false && (channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null) {
    return false;
  }
  if (includeFrozen === false && (channel === null || channel === void 0 ? void 0 : channel.isFrozen) === true) {
    return false;
  }
  if (customTypesFilter && !customTypesFilter.includes(channel === null || channel === void 0 ? void 0 : channel.customType)) {
    return false;
  }
  if (customTypeStartsWithFilter && !new RegExp("^".concat(customTypeStartsWithFilter)).test(channel === null || channel === void 0 ? void 0 : channel.customType)) {
    return false;
  }
  if (channelNameContainsFilter && !((_f = channel === null || channel === void 0 ? void 0 : channel.name) === null || _f === void 0 ? void 0 : _f.toLowerCase().includes(channelNameContainsFilter.toLowerCase()))) {
    return false;
  }
  if (nicknameContainsFilter) {
    var lowerCasedSubString_1 = nicknameContainsFilter.toLowerCase();
    if ((_g2 = channel === null || channel === void 0 ? void 0 : channel.members) === null || _g2 === void 0 ? void 0 : _g2.every(function(member) {
      return !member.nickname.toLowerCase().includes(lowerCasedSubString_1);
    })) {
      return false;
    }
  }
  if (channelUrlsFilter && !channelUrlsFilter.includes(channel === null || channel === void 0 ? void 0 : channel.url)) {
    return false;
  }
  if (myMemberStateFilter) {
    switch (myMemberStateFilter) {
      case "joined_only":
        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== "joined") {
          return false;
        }
        break;
      case "invited_only":
        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== "invited") {
          return false;
        }
        break;
      case "invited_by_friend":
        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== "invited" || !isFriend(channel === null || channel === void 0 ? void 0 : channel.inviter)) {
          return false;
        }
        break;
      case "invited_by_non_friend":
        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== "invited" || isFriend(channel === null || channel === void 0 ? void 0 : channel.inviter)) {
          return false;
        }
        break;
    }
  }
  if (hiddenChannelFilter) {
    switch (hiddenChannelFilter) {
      case "unhidden_only":
        if ((channel === null || channel === void 0 ? void 0 : channel.isHidden) || (channel === null || channel === void 0 ? void 0 : channel.hiddenState) !== "unhidden") {
          return false;
        }
        break;
      case "hidden_only":
        if (!(channel === null || channel === void 0 ? void 0 : channel.isHidden)) {
          return false;
        }
        break;
      case "hidden_allow_auto_unhide":
        if (!(channel === null || channel === void 0 ? void 0 : channel.isHidden) || (channel === null || channel === void 0 ? void 0 : channel.hiddenState) !== "hidden_allow_auto_unhide") {
          return false;
        }
        break;
      case "hidden_prevent_auto_unhide":
        if (!(channel === null || channel === void 0 ? void 0 : channel.isHidden) || (channel === null || channel === void 0 ? void 0 : channel.hiddenState) !== "hidden_prevent_auto_unhide") {
          return false;
        }
        break;
    }
  }
  if (unreadChannelFilter) {
    switch (unreadChannelFilter) {
      case "unread_message":
        if ((channel === null || channel === void 0 ? void 0 : channel.unreadMessageCount) === 0) {
          return false;
        }
        break;
    }
  }
  if (publicChannelFilter) {
    switch (publicChannelFilter) {
      case "public":
        if (!(channel === null || channel === void 0 ? void 0 : channel.isPublic)) {
          return false;
        }
        break;
      case "private":
        if (channel === null || channel === void 0 ? void 0 : channel.isPublic) {
          return false;
        }
        break;
    }
  }
  if (superChannelFilter) {
    switch (superChannelFilter) {
      case "super":
        if (!(channel === null || channel === void 0 ? void 0 : channel.isSuper)) {
          return false;
        }
        break;
      case "nonsuper":
        if (channel === null || channel === void 0 ? void 0 : channel.isSuper) {
          return false;
        }
        break;
    }
  }
  var _k = channel.cachedMetaData, cachedMetaData = _k === void 0 ? {} : _k;
  if (metadataKey && (metadataValues || metadataValueStartsWith)) {
    var metadataValue_1 = cachedMetaData[metadataKey];
    if (!metadataValue_1) {
      return false;
    }
    if (metadataValues && !metadataValues.every(function(value) {
      return metadataValue_1.includes(value);
    })) {
      return false;
    }
    if (metadataValueStartsWith && !metadataValue_1.startsWith(metadataValueStartsWith)) {
      return false;
    }
  }
  return true;
};
var sortChannelList = function(channels, order) {
  var compareFunc = K2(order).with(E.CHANNEL_NAME_ALPHABETICAL, function() {
    return function(a5, b6) {
      return a5.name.localeCompare(b6.name);
    };
  }).with(E.CHRONOLOGICAL, function() {
    return function(a5, b6) {
      return b6.createdAt - a5.createdAt;
    };
  }).otherwise(function() {
    return function(a5, b6) {
      var _a3, _b2, _c, _d;
      return ((_b2 = (_a3 = b6.lastMessage) === null || _a3 === void 0 ? void 0 : _a3.createdAt) !== null && _b2 !== void 0 ? _b2 : Number.MIN_SAFE_INTEGER) - ((_d = (_c = a5.lastMessage) === null || _c === void 0 ? void 0 : _c.createdAt) !== null && _d !== void 0 ? _d : Number.MIN_SAFE_INTEGER);
    };
  });
  return channels.sort(compareFunc);
};
var getChannelsWithUpsertedChannel = function(_channels, channel, order) {
  var channels = __spreadArray([], _channels, true);
  var findingIndex = channels.findIndex(function(ch) {
    return ch.url === channel.url;
  });
  if (findingIndex !== -1) {
    channels[findingIndex] = channel;
  } else {
    channels.push(channel);
  }
  return sortChannelList(channels, order !== null && order !== void 0 ? order : E.LATEST_LAST_MESSAGE);
};
var StringObjType;
(function(StringObjType2) {
  StringObjType2["normal"] = "normal";
  StringObjType2["mention"] = "mention";
  StringObjType2["url"] = "url";
})(StringObjType || (StringObjType = {}));
var arrayEqual = function(array1, array2) {
  if (Array.isArray(array1) && Array.isArray(array2) && array1.length === array2.length) {
    for (var i4 = 0; i4 < array1.length; i4++) {
      if (array1[i4] !== array2[i4]) {
        return false;
      }
    }
    return true;
  }
  return false;
};
var isSendableMessage2 = function(message) {
  return Boolean(message) && "sender" in message;
};
var isChannelJustCreated = function(channel) {
  return isSameSecond(channel.createdAt, channel.invitedAt) && !channel.lastMessage;
};

// node_modules/@sendbird/uikit-react/chunks/bundle-BHC96gO0.js
var noop = function() {
};
var deleteNullish = function(obj) {
  var cleaned = {};
  Object.entries(obj).forEach(function(_a3) {
    var key = _a3[0], value = _a3[1];
    if (value !== void 0 && value !== null) {
      cleaned[key] = value;
    }
  });
  return cleaned;
};
function openURL(url) {
  var safeURL = url;
  if (safeURL) {
    if (!safeURL.startsWith("http://") && !safeURL.startsWith("https://")) {
      safeURL = "https://" + safeURL;
    }
    window.open(safeURL, "_blank", "noopener,noreferrer");
  }
}
function classnames() {
  var args = [];
  for (var _i2 = 0; _i2 < arguments.length; _i2++) {
    args[_i2] = arguments[_i2];
  }
  return args.filter(Boolean).join(" ");
}

// node_modules/@sendbird/uikit-react/chunks/bundle-NL8iE1lF.js
var import_react_dom2 = __toESM(require_react_dom(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle--PhH_XFy.js
var import_react14 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-BPcbf_pM.js
var stringSet = {
  en: {
    // Group Channel - Conversation
    MESSAGE_STATUS__YESTERDAY: "Yesterday",
    CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE: "new message(s) since",
    /** @deprecated Please use `DATE_FORMAT__MESSAGE_LIST__NOTIFICATION__UNREAD_SINCE` instead * */
    CHANNEL__MESSAGE_LIST__NOTIFICATION__ON: "on",
    // Channel List
    CHANNEL_PREVIEW_MOBILE_LEAVE: "Leave channel",
    // Group Channel - Settings
    CHANNEL_SETTING__HEADER__TITLE: "Channel information",
    CHANNEL_SETTING__PROFILE__EDIT: "Edit",
    CHANNEL_SETTING__MEMBERS__TITLE: "Members",
    CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS: "All members",
    CHANNEL_SETTING__MEMBERS__INVITE_MEMBER: "Invite users",
    CHANNEL_SETTING__MEMBERS__YOU: " (You)",
    CHANNEL_SETTING__MEMBERS__SELECT_TITLE: "Select members",
    CHANNEL_SETTING__MEMBERS__OPERATOR: "Operator",
    CHANNEL_SETTING__LEAVE_CHANNEL__TITLE: "Leave channel",
    CHANNEL_SETTING__OPERATORS__TITLE: "Operators",
    CHANNEL_SETTING__OPERATORS__TITLE_ALL: "All operators",
    CHANNEL_SETTING__OPERATORS__TITLE_ADD: "Add operator",
    CHANNEL_SETTING__OPERATORS__ADD_BUTTON: "Add",
    CHANNEL_SETTING__MUTED_MEMBERS__TITLE: "Muted members",
    CHANNEL_SETTING__MUTED_MEMBERS__TITLE_ALL: "All muted members",
    CHANNEL_SETTING__NO_UNMUTED: "No muted members yet",
    CHANNEL_SETTING__BANNED_MEMBERS__TITLE: "Banned users",
    CHANNEL_SETTING__FREEZE_CHANNEL: "Freeze Channel",
    CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR: "Register as operator",
    CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR: "Unregister operator",
    CHANNEL_SETTING__MODERATION__MUTE: "Mute",
    CHANNEL_SETTING__MODERATION__UNMUTE: "Unmute",
    CHANNEL_SETTING__MODERATION__BAN: "Ban",
    CHANNEL_SETTING__MODERATION__UNBAN: "Unban",
    CHANNEL_SETTING__MODERATION__EMPTY_BAN: "No banned members yet",
    CHANNEL_SETTING__MODERATION__ALL_BAN: "All banned members",
    // OpenChannel - Conversation
    OPEN_CHANNEL_CONVERSATION__TITLE_PARTICIPANTS: "participants",
    OPEN_CHANNEL_CONVERSATION__SELECT_PARTICIPANTS: "Select participants",
    // OpenChannelList
    OPEN_CHANNEL_LIST__TITLE: "Channels",
    CREATE_OPEN_CHANNEL_LIST__TITLE: "New channel profile",
    CREATE_OPEN_CHANNEL_LIST__SUBTITLE__IMG_SECTION: "Channel image",
    CREATE_OPEN_CHANNEL_LIST__SUBTITLE__IMG_UPLOAD: "Upload",
    CREATE_OPEN_CHANNEL_LIST__SUBTITLE__TEXT_SECTION: "Channel name",
    CREATE_OPEN_CHANNEL_LIST__SUBTITLE__TEXT_PLACE_HOLDER: "Enter channel name",
    CREATE_OPEN_CHANNEL_LIST__SUBMIT: "Create",
    // OpenChannel - Settings
    OPEN_CHANNEL_SETTINGS__OPERATOR_TITLE: "Channel Information",
    OPEN_CHANNEL_SETTINGS__OPERATOR_URL: "URL",
    OPEN_CHANNEL_SETTINGS__PARTICIPANTS_ACCORDION_TITLE: "Participants",
    OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_PANEL: "Delete channel",
    OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_TITLE: "Delete channel?",
    OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_CONTEXT: "Once deleted, this channel can't be restored.",
    OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_SUBMIT: "Delete",
    OPEN_CHANNEL_SETTINGS__OPERATORS_TITLE: "Operators",
    OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ADD: "Add operator",
    OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ALL: "All operators",
    OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE: "Muted participants",
    OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE_ALL: "All muted participants",
    OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__NO_ONE: "No muted participants yet",
    OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__TITLE: "Banned users",
    OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__TITLE_ALL: "All banned users",
    OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__NO_ONE: "No banned users yet",
    OPEN_CHANNEL_SETTINGS__MEMBERS__YOU: " (You)",
    OPEN_CHANNEL_SETTINGS__MEMBERS__OPERATOR: "Operator",
    OPEN_CHANNEL_SETTINGS__PARTICIPANTS_TITLE: "Participants",
    OPEN_CHANNEL_SETTINGS__EMPTY_LIST: "No participants yet",
    OPEN_CHANNEL_SETTINGS__SEE_ALL: "See all participants",
    OPEN_CHANNEL_SETTINGS__ALL_PARTICIPANTS_TITLE: "All participants",
    OPEN_CHANNEL_SETTINGS__NO_TITLE: "(No title)",
    OPEN_CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR: "Register as operator",
    OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR: "Unregister operator",
    OPEN_CHANNEL_SETTING__MODERATION__MUTE: "Mute",
    OPEN_CHANNEL_SETTING__MODERATION__UNMUTE: "Unmute",
    OPEN_CHANNEL_SETTING__MODERATION__BAN: "Ban",
    OPEN_CHANNEL_SETTING__MODERATION__UNBAN: "Unban",
    // Channel - Common
    TRYING_TO_CONNECT: "Trying to connect…",
    TYPING_INDICATOR__IS_TYPING: "is typing...",
    TYPING_INDICATOR__AND: "and",
    TYPING_INDICATOR__ARE_TYPING: "are typing...",
    TYPING_INDICATOR__MULTIPLE_TYPING: "Several people are typing...",
    CHANNEL_FROZEN: "Channel frozen",
    PLACE_HOLDER__NO_CHANNEL: "No channels",
    PLACE_HOLDER__WRONG: "Something went wrong",
    PLACE_HOLDER__RETRY_TO_CONNECT: "Retry",
    PLACE_HOLDER__NO_MESSAGES: "No messages",
    TOOLTIP__AND_YOU: ", and you",
    TOOLTIP__YOU: "you",
    TOOLTIP__UNKNOWN_USER: "(no name)",
    UNKNOWN__UNKNOWN_MESSAGE_TYPE: "(Unknown message type)",
    UNKNOWN__CANNOT_READ_MESSAGE: "Cannot read this message.",
    UNKNOWN__TEMPLATE_ERROR: "(Template error)",
    FORM_VERSION_ERROR: "Form type messages are not available in this version.",
    UNKNOWN__CANNOT_READ_TEMPLATE: "Cannot read this template.",
    MESSAGE_EDITED: "(edited)",
    // Channel - Modal
    MODAL__DELETE_MESSAGE__TITLE: "Delete this message?",
    MODAL__CHANNEL_INFORMATION__TITLE: "Edit channel information",
    MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE: "Channel image",
    MODAL__CHANNEL_INFORMATION__UPLOAD: "Upload",
    MODAL__CHANNEL_INFORMATION__CHANNEL_NAME: "Channel name",
    MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER: "Enter name",
    MODAL__INVITE_MEMBER__TITLE: "Invite member",
    MODAL__INVITE_MEMBER__SELECTED: "selected",
    MODAL__CHOOSE_CHANNEL_TYPE__TITLE: "New channel",
    MODAL__CHOOSE_CHANNEL_TYPE__GROUP: "Group",
    MODAL__CHOOSE_CHANNEL_TYPE__SUPER_GROUP: "Super group",
    MODAL__CHOOSE_CHANNEL_TYPE__BROADCAST: "Broadcast",
    MODAL__CREATE_CHANNEL__TITLE: "New channel",
    MODAL__CREATE_CHANNEL__GROUP: "Group",
    MODAL__CREATE_CHANNEL__SUPER: "Super group",
    MODAL__CREATE_CHANNEL__BROADCAST: "Broadcast",
    MODAL__CREATE_CHANNEL__SELECTED: "selected",
    MODAL__LEAVE_CHANNEL__TITLE: "Leave this channel?",
    MODAL__LEAVE_CHANNEL__FOOTER: "Leave",
    MODAL__VOICE_MESSAGE_INPUT_DISABLED__TITLE_MUTED: "You're muted by the operator.",
    MODAL__VOICE_MESSAGE_INPUT_DISABLED__TITLE_FROZEN: "Channel is frozen.",
    // User Profile
    USER_PROFILE__MESSAGE: "Message",
    USER_PROFILE__USER_ID: "User ID",
    EDIT_PROFILE__TITLE: "My profile",
    EDIT_PROFILE__IMAGE_LABEL: "Profile image",
    EDIT_PROFILE__IMAGE_UPLOAD: "Upload",
    EDIT_PROFILE__NICKNAME_LABEL: "Nickname",
    EDIT_PROFILE__NICKNAME_PLACEHOLDER: "Enter your nickname",
    EDIT_PROFILE__USERID_LABEL: "User ID",
    EDIT_PROFILE__THEME_LABEL: "Dark theme",
    // Message Input
    MESSAGE_INPUT__PLACE_HOLDER: "Enter message",
    MESSAGE_INPUT__PLACE_HOLDER__DISABLED: "Chat is unavailable in this channel",
    MESSAGE_INPUT__PLACE_HOLDER__SUGGESTED_REPLIES: "Please choose one from above",
    MESSAGE_INPUT__PLACE_HOLDER__MESSAGE_FORM: "Please fill out the message form.",
    MESSAGE_INPUT__PLACE_HOLDER__FROZEN: "Chat is unavailable in this channel",
    MESSAGE_INPUT__PLACE_HOLDER__MUTED: "Chat is unavailable because you're muted",
    MESSAGE_INPUT__PLACE_HOLDER__MUTED_SHORT: "You're muted",
    MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER: "Reply to message",
    // Common UI
    BUTTON__SUBMIT: "Submit",
    BUTTON__CANCEL: "Cancel",
    BUTTON__DELETE: "Delete",
    BUTTON__SAVE: "Save",
    BUTTON__CREATE: "Create",
    BUTTON__INVITE: "Invite",
    BUTTON__OK: "OK",
    BADGE__OVER: "+",
    NO_TITLE: "No title",
    NO_NAME: "(No name)",
    NO_MEMBERS: "(No members)",
    LABEL__OPERATOR: "Operator",
    // Context Menu
    MESSAGE_MENU__COPY: "Copy",
    MESSAGE_MENU__REPLY: "Reply",
    MESSAGE_MENU__THREAD: "Reply in thread",
    MESSAGE_MENU__OPEN_IN_CHANNEL: "Open in channel",
    MESSAGE_MENU__EDIT: "Edit",
    MESSAGE_MENU__RESEND: "Resend",
    MESSAGE_MENU__DELETE: "Delete",
    MESSAGE_MENU__SAVE: "Save",
    //  * FIXME: get back legacy, remove after refactoring open channel messages *
    CONTEXT_MENU_DROPDOWN__COPY: "Copy",
    CONTEXT_MENU_DROPDOWN__EDIT: "Edit",
    CONTEXT_MENU_DROPDOWN__RESEND: "Resend",
    CONTEXT_MENU_DROPDOWN__DELETE: "Delete",
    CONTEXT_MENU_DROPDOWN__SAVE: "Save",
    // Feature - Message Search
    SEARCH: "Search",
    SEARCH_IN_CHANNEL: "Search in channel",
    SEARCH_IN: "Search in",
    SEARCHING: "Searching for messages...",
    NO_SEARCHED_MESSAGE: "No results found.",
    // Feature - Message Reply
    QUOTE_MESSAGE_INPUT__REPLY_TO: "Reply to",
    QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE: "Photo",
    QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF: "GIF",
    QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO: "Video",
    QUOTED_MESSAGE__REPLIED_TO: "replied to",
    QUOTED_MESSAGE__CURRENT_USER: "You",
    QUOTED_MESSAGE__UNAVAILABLE: "Message unavailable",
    // Feature - Thread
    THREAD__HEADER_TITLE: "Thread",
    CHANNEL__THREAD_REPLY: "reply",
    CHANNEL__THREAD_REPLIES: "replies",
    CHANNEL__THREAD_OVER_MAX: "99+",
    THREAD__THREAD_REPLY: "reply",
    THREAD__THREAD_REPLIES: "replies",
    THREAD__INPUT__REPLY_TO_THREAD: "Reply to thread",
    THREAD__INPUT__REPLY_IN_THREAD: "Reply in thread",
    // Feature - Mention
    MENTION_NAME__NO_NAME: "(No name)",
    MENTION_COUNT__OVER_LIMIT: "You can mention up to %d times at a time.",
    UI__FILE_VIEWER__UNSUPPORT: "Unsupported message",
    // Feature - Voice Message
    VOICE_RECORDING_PERMISSION_DENIED: "You cannot record the voice since\n        voice recording is not permitted in your device system setting",
    VOICE_MESSAGE: "Voice Message",
    // Channel preview last message file type display strings
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_GIF: "GIF",
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_PHOTO: "Photo",
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_VIDEO: "Video",
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_AUDIO: "Audio",
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_VOICE_MESSAGE: "Voice message",
    CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_GENERAL: "File",
    CHANNEL_PREVIEW_LAST_MESSAGE_TEMPLATE_MESSAGE: "Message",
    // Date format
    DATE_FORMAT__MESSAGE_LIST__NOTIFICATION__UNREAD_SINCE: "p 'on' MMM dd",
    DATE_FORMAT__MESSAGE_LIST__DATE_SEPARATOR: "MMMM dd, yyyy",
    DATE_FORMAT__THREAD_LIST__DATE_SEPARATOR: "MMM dd, yyyy",
    DATE_FORMAT__MESSAGE_CREATED_AT: "p",
    DATE_FORMAT__UNREAD_SINCE: "p MMM dd",
    DATE_FORMAT__LAST_MESSAGE_CREATED_AT__TODAY: "p",
    DATE_FORMAT__LAST_MESSAGE_CREATED_AT__THIS_YEAR: "MMM d",
    DATE_FORMAT__LAST_MESSAGE_CREATED_AT__PREVIOUS_YEAR: "yyyy/M/d",
    // File upload
    FILE_UPLOAD_NOTIFICATION__COUNT_LIMIT: "Up to %d files can be attached.",
    FILE_UPLOAD_NOTIFICATION__SIZE_LIMIT: "The maximum size per file is %d MB.",
    // Feedback button text
    FEEDBACK_LIKE: "Like",
    FEEDBACK_DISLIKE: "Dislike",
    // Mobile feedback options menu items
    EDIT_COMMENT: "Edit comment",
    REMOVE_FEEDBACK: "Remove Feedback",
    // Feedback modal title
    FEEDBACK_MODAL_TITLE: "Provide additional feedback (optional)",
    FEEDBACK_CONTENT_PLACEHOLDER: "Leave a comment",
    BUTTON__REMOVE_FEEDBACK: "Remove feedback",
    // Feedback failed modal title
    FEEDBACK_FAILED_SUBMIT: "Couldn’t submit. Try again.",
    FEEDBACK_FAILED_SAVE: "Couldn’t save. Try again.",
    FEEDBACK_FAILED_DELETE: "Couldn’t delete. Try again.",
    // Form submit failed error messages
    FORM_ITEM_REQUIRED: "This field is required",
    FORM_ITEM_INVALID: "Please check the value",
    FORM_ITEM_OPTIONAL_EMPTY: "No Response"
  }
};
var getStringSet = function(lang) {
  if (lang === void 0) {
    lang = "en";
  }
  return stringSet[lang];
};

// node_modules/@sendbird/uikit-react/chunks/bundle--PhH_XFy.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: "less than a second",
    other: "less than {{count}} seconds"
  },
  xSeconds: {
    one: "1 second",
    other: "{{count}} seconds"
  },
  halfAMinute: "half a minute",
  lessThanXMinutes: {
    one: "less than a minute",
    other: "less than {{count}} minutes"
  },
  xMinutes: {
    one: "1 minute",
    other: "{{count}} minutes"
  },
  aboutXHours: {
    one: "about 1 hour",
    other: "about {{count}} hours"
  },
  xHours: {
    one: "1 hour",
    other: "{{count}} hours"
  },
  xDays: {
    one: "1 day",
    other: "{{count}} days"
  },
  aboutXWeeks: {
    one: "about 1 week",
    other: "about {{count}} weeks"
  },
  xWeeks: {
    one: "1 week",
    other: "{{count}} weeks"
  },
  aboutXMonths: {
    one: "about 1 month",
    other: "about {{count}} months"
  },
  xMonths: {
    one: "1 month",
    other: "{{count}} months"
  },
  aboutXYears: {
    one: "about 1 year",
    other: "about {{count}} years"
  },
  xYears: {
    one: "1 year",
    other: "{{count}} years"
  },
  overXYears: {
    one: "over 1 year",
    other: "over {{count}} years"
  },
  almostXYears: {
    one: "almost 1 year",
    other: "almost {{count}} years"
  }
};
var formatDistance = function formatDistance2(token, count, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count.toString());
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "in " + result;
    } else {
      return result + " ago";
    }
  }
  return result;
};
function buildFormatLongFn(args) {
  return function() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format3 = args.formats[width] || args.formats[args.defaultWidth];
    return format3;
  };
}
var dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy"
};
var timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a"
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}"
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: "full"
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: "full"
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: "full"
  })
};
var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: "P"
};
var formatRelative = function formatRelative2(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
};
function buildLocalizeFn(args) {
  return function(dirtyIndex, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : "standalone";
    var valuesArray;
    if (context === "formatting" && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    return valuesArray[index];
  };
}
var eraValues = {
  narrow: ["B", "A"],
  abbreviated: ["BC", "AD"],
  wide: ["Before Christ", "Anno Domini"]
};
var quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
};
var monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
  wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
};
var dayValues = {
  narrow: ["S", "M", "T", "W", "T", "F", "S"],
  short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
  abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
};
var dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  }
};
var ordinalNumber = function ordinalNumber2(dirtyNumber, _options) {
  var number = Number(dirtyNumber);
  var rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + "st";
      case 2:
        return number + "nd";
      case 3:
        return number + "rd";
    }
  }
  return number + "th";
};
var localize = {
  ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: "wide"
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: "wide",
    argumentCallback: function argumentCallback(quarter) {
      return quarter - 1;
    }
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: "wide"
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: "wide"
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: "wide"
  })
};
function buildMatchFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    }) : findKey(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    });
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}
function findKey(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }
  return void 0;
}
function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return void 0;
}
function buildMatchPatternFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult) return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult) return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}
var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {
      return parseInt(value, 10);
    }
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function valueCallback2(index) {
      return index + 1;
    }
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "any"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "any"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
};
var locale = {
  code: "en-US",
  formatDistance,
  formatLong,
  formatRelative,
  localize,
  match,
  options: {
    weekStartsOn: 0,
    firstWeekContainsDate: 1
  }
};
var LocalizationContextDefault = {
  stringSet: getStringSet("en"),
  dateLocale: locale
};
var LocalizationContext = import_react14.default.createContext(LocalizationContextDefault);
var LocalizationProvider = function(props) {
  var children = props.children;
  return import_react14.default.createElement(LocalizationContext.Provider, { value: __assign(__assign({}, LocalizationContextDefault), props) }, children);
};
var useLocalization = function() {
  return import_react14.default.useContext(LocalizationContext);
};

// node_modules/@sendbird/uikit-react/chunks/bundle-R3uJ_0BB.js
var import_react15 = __toESM(require_react(), 1);
var DEFAULT_MOBILE = false;
var MOBILE_CLASSNAME = "sendbird--mobile-mode";
var MediaQueryContext = import_react15.default.createContext({
  breakpoint: DEFAULT_MOBILE,
  isMobile: false
});
var addClassNameToBody = function() {
  try {
    var body = document.querySelector("body");
    body === null || body === void 0 ? void 0 : body.classList.add(MOBILE_CLASSNAME);
  } catch (_a3) {
  }
};
var removeClassNameFromBody = function() {
  try {
    var body = document.querySelector("body");
    body === null || body === void 0 ? void 0 : body.classList.remove(MOBILE_CLASSNAME);
  } catch (_a3) {
  }
};
var MediaQueryProvider = function(props) {
  var children = props.children, logger = props.logger;
  var breakpoint = (props === null || props === void 0 ? void 0 : props.breakpoint) || false;
  var _a3 = (0, import_react15.useState)(false), isMobile = _a3[0], setIsMobile = _a3[1];
  (0, import_react15.useEffect)(function() {
    var _a4;
    var updateSize = function() {
      var _a5;
      if (typeof breakpoint === "boolean") {
        setIsMobile(breakpoint);
        if (breakpoint) {
          addClassNameToBody();
        } else {
          removeClassNameFromBody();
        }
      } else {
        var mq = window.matchMedia("(max-width: ".concat(breakpoint, ")"));
        (_a5 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a5 === void 0 ? void 0 : _a5.call(logger, "MediaQueryProvider: Screensize updated to ".concat(breakpoint));
        if (mq.matches) {
          setIsMobile(true);
          addClassNameToBody();
        } else {
          setIsMobile(false);
          removeClassNameFromBody();
        }
      }
    };
    updateSize();
    window.addEventListener("resize", updateSize);
    (_a4 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "MediaQueryProvider: addEventListener", { updateSize });
    return function() {
      var _a5;
      window.removeEventListener("resize", updateSize);
      (_a5 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a5 === void 0 ? void 0 : _a5.call(logger, "MediaQueryProvider: removeEventListener", { updateSize });
    };
  }, [breakpoint]);
  return import_react15.default.createElement(MediaQueryContext.Provider, { value: { breakpoint, isMobile } }, children);
};
var useMediaQueryContext = function() {
  return import_react15.default.useContext(MediaQueryContext);
};

// node_modules/@sendbird/uikit-react/ui/IconButton.js
var import_react16 = __toESM(require_react(), 1);
var IconButton = import_react16.default.forwardRef(function(props, ref) {
  var _a3 = props.className, className = _a3 === void 0 ? "" : _a3, children = props.children, _b2 = props.disabled, disabled = _b2 === void 0 ? false : _b2, _c = props.width, width = _c === void 0 ? "56px" : _c, _d = props.height, height = _d === void 0 ? "56px" : _d, _e3 = props.type, type = _e3 === void 0 ? "button" : _e3, _f = props.style, style = _f === void 0 ? {} : _f, _g2 = props.onBlur, onBlur = _g2 === void 0 ? function() {
  } : _g2, _h = props.onClick, onClick = _h === void 0 ? function() {
  } : _h, testID = props.testID;
  var _j = (0, import_react16.useState)(false), isPressed = _j[0], setIsPressed = _j[1];
  return import_react16.default.createElement(
    "button",
    { "data-testid": testID, className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-iconbutton",
      isPressed ? "sendbird-iconbutton--pressed" : ""
    ], false).join(" "), disabled, ref, type, style: __assign(__assign({}, style), { height, width }), onClick: function(e4) {
      if (disabled) {
        return;
      }
      setIsPressed(true);
      onClick === null || onClick === void 0 ? void 0 : onClick(e4);
    }, onBlur: function(e4) {
      setIsPressed(false);
      onBlur === null || onBlur === void 0 ? void 0 : onBlur(e4);
    } },
    import_react16.default.createElement("span", { className: "sendbird-iconbutton__inner" }, children)
  );
});

// node_modules/@sendbird/uikit-react/ui/Button.js
var import_react18 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-ixnsp7Bg.js
var import_react17 = __toESM(require_react(), 1);
var Typography = {
  H_1: "H_1",
  H_2: "H_2",
  SUBTITLE_1: "SUBTITLE_1",
  SUBTITLE_2: "SUBTITLE_2",
  BODY_1: "BODY_1",
  BODY_2: "BODY_2",
  BUTTON_1: "BUTTON_1",
  BUTTON_2: "BUTTON_2",
  BUTTON_3: "BUTTON_3",
  CAPTION_1: "CAPTION_1",
  CAPTION_2: "CAPTION_2",
  CAPTION_3: "CAPTION_3"
};
var Colors = {
  ONBACKGROUND_1: "ONBACKGROUND_1",
  ONBACKGROUND_2: "ONBACKGROUND_2",
  ONBACKGROUND_3: "ONBACKGROUND_3",
  ONBACKGROUND_4: "ONBACKGROUND_4",
  ONCONTENT_1: "ONCONTENT_1",
  ONCONTENT_2: "ONCONTENT_2",
  ONCONTENT_3: "ONCONTENT_3",
  ONCONTENT_INVERSE_1: "ONCONTENT_INVERSE_1",
  ONCONTENT_INVERSE_3: "ONCONTENT_INVERSE_3",
  PRIMARY: "PRIMARY",
  ERROR: "ERROR",
  SECONDARY_3: "SECONDARY_3"
};
function changeTypographyToClassName(type) {
  switch (type) {
    case Typography.H_1:
      return "sendbird-label--h-1";
    case Typography.H_2:
      return "sendbird-label--h-2";
    case Typography.SUBTITLE_1:
      return "sendbird-label--subtitle-1";
    case Typography.SUBTITLE_2:
      return "sendbird-label--subtitle-2";
    case Typography.BODY_1:
      return "sendbird-label--body-1";
    case Typography.BODY_2:
      return "sendbird-label--body-2";
    case Typography.BUTTON_1:
      return "sendbird-label--button-1";
    case Typography.BUTTON_2:
      return "sendbird-label--button-2";
    case Typography.BUTTON_3:
      return "sendbird-label--button-3";
    case Typography.CAPTION_1:
      return "sendbird-label--caption-1";
    case Typography.CAPTION_2:
      return "sendbird-label--caption-2";
    case Typography.CAPTION_3:
      return "sendbird-label--caption-3";
    default:
      return "";
  }
}
function changeColorToClassName(color) {
  switch (color) {
    case Colors.ONBACKGROUND_1:
      return "sendbird-label--color-onbackground-1";
    case Colors.ONBACKGROUND_2:
      return "sendbird-label--color-onbackground-2";
    case Colors.ONBACKGROUND_3:
      return "sendbird-label--color-onbackground-3";
    case Colors.ONBACKGROUND_4:
      return "sendbird-label--color-onbackground-4";
    case Colors.ONCONTENT_1:
      return "sendbird-label--color-oncontent-1";
    case Colors.ONCONTENT_2:
      return "sendbird-label--color-oncontent-2";
    case Colors.ONCONTENT_3:
      return "sendbird-label--color-oncontent-3";
    case Colors.ONCONTENT_INVERSE_1:
      return "sendbird-label--color-oncontent-inverse-1";
    case Colors.ONCONTENT_INVERSE_3:
      return "sendbird-label--color-oncontent-inverse-3";
    case Colors.PRIMARY:
      return "sendbird-label--color-primary";
    case Colors.ERROR:
      return "sendbird-label--color-error";
    case Colors.SECONDARY_3:
      return "sendbird-label--color-secondary-3";
    default:
      return "";
  }
}
var Label = (0, import_react17.forwardRef)(function(_a3, ref) {
  var _b2 = _a3.className, className = _b2 === void 0 ? [] : _b2, type = _a3.type, color = _a3.color, _c = _a3.children, children = _c === void 0 ? null : _c, testID = _a3.testID;
  return (
    // Donot make this into div
    // Mention uses Label. If we use div, it would break the mention detection on Paste
    // https://github.com/sendbird/sendbird-uikit-react/pull/479
    import_react17.default.createElement("span", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-label",
      changeTypographyToClassName(type),
      changeColorToClassName(color)
    ], false).join(" "), ref, "data-testid": testID }, children)
  );
});
var LabelTypography = Typography;
var LabelColors = Colors;
var LabelStringSet = getStringSet("en");

// node_modules/@sendbird/uikit-react/ui/Button.js
var ButtonTypes;
(function(ButtonTypes2) {
  ButtonTypes2["PRIMARY"] = "PRIMARY";
  ButtonTypes2["SECONDARY"] = "SECONDARY";
  ButtonTypes2["DANGER"] = "DANGER";
  ButtonTypes2["DISABLED"] = "DISABLED";
  ButtonTypes2["WARNING"] = "WARNING";
})(ButtonTypes || (ButtonTypes = {}));
var ButtonSizes;
(function(ButtonSizes2) {
  ButtonSizes2["BIG"] = "BIG";
  ButtonSizes2["SMALL"] = "SMALL";
})(ButtonSizes || (ButtonSizes = {}));
function changeTypeToClassName(type) {
  switch (type) {
    case ButtonTypes.PRIMARY:
      return "sendbird-button--primary";
    case ButtonTypes.SECONDARY:
      return "sendbird-button--secondary";
    case ButtonTypes.DANGER:
      return "sendbird-button--danger";
    case ButtonTypes.DISABLED:
      return "sendbird-button--disabled";
    case ButtonTypes.WARNING:
      return "sendbird-button--warning";
    default:
      return "";
  }
}
function changeSizeToClassName(size) {
  switch (size) {
    case ButtonSizes.BIG:
      return "sendbird-button--big";
    case ButtonSizes.SMALL:
      return "sendbird-button--small";
    default:
      return "";
  }
}
function Button(_a3) {
  var className = _a3.className, _b2 = _a3.type, type = _b2 === void 0 ? ButtonTypes.PRIMARY : _b2, _c = _a3.size, size = _c === void 0 ? ButtonSizes.BIG : _c, _d = _a3.children, children = _d === void 0 ? "Button" : _d, _e3 = _a3.disabled, disabled = _e3 === void 0 ? false : _e3, _f = _a3.onClick, onClick = _f === void 0 ? function() {
  } : _f, _g2 = _a3.labelType, labelType = _g2 === void 0 ? LabelTypography.BUTTON_1 : _g2, _h = _a3.labelColor, labelColor = _h === void 0 ? LabelColors.ONCONTENT_1 : _h;
  var injectingClassNames = __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
    "sendbird-button",
    disabled ? "sendbird-button__disabled" : "",
    changeTypeToClassName(type),
    changeSizeToClassName(size)
  ], false).join(" ");
  return import_react18.default.createElement(
    "button",
    { className: injectingClassNames, type: "button", onClick, disabled },
    import_react18.default.createElement(Label, { className: "sendbird-button__text", type: labelType, color: labelColor }, children)
  );
}

// node_modules/@sendbird/uikit-react/ui/Icon.js
var React2 = __toESM(require_react(), 1);
var import_react19 = __toESM(require_react(), 1);
var Types = {
  ADD: "ADD",
  ARROW_LEFT: "ARROW_LEFT",
  ATTACH: "ATTACH",
  AUDIO_ON_LINED: "AUDIO_ON_LINED",
  BAN: "BAN",
  BROADCAST: "BROADCAST",
  CAMERA: "CAMERA",
  CHANNELS: "CHANNELS",
  CHAT: "CHAT",
  CHAT_FILLED: "CHAT_FILLED",
  CHEVRON_DOWN: "CHEVRON_DOWN",
  CHEVRON_RIGHT: "CHEVRON_RIGHT",
  CLOSE: "CLOSE",
  COLLAPSE: "COLLAPSE",
  COPY: "COPY",
  CREATE: "CREATE",
  DELETE: "DELETE",
  DISCONNECTED: "DISCONNECTED",
  DOCUMENT: "DOCUMENT",
  DONE: "DONE",
  DONE_ALL: "DONE_ALL",
  DOWNLOAD: "DOWNLOAD",
  EDIT: "EDIT",
  EMOJI_MORE: "EMOJI_MORE",
  ERROR: "ERROR",
  EXPAND: "EXPAND",
  FILE_AUDIO: "FILE_AUDIO",
  FILE_DOCUMENT: "FILE_DOCUMENT",
  FREEZE: "FREEZE",
  GIF: "GIF",
  INFO: "INFO",
  LEAVE: "LEAVE",
  MEMBERS: "MEMBERS",
  MESSAGE: "MESSAGE",
  MODERATIONS: "MODERATIONS",
  MORE: "MORE",
  MUTE: "MUTE",
  NOTIFICATIONS: "NOTIFICATIONS",
  NOTIFICATIONS_OFF_FILLED: "NOTIFICATIONS_OFF_FILLED",
  OPERATOR: "OPERATOR",
  PHOTO: "PHOTO",
  PLAY: "PLAY",
  PLUS: "PLUS",
  QUESTION: "QUESTION",
  REFRESH: "REFRESH",
  REPLY: "REPLY",
  REMOVE: "REMOVE",
  SEARCH: "SEARCH",
  SEND: "SEND",
  SETTINGS_FILLED: "SETTINGS_FILLED",
  SLIDE_LEFT: "SLIDE_LEFT",
  SPINNER: "SPINNER",
  SUPERGROUP: "SUPERGROUP",
  THREAD: "THREAD",
  THUMBNAIL_NONE: "THUMBNAIL_NONE",
  TOGGLE_OFF: "TOGGLE_OFF",
  TOGGLE_ON: "TOGGLE_ON",
  USER: "USER",
  FEEDBACK_LIKE: "FEEDBACK_LIKE",
  FEEDBACK_DISLIKE: "FEEDBACK_DISLIKE"
};
var Colors2 = {
  DEFAULT: "DEFAULT",
  PRIMARY: "PRIMARY",
  PRIMARY_2: "PRIMARY_2",
  SECONDARY: "SECONDARY",
  SECONDARY_2: "SECONDARY_2",
  CONTENT: "CONTENT",
  CONTENT_INVERSE: "CONTENT_INVERSE",
  CONTENT_INVERSE_3: "CONTENT_INVERSE_3",
  WHITE: "WHITE",
  GRAY: "GRAY",
  THUMBNAIL_ICON: "THUMBNAIL_ICON",
  SENT: "SENT",
  READ: "READ",
  ON_BACKGROUND_1: "ON_BACKGROUND_1",
  ON_BACKGROUND_2: "ON_BACKGROUND_2",
  ON_BACKGROUND_3: "ON_BACKGROUND_3",
  ON_BACKGROUND_4: "ON_BACKGROUND_4",
  BACKGROUND_3: "BACKGROUND_3",
  ERROR: "ERROR"
};
function changeColorToClassName2(color) {
  switch (color) {
    case Colors2.PRIMARY:
      return "sendbird-icon-color--primary";
    case Colors2.PRIMARY_2:
      return "sendbird-icon-color--primary-2";
    case Colors2.SECONDARY:
      return "sendbird-icon-color--secondary";
    case Colors2.SECONDARY_2:
      return "sendbird-icon-color--secondary-2";
    case Colors2.CONTENT:
      return "sendbird-icon-color--content";
    case Colors2.CONTENT_INVERSE:
      return "sendbird-icon-color--content-inverse";
    case Colors2.CONTENT_INVERSE_3:
      return "sendbird-icon-color--content-inverse-3";
    case Colors2.WHITE:
      return "sendbird-icon-color--white";
    case Colors2.GRAY:
      return "sendbird-icon-color--gray";
    case Colors2.THUMBNAIL_ICON:
      return "sendbird-icon-color--thumbnail-icon";
    case Colors2.SENT:
      return "sendbird-icon-color--sent";
    case Colors2.READ:
      return "sendbird-icon-color--read";
    case Colors2.ON_BACKGROUND_1:
      return "sendbird-icon-color--on-background-1";
    case Colors2.ON_BACKGROUND_2:
      return "sendbird-icon-color--on-background-2";
    case Colors2.ON_BACKGROUND_3:
      return "sendbird-icon-color--on-background-3";
    case Colors2.ON_BACKGROUND_4:
      return "sendbird-icon-color--on-background-4";
    case Colors2.BACKGROUND_3:
      return "sendbird-icon-color--background-3";
    case Colors2.ERROR:
      return "sendbird-icon-color--error";
    default:
      return "";
  }
}
function changeTypeToIconClassName(type) {
  switch (type) {
    case Types.ADD:
      return "sendbird-icon-add";
    case Types.ARROW_LEFT:
      return "sendbird-icon-arrow-left";
    case Types.ATTACH:
      return "sendbird-icon-attach";
    case Types.AUDIO_ON_LINED:
      return "sendbird-icon-audio-on-lined";
    case Types.BAN:
      return "sendbird-icon-ban";
    case Types.BROADCAST:
      return "sendbird-icon-broadcast";
    case Types.CAMERA:
      return "sendbird-icon-camera";
    case Types.CHANNELS:
      return "sendbird-icon-channels";
    case Types.CHAT:
      return "sendbird-icon-chat";
    case Types.CHAT_FILLED:
      return "sendbird-icon-chat-filled";
    case Types.CHEVRON_DOWN:
      return "sendbird-icon-chevron-down";
    case Types.CHEVRON_RIGHT:
      return "sendbird-icon-chevron-right";
    case Types.CLOSE:
      return "sendbird-icon-close";
    case Types.COLLAPSE:
      return "sendbird-icon-collapse";
    case Types.COPY:
      return "sendbird-icon-copy";
    case Types.CREATE:
      return "sendbird-icon-create";
    case Types.DELETE:
      return "sendbird-icon-delete";
    case Types.DISCONNECTED:
      return "sendbird-icon-disconnected";
    case Types.DOCUMENT:
      return "sendbird-icon-document";
    case Types.DONE:
      return "sendbird-icon-done";
    case Types.DONE_ALL:
      return "sendbird-icon-done-all";
    case Types.DOWNLOAD:
      return "sendbird-icon-down-load";
    case Types.EDIT:
      return "sendbird-icon-edit";
    case Types.EMOJI_MORE:
      return "sendbird-icon-emoji-more";
    case Types.ERROR:
      return "sendbird-icon-error";
    case Types.EXPAND:
      return "sendbird-icon-expand";
    case Types.FILE_AUDIO:
      return "sendbird-icon-file-audio";
    case Types.FILE_DOCUMENT:
      return "sendbird-icon-file-document";
    case Types.FREEZE:
      return "sendbird-icon-freeze";
    case Types.GIF:
      return "sendbird-icon-gif";
    case Types.INFO:
      return "sendbird-icon-info";
    case Types.LEAVE:
      return "sendbird-icon-leave";
    case Types.MEMBERS:
      return "sendbird-icon-members";
    case Types.MESSAGE:
      return "sendbird-icon-message";
    case Types.MODERATIONS:
      return "sendbird-icon-moderations";
    case Types.MORE:
      return "sendbird-icon-more";
    case Types.MUTE:
      return "sendbird-icon-mute";
    case Types.NOTIFICATIONS:
      return "sendbird-icon-notifications";
    case Types.NOTIFICATIONS_OFF_FILLED:
      return "sendbird-icon-notifications-off-filled";
    case Types.OPERATOR:
      return "sendbird-icon-operator";
    case Types.PHOTO:
      return "sendbird-icon-photo";
    case Types.PLAY:
      return "sendbird-icon-play";
    case Types.PLUS:
      return "sendbird-iconn-plus";
    case Types.QUESTION:
      return "sendbird-icon-question";
    case Types.REFRESH:
      return "sendbird-icon-refresh";
    case Types.REMOVE:
      return "sendbird-icon-remove";
    case Types.REPLY:
      return "sendbird-icon-reply";
    case Types.SEARCH:
      return "sendbird-icon-search";
    case Types.SEND:
      return "sendbird-icon-send";
    case Types.SETTINGS_FILLED:
      return "sendbird-icon-settings-filled";
    case Types.SPINNER:
      return "sendbird-icon-spinner";
    case Types.SUPERGROUP:
      return "sendbird-icon-supergroup";
    case Types.THREAD:
      return "sendbird-icon-thread";
    case Types.THUMBNAIL_NONE:
      return "sendbird-icon-thumbnail-none";
    case Types.TOGGLE_OFF:
      return "sendbird-icon-toggle-off";
    case Types.TOGGLE_ON:
      return "sendbird-icon-toggle-on";
    case Types.USER:
      return "sendbird-icon-user";
    case Types.FEEDBACK_LIKE:
      return "sendbird-icon-feedback-like";
    case Types.FEEDBACK_DISLIKE:
      return "sendbird-icon-feedback-dislike";
    default:
      return "sendbird-icon-unknown";
  }
}
var _path$U;
function _extends$X() {
  return _extends$X = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$X.apply(null, arguments);
}
var SvgIconAdd = (props) => React2.createElement("svg", _extends$X({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$U || (_path$U = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M50.667 5.333a8 8 0 0 1 8 8v37.334a8 8 0 0 1-8 8H13.333a8 8 0 0 1-8-8V13.333a8 8 0 0 1 8-8zm0 5.334H13.333a2.667 2.667 0 0 0-2.666 2.666v37.334a2.667 2.667 0 0 0 2.666 2.666h37.334a2.667 2.667 0 0 0 2.666-2.666V13.333a2.667 2.667 0 0 0-2.666-2.666m-18.667 8a2.667 2.667 0 0 1 2.649 2.355l.018.311v8h8a2.667 2.667 0 0 1 .311 5.316l-.311.018h-8v8a2.667 2.667 0 0 1-5.316.311l-.018-.311v-8h-8a2.667 2.667 0 0 1-.311-5.316l.311-.018h8v-8A2.667 2.667 0 0 1 32 18.667",
  className: "icon-add_svg__fill"
})));
var _path$T;
function _extends$W() {
  return _extends$W = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$W.apply(null, arguments);
}
var SvgIconArrowLeft = (props) => React2.createElement("svg", _extends$W({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$T || (_path$T = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M33.886 8.781a2.67 2.67 0 0 1 .221 3.52l-.221.251-16.78 16.781H56a2.667 2.667 0 0 1 .311 5.316l-.311.018-38.895-.001 16.78 16.782a2.666 2.666 0 0 1 .222 3.52l-.221.251a2.67 2.67 0 0 1-3.52.222l-.252-.222L8.781 33.886a2.67 2.67 0 0 1-.222-3.52l.222-.252L30.114 8.781a2.67 2.67 0 0 1 3.772 0",
  className: "icon-arrow-left_svg__fill"
})));
var _path$S;
function _extends$V() {
  return _extends$V = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$V.apply(null, arguments);
}
var SvgIconAttach = (props) => React2.createElement("svg", _extends$V({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$S || (_path$S = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m55.334 28.926-24.506 23.34c-5.222 4.973-13.74 4.973-18.962 0-5.149-4.903-5.149-12.797 0-17.7l24.506-23.34c3.138-2.988 8.278-2.988 11.416 0 3.064 2.919 3.064 7.594 0 10.513L23.255 45.077c-1.055 1.005-2.815 1.005-3.87.001-.98-.933-.98-2.39 0-3.325l22.64-21.535a2.667 2.667 0 0 0-3.676-3.864L15.709 37.89a7.58 7.58 0 0 0-.001 11.05c3.113 2.966 8.11 2.966 11.224 0l24.533-23.338c5.272-5.021 5.272-13.217 0-18.238-5.197-4.95-13.573-4.95-18.77 0L8.187 30.704c-7.356 7.005-7.356 18.419 0 25.424 7.281 6.935 19.036 6.935 26.318 0l24.506-23.34a2.666 2.666 0 1 0-3.678-3.862z",
  className: "icon-attach_svg__fill"
})));
var _g$2;
var _defs;
function _extends$U() {
  return _extends$U = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$U.apply(null, arguments);
}
var SvgIconAudioOnLined = (props) => React2.createElement("svg", _extends$U({
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 64 64"
}, props), _g$2 || (_g$2 = React2.createElement("g", {
  clipPath: "url(#icon-audio-on-lined_svg__a)"
}, React2.createElement("path", {
  d: "M32 0C26.11 0 21.333 4.776 21.333 10.667V32c0 5.891 4.776 10.667 10.667 10.667S42.667 37.89 42.667 32V10.667C42.667 4.776 37.89 0 32 0m-5.333 10.667a5.333 5.333 0 0 1 10.666 0V32a5.333 5.333 0 0 1-10.666 0z",
  className: "icon-audio-on-lined_svg__fill",
  clipRule: "evenodd"
}), React2.createElement("path", {
  d: "M16 26.667a2.667 2.667 0 1 0-5.333 0V32c0 10.879 8.143 19.856 18.666 21.168v5.499h-8a2.667 2.667 0 0 0 0 5.333h21.334a2.667 2.667 0 1 0 0-5.333h-8v-5.499C45.19 51.856 53.333 42.88 53.333 32v-5.333a2.667 2.667 0 1 0-5.333 0V32c0 8.837-7.163 16-16 16s-16-7.163-16-16z",
  className: "icon-audio-on-lined_svg__fill"
}))), _defs || (_defs = React2.createElement("defs", null, React2.createElement("clipPath", {
  id: "icon-audio-on-lined_svg__a"
}, React2.createElement("path", {
  fill: "#fff",
  d: "M0 0h64v64H0z"
})))));
var _path$R;
function _extends$T() {
  return _extends$T = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$T.apply(null, arguments);
}
var SvgIconBan = (props) => React2.createElement("svg", _extends$T({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$R || (_path$R = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333 2.667 48.2 2.667 32 15.8 2.667 32 2.667M32 8C18.745 8 8 18.745 8 32s10.745 24 24 24 24-10.745 24-24S45.255 8 32 8m12.333 21.333a1 1 0 0 1 1 1v3.334a1 1 0 0 1-1 1H19.667a1 1 0 0 1-1-1v-3.334a1 1 0 0 1 1-1z",
  className: "icon-ban_svg__fill"
})));
var _path$Q;
function _extends$S() {
  return _extends$S = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$S.apply(null, arguments);
}
var SvgIconBroadcast = (props) => React2.createElement("svg", _extends$S({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$Q || (_path$Q = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M58.545 5.498q.121.389.122.796v46.079a2.666 2.666 0 0 1-3.462 2.546l-17.951-5.61c-.645 5.273-5.14 9.358-10.587 9.358C20.776 58.667 16 53.89 16 48v-5.334h-5.333a8 8 0 0 1-7.997-7.75l-.003-.25V24a8 8 0 0 1 8-8H16L55.205 3.749a2.665 2.665 0 0 1 3.34 1.75zM21.333 44.587V48a5.333 5.333 0 0 0 10.652.398L32 47.92zm32-34.667-32 9.997v18.83l32 9.997zM16 21.333h-5.333a2.67 2.67 0 0 0-2.65 2.356L8 24v10.667a2.667 2.667 0 0 0 2.667 2.666H16z",
  className: "icon-broadcast_svg__fill"
})));
var _path$P;
function _extends$R() {
  return _extends$R = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$R.apply(null, arguments);
}
var SvgIconCamera = (props) => React2.createElement("svg", _extends$R({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$P || (_path$P = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M40 5.333c.892 0 1.724.446 2.219 1.188l4.541 6.812H56a8 8 0 0 1 7.986 7.53l.014.47v29.334a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8V21.333a8 8 0 0 1 8-8h9.237l4.544-6.812a2.67 2.67 0 0 1 1.888-1.167l.331-.02zm-1.43 5.334H25.428l-4.542 6.812a2.66 2.66 0 0 1-1.887 1.167l-.331.02H8a2.67 2.67 0 0 0-2.667 2.667v29.334A2.667 2.667 0 0 0 8 53.333h48a2.667 2.667 0 0 0 2.667-2.666V21.333A2.667 2.667 0 0 0 56 18.667H45.333a2.67 2.67 0 0 1-2.218-1.188zM32 21.333c7.364 0 13.333 5.97 13.333 13.334S39.363 48 32 48s-13.333-5.97-13.333-13.333S24.637 21.333 32 21.333m0 5.334a8 8 0 1 0 0 16 8 8 0 0 0 0-16",
  className: "icon-camera_svg__fill"
})));
var _path$O;
function _extends$Q() {
  return _extends$Q = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$Q.apply(null, arguments);
}
var SvgIconChannels = (props) => React2.createElement("svg", _extends$Q({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$O || (_path$O = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m42.65 5.333.311.017a2.666 2.666 0 0 1 2.373 2.633l-.017.311-1.45 13.04h9.466a2.667 2.667 0 0 1 .311 5.315l-.31.018H43.271l-1.184 10.666h11.245a2.667 2.667 0 0 1 .312 5.316l-.31.018H41.495l-1.512 13.627a2.667 2.667 0 0 1-5.318-.277l.017-.311 1.448-13.04H25.496l-1.512 13.628a2.667 2.667 0 0 1-5.318-.277l.017-.311 1.448-13.04h-9.464a2.667 2.667 0 0 1-.311-5.315l.31-.018h10.057l1.186-10.667H10.667a2.667 2.667 0 0 1-.311-5.315l.31-.018h11.835l1.515-13.627a2.67 2.67 0 0 1 2.634-2.373l.311.017a2.666 2.666 0 0 1 2.373 2.633l-.017.311-1.45 13.04H38.5l1.515-13.628a2.67 2.67 0 0 1 2.634-2.373zm-5.927 32 1.186-10.667H27.272l-1.184 10.667z",
  className: "icon-channels_svg__fill"
})));
var _path$N;
function _extends$P() {
  return _extends$P = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$P.apply(null, arguments);
}
var SvgIconChat = (props) => React2.createElement("svg", _extends$P({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$N || (_path$N = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333c-4.455 0-8.679-.993-12.461-2.77l-1.753.58q-8.947 2.868-12.504 1.981-4.198-1.047-1.657-3.663 1.757-2.094 2.928-5.234.934-2.502-.737-7A29.15 29.15 0 0 1 2.666 32C2.667 15.8 15.8 2.667 32 2.667M32 8C18.745 8 8 18.745 8 32c0 3.5.747 6.88 2.168 9.978l.405.837.137.271.106.285c1.517 4.085 1.89 7.622.734 10.72l-.382.972-.192.433.235-.05a62 62 0 0 0 4.886-1.363l1.721-.568 2.04-.696 1.95.917A23.9 23.9 0 0 0 32 56c13.255 0 24-10.745 24-24S45.255 8 32 8",
  className: "icon-chat_svg__fill"
})));
var _path$M;
function _extends$O() {
  return _extends$O = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$O.apply(null, arguments);
}
var SvgIconChatFilled = (props) => React2.createElement("svg", _extends$O({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$M || (_path$M = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333c-4.455 0-8.679-.993-12.461-2.77l-1.753.58q-8.947 2.868-12.504 1.981-4.198-1.047-1.657-3.663 1.757-2.094 2.928-5.234.934-2.502-.737-7A29.15 29.15 0 0 1 2.666 32C2.667 15.8 15.8 2.667 32 2.667",
  className: "icon-chat-filled_svg__fill"
})));
var _path$L;
function _extends$N() {
  return _extends$N = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$N.apply(null, arguments);
}
var SvgIconChevronDown = (props) => React2.createElement("svg", _extends$N({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$L || (_path$L = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M16.121 21.879a3 3 0 0 0-4.242 0 3 3 0 0 0 0 4.242l18 18a3 3 0 0 0 4.242 0l18-18a3 3 0 0 0 0-4.242 3 3 0 0 0-4.242 0L32 37.757z",
  className: "icon-chevron-down_svg__fill"
})));
var _path$K;
function _extends$M() {
  return _extends$M = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$M.apply(null, arguments);
}
var SvgIconChevronRight = (props) => React2.createElement("svg", _extends$M({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$K || (_path$K = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M22.114 46.114a2.668 2.668 0 0 0 3.772 3.772l16-16a2.67 2.67 0 0 0 0-3.772l-16-16a2.668 2.668 0 0 0-3.772 3.772L36.23 32z",
  className: "icon-chevron-right_svg__fill"
})));
var _path$J;
function _extends$L() {
  return _extends$L = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$L.apply(null, arguments);
}
var SvgIconClose = (props) => React2.createElement("svg", _extends$L({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$J || (_path$J = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M52.552 11.448a2.666 2.666 0 0 1 .222 3.52l-.222.251-16.781 16.78 16.781 16.782a2.665 2.665 0 0 1 0 3.771 2.666 2.666 0 0 1-3.52.222l-.251-.222L32 35.771 15.219 52.552a2.665 2.665 0 0 1-3.771 0 2.666 2.666 0 0 1-.222-3.52l.222-.251L28.228 32l-16.78-16.781a2.665 2.665 0 0 1 0-3.771 2.666 2.666 0 0 1 3.52-.222l.251.222 16.78 16.78 16.782-16.78a2.665 2.665 0 0 1 3.771 0",
  className: "icon-close_svg__fill"
})));
var _path$I;
function _extends$K() {
  return _extends$K = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$K.apply(null, arguments);
}
var SvgIconCollapse = (props) => React2.createElement("svg", _extends$K({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$I || (_path$I = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M16 8a2.667 2.667 0 0 0-2.649 2.356l-.018.31v42.667a2.667 2.667 0 0 0 5.316.311l.018-.31V34.666h25.56l-6.113 6.114a2.67 2.67 0 0 0-.221 3.52l.221.251a2.666 2.666 0 0 0 3.52.222l.252-.222 10.666-10.666a2.666 2.666 0 0 0 .222-3.52l-.222-.252-10.666-10.666a2.666 2.666 0 0 0-3.993 3.52l.221.251 6.113 6.114h-25.56V10.667A2.667 2.667 0 0 0 16 8",
  className: "icon-collapse_svg__fill"
})));
var _path$H;
function _extends$J() {
  return _extends$J = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$J.apply(null, arguments);
}
var SvgIconCopy = (props) => React2.createElement("svg", _extends$J({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$H || (_path$H = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M53.333 21.333a8 8 0 0 1 8 8v24a8 8 0 0 1-8 8h-24a8 8 0 0 1-8-8v-24a8 8 0 0 1 8-8zm0 5.334h-24a2.667 2.667 0 0 0-2.666 2.666v24A2.667 2.667 0 0 0 29.333 56h24A2.667 2.667 0 0 0 56 53.333v-24a2.667 2.667 0 0 0-2.667-2.666m-18.666-24a8 8 0 0 1 7.986 7.53l.014.47v2.666a2.667 2.667 0 0 1-5.316.311l-.018-.31v-2.667a2.67 2.67 0 0 0-2.355-2.65L34.667 8h-24a2.67 2.67 0 0 0-2.65 2.356l-.017.31v24a2.67 2.67 0 0 0 2.356 2.65l.31.017h2.667a2.667 2.667 0 0 1 .311 5.316l-.31.018h-2.667a8 8 0 0 1-7.987-7.53l-.013-.47v-24c0-4.26 3.33-7.743 7.53-7.987l.47-.013z",
  className: "icon-copy_svg__fill"
})));
var _path$G;
function _extends$I() {
  return _extends$I = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$I.apply(null, arguments);
}
var SvgIconCreate = (props) => React2.createElement("svg", _extends$I({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$G || (_path$G = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333c-4.455 0-8.679-.993-12.461-2.77l-1.753.58q-8.947 2.868-12.504 1.981-4.198-1.047-1.657-3.663 1.757-2.094 2.928-5.234.934-2.502-.737-7A29.15 29.15 0 0 1 2.666 32C2.667 15.8 15.8 2.667 32 2.667M32 8C18.745 8 8 18.745 8 32c0 3.5.747 6.88 2.168 9.978l.405.837.137.271.106.285c1.517 4.085 1.89 7.622.734 10.72l-.382.972-.192.433.235-.05a62 62 0 0 0 4.886-1.363l1.721-.568 2.04-.696 1.95.917A23.9 23.9 0 0 0 32 56c13.255 0 24-10.745 24-24S45.255 8 32 8m2.667 16v5.333H40c3.556 0 3.556 5.334 0 5.334h-5.333V40c0 3.556-5.334 3.556-5.334 0v-5.333H24c-3.556 0-3.556-5.334 0-5.334h5.333V24c0-3.556 5.334-3.556 5.334 0",
  className: "icon-create_svg__fill"
})));
var _path$F;
function _extends$H() {
  return _extends$H = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$H.apply(null, arguments);
}
var SvgIconDelete = (props) => React2.createElement("svg", _extends$H({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$F || (_path$F = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M37.333 2.667c4.26 0 7.743 3.33 7.987 7.53l.013.47v2.666H56a2.667 2.667 0 0 1 .311 5.316l-.311.018h-2.668l.001 34.666c0 4.26-3.33 7.743-7.53 7.987l-.47.013H18.667a8 8 0 0 1-7.987-7.53l-.013-.47V18.667H8a2.667 2.667 0 0 1-.311-5.316L8 13.333h10.666v-2.666a8 8 0 0 1 7.53-7.987l.47-.013zm10.666 16H16v34.666a2.67 2.67 0 0 0 2.356 2.65l.31.017h26.667a2.67 2.67 0 0 0 2.65-2.356l.017-.31zm-21.332 8a2.667 2.667 0 0 1 2.648 2.355l.018.311v16a2.667 2.667 0 0 1-5.316.311l-.017-.31v-16a2.667 2.667 0 0 1 2.667-2.667m10.666 0a2.67 2.67 0 0 1 2.65 2.355l.017.311v16a2.667 2.667 0 0 1-5.315.311l-.018-.31v-16a2.667 2.667 0 0 1 2.666-2.667m0-18.667H26.667a2.67 2.67 0 0 0-2.65 2.356l-.017.31v2.667h16v-2.666a2.67 2.67 0 0 0-2.356-2.65L37.334 8z",
  className: "icon-delete_svg__fill"
})));
var _path$E;
function _extends$G() {
  return _extends$G = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$G.apply(null, arguments);
}
var SvgIconDisconnected = (props) => React2.createElement("svg", _extends$G({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$E || (_path$E = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m54.534 6.069-.248.217-9.736 9.735-.04.04-9.573 9.573q-.226.178-.405.404L6.286 54.286a2.423 2.423 0 0 0 3.18 3.645l.248-.217 13.374-13.373a2.42 2.42 0 0 0 1.88-.401 12.12 12.12 0 0 1 14.04 0 2.424 2.424 0 1 0 2.808-3.952 16.95 16.95 0 0 0-11.303-3.072l6.743-6.744a24.1 24.1 0 0 1 10.159 5.021 2.424 2.424 0 0 0 3.11-3.719 29 29 0 0 0-9.34-5.23l5.633-5.634a36.2 36.2 0 0 1 9.225 5.934 2.425 2.425 0 0 0 3.211-3.633 41 41 0 0 0-8.796-5.941l7.256-7.256a2.423 2.423 0 0 0-3.18-3.645m-35.04 21.474a29 29 0 0 0-6.032 3.942 2.424 2.424 0 0 0 3.137 3.697 24 24 0 0 1 5.022-3.282 2.425 2.425 0 0 0-2.127-4.357M4.748 22.909a2.424 2.424 0 0 0 3.207 3.636 36.36 36.36 0 0 1 26.978-8.977 2.424 2.424 0 0 0 .389-4.832A41.2 41.2 0 0 0 4.748 22.909",
  className: "icon-disconnected_svg__fill"
})));
var _path$D;
function _extends$F() {
  return _extends$F = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$F.apply(null, arguments);
}
var SvgIconDocument = (props) => React2.createElement("svg", _extends$F({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$D || (_path$D = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M37.333 2.667a3 3 0 0 1 .274.014l.085.01.058.008q.07.01.141.026l.029.007q.075.016.146.037l.034.01q.357.107.663.303l.034.022q.053.034.104.072l.057.043q.045.033.085.068.091.075.176.16l-.126-.117q.075.065.143.135L55.21 19.438q.07.07.134.143l.035.04q.04.047.076.096l.04.054.07.1.024.038c.16.253.279.535.347.836l.01.048q.014.064.024.13l.006.048.007.051.004.041q.014.135.014.27v32a8 8 0 0 1-8 8H16a8 8 0 0 1-8-8V10.667a8 8 0 0 1 8-8zM34.666 8H16a2.667 2.667 0 0 0-2.667 2.667v42.666A2.667 2.667 0 0 0 16 56h32a2.667 2.667 0 0 0 2.667-2.667L50.666 24H37.333a2.667 2.667 0 0 1-2.648-2.356l-.018-.31zm12.227 10.667-6.894-6.894.001 6.894z",
  className: "icon-document_svg__fill"
})));
var _path$C;
function _extends$E() {
  return _extends$E = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$E.apply(null, arguments);
}
var SvgIconDone = (props) => React2.createElement("svg", _extends$E({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$C || (_path$C = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M12.552 31.448a2.665 2.665 0 1 0-3.771 3.771l13.333 13.333a2.666 2.666 0 0 0 3.772 0L55.219 19.22a2.667 2.667 0 0 0-3.771-3.771L24 42.895z",
  className: "icon-done_svg__fill"
})));
var _path$B;
function _extends$D() {
  return _extends$D = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$D.apply(null, arguments);
}
var SvgIconDoneAll = (props) => React2.createElement("svg", _extends$D({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$B || (_path$B = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M5.886 31.448 19.219 44.78a2.667 2.667 0 0 1-3.771 3.771L2.114 35.22a2.667 2.667 0 0 1 3.772-3.771zm52.228-16a2.666 2.666 0 1 1 3.772 3.771L32.552 48.552a2.665 2.665 0 0 1-3.771 0L15.448 35.22a2.665 2.665 0 0 1 0-3.771 2.665 2.665 0 0 1 3.771 0l11.448 11.447zm-9.562 0a2.665 2.665 0 0 1 0 3.771L32.556 35.215a2.665 2.665 0 0 1-3.771 0 2.664 2.664 0 0 1 0-3.77L44.78 15.447a2.665 2.665 0 0 1 3.771 0z",
  className: "icon-done-all_svg__fill"
})));
var _path$A;
function _extends$C() {
  return _extends$C = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$C.apply(null, arguments);
}
var SvgIconDownload = (props) => React2.createElement("svg", _extends$C({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$A || (_path$A = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M56 42.667a2.667 2.667 0 0 1 2.649 2.355l.018.311v8c0 4.26-3.33 7.743-7.53 7.987l-.47.013H13.333a8 8 0 0 1-7.986-7.53l-.014-.47v-8a2.667 2.667 0 0 1 5.316-.311l.018.311v8a2.67 2.67 0 0 0 2.355 2.65l.311.017h37.334a2.667 2.667 0 0 0 2.648-2.356l.018-.31v-8A2.667 2.667 0 0 1 56 42.667m-36.552-8.781a2.666 2.666 0 0 1 3.52-3.993l.251.221 6.114 6.114V5.333a2.667 2.667 0 0 1 5.316-.311l.018.311v30.894l6.114-6.113a2.67 2.67 0 0 1 3.52-.221l.251.221a2.666 2.666 0 0 1 .222 3.52l-.222.252-10.658 10.657a2 2 0 0 1-.135.128l.127-.119a3 3 0 0 1-.195.176l-.056.045-.086.064-.056.04-.086.056-.06.036-.081.046-.079.04a3 3 0 0 1-.14.065l-.09.036q-.034.014-.067.025l-.09.03-.063.019q-.064.018-.13.034l-.013.003-.144.028-.064.01q-.045.008-.092.012l-.084.008-.103.006-.069.002h-.095q-.042 0-.082-.003l.139.003q-.126 0-.249-.011l-.061-.007-.092-.012-.09-.015-.118-.025-.04-.01a3 3 0 0 1-.34-.11l-.015-.006q-.074-.03-.145-.063l-.042-.02L30.71 45l-.067-.039q-.045-.026-.087-.054l-.062-.041q-.045-.03-.088-.063l-.04-.03-.008-.007a3 3 0 0 1-.251-.223z",
  className: "icon-download_svg__fill"
})));
var _path$z;
function _extends$B() {
  return _extends$B = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$B.apply(null, arguments);
}
var SvgIconEdit = (props) => React2.createElement("svg", _extends$B({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 65 65"
}, props), _path$z || (_path$z = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M56 56a2.667 2.667 0 0 1 .311 5.315l-.311.018H8a2.667 2.667 0 0 1-.311-5.316L8 56zM35.448 3.448a2.665 2.665 0 0 1 3.771 0l10.667 10.666a2.67 2.67 0 0 1 0 3.772L20.552 47.219c-.5.5-1.178.781-1.885.781H8a2.667 2.667 0 0 1-2.667-2.667V34.667c0-.708.281-1.386.781-1.886zm1.885 5.659L10.667 35.77v6.896h6.89L44.227 16z",
  className: "icon-edit_svg__fill"
})));
var _path$y;
function _extends$A() {
  return _extends$A = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$A.apply(null, arguments);
}
var SvgIconEmojiMore = (props) => React2.createElement("svg", _extends$A({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$y || (_path$y = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32.097 3.22c2.65 0 5.255.357 7.763 1.054a2.134 2.134 0 0 1-1.144 4.111 24.7 24.7 0 0 0-6.619-.899c-13.603 0-24.63 11.027-24.63 24.63s11.027 24.63 24.63 24.63 24.63-11.027 24.63-24.63c0-2.227-.295-4.413-.87-6.518a2.13 2.13 0 0 1 1.494-2.62 2.13 2.13 0 0 1 2.62 1.494 29 29 0 0 1 1.023 7.644c0 15.96-12.938 28.897-28.897 28.897-15.96 0-28.897-12.937-28.897-28.897S16.138 3.22 32.097 3.22m10.705 34.792a2.133 2.133 0 0 1 2.024 2.808c-1.873 5.623-6.937 9.488-12.729 9.488s-10.856-3.865-12.73-9.488a2.134 2.134 0 0 1 1.875-2.803l.15-.005zm-3.477 4.266H24.867l.294.382c1.539 1.887 3.718 3.113 6.115 3.342l.314.024.507.015c2.617 0 5.037-1.188 6.743-3.151l.193-.23zM21.392 21.954c1.087 0 1.985.814 2.116 1.866l.017.267v5.353a2.133 2.133 0 0 1-4.25.268l-.017-.268v-5.353c0-1.178.955-2.133 2.134-2.133m21.41 0c1.088 0 1.985.814 2.117 1.866l.017.267v5.353a2.133 2.133 0 0 1-4.25.268l-.017-.268v-5.353c0-1.178.955-2.133 2.133-2.133M54.853 0a.8.8 0 0 1 .8.8v7.786h7.76a.8.8 0 0 1 .8.8v2.667a.8.8 0 0 1-.8.8h-7.76v7.758a.8.8 0 0 1-.8.8h-2.666a.8.8 0 0 1-.8-.8v-7.758h-7.785a.8.8 0 0 1-.8-.8V9.387a.8.8 0 0 1 .8-.8l7.784-.001V.8a.8.8 0 0 1 .8-.8z",
  className: "icon-emoji-more_svg__fill"
})));
var _path$x;
function _extends$z() {
  return _extends$z = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$z.apply(null, arguments);
}
var SvgIconError = (props) => React2.createElement("svg", _extends$z({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$x || (_path$x = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 5.06a8 8 0 0 1 6.561 3.424l.287.439 22.608 37.744a8 8 0 0 1 .022 7.962 8 8 0 0 1-6.356 4.014l-.535.024H9.384a8 8 0 0 1-6.862-4.038 8.01 8.01 0 0 1-.226-7.493l.27-.506L25.16 8.91A8 8 0 0 1 32 5.06m0 5.333c-.816 0-1.58.372-2.076.99l-.196.28-22.565 37.67a2.67 2.67 0 0 0 1.909 3.973l.341.027h45.144a2.67 2.67 0 0 0 2.45-3.659l-.148-.304L34.28 11.676A2.67 2.67 0 0 0 32 10.393m0 32.274A2.667 2.667 0 1 1 32 48a2.667 2.667 0 0 1 0-5.333m0-21.334a2.667 2.667 0 0 1 2.649 2.356l.018.311v10.667a2.667 2.667 0 0 1-5.316.311l-.018-.311V24A2.667 2.667 0 0 1 32 21.333",
  className: "icon-error_svg__fill"
})));
var _path$w;
function _extends$y() {
  return _extends$y = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$y.apply(null, arguments);
}
var SvgIconExpand = (props) => React2.createElement("svg", _extends$y({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$w || (_path$w = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M48 8a2.667 2.667 0 0 1 2.649 2.356l.018.31V32l-.001.027v21.306a2.667 2.667 0 0 1-5.315.311l-.018-.31V34.665H19.772l6.114 6.115a2.67 2.67 0 0 1 .221 3.52l-.221.251a2.666 2.666 0 0 1-3.52.222l-.252-.222-10.666-10.666a2.666 2.666 0 0 1-.222-3.52l.222-.252 10.666-10.666a2.666 2.666 0 0 1 3.993 3.52l-.221.251-6.113 6.114h25.56V10.667A2.667 2.667 0 0 1 48 8",
  className: "icon-expand_svg__fill"
})));
var _path$v;
function _extends$x() {
  return _extends$x = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$x.apply(null, arguments);
}
var SvgIconFileAudio = (props) => React2.createElement("svg", _extends$x({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$v || (_path$v = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M30.52 12.51c1.685-1.226 4.139-.103 4.139 1.893v35.194c0 1.996-2.454 3.119-4.138 1.893l-12.45-9.909H7.898c-1.416 0-2.564-1.074-2.564-2.399V24.818c0-1.325 1.148-2.4 2.564-2.4h10.175zm20.427.163c10.293 10.667 10.293 27.987 0 38.654a2.137 2.137 0 0 1-3.156-.047c-.86-.942-.84-2.448.044-3.364 8.49-8.799 8.49-23.033 0-31.832-.884-.916-.904-2.422-.044-3.364a2.137 2.137 0 0 1 3.156-.047m-8.492 8.799c5.597 5.8 5.597 15.231 0 21.031a2.136 2.136 0 0 1-3.156-.046c-.86-.942-.84-2.448.044-3.364 3.794-3.932 3.794-10.279 0-14.211-.884-.916-.904-2.422-.044-3.363a2.136 2.136 0 0 1 3.156-.047",
  className: "icon-file-audio_svg__fill"
})));
var _path$u;
function _extends$w() {
  return _extends$w = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$w.apply(null, arguments);
}
var SvgIconFileDocument = (props) => React2.createElement("svg", _extends$w({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$u || (_path$u = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M39.414 6.4a2.4 2.4 0 0 1 1.71.701l12.642 12.75c.407.41.634.953.634 1.516v29.765c0 3.542-4.342 6.468-8 6.468H16.16c-3.658 0-6.4-2.926-6.4-6.468L9.6 12.868c0-3.542 2.902-6.468 6.56-6.468zm3.331 35.173-21.49.027-.147.005c-1.066.08-1.908 1.014-1.908 2.155 0 1.193.92 2.16 2.055 2.16l21.49-.027.147-.005c1.066-.08 1.908-1.014 1.908-2.155 0-1.193-.92-2.16-2.055-2.16m0-8.533-21.49.027-.147.005c-1.066.08-1.908 1.014-1.908 2.155 0 1.193.92 2.16 2.055 2.16l21.49-.027.147-.005c1.066-.08 1.908-1.014 1.908-2.155 0-1.193-.92-2.16-2.055-2.16m-11.807-8.507h-9.6l-.153.006a2.15 2.15 0 0 0-1.985 2.154c0 1.193.957 2.16 2.138 2.16h9.6l.152-.005a2.15 2.15 0 0 0 1.985-2.155c0-1.193-.957-2.16-2.137-2.16",
  className: "icon-file-document_svg__fill"
})));
var _path$t;
function _extends$v() {
  return _extends$v = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$v.apply(null, arguments);
}
var SvgIconFreeze = (props) => React2.createElement("svg", _extends$v({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$t || (_path$t = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m41.636 3.226.251.222a2.67 2.67 0 0 1 .222 3.52l-.222.251-7.219 7.218V27.38l11.209-6.472 2.643-9.86a2.667 2.667 0 0 1 5.218 1.051l-.067.329-2.237 8.35 8.352 2.24a2.67 2.67 0 0 1 1.952 2.938l-.067.328a2.67 2.67 0 0 1-2.937 1.952l-.329-.066-9.861-2.643L37.334 32l11.209 6.47 9.862-2.64.329-.067a2.67 2.67 0 0 1 2.937 1.952l.067.328a2.67 2.67 0 0 1-1.952 2.938l-8.353 2.237 2.238 8.353.067.329a2.666 2.666 0 0 1-5.218 1.052l-2.643-9.861-11.209-6.472v12.944l7.219 7.218a2.667 2.667 0 0 1-3.52 3.993l-.251-.222L32 54.437l-6.114 6.115a2.666 2.666 0 0 1-3.52.222l-.251-.222a2.666 2.666 0 0 1-.222-3.52l.222-.251 7.218-7.22V36.62l-11.209 6.47-2.642 9.863a2.666 2.666 0 0 1-5.218-1.052l.067-.329 2.236-8.351-8.35-2.24a2.665 2.665 0 0 1-1.953-2.937l.067-.328a2.665 2.665 0 0 1 2.937-1.952l.329.066 9.861 2.642L26.667 32l-11.209-6.472-9.86 2.643-.329.066a2.665 2.665 0 0 1-2.937-1.952l-.067-.328a2.67 2.67 0 0 1 1.952-2.938l8.35-2.239-2.235-8.351-.067-.329a2.667 2.667 0 0 1 5.218-1.052l2.642 9.862 11.209 6.47V14.439L22.116 7.22a2.665 2.665 0 0 1 0-3.771 2.666 2.666 0 0 1 3.52-.222l.251.222 6.114 6.112 6.115-6.112a2.666 2.666 0 0 1 3.52-.222z",
  className: "icon-freeze_svg__fill"
})));
var _path$s;
function _extends$u() {
  return _extends$u = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$u.apply(null, arguments);
}
var SvgIconGif = (props) => React2.createElement("svg", _extends$u({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$s || (_path$s = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M16.664 45.333q3.233 0 5.89-.953 2.658-.954 4.113-2.683V31.34h-10.29v3.94h4.902v4.474q-1.292 1.284-4.327 1.283-3.017 0-4.58-2.085-1.561-2.085-1.562-6.168v-1.657q.018-4.047 1.455-6.097t4.184-2.05q2.155 0 3.385 1.034t1.59 3.262h5.243q-.486-4.206-3.107-6.408t-7.273-2.201q-3.34 0-5.827 1.506t-3.807 4.35q-1.32 2.843-1.32 6.728v1.765q.036 3.78 1.428 6.578 1.392 2.797 3.95 4.269 2.56 1.47 5.953 1.47m20.67 0V18.667H32v26.666h5.333zm10.396 0V34.436h9.721v-4.432H47.73v-6.887h10.937v-4.45h-16v26.666z",
  className: "icon-gif_svg__fill"
})));
var _path$r;
function _extends$t() {
  return _extends$t = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$t.apply(null, arguments);
}
var SvgIconInfo = (props) => React2.createElement("svg", _extends$t({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$r || (_path$r = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333 2.667 48.2 2.667 32 15.8 2.667 32 2.667M32 8C18.745 8 8 18.745 8 32s10.745 24 24 24 24-10.745 24-24S45.255 8 32 8m1.667 21.333a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-3.334a1 1 0 0 1-1-1v-14a1 1 0 0 1 1-1zm-1.667-8a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334",
  className: "icon-info_svg__fill"
})));
var _path$q;
function _extends$s() {
  return _extends$s = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$s.apply(null, arguments);
}
var SvgIconLeave = (props) => React2.createElement("svg", _extends$s({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$q || (_path$q = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 5.333a2.667 2.667 0 0 1 .311 5.316l-.311.018H10.667a2.67 2.67 0 0 0-2.65 2.355L8 13.333v37.334a2.667 2.667 0 0 0 2.356 2.648l.31.018H32a2.667 2.667 0 0 1 .311 5.316l-.311.018H10.667a8 8 0 0 1-7.987-7.53l-.013-.47V13.333a8 8 0 0 1 7.53-7.986l.47-.014zm17.634 13.893.252.222 10.666 10.666a2.666 2.666 0 0 1 .222 3.52l-.222.252-10.666 10.666a2.666 2.666 0 0 1-3.993-3.52l.221-.251 4.78-4.782L20 36a2.667 2.667 0 0 1-.311-5.315l.311-.018h33.56l-7.446-7.448a2.67 2.67 0 0 1-.221-3.52l.221-.251a2.666 2.666 0 0 1 3.52-.222",
  className: "icon-leave_svg__fill"
})));
var _path$p;
function _extends$r() {
  return _extends$r = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$r.apply(null, arguments);
}
var SvgIconMembers = (props) => React2.createElement("svg", _extends$r({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$p || (_path$p = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M34.667 37.333c7.17 0 13.018 5.66 13.32 12.755l.013.579V56a2.667 2.667 0 0 1-5.315.311L42.667 56v-5.333c0-4.26-3.33-7.743-7.53-7.987l-.47-.013H13.333a8 8 0 0 0-7.986 7.53l-.014.47V56a2.667 2.667 0 0 1-5.316.311L0 56v-5.333c0-7.17 5.66-13.019 12.755-13.321l.578-.013zM54 37.765a13.33 13.33 0 0 1 9.986 12.297l.014.605V56a2.667 2.667 0 0 1-5.315.311L58.667 56v-5.331a8 8 0 0 0-6-7.74A2.667 2.667 0 1 1 54 37.765M24 5.333c7.364 0 13.333 5.97 13.333 13.334S31.363 32 24 32s-13.333-5.97-13.333-13.333S16.637 5.333 24 5.333m19.328.43a13.333 13.333 0 0 1 0 25.834 2.667 2.667 0 1 1-1.323-5.167 8 8 0 0 0 0-15.5 2.667 2.667 0 1 1 1.323-5.167M24 10.667a8 8 0 1 0 0 16 8 8 0 0 0 0-16",
  className: "icon-members_svg__fill"
})));
var _path$o;
function _extends$q() {
  return _extends$q = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$q.apply(null, arguments);
}
var SvgIconMessage = (props) => React2.createElement("svg", _extends$q({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$o || (_path$o = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333c-4.455 0-8.679-.993-12.461-2.77l-1.753.58q-8.947 2.868-12.504 1.981-4.198-1.047-1.657-3.663 1.757-2.094 2.928-5.234.934-2.502-.737-7A29.15 29.15 0 0 1 2.666 32C2.667 15.8 15.8 2.667 32 2.667M32 8C18.745 8 8 18.745 8 32c0 3.5.747 6.88 2.168 9.978l.405.837.137.271.106.285c1.517 4.085 1.89 7.622.734 10.72l-.382.972-.192.433.235-.05a62 62 0 0 0 4.886-1.363l1.721-.568 2.04-.696 1.95.917A23.9 23.9 0 0 0 32 56c13.255 0 24-10.745 24-24S45.255 8 32 8M18.667 29.333a2.667 2.667 0 1 1-.001 5.333 2.667 2.667 0 0 1 .001-5.333m13.333 0a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334m13.333 0a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334",
  className: "icon-message_svg__fill"
})));
var _path$n;
function _extends$p() {
  return _extends$p = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$p.apply(null, arguments);
}
var SvgIconModerations = (props) => React2.createElement("svg", _extends$p({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$n || (_path$n = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M18.667 34.667a2.667 2.667 0 0 1 .311 5.316l-.311.017h-5.334v16a2.667 2.667 0 0 1-5.316.311L8 56V40H2.667a2.667 2.667 0 0 1-.311-5.315l.31-.018h16zM32 29.333a2.667 2.667 0 0 1 2.649 2.356l.018.311v24a2.667 2.667 0 0 1-5.316.311L29.333 56V32A2.667 2.667 0 0 1 32 29.333M61.333 40a2.667 2.667 0 0 1 .311 5.315l-.31.018h-5.335L56 56a2.667 2.667 0 0 1-5.315.311L50.667 56l-.001-10.668-5.333.001a2.667 2.667 0 0 1-.311-5.316l.311-.017zm-8-34.667a2.67 2.67 0 0 1 2.65 2.356L56 8v24a2.667 2.667 0 0 1-5.315.311L50.667 32V8a2.667 2.667 0 0 1 2.666-2.667m-42.666 0a2.667 2.667 0 0 1 2.648 2.356l.018.311v18.667a2.667 2.667 0 0 1-5.316.311L8 26.667V8a2.667 2.667 0 0 1 2.667-2.667m21.333 0a2.667 2.667 0 0 1 2.649 2.356l.018.311-.001 10.666H40a2.668 2.668 0 0 1 .311 5.317L40 24H24a2.667 2.667 0 0 1-.311-5.315l.311-.018h5.333V8A2.667 2.667 0 0 1 32 5.333",
  className: "icon-moderations_svg__fill"
})));
var _path$m;
function _extends$o() {
  return _extends$o = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$o.apply(null, arguments);
}
var SvgIconMore = (props) => React2.createElement("svg", _extends$o({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$m || (_path$m = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 45.333a5.333 5.333 0 1 1 0 10.666 5.333 5.333 0 0 1 0-10.666M32 28a5.333 5.333 0 1 1 0 10.668A5.333 5.333 0 0 1 32 28m0-17.333c2.946 0 5.333 2.387 5.333 5.333S34.946 21.333 32 21.333 26.667 18.946 26.667 16s2.387-5.333 5.333-5.333",
  className: "icon-more_svg__fill"
})));
var _path$l;
function _extends$n() {
  return _extends$n = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$n.apply(null, arguments);
}
var SvgIconMute = (props) => React2.createElement("svg", _extends$n({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$l || (_path$l = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m55.62 19.616.067.123A26.55 26.55 0 0 1 58.667 32c0 4.326-1.03 8.41-2.864 12.025q-1.518 4.089-.67 6.363 1.066 2.855 2.662 4.758 2.31 2.379-1.506 3.33-3.135.782-10.879-1.646l-.488-.155-1.594-.527A26.6 26.6 0 0 1 32 58.667a26.55 26.55 0 0 1-12.326-3.014l-.059-.03 4-4A21.2 21.2 0 0 0 32 53.333c2.993 0 5.89-.614 8.562-1.786l.498-.226 1.925-.905 3.613 1.196.695.219q1.093.337 2.054.595l.472.125.485.121-.167-.42-.2-.594c-.814-2.685-.484-5.681.713-9.065l.154-.425.106-.284.528-1.084a21.2 21.2 0 0 0 1.895-8.8 21.2 21.2 0 0 0-1.71-8.385zm2.266-13.502a2.67 2.67 0 0 1 .221 3.52l-.221.252-48 48a2.668 2.668 0 0 1-3.993-3.52l.221-.252 5.238-5.237a26.56 26.56 0 0 1-6.015-16.412L5.333 32C5.333 17.272 17.273 5.333 32 5.333a26.55 26.55 0 0 1 16.877 6.02l5.237-5.239a2.67 2.67 0 0 1 3.772 0M32 10.667c-11.782 0-21.333 9.55-21.333 21.333 0 4.836 1.614 9.401 4.48 13.084l29.936-29.938A21.25 21.25 0 0 0 32 10.666z",
  className: "icon-mute_svg__fill"
})));
var _path$k;
function _extends$m() {
  return _extends$m = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$m.apply(null, arguments);
}
var SvgIconNotifications = (props) => React2.createElement("svg", _extends$m({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$k || (_path$k = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M36.613 53.333c2.056 0 3.338 2.227 2.307 4.005a8 8 0 0 1-13.84 0c-.98-1.689.129-3.783 2.004-3.988l.303-.017zM32 2.667c11.56 0 20.972 9.194 21.323 20.669l.01.664v13.333a5.334 5.334 0 0 0 4.936 5.319l.753.033c2.963.318 3.077 4.616.342 5.24l-.342.056-.355.019H5.333l-.355-.019c-3.082-.33-3.082-4.965 0-5.296l.753-.033a5.335 5.335 0 0 0 4.92-4.9l.016-.419V24c0-11.782 9.55-21.333 21.333-21.333M32 8c-8.636 0-15.674 6.842-15.989 15.4L16 24v13.333c0 1.562-.336 3.046-.939 4.383l-.275.564-.218.387h34.861l-.215-.387a10.6 10.6 0 0 1-1.146-3.74l-.055-.674-.013-.533V24c0-8.837-7.163-16-16-16",
  className: "icon-notifications_svg__fill"
})));
var _path$j;
function _extends$l() {
  return _extends$l = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$l.apply(null, arguments);
}
var SvgIconNotificationsOffFilled = (props) => React2.createElement("svg", _extends$l({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$j || (_path$j = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M36.613 53.333c2.056 0 3.338 2.227 2.307 4.005a8 8 0 0 1-13.84 0c-.98-1.689.129-3.783 2.004-3.988l.303-.017zM32 2.667c7.173 0 13.52 3.54 17.387 8.97l5.686-5.687a2.105 2.105 0 0 1 2.85-.117l.127.117a2.105 2.105 0 0 1 0 2.977L8.927 58.05c-.78.781-2.023.82-2.85.117l-.127-.117a2.105 2.105 0 0 1 0-2.977L13.023 48h-7.69l-.355-.019c-3.082-.33-3.082-4.965 0-5.296l.753-.033a5.335 5.335 0 0 0 4.92-4.9l.016-.419V24c0-11.782 9.55-21.333 21.333-21.333m20.85 16.795c.271 1.253.433 2.548.473 3.874l.01.664v13.333a5.334 5.334 0 0 0 4.936 5.319l.753.033c2.963.318 3.077 4.616.342 5.24l-.342.056-.355.019H24.31z",
  className: "icon-notifications-off-filled_svg__fill"
})));
var _path$i;
function _extends$k() {
  return _extends$k = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$k.apply(null, arguments);
}
var SvgIconOperator = (props) => React2.createElement("svg", _extends$k({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$i || (_path$i = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M29.83 6.45a2.667 2.667 0 0 1 4.34 0l11.697 16.374L57 13.918c1.88-1.504 4.573.054 4.32 2.35l-.047.29-8 37.334A2.666 2.666 0 0 1 50.666 56H13.333a2.666 2.666 0 0 1-2.607-2.108l-8-37.333c-.525-2.452 2.315-4.207 4.273-2.641l11.132 8.906zM32 12.587l-11.163 15.63a2.667 2.667 0 0 1-3.836.532l-7.497-5.997 5.984 27.915h33.021l5.984-27.915L47 28.749a2.667 2.667 0 0 1-3.632-.281l-.204-.251zM32 32a5.333 5.333 0 1 1 0 10.668A5.333 5.333 0 0 1 32 32",
  className: "icon-operator_svg__fill"
})));
var _path$h;
function _extends$j() {
  return _extends$j = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$j.apply(null, arguments);
}
var SvgIconPhoto = (props) => React2.createElement("svg", _extends$j({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$h || (_path$h = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M50.667 5.333a8 8 0 0 1 8 8v37.334a8 8 0 0 1-8 8H13.333a8 8 0 0 1-8-8V13.333a8 8 0 0 1 8-8zm-8 25.107L19.77 53.332l30.896.001a2.667 2.667 0 0 0 2.661-2.498l.005-.168v-9.564L42.666 30.44zm8-19.773H13.333a2.667 2.667 0 0 0-2.666 2.666v37.334c0 1.143.72 2.119 1.731 2.498L40.781 24.78a2.67 2.67 0 0 1 3.52-.222l.251.222 8.78 8.78.001-20.228a2.667 2.667 0 0 0-2.498-2.661zm-28 5.333a6.666 6.666 0 1 1 0 13.333 6.666 6.666 0 0 1 0-13.333m0 5.333a1.334 1.334 0 1 0 0 2.667 1.334 1.334 0 0 0 0-2.667",
  className: "icon-photo_svg__fill"
})));
var _path$g;
function _extends$i() {
  return _extends$i = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$i.apply(null, arguments);
}
var SvgIconPlay = (props) => React2.createElement("svg", _extends$i({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$g || (_path$g = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M51.908 34.75c1.9-1.233 1.896-3.26.013-4.514L19.376 8.577c-1.893-1.26-3.404-.391-3.376 1.968l.522 42.888c.028 2.347 1.596 3.247 3.493 2.016z",
  className: "icon-play_svg__fill"
})));
var _path$f;
function _extends$h() {
  return _extends$h = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$h.apply(null, arguments);
}
var SvgIconPlus = (props) => React2.createElement("svg", _extends$h({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$f || (_path$f = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M34.667 29.333h18.666c3.556 0 3.556 5.334 0 5.334H34.667v18.666c0 3.556-5.334 3.556-5.334 0V34.667H10.667c-3.556 0-3.556-5.334 0-5.334h18.666V10.667c0-3.556 5.334-3.556 5.334 0z",
  className: "icon-plus_svg__fill"
})));
var _path$e;
function _extends$g() {
  return _extends$g = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$g.apply(null, arguments);
}
var SvgIconQuestion = (props) => React2.createElement("svg", _extends$g({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$e || (_path$e = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 61.333C15.8 61.333 2.667 48.2 2.667 32S15.8 2.667 32 2.667 61.333 15.8 61.333 32 48.2 61.333 32 61.333M32 56c13.255 0 24-10.745 24-24S45.255 8 32 8 8 18.745 8 32s10.745 24 24 24m2.213-18.63a2.667 2.667 0 1 1-5.333 0v-2.69c0-1.148.734-2.168 1.823-2.53.173-.058.532-.195 1.01-.407.809-.36 1.616-.79 2.354-1.282 1.835-1.223 2.813-2.528 2.813-3.786a5.333 5.333 0 0 0-10.364-1.777 2.667 2.667 0 0 1-5.032-1.77 10.668 10.668 0 0 1 20.729 3.551c0 3.413-2.022 6.109-5.187 8.22a21 21 0 0 1-2.813 1.578zm-5.333 7.523a2.667 2.667 0 1 1 5.333 0v.44a2.667 2.667 0 1 1-5.333 0v-.44",
  className: "icon-question_svg__fill"
})));
var _path$d;
function _extends$f() {
  return _extends$f = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$f.apply(null, arguments);
}
var SvgIconRefresh = (props) => React2.createElement("svg", _extends$f({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$d || (_path$d = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "m46.14 14.43.562.537 6.631 6.167v-7.8a2.67 2.67 0 0 1 2.356-2.65l.311-.017a2.667 2.667 0 0 1 2.649 2.355l.018.311v16a2.67 2.67 0 0 1-2.356 2.65L56 32H40a2.667 2.667 0 0 1-.311-5.315l.311-.018h11.452l-8.44-7.85c-5.964-5.893-15.168-7.182-22.563-3.156-7.38 4.018-11.172 12.357-9.314 20.455 1.859 8.107 8.935 14.032 17.362 14.518 8.43.487 16.162-4.585 18.967-12.426a2.667 2.667 0 0 1 5.022 1.797C48.88 50.082 38.973 56.582 28.19 55.959c-10.785-.623-19.862-8.222-22.254-18.65C3.542 26.872 8.426 16.135 17.9 10.977c9.227-5.024 20.65-3.579 28.241 3.453z",
  className: "icon-refresh_svg__fill"
})));
var _path$c;
function _extends$e() {
  return _extends$e = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$e.apply(null, arguments);
}
var SvgIconRemove = (props) => React2.createElement("svg", _extends$e({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$c || (_path$c = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667C48.2 2.667 61.333 15.8 61.333 32S48.2 61.333 32 61.333 2.667 48.2 2.667 32 15.8 2.667 32 2.667m9.886 19.447a2.67 2.67 0 0 0-3.772 0L32 28.23l-6.114-6.115-.134-.124a2.667 2.667 0 0 0-3.638.124l-.124.134a2.667 2.667 0 0 0 .124 3.638L28.23 32l-6.115 6.114-.124.134a2.667 2.667 0 0 0 .124 3.638l.134.124a2.667 2.667 0 0 0 3.638-.124L32 35.77l6.114 6.115.134.124a2.667 2.667 0 0 0 3.638-.124l.124-.134a2.667 2.667 0 0 0-.124-3.638L35.77 32l6.115-6.114.124-.134a2.667 2.667 0 0 0-.124-3.638z",
  className: "icon-remove_svg__fill"
})));
var _path$b;
function _extends$d() {
  return _extends$d = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$d.apply(null, arguments);
}
var SvgIconReplyFilled = (props) => React2.createElement("svg", _extends$d({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 12 12"
}, props), _path$b || (_path$b = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M11.774 10.5c.062 0 .12-.025.164-.07a.22.22 0 0 0 .062-.164c-.069-1.447-.495-2.678-1.268-3.66-.618-.785-1.455-1.409-2.49-1.855a9.3 9.3 0 0 0-2.406-.655 10 10 0 0 0-.862-.078V2.225a.23.23 0 0 0-.128-.203.23.23 0 0 0-.24.028L.084 5.692A.22.22 0 0 0 0 5.865c0 .068.03.132.082.175l4.523 3.737c.067.056.16.068.24.03a.22.22 0 0 0 .13-.202v-1.95c1.134-.08 2.178.003 3.107.25a6.4 6.4 0 0 1 2.087.96c1.018.724 1.398 1.5 1.401 1.507a.23.23 0 0 0 .204.128",
  className: "icon-reply-filled_svg__fill"
})));
var _path$a;
function _extends$c() {
  return _extends$c = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$c.apply(null, arguments);
}
var SvgIconSearch = (props) => React2.createElement("svg", _extends$c({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$a || (_path$a = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M26.667 48C14.885 48 5.333 38.449 5.333 26.667S14.885 5.333 26.667 5.333 48 14.885 48 26.667c0 4.93-1.672 9.469-4.48 13.081l13.67 13.67a2.668 2.668 0 0 1-3.772 3.772l-13.67-13.67A21.24 21.24 0 0 1 26.667 48m0-5.333c8.836 0 16-7.164 16-16s-7.164-16-16-16-16 7.163-16 16 7.163 16 16 16",
  className: "icon-search_svg__fill"
})));
var _path$9;
function _extends$b() {
  return _extends$b = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$b.apply(null, arguments);
}
var SvgIconSend = (props) => React2.createElement("svg", _extends$b({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$9 || (_path$9 = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M59.795 29.43 7.329 2.979C4.691 1.802 1.76 4.153 2.932 6.798l6.925 18.609a2 2 0 0 0 1.544 1.275l32.273 5.394L11.4 37.47a2 2 0 0 0-1.544 1.275L2.932 57.353c-.879 2.645 1.76 4.997 4.397 3.527l52.466-26.453c2.051-.882 2.051-3.82 0-4.996z",
  className: "icon-send_svg__fill"
})));
var _path$8;
function _extends$a() {
  return _extends$a = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$a.apply(null, arguments);
}
var SvgIconSettingsFilled = (props) => React2.createElement("svg", _extends$a({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$8 || (_path$8 = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 2.667A5.33 5.33 0 0 1 37.333 8v.24A4.4 4.4 0 0 0 40 12.267a4.4 4.4 0 0 0 4.853-.88l.16-.16a5.33 5.33 0 0 1 7.547 0 5.333 5.333 0 0 1 0 7.546l-.16.16a4.4 4.4 0 0 0-.88 4.854V24a4.4 4.4 0 0 0 4.027 2.667H56c2.946 0 5.333 2.387 5.333 5.333S58.946 37.333 56 37.333h-.24A4.4 4.4 0 0 0 51.733 40a4.4 4.4 0 0 0 .88 4.853l.16.16a5.33 5.33 0 0 1 0 7.547 5.333 5.333 0 0 1-7.546 0l-.16-.16a4.4 4.4 0 0 0-4.854-.88 4.4 4.4 0 0 0-2.666 4.027V56a5.333 5.333 0 0 1-10.667 0v-.24A4.4 4.4 0 0 0 24 51.733a4.4 4.4 0 0 0-4.853.88l-.16.16a5.33 5.33 0 0 1-7.547 0 5.333 5.333 0 0 1 0-7.546l.16-.16a4.4 4.4 0 0 0 .88-4.854 4.4 4.4 0 0 0-4.027-2.666H8A5.333 5.333 0 0 1 8 26.88h.24A4.4 4.4 0 0 0 12.267 24a4.4 4.4 0 0 0-.88-4.853l-.16-.16a5.33 5.33 0 0 1 0-7.547 5.333 5.333 0 0 1 7.546 0l.16.16a4.4 4.4 0 0 0 4.854.88H24a4.4 4.4 0 0 0 2.667-4.027V8A5.33 5.33 0 0 1 32 2.667M32 24a8 8 0 1 0 0 16 8 8 0 0 0 0-16",
  className: "icon-settings-filled_svg__fill"
})));
var _path$7;
function _extends$9() {
  return _extends$9 = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$9.apply(null, arguments);
}
var SvgIconSlideLeft = (props) => React2.createElement("svg", _extends$9({
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 32 32"
}, props), _path$7 || (_path$7 = React2.createElement("path", {
  d: "M21.943 24.39a1.333 1.333 0 0 1-1.886 1.886l-9.333-9.333a1.333 1.333 0 0 1 0-1.886l9.333-9.333a1.333 1.333 0 1 1 1.886 1.885L13.553 16z",
  className: "icon-slide-left_svg__fill",
  clipRule: "evenodd"
})));
var _path$6;
function _extends$8() {
  return _extends$8 = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$8.apply(null, arguments);
}
var SvgIconSpinner = (props) => React2.createElement("svg", _extends$8({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$6 || (_path$6 = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M32 61.333C48.2 61.333 61.333 48.2 61.333 32S48.2 2.667 32 2.667 2.667 15.8 2.667 32a2.838 2.838 0 1 0 5.678 0C8.344 18.935 18.934 8.344 32 8.344c13.065 0 23.656 10.591 23.656 23.656S45.065 55.656 32 55.656a2.838 2.838 0 1 0 0 5.677",
  className: "icon-spinner_svg__fill"
})));
var _path$5;
function _extends$7() {
  return _extends$7 = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$7.apply(null, arguments);
}
var SvgIconSupergroup = (props) => React2.createElement("svg", _extends$7({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$5 || (_path$5 = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M36.889 43.013c6.608 0 12.121 4.685 12.43 10.734l.014.537V58a2.667 2.667 0 0 1-5.316.311L44 58v-3.716c0-3.07-2.87-5.718-6.636-5.925l-.475-.013H27.11c-3.838 0-6.86 2.525-7.096 5.557l-.015.381V58a2.667 2.667 0 0 1-5.315.311L14.667 58v-3.716c0-6.126 5.324-10.986 11.864-11.26l.58-.011zm18.578-17.291q.401 0 .784.118c4.632 1.426 7.518 4.801 7.736 9.688l.013.594v12.8a2.667 2.667 0 0 1-5.315.311l-.018-.311V36.124c-.002-2.595-1.163-4.171-3.528-5.034l-.104-.037-2.502.002a2.667 2.667 0 0 1-2.648-2.356l-.018-.31a2.67 2.67 0 0 1 2.355-2.65l.311-.017zm-44 0 .31.018a2.666 2.666 0 0 1 2.356 2.648l-.018.311a2.666 2.666 0 0 1-2.648 2.356l-2.51-.002-.119.042c-2.246.85-3.503 2.574-3.505 5.147v12.68l-.018.31A2.666 2.666 0 0 1 0 48.922V36.24l.014-.591c.225-4.874 3.203-8.415 7.712-9.809q.384-.117.788-.118zM32 19.958c5.512 0 10 4.409 10 9.871s-4.488 9.872-10 9.872-10-4.41-10-9.872 4.488-9.871 10-9.871m0 5.333c-2.588 0-4.667 2.043-4.667 4.538s2.08 4.538 4.667 4.538c2.588 0 4.667-2.042 4.667-4.538 0-2.495-2.08-4.538-4.667-4.538M17.333 2.667c5.513 0 10 4.409 10 9.871s-4.487 9.871-10 9.871c-5.512 0-10-4.409-10-9.871s4.488-9.871 10-9.871m29.334 0c5.512 0 10 4.409 10 9.871s-4.488 9.871-10 9.871c-5.513 0-10-4.409-10-9.871s4.487-9.871 10-9.871M17.333 8c-2.587 0-4.666 2.042-4.666 4.538s2.079 4.538 4.666 4.538S22 15.034 22 12.538 19.921 8 17.333 8m29.334 0C44.079 8 42 10.042 42 12.538s2.079 4.538 4.667 4.538 4.666-2.042 4.666-4.538S49.254 8 46.667 8",
  className: "icon-supergroup_svg__fill"
})));
var _path$4;
var _path2;
function _extends$6() {
  return _extends$6 = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$6.apply(null, arguments);
}
var SvgIconThread = (props) => React2.createElement("svg", _extends$6({
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 64 64"
}, props), _path$4 || (_path$4 = React2.createElement("path", {
  d: "M38.824 25.895a2.95 2.95 0 0 1 4.16-.074L57.1 39.378a2.92 2.92 0 0 1 .002 4.213L42.985 57.177a2.95 2.95 0 0 1-4.158-.07 2.92 2.92 0 0 1 .07-4.14l11.928-11.48-11.926-11.451a2.92 2.92 0 0 1-.075-4.14",
  className: "icon-thread_svg__fill",
  clipRule: "evenodd"
})), _path2 || (_path2 = React2.createElement("path", {
  d: "M8.866 6c1.583 0 2.866 1.216 2.866 2.716V25.5c0 7.672 6.846 14.068 15.475 14.068h22.927c1.583 0 2.866 1.216 2.866 2.716S51.717 45 50.134 45H27.207C15.604 45 6 36.35 6 25.5V8.716C6 7.216 7.283 6 8.866 6",
  className: "icon-thread_svg__fill",
  clipRule: "evenodd"
})));
var _path$3;
function _extends$5() {
  return _extends$5 = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$5.apply(null, arguments);
}
var SvgIconThumbnailNone = (props) => React2.createElement("svg", _extends$5({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$3 || (_path$3 = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M34.667 5.333a2.667 2.667 0 0 1 0 5.334H13.333a2.667 2.667 0 0 0-2.666 2.666v37.334c0 1.143.72 2.118 1.73 2.497l28.384-28.383a2.667 2.667 0 0 1 3.771 0l8.781 8.78v-4.228a2.667 2.667 0 0 1 2.498-2.661l.169-.005a2.667 2.667 0 0 1 2.667 2.666v21.334a8 8 0 0 1-8 8H13.33a8 8 0 0 1-7.998-8V13.333a8 8 0 0 1 8-8zm8 25.105L19.77 53.333h30.897a2.667 2.667 0 0 0 2.661-2.498l.005-.168v-9.563zM22.667 16a6.666 6.666 0 1 1 0 13.333 6.666 6.666 0 0 1 0-13.333m0 5.333a1.334 1.334 0 1 0 0 2.667 1.334 1.334 0 0 0 0-2.667M56.78 3.448a2.665 2.665 0 0 1 3.771 0 2.665 2.665 0 0 1 0 3.771l-4.782 4.78 4.782 4.782c.998.998 1.04 2.59.125 3.638l-.125.133a2.665 2.665 0 0 1-3.771 0l-4.782-4.781-4.78 4.781a2.667 2.667 0 0 1-3.638.125l-.133-.125a2.665 2.665 0 0 1 0-3.771L48.228 12l-4.78-4.781a2.667 2.667 0 0 1-.125-3.638l.125-.133a2.665 2.665 0 0 1 3.771 0l4.78 4.78z",
  className: "icon-thumbnail-none_svg__fill"
})));
var _g$1;
function _extends$4() {
  return _extends$4 = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$4.apply(null, arguments);
}
var SvgIconToggleoff = (props) => React2.createElement("svg", _extends$4({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 88 48"
}, props), _g$1 || (_g$1 = React2.createElement("g", {
  fill: "none",
  fillRule: "evenodd"
}, React2.createElement("rect", {
  width: 80,
  height: 40,
  x: 4,
  y: 4,
  fill: "#000",
  className: "icon-toggleoff_svg__fill",
  rx: 20
}), React2.createElement("circle", {
  cx: 24,
  cy: 24,
  r: 12,
  fill: "#FFF"
}), React2.createElement("path", {
  fill: "#FFF",
  d: "M64 4c11.046 0 20 8.954 20 20s-8.954 20-20 20H24C12.954 44 4 35.046 4 24S12.954 4 24 4zm0 2H24C14.059 6 6 14.059 6 24c0 9.764 7.774 17.712 17.47 17.992L24 42h40c9.941 0 18-8.059 18-18 0-9.764-7.774-17.712-17.47-17.992z"
}), React2.createElement("path", {
  fill: "#000",
  d: "M64 0H24C10.745 0 0 10.745 0 24s10.745 24 24 24h40c13.255 0 24-10.745 24-24S77.255 0 64 0m0 4c11.046 0 20 8.954 20 20s-8.954 20-20 20H24C12.954 44 4 35.046 4 24S12.954 4 24 4z",
  className: "icon-toggleoff_svg__fill"
}))));
var _g;
function _extends$3() {
  return _extends$3 = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$3.apply(null, arguments);
}
var SvgIconToggleon = (props) => React2.createElement("svg", _extends$3({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 88 48"
}, props), _g || (_g = React2.createElement("g", {
  fill: "none",
  fillRule: "evenodd"
}, React2.createElement("rect", {
  width: 80,
  height: 40,
  x: 4,
  y: 4,
  fill: "#000",
  className: "icon-toggleon_svg__fill",
  rx: 20
}), React2.createElement("circle", {
  cx: 64,
  cy: 24,
  r: 12,
  fill: "#FFF"
}), React2.createElement("path", {
  fill: "#FFF",
  d: "M64 4c11.046 0 20 8.954 20 20s-8.954 20-20 20H24C12.954 44 4 35.046 4 24S12.954 4 24 4zm0 2H24C14.059 6 6 14.059 6 24c0 9.764 7.774 17.712 17.47 17.992L24 42h40c9.941 0 18-8.059 18-18 0-9.764-7.774-17.712-17.47-17.992z"
}), React2.createElement("path", {
  fill: "#000",
  d: "M64 0H24C10.745 0 0 10.745 0 24s10.745 24 24 24h40c13.255 0 24-10.745 24-24S77.255 0 64 0m0 4c11.046 0 20 8.954 20 20s-8.954 20-20 20H24C12.954 44 4 35.046 4 24S12.954 4 24 4z",
  className: "icon-toggleon_svg__fill"
}))));
var _path$2;
function _extends$2() {
  return _extends$2 = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$2.apply(null, arguments);
}
var SvgIconUser = (props) => React2.createElement("svg", _extends$2({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 64 64"
}, props), _path$2 || (_path$2 = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M42.667 37.333c7.17 0 13.018 5.66 13.32 12.755l.013.579V56a2.667 2.667 0 0 1-5.315.311L50.667 56v-5.333c0-4.26-3.33-7.743-7.53-7.987l-.47-.013H21.333a8 8 0 0 0-7.986 7.53l-.014.47V56a2.667 2.667 0 0 1-5.316.311L8 56v-5.333c0-7.17 5.66-13.019 12.755-13.321l.578-.013zM32 5.333c7.364 0 13.333 5.97 13.333 13.334S39.363 32 32 32s-13.333-5.97-13.333-13.333S24.637 5.333 32 5.333m0 5.334a8 8 0 1 0 0 16 8 8 0 0 0 0-16",
  className: "icon-user_svg__fill"
})));
var _path$1;
function _extends$1() {
  return _extends$1 = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends$1.apply(null, arguments);
}
var SvgIconFeedbackLike = (props) => React2.createElement("svg", _extends$1({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  fill: "none"
}, props), _path$1 || (_path$1 = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M12.346 5.336v-.001c.405-.523 1.182-.524 1.58-.037.162.2.25.443.25.69v3.678c0 .518.42.938.938.938H18.6c.359 0 .7.179.911.488l.001.001.369.548.003.004c.174.256.226.583.134.895l-1.532 5.316c-.131.459-.559.782-1.044.782h-7.075c-.3 0-.593-.127-.8-.345l-1.13-1.222v-6.647zm-4.73 3.078 3.245-4.223.002-.002c1.125-1.456 3.339-1.521 4.517-.075.421.52.671 1.177.671 1.874v2.74h2.55c.99 0 1.908.496 2.462 1.31l.002.004.368.547.002.002a2.93 2.93 0 0 1 .382 2.475v.003l-1.528 5.302a2.96 2.96 0 0 1-2.847 2.142h-7.075a2.99 2.99 0 0 1-2.166-.935l-.007-.007-.066-.072a2.13 2.13 0 0 1-1.821 1.025H4.192a2.13 2.13 0 0 1-2.13-2.13v-8.3a2.13 2.13 0 0 1 2.13-2.13h2.115c.493 0 .948.168 1.31.45m-3.678 1.68c0-.141.114-.255.254-.255h2.115c.14 0 .254.114.254.255v8.3c0 .14-.114.255-.254.255H4.192a.255.255 0 0 1-.255-.255z",
  clipRule: "evenodd"
})));
var _path;
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n3) {
    for (var e4 = 1; e4 < arguments.length; e4++) {
      var t7 = arguments[e4];
      for (var r4 in t7) ({}).hasOwnProperty.call(t7, r4) && (n3[r4] = t7[r4]);
    }
    return n3;
  }, _extends.apply(null, arguments);
}
var SvgIconFeedbackDislike = (props) => React2.createElement("svg", _extends({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  fill: "none"
}, props), _path || (_path = React2.createElement("path", {
  fill: "#000",
  fillRule: "evenodd",
  d: "M11.654 18.664v.001c-.405.523-1.182.524-1.58.037-.162-.2-.25-.444-.25-.69v-3.678a.94.94 0 0 0-.938-.938H5.4c-.359 0-.7-.179-.911-.488l-.001-.001-.369-.548-.003-.004a1.05 1.05 0 0 1-.134-.895l1.532-5.316c.131-.459.559-.782 1.044-.782h7.075c.3 0 .593.127.8.345l1.13 1.222v6.647zm4.73-3.078-3.245 4.223-.002.002c-1.125 1.456-3.339 1.521-4.517.075a2.98 2.98 0 0 1-.671-1.874v-2.74h-2.55c-.99 0-1.908-.496-2.462-1.31l-.002-.004-.368-.547-.002-.002a2.93 2.93 0 0 1-.382-2.475v-.003L3.711 5.63a2.96 2.96 0 0 1 2.847-2.142h7.075c.823 0 1.608.345 2.166.935l.007.007.066.072a2.13 2.13 0 0 1 1.821-1.025h2.115a2.13 2.13 0 0 1 2.13 2.13v8.3a2.13 2.13 0 0 1-2.13 2.13h-2.115a2.12 2.12 0 0 1-1.31-.45m3.678-1.68c0 .141-.114.255-.254.255h-2.115a.255.255 0 0 1-.255-.255v-8.3c0-.14.115-.255.255-.255h2.115c.14 0 .255.114.255.255z",
  clipRule: "evenodd"
})));
function changeTypeToIconComponent(type) {
  switch (type) {
    case Types.ADD:
      return import_react19.default.createElement(SvgIconAdd, null);
    case Types.ARROW_LEFT:
      return import_react19.default.createElement(SvgIconArrowLeft, null);
    case Types.ATTACH:
      return import_react19.default.createElement(SvgIconAttach, null);
    case Types.AUDIO_ON_LINED:
      return import_react19.default.createElement(SvgIconAudioOnLined, null);
    case Types.BAN:
      return import_react19.default.createElement(SvgIconBan, null);
    case Types.BROADCAST:
      return import_react19.default.createElement(SvgIconBroadcast, null);
    case Types.CAMERA:
      return import_react19.default.createElement(SvgIconCamera, null);
    case Types.CHANNELS:
      return import_react19.default.createElement(SvgIconChannels, null);
    case Types.CHAT:
      return import_react19.default.createElement(SvgIconChat, null);
    case Types.CHAT_FILLED:
      return import_react19.default.createElement(SvgIconChatFilled, null);
    case Types.CHEVRON_DOWN:
      return import_react19.default.createElement(SvgIconChevronDown, null);
    case Types.CHEVRON_RIGHT:
      return import_react19.default.createElement(SvgIconChevronRight, null);
    case Types.CLOSE:
      return import_react19.default.createElement(SvgIconClose, null);
    case Types.COLLAPSE:
      return import_react19.default.createElement(SvgIconCollapse, null);
    case Types.COPY:
      return import_react19.default.createElement(SvgIconCopy, null);
    case Types.CREATE:
      return import_react19.default.createElement(SvgIconCreate, null);
    case Types.DELETE:
      return import_react19.default.createElement(SvgIconDelete, null);
    case Types.DISCONNECTED:
      return import_react19.default.createElement(SvgIconDisconnected, null);
    case Types.DOCUMENT:
      return import_react19.default.createElement(SvgIconDocument, null);
    case Types.DONE:
      return import_react19.default.createElement(SvgIconDone, null);
    case Types.DONE_ALL:
      return import_react19.default.createElement(SvgIconDoneAll, null);
    case Types.DOWNLOAD:
      return import_react19.default.createElement(SvgIconDownload, null);
    case Types.EDIT:
      return import_react19.default.createElement(SvgIconEdit, null);
    case Types.EMOJI_MORE:
      return import_react19.default.createElement(SvgIconEmojiMore, null);
    case Types.ERROR:
      return import_react19.default.createElement(SvgIconError, null);
    case Types.EXPAND:
      return import_react19.default.createElement(SvgIconExpand, null);
    case Types.FILE_AUDIO:
      return import_react19.default.createElement(SvgIconFileAudio, null);
    case Types.FILE_DOCUMENT:
      return import_react19.default.createElement(SvgIconFileDocument, null);
    case Types.FREEZE:
      return import_react19.default.createElement(SvgIconFreeze, null);
    case Types.GIF:
      return import_react19.default.createElement(SvgIconGif, null);
    case Types.INFO:
      return import_react19.default.createElement(SvgIconInfo, null);
    case Types.LEAVE:
      return import_react19.default.createElement(SvgIconLeave, null);
    case Types.MEMBERS:
      return import_react19.default.createElement(SvgIconMembers, null);
    case Types.MESSAGE:
      return import_react19.default.createElement(SvgIconMessage, null);
    case Types.MODERATIONS:
      return import_react19.default.createElement(SvgIconModerations, null);
    case Types.MORE:
      return import_react19.default.createElement(SvgIconMore, null);
    case Types.MUTE:
      return import_react19.default.createElement(SvgIconMute, null);
    case Types.NOTIFICATIONS:
      return import_react19.default.createElement(SvgIconNotifications, null);
    case Types.NOTIFICATIONS_OFF_FILLED:
      return import_react19.default.createElement(SvgIconNotificationsOffFilled, null);
    case Types.OPERATOR:
      return import_react19.default.createElement(SvgIconOperator, null);
    case Types.PHOTO:
      return import_react19.default.createElement(SvgIconPhoto, null);
    case Types.PLAY:
      return import_react19.default.createElement(SvgIconPlay, null);
    case Types.PLUS:
      return import_react19.default.createElement(SvgIconPlus, null);
    case Types.QUESTION:
      return import_react19.default.createElement(SvgIconQuestion, null);
    case Types.REFRESH:
      return import_react19.default.createElement(SvgIconRefresh, null);
    case Types.REMOVE:
      return import_react19.default.createElement(SvgIconRemove, null);
    case Types.REPLY:
      return import_react19.default.createElement(SvgIconReplyFilled, null);
    case Types.SEARCH:
      return import_react19.default.createElement(SvgIconSearch, null);
    case Types.SEND:
      return import_react19.default.createElement(SvgIconSend, null);
    case Types.SETTINGS_FILLED:
      return import_react19.default.createElement(SvgIconSettingsFilled, null);
    case Types.SLIDE_LEFT:
      return import_react19.default.createElement(SvgIconSlideLeft, null);
    case Types.SPINNER:
      return import_react19.default.createElement(SvgIconSpinner, null);
    case Types.SUPERGROUP:
      return import_react19.default.createElement(SvgIconSupergroup, null);
    case Types.THREAD:
      return import_react19.default.createElement(SvgIconThread, null);
    case Types.THUMBNAIL_NONE:
      return import_react19.default.createElement(SvgIconThumbnailNone, null);
    case Types.TOGGLE_OFF:
      return import_react19.default.createElement(SvgIconToggleoff, null);
    case Types.TOGGLE_ON:
      return import_react19.default.createElement(SvgIconToggleon, null);
    case Types.USER:
      return import_react19.default.createElement(SvgIconUser, null);
    case Types.FEEDBACK_LIKE:
      return import_react19.default.createElement(SvgIconFeedbackLike, null);
    case Types.FEEDBACK_DISLIKE:
      return import_react19.default.createElement(SvgIconFeedbackDislike, null);
    default:
      return "icon";
  }
}
function Icon(_a3) {
  var _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, type = _a3.type, _c = _a3.fillColor, fillColor = _c === void 0 ? Colors2.DEFAULT : _c, _d = _a3.width, width = _d === void 0 ? 26 : _d, _e3 = _a3.height, height = _e3 === void 0 ? 26 : _e3, _f = _a3.onClick, onClick = _f === void 0 ? noop : _f, _g2 = _a3.children, children = _g2 === void 0 ? null : _g2, testID = _a3.testID;
  var iconStyle = {
    width: typeof width === "string" ? width : "".concat(width, "px"),
    minWidth: typeof width === "string" ? width : "".concat(width, "px"),
    height: typeof height === "string" ? height : "".concat(height, "px"),
    minHeight: typeof height === "string" ? height : "".concat(height, "px")
  };
  return import_react19.default.createElement("div", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
    "sendbird-icon",
    changeTypeToIconClassName(type),
    changeColorToClassName2(fillColor)
  ], false).join(" "), "data-testid": testID, role: "button", onClick, onKeyDown: onClick, tabIndex: 0, style: iconStyle }, children || changeTypeToIconComponent(type));
}
var IconTypes = Types;
var IconColors = Colors2;

// node_modules/css-vars-ponyfill/dist/css-vars-ponyfill.esm.js
function _extends2() {
  _extends2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i4 = 1; i4 < arguments.length; i4++) {
      var source = arguments[i4];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
function getUrls(urls) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var settings = {
    mimeType: options.mimeType || null,
    onBeforeSend: options.onBeforeSend || Function.prototype,
    onSuccess: options.onSuccess || Function.prototype,
    onError: options.onError || Function.prototype,
    onComplete: options.onComplete || Function.prototype
  };
  var urlArray = Array.isArray(urls) ? urls : [urls];
  var urlQueue = Array.apply(null, Array(urlArray.length)).map(function(x2) {
    return null;
  });
  function isValidCss(text2) {
    var isString = typeof text2 === "string";
    var isHTML = isString && text2.trim().charAt(0) === "<";
    return isString && !isHTML;
  }
  function onError2(xhr, urlIndex) {
    settings.onError(xhr, urlArray[urlIndex], urlIndex);
  }
  function onSuccess2(responseText, urlIndex) {
    var returnVal = settings.onSuccess(responseText, urlArray[urlIndex], urlIndex);
    responseText = returnVal === false ? "" : returnVal || responseText;
    urlQueue[urlIndex] = responseText;
    if (urlQueue.indexOf(null) === -1) {
      settings.onComplete(urlQueue);
    }
  }
  var parser2 = document.createElement("a");
  urlArray.forEach(function(url, i4) {
    parser2.setAttribute("href", url);
    parser2.href = String(parser2.href);
    var isIElte9 = Boolean(document.all && !window.atob);
    var isIElte9CORS = isIElte9 && parser2.host.split(":")[0] !== location.host.split(":")[0];
    if (isIElte9CORS) {
      var isSameProtocol = parser2.protocol === location.protocol;
      if (isSameProtocol) {
        var xdr = new XDomainRequest();
        xdr.open("GET", url);
        xdr.timeout = 0;
        xdr.onprogress = Function.prototype;
        xdr.ontimeout = Function.prototype;
        xdr.onload = function() {
          var text2 = xdr.responseText;
          if (isValidCss(text2)) {
            onSuccess2(text2, i4);
          } else {
            onError2(xdr, i4);
          }
        };
        xdr.onerror = function(err) {
          onError2(xdr, i4);
        };
        setTimeout(function() {
          xdr.send();
        }, 0);
      } else {
        console.warn("Internet Explorer 9 Cross-Origin (CORS) requests must use the same protocol (".concat(url, ")"));
        onError2(null, i4);
      }
    } else {
      var xhr = new XMLHttpRequest();
      xhr.open("GET", url);
      if (settings.mimeType && xhr.overrideMimeType) {
        xhr.overrideMimeType(settings.mimeType);
      }
      settings.onBeforeSend(xhr, url, i4);
      xhr.onreadystatechange = function() {
        if (xhr.readyState === 4) {
          var text2 = xhr.responseText;
          if (xhr.status < 400 && isValidCss(text2)) {
            onSuccess2(text2, i4);
          } else if (xhr.status === 0 && isValidCss(text2)) {
            onSuccess2(text2, i4);
          } else {
            onError2(xhr, i4);
          }
        }
      };
      xhr.send();
    }
  });
}
function getCssData(options) {
  var regex2 = {
    cssComments: /\/\*[\s\S]+?\*\//g,
    cssImports: /(?:@import\s*)(?:url\(\s*)?(?:['"])([^'"]*)(?:['"])(?:\s*\))?(?:[^;]*;)/g
  };
  var settings = {
    rootElement: options.rootElement || document,
    include: options.include || 'style,link[rel="stylesheet"]',
    exclude: options.exclude || null,
    filter: options.filter || null,
    skipDisabled: options.skipDisabled !== false,
    useCSSOM: options.useCSSOM || false,
    onBeforeSend: options.onBeforeSend || Function.prototype,
    onSuccess: options.onSuccess || Function.prototype,
    onError: options.onError || Function.prototype,
    onComplete: options.onComplete || Function.prototype
  };
  var sourceNodes = Array.apply(null, settings.rootElement.querySelectorAll(settings.include)).filter(function(node) {
    return !matchesSelector(node, settings.exclude);
  });
  var cssArray = Array.apply(null, Array(sourceNodes.length)).map(function(x2) {
    return null;
  });
  function handleComplete() {
    var isComplete = cssArray.indexOf(null) === -1;
    if (isComplete) {
      cssArray.reduce(function(skipIndices, value, i4) {
        if (value === "") {
          skipIndices.push(i4);
        }
        return skipIndices;
      }, []).reverse().forEach(function(skipIndex) {
        return [sourceNodes, cssArray].forEach(function(arr) {
          return arr.splice(skipIndex, 1);
        });
      });
      var cssText = cssArray.join("");
      settings.onComplete(cssText, cssArray, sourceNodes);
    }
  }
  function handleSuccess(cssText, cssIndex, node, sourceUrl) {
    var returnVal = settings.onSuccess(cssText, node, sourceUrl);
    cssText = returnVal !== void 0 && Boolean(returnVal) === false ? "" : returnVal || cssText;
    resolveImports(cssText, node, sourceUrl, function(resolvedCssText, errorData) {
      if (cssArray[cssIndex] === null) {
        errorData.forEach(function(data) {
          return settings.onError(data.xhr, node, data.url);
        });
        if (!settings.filter || settings.filter.test(resolvedCssText)) {
          cssArray[cssIndex] = resolvedCssText;
        } else {
          cssArray[cssIndex] = "";
        }
        handleComplete();
      }
    });
  }
  function parseImportData(cssText, baseUrl) {
    var ignoreRules = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
    var importData = {};
    importData.rules = (cssText.replace(regex2.cssComments, "").match(regex2.cssImports) || []).filter(function(rule) {
      return ignoreRules.indexOf(rule) === -1;
    });
    importData.urls = importData.rules.map(function(rule) {
      return rule.replace(regex2.cssImports, "$1");
    });
    importData.absoluteUrls = importData.urls.map(function(url) {
      return getFullUrl$1(url, baseUrl);
    });
    importData.absoluteRules = importData.rules.map(function(rule, i4) {
      var oldUrl = importData.urls[i4];
      var newUrl = getFullUrl$1(importData.absoluteUrls[i4], baseUrl);
      return rule.replace(oldUrl, newUrl);
    });
    return importData;
  }
  function resolveImports(cssText, node, baseUrl, callbackFn) {
    var __errorData = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : [];
    var __errorRules = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : [];
    var importData = parseImportData(cssText, baseUrl, __errorRules);
    if (importData.rules.length) {
      getUrls(importData.absoluteUrls, {
        onBeforeSend: function onBeforeSend2(xhr, url, urlIndex) {
          settings.onBeforeSend(xhr, node, url);
        },
        onSuccess: function onSuccess2(cssText2, url, urlIndex) {
          var returnVal = settings.onSuccess(cssText2, node, url);
          cssText2 = returnVal === false ? "" : returnVal || cssText2;
          var responseImportData = parseImportData(cssText2, url, __errorRules);
          responseImportData.rules.forEach(function(rule, i4) {
            cssText2 = cssText2.replace(rule, responseImportData.absoluteRules[i4]);
          });
          return cssText2;
        },
        onError: function onError2(xhr, url, urlIndex) {
          __errorData.push({
            xhr,
            url
          });
          __errorRules.push(importData.rules[urlIndex]);
          resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);
        },
        onComplete: function onComplete2(responseArray) {
          responseArray.forEach(function(importText, i4) {
            cssText = cssText.replace(importData.rules[i4], importText);
          });
          resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);
        }
      });
    } else {
      callbackFn(cssText, __errorData);
    }
  }
  if (sourceNodes.length) {
    sourceNodes.forEach(function(node, i4) {
      var linkHref = node.getAttribute("href");
      var linkRel = node.getAttribute("rel");
      var isLink = node.nodeName.toLowerCase() === "link" && linkHref && linkRel && linkRel.toLowerCase().indexOf("stylesheet") !== -1;
      var isSkip = settings.skipDisabled === false ? false : node.disabled;
      var isStyle = node.nodeName.toLowerCase() === "style";
      if (isLink && !isSkip) {
        var isURIScheme = linkHref.indexOf("data:text/css") !== -1;
        if (isURIScheme) {
          var cssText = decodeURIComponent(linkHref.substring(linkHref.indexOf(",") + 1));
          if (settings.useCSSOM) {
            cssText = Array.apply(null, node.sheet.cssRules).map(function(rule) {
              return rule.cssText;
            }).join("");
          }
          handleSuccess(cssText, i4, node, location.href);
        } else {
          getUrls(linkHref, {
            mimeType: "text/css",
            onBeforeSend: function onBeforeSend2(xhr, url, urlIndex) {
              settings.onBeforeSend(xhr, node, url);
            },
            onSuccess: function onSuccess2(cssText2, url, urlIndex) {
              var sourceUrl = getFullUrl$1(linkHref);
              handleSuccess(cssText2, i4, node, sourceUrl);
            },
            onError: function onError2(xhr, url, urlIndex) {
              cssArray[i4] = "";
              settings.onError(xhr, node, url);
              handleComplete();
            }
          });
        }
      } else if (isStyle && !isSkip) {
        var _cssText = node.textContent;
        if (settings.useCSSOM) {
          _cssText = Array.apply(null, node.sheet.cssRules).map(function(rule) {
            return rule.cssText;
          }).join("");
        }
        handleSuccess(_cssText, i4, node, location.href);
      } else {
        cssArray[i4] = "";
        handleComplete();
      }
    });
  } else {
    settings.onComplete("", []);
  }
}
function getFullUrl$1(url, base) {
  var d5 = document.implementation.createHTMLDocument("");
  var b6 = d5.createElement("base");
  var a5 = d5.createElement("a");
  d5.head.appendChild(b6);
  d5.body.appendChild(a5);
  b6.href = base || document.baseURI || (document.querySelector("base") || {}).href || location.href;
  a5.href = url;
  return a5.href;
}
function matchesSelector(elm, selector) {
  var matches = elm.matches || elm.matchesSelector || elm.webkitMatchesSelector || elm.mozMatchesSelector || elm.msMatchesSelector || elm.oMatchesSelector;
  return matches.call(elm, selector);
}
var balancedMatch = balanced;
function balanced(a5, b6, str) {
  if (a5 instanceof RegExp) a5 = maybeMatch(a5, str);
  if (b6 instanceof RegExp) b6 = maybeMatch(b6, str);
  var r4 = range(a5, b6, str);
  return r4 && {
    start: r4[0],
    end: r4[1],
    pre: str.slice(0, r4[0]),
    body: str.slice(r4[0] + a5.length, r4[1]),
    post: str.slice(r4[1] + b6.length)
  };
}
function maybeMatch(reg, str) {
  var m5 = str.match(reg);
  return m5 ? m5[0] : null;
}
balanced.range = range;
function range(a5, b6, str) {
  var begs, beg, left, right, result;
  var ai2 = str.indexOf(a5);
  var bi2 = str.indexOf(b6, ai2 + 1);
  var i4 = ai2;
  if (ai2 >= 0 && bi2 > 0) {
    if (a5 === b6) {
      return [ai2, bi2];
    }
    begs = [];
    left = str.length;
    while (i4 >= 0 && !result) {
      if (i4 == ai2) {
        begs.push(i4);
        ai2 = str.indexOf(a5, i4 + 1);
      } else if (begs.length == 1) {
        result = [begs.pop(), bi2];
      } else {
        beg = begs.pop();
        if (beg < left) {
          left = beg;
          right = bi2;
        }
        bi2 = str.indexOf(b6, i4 + 1);
      }
      i4 = ai2 < bi2 && ai2 >= 0 ? ai2 : bi2;
    }
    if (begs.length) {
      result = [left, right];
    }
  }
  return result;
}
function parseCss(css) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var defaults2 = {
    preserveStatic: true,
    removeComments: false
  };
  var settings = _extends2({}, defaults2, options);
  var errors = [];
  function error(msg) {
    throw new Error("CSS parse error: ".concat(msg));
  }
  function match3(re2) {
    var m5 = re2.exec(css);
    if (m5) {
      css = css.slice(m5[0].length);
      return m5;
    }
  }
  function open() {
    return match3(/^{\s*/);
  }
  function close() {
    return match3(/^}/);
  }
  function whitespace() {
    match3(/^\s*/);
  }
  function comment() {
    whitespace();
    if (css[0] !== "/" || css[1] !== "*") {
      return;
    }
    var i4 = 2;
    while (css[i4] && (css[i4] !== "*" || css[i4 + 1] !== "/")) {
      i4++;
    }
    if (!css[i4]) {
      return error("end of comment is missing");
    }
    var str = css.slice(2, i4);
    css = css.slice(i4 + 2);
    return {
      type: "comment",
      comment: str
    };
  }
  function comments() {
    var cmnts = [];
    var c4;
    while (c4 = comment()) {
      cmnts.push(c4);
    }
    return settings.removeComments ? [] : cmnts;
  }
  function selector() {
    whitespace();
    while (css[0] === "}") {
      error("extra closing bracket");
    }
    var m5 = match3(/^(("(?:\\"|[^"])*"|'(?:\\'|[^'])*'|[^{])+)/);
    if (m5) {
      var _selector = m5[0].trim();
      var selectorItems;
      var hasComment = /\/\*/.test(_selector);
      if (hasComment) {
        _selector = _selector.replace(/\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*\/+/g, "");
      }
      var hasCommaInQuotes = /["']\w*,\w*["']/.test(_selector);
      if (hasCommaInQuotes) {
        _selector = _selector.replace(/"(?:\\"|[^"])*"|'(?:\\'|[^'])*'/g, function(m6) {
          return m6.replace(/,/g, "‌");
        });
      }
      var hasMultipleSelectors = /,/.test(_selector);
      if (hasMultipleSelectors) {
        selectorItems = _selector.split(/\s*(?![^(]*\)),\s*/);
      } else {
        selectorItems = [_selector];
      }
      if (hasCommaInQuotes) {
        selectorItems = selectorItems.map(function(s6) {
          return s6.replace(/\u200C/g, ",");
        });
      }
      return selectorItems;
    }
  }
  function declaration() {
    if (css[0] === "@") {
      return at_rule();
    }
    match3(/^([;\s]*)+/);
    var comment_regexp = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g;
    var prop = match3(/^(\*?[-#/*\\\w.]+(\[[0-9a-z_-]+\])?)\s*/);
    if (!prop) {
      return;
    }
    prop = prop[0].trim();
    if (!match3(/^:\s*/)) {
      return error("property missing ':'");
    }
    var val = match3(/^((?:\/\*.*?\*\/|'(?:\\'|.)*?'|"(?:\\"|.)*?"|\((\s*'(?:\\'|.)*?'|"(?:\\"|.)*?"|[^)]*?)\s*\)|[^};])+)/);
    var ret = {
      type: "declaration",
      property: prop.replace(comment_regexp, ""),
      value: val ? val[0].replace(comment_regexp, "").trim() : ""
    };
    match3(/^[;\s]*/);
    return ret;
  }
  function declarations() {
    if (!open()) {
      return error("missing '{'");
    }
    var d5;
    var decls = comments();
    while (d5 = declaration()) {
      decls.push(d5);
      decls = decls.concat(comments());
    }
    if (!close()) {
      return error("missing '}'");
    }
    return decls;
  }
  function keyframe() {
    whitespace();
    var vals = [];
    var m5;
    while (m5 = match3(/^((\d+\.\d+|\.\d+|\d+)%?|[a-z]+)\s*/)) {
      vals.push(m5[1]);
      match3(/^,\s*/);
    }
    if (vals.length) {
      return {
        type: "keyframe",
        values: vals,
        declarations: declarations()
      };
    }
  }
  function at_keyframes() {
    var m5 = match3(/^@([-\w]+)?keyframes\s*/);
    if (!m5) {
      return;
    }
    var vendor = m5[1];
    m5 = match3(/^([-\w]+)\s*/);
    if (!m5) {
      return error("@keyframes missing name");
    }
    var name = m5[1];
    if (!open()) {
      return error("@keyframes missing '{'");
    }
    var frame;
    var frames = comments();
    while (frame = keyframe()) {
      frames.push(frame);
      frames = frames.concat(comments());
    }
    if (!close()) {
      return error("@keyframes missing '}'");
    }
    return {
      type: "keyframes",
      name,
      vendor,
      keyframes: frames
    };
  }
  function at_page() {
    var m5 = match3(/^@page */);
    if (m5) {
      var sel = selector() || [];
      return {
        type: "page",
        selectors: sel,
        declarations: declarations()
      };
    }
  }
  function at_page_margin_box() {
    var m5 = match3(/@(top|bottom|left|right)-(left|center|right|top|middle|bottom)-?(corner)?\s*/);
    if (m5) {
      var name = "".concat(m5[1], "-").concat(m5[2]) + (m5[3] ? "-".concat(m5[3]) : "");
      return {
        type: "page-margin-box",
        name,
        declarations: declarations()
      };
    }
  }
  function at_fontface() {
    var m5 = match3(/^@font-face\s*/);
    if (m5) {
      return {
        type: "font-face",
        declarations: declarations()
      };
    }
  }
  function at_supports() {
    var m5 = match3(/^@supports *([^{]+)/);
    if (m5) {
      return {
        type: "supports",
        supports: m5[1].trim(),
        rules: rules()
      };
    }
  }
  function at_host() {
    var m5 = match3(/^@host\s*/);
    if (m5) {
      return {
        type: "host",
        rules: rules()
      };
    }
  }
  function at_media() {
    var m5 = match3(/^@media([^{]+)*/);
    if (m5) {
      return {
        type: "media",
        media: (m5[1] || "").trim(),
        rules: rules()
      };
    }
  }
  function at_custom_m() {
    var m5 = match3(/^@custom-media\s+(--[^\s]+)\s*([^{;]+);/);
    if (m5) {
      return {
        type: "custom-media",
        name: m5[1].trim(),
        media: m5[2].trim()
      };
    }
  }
  function at_document() {
    var m5 = match3(/^@([-\w]+)?document *([^{]+)/);
    if (m5) {
      return {
        type: "document",
        document: m5[2].trim(),
        vendor: m5[1] ? m5[1].trim() : null,
        rules: rules()
      };
    }
  }
  function at_x() {
    var m5 = match3(/^@(import|charset|namespace)\s*([^;]+);/);
    if (m5) {
      return {
        type: m5[1],
        name: m5[2].trim()
      };
    }
  }
  function at_rule() {
    whitespace();
    if (css[0] === "@") {
      var ret = at_x() || at_fontface() || at_media() || at_keyframes() || at_supports() || at_document() || at_custom_m() || at_host() || at_page() || at_page_margin_box();
      if (ret && !settings.preserveStatic) {
        var hasVarFunc = false;
        if (ret.declarations) {
          hasVarFunc = ret.declarations.some(function(decl) {
            return /var\(/.test(decl.value);
          });
        } else {
          var arr = ret.keyframes || ret.rules || [];
          hasVarFunc = arr.some(function(obj) {
            return (obj.declarations || []).some(function(decl) {
              return /var\(/.test(decl.value);
            });
          });
        }
        return hasVarFunc ? ret : {};
      }
      return ret;
    }
  }
  function rule() {
    if (!settings.preserveStatic) {
      var balancedMatch$1 = balancedMatch("{", "}", css);
      if (balancedMatch$1) {
        var hasVarDecl = /:(?:root|host)(?![.:#(])/.test(balancedMatch$1.pre) && /--\S*\s*:/.test(balancedMatch$1.body);
        var hasVarFunc = /var\(/.test(balancedMatch$1.body);
        if (!hasVarDecl && !hasVarFunc) {
          css = css.slice(balancedMatch$1.end + 1);
          return {};
        }
      }
    }
    var sel = selector() || [];
    var decls = settings.preserveStatic ? declarations() : declarations().filter(function(decl) {
      var hasVarDecl2 = sel.some(function(s6) {
        return /:(?:root|host)(?![.:#(])/.test(s6);
      }) && /^--\S/.test(decl.property);
      var hasVarFunc2 = /var\(/.test(decl.value);
      return hasVarDecl2 || hasVarFunc2;
    });
    if (!sel.length) {
      error("selector missing");
    }
    return {
      type: "rule",
      selectors: sel,
      declarations: decls
    };
  }
  function rules(core) {
    if (!core && !open()) {
      return error("missing '{'");
    }
    var node;
    var rules2 = comments();
    while (css.length && (core || css[0] !== "}") && (node = at_rule() || rule())) {
      if (node.type) {
        rules2.push(node);
      }
      rules2 = rules2.concat(comments());
    }
    if (!core && !close()) {
      return error("missing '}'");
    }
    return rules2;
  }
  return {
    type: "stylesheet",
    stylesheet: {
      rules: rules(true),
      errors
    }
  };
}
function parseVars(cssData) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var defaults2 = {
    parseHost: false,
    store: {},
    onWarning: function onWarning2() {
    }
  };
  var settings = _extends2({}, defaults2, options);
  var reVarDeclSelectors = new RegExp(":".concat(settings.parseHost ? "host" : "root", "$"));
  if (typeof cssData === "string") {
    cssData = parseCss(cssData, settings);
  }
  cssData.stylesheet.rules.forEach(function(rule) {
    if (rule.type !== "rule" || !rule.selectors.some(function(s6) {
      return reVarDeclSelectors.test(s6);
    })) {
      return;
    }
    rule.declarations.forEach(function(decl, i4) {
      var prop = decl.property;
      var value = decl.value;
      if (prop && prop.indexOf("--") === 0) {
        settings.store[prop] = value;
      }
    });
  });
  return settings.store;
}
function stringifyCss(tree) {
  var delim = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
  var cb = arguments.length > 2 ? arguments[2] : void 0;
  var renderMethods = {
    charset: function charset(node) {
      return "@charset " + node.name + ";";
    },
    comment: function comment(node) {
      return node.comment.indexOf("__CSSVARSPONYFILL") === 0 ? "/*" + node.comment + "*/" : "";
    },
    "custom-media": function customMedia(node) {
      return "@custom-media " + node.name + " " + node.media + ";";
    },
    declaration: function declaration(node) {
      return node.property + ":" + node.value + ";";
    },
    document: function document2(node) {
      return "@" + (node.vendor || "") + "document " + node.document + "{" + visit(node.rules) + "}";
    },
    "font-face": function fontFace(node) {
      return "@font-face{" + visit(node.declarations) + "}";
    },
    host: function host(node) {
      return "@host{" + visit(node.rules) + "}";
    },
    import: function _import(node) {
      return "@import " + node.name + ";";
    },
    keyframe: function keyframe(node) {
      return node.values.join(",") + "{" + visit(node.declarations) + "}";
    },
    keyframes: function keyframes(node) {
      return "@" + (node.vendor || "") + "keyframes " + node.name + "{" + visit(node.keyframes) + "}";
    },
    media: function media(node) {
      return "@media " + node.media + "{" + visit(node.rules) + "}";
    },
    namespace: function namespace(node) {
      return "@namespace " + node.name + ";";
    },
    page: function page(node) {
      return "@page " + (node.selectors.length ? node.selectors.join(", ") : "") + "{" + visit(node.declarations) + "}";
    },
    "page-margin-box": function pageMarginBox(node) {
      return "@" + node.name + "{" + visit(node.declarations) + "}";
    },
    rule: function rule(node) {
      var decls = node.declarations;
      if (decls.length) {
        return node.selectors.join(",") + "{" + visit(decls) + "}";
      }
    },
    supports: function supports(node) {
      return "@supports " + node.supports + "{" + visit(node.rules) + "}";
    }
  };
  function visit(nodes) {
    var buf = "";
    for (var i4 = 0; i4 < nodes.length; i4++) {
      var n3 = nodes[i4];
      if (cb) {
        cb(n3);
      }
      var txt = renderMethods[n3.type](n3);
      if (txt) {
        buf += txt;
        if (txt.length && n3.selectors) {
          buf += delim;
        }
      }
    }
    return buf;
  }
  return visit(tree.stylesheet.rules);
}
function walkCss(node, fn4) {
  node.rules.forEach(function(rule) {
    if (rule.rules) {
      walkCss(rule, fn4);
      return;
    }
    if (rule.keyframes) {
      rule.keyframes.forEach(function(keyframe) {
        if (keyframe.type === "keyframe") {
          fn4(keyframe.declarations, rule);
        }
      });
      return;
    }
    if (!rule.declarations) {
      return;
    }
    fn4(rule.declarations, node);
  });
}
var VAR_PROP_IDENTIFIER = "--";
var VAR_FUNC_IDENTIFIER = "var";
function transformCss(cssData) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var defaults2 = {
    preserveStatic: true,
    preserveVars: false,
    variables: {},
    onWarning: function onWarning2() {
    }
  };
  var settings = _extends2({}, defaults2, options);
  if (typeof cssData === "string") {
    cssData = parseCss(cssData, settings);
  }
  walkCss(cssData.stylesheet, function(declarations, node) {
    for (var i4 = 0; i4 < declarations.length; i4++) {
      var decl = declarations[i4];
      var type = decl.type;
      var prop = decl.property;
      var value = decl.value;
      if (type !== "declaration") {
        continue;
      }
      if (!settings.preserveVars && prop && prop.indexOf(VAR_PROP_IDENTIFIER) === 0) {
        declarations.splice(i4, 1);
        i4--;
        continue;
      }
      if (value.indexOf(VAR_FUNC_IDENTIFIER + "(") !== -1) {
        var resolvedValue = resolveValue(value, settings);
        if (resolvedValue !== decl.value) {
          resolvedValue = fixNestedCalc(resolvedValue);
          if (!settings.preserveVars) {
            decl.value = resolvedValue;
          } else {
            declarations.splice(i4, 0, {
              type,
              property: prop,
              value: resolvedValue
            });
            i4++;
          }
        }
      }
    }
  });
  return stringifyCss(cssData);
}
function fixNestedCalc(value) {
  var reCalcVal = /calc\(([^)]+)\)/g;
  (value.match(reCalcVal) || []).forEach(function(match3) {
    var newVal = "calc".concat(match3.split("calc").join(""));
    value = value.replace(match3, newVal);
  });
  return value;
}
function resolveValue(value) {
  var settings = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var __recursiveFallback = arguments.length > 2 ? arguments[2] : void 0;
  if (value.indexOf("var(") === -1) {
    return value;
  }
  var valueData = balancedMatch("(", ")", value);
  function resolveFunc(value2) {
    var name = value2.split(",")[0].replace(/[\s\n\t]/g, "");
    var fallback = (value2.match(/(?:\s*,\s*){1}(.*)?/) || [])[1];
    var match3 = Object.prototype.hasOwnProperty.call(settings.variables, name) ? String(settings.variables[name]) : void 0;
    var replacement = match3 || (fallback ? String(fallback) : void 0);
    var unresolvedFallback = __recursiveFallback || value2;
    if (!match3) {
      settings.onWarning('variable "'.concat(name, '" is undefined'));
    }
    if (replacement && replacement !== "undefined" && replacement.length > 0) {
      return resolveValue(replacement, settings, unresolvedFallback);
    } else {
      return "var(".concat(unresolvedFallback, ")");
    }
  }
  if (!valueData) {
    if (value.indexOf("var(") !== -1) {
      settings.onWarning('missing closing ")" in the value "'.concat(value, '"'));
    }
    return value;
  } else if (valueData.pre.slice(-3) === "var") {
    var isEmptyVarFunc = valueData.body.trim().length === 0;
    if (isEmptyVarFunc) {
      settings.onWarning("var() must contain a non-whitespace string");
      return value;
    } else {
      return valueData.pre.slice(0, -3) + resolveFunc(valueData.body) + resolveValue(valueData.post, settings);
    }
  } else {
    return valueData.pre + "(".concat(resolveValue(valueData.body, settings), ")") + resolveValue(valueData.post, settings);
  }
}
var isBrowser = typeof window !== "undefined";
var isNativeSupport = isBrowser && window.CSS && window.CSS.supports && window.CSS.supports("(--a: 0)");
var counters = {
  group: 0,
  job: 0
};
var defaults = {
  rootElement: isBrowser ? document : null,
  shadowDOM: false,
  include: "style,link[rel=stylesheet]",
  exclude: "",
  variables: {},
  onlyLegacy: true,
  preserveStatic: true,
  preserveVars: false,
  silent: false,
  updateDOM: true,
  updateURLs: true,
  watch: null,
  onBeforeSend: function onBeforeSend() {
  },
  onError: function onError() {
  },
  onWarning: function onWarning() {
  },
  onSuccess: function onSuccess() {
  },
  onComplete: function onComplete() {
  },
  onFinally: function onFinally() {
  }
};
var regex = {
  cssComments: /\/\*[\s\S]+?\*\//g,
  cssKeyframes: /@(?:-\w*-)?keyframes/,
  cssMediaQueries: /@media[^{]+\{([\s\S]+?})\s*}/g,
  cssUrls: /url\((?!['"]?(?:data|http|\/\/):)['"]?([^'")]*)['"]?\)/g,
  cssVarDeclRules: /(?::(?:root|host)(?![.:#(])[\s,]*[^{]*{\s*[^}]*})/g,
  cssVarDecls: /(?:[\s;]*)(-{2}\w[\w-]*)(?:\s*:\s*)([^;]*);/g,
  cssVarFunc: /var\(\s*--[\w-]/,
  cssVars: /(?:(?::(?:root|host)(?![.:#(])[\s,]*[^{]*{\s*[^;]*;*\s*)|(?:var\(\s*))(--[^:)]+)(?:\s*[:)])/
};
var variableStore = {
  dom: {},
  job: {},
  user: {}
};
var cssVarsIsRunning = false;
var cssVarsObserver = null;
var cssVarsSrcNodeCount = 0;
var debounceTimer = null;
var isShadowDOMReady = false;
function cssVars() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var msgPrefix = "cssVars(): ";
  var settings = _extends2({}, defaults, options);
  function handleError(message, sourceNode, xhr, url) {
    if (!settings.silent && window.console) {
      console.error("".concat(msgPrefix).concat(message, "\n"), sourceNode);
    }
    settings.onError(message, sourceNode, xhr, url);
  }
  function handleWarning(message) {
    if (!settings.silent && window.console) {
      console.warn("".concat(msgPrefix).concat(message));
    }
    settings.onWarning(message);
  }
  function handleFinally(hasChanged) {
    settings.onFinally(Boolean(hasChanged), isNativeSupport, getTimeStamp() - settings.__benchmark);
  }
  if (!isBrowser) {
    return;
  }
  if (settings.watch) {
    settings.watch = defaults.watch;
    addMutationObserver(settings);
    cssVars(settings);
    return;
  } else if (settings.watch === false && cssVarsObserver) {
    cssVarsObserver.disconnect();
    cssVarsObserver = null;
  }
  if (!settings.__benchmark) {
    if (cssVarsIsRunning === settings.rootElement) {
      cssVarsDebounced(options);
      return;
    }
    var srcNodes = [].slice.call(settings.rootElement.querySelectorAll('[data-cssvars]:not([data-cssvars="out"])'));
    settings.__benchmark = getTimeStamp();
    settings.exclude = [cssVarsObserver ? '[data-cssvars]:not([data-cssvars=""])' : '[data-cssvars="out"]', "link[disabled]:not([data-cssvars])", settings.exclude].filter(function(selector) {
      return selector;
    }).join(",");
    settings.variables = fixVarNames(settings.variables);
    srcNodes.forEach(function(srcNode) {
      var hasStyleCache = srcNode.nodeName.toLowerCase() === "style" && srcNode.__cssVars.text;
      var hasStyleChanged = hasStyleCache && srcNode.textContent !== srcNode.__cssVars.text;
      if (hasStyleCache && hasStyleChanged) {
        srcNode.sheet && (srcNode.sheet.disabled = false);
        srcNode.setAttribute("data-cssvars", "");
      }
    });
    if (!cssVarsObserver) {
      var outNodes = [].slice.call(settings.rootElement.querySelectorAll('[data-cssvars="out"]'));
      outNodes.forEach(function(outNode) {
        var dataGroup = outNode.getAttribute("data-cssvars-group");
        var srcNode = dataGroup ? settings.rootElement.querySelector('[data-cssvars="src"][data-cssvars-group="'.concat(dataGroup, '"]')) : null;
        if (!srcNode) {
          outNode.parentNode.removeChild(outNode);
        }
      });
      if (cssVarsSrcNodeCount && srcNodes.length < cssVarsSrcNodeCount) {
        cssVarsSrcNodeCount = srcNodes.length;
        variableStore.dom = {};
      }
    }
  }
  if (document.readyState !== "loading") {
    if (isNativeSupport && settings.onlyLegacy) {
      var hasVarChange = false;
      if (settings.updateDOM) {
        var targetElm = settings.rootElement.host || (settings.rootElement === document ? document.documentElement : settings.rootElement);
        Object.keys(settings.variables).forEach(function(key) {
          var varValue = settings.variables[key];
          hasVarChange = hasVarChange || varValue !== getComputedStyle(targetElm).getPropertyValue(key);
          targetElm.style.setProperty(key, varValue);
        });
      }
      handleFinally(hasVarChange);
    } else if (!isShadowDOMReady && (settings.shadowDOM || settings.rootElement.shadowRoot || settings.rootElement.host)) {
      getCssData({
        rootElement: defaults.rootElement,
        include: defaults.include,
        exclude: settings.exclude,
        skipDisabled: false,
        onSuccess: function onSuccess2(cssText, node, url) {
          var isUserDisabled = (node.sheet || {}).disabled && !node.__cssVars;
          if (isUserDisabled) {
            return false;
          }
          cssText = cssText.replace(regex.cssComments, "").replace(regex.cssMediaQueries, "");
          cssText = (cssText.match(regex.cssVarDeclRules) || []).join("");
          return cssText || false;
        },
        onComplete: function onComplete2(cssText, cssArray, nodeArray) {
          parseVars(cssText, {
            store: variableStore.dom,
            onWarning: handleWarning
          });
          isShadowDOMReady = true;
          cssVars(settings);
        }
      });
    } else {
      cssVarsIsRunning = settings.rootElement;
      getCssData({
        rootElement: settings.rootElement,
        include: settings.include,
        exclude: settings.exclude,
        skipDisabled: false,
        onBeforeSend: settings.onBeforeSend,
        onError: function onError2(xhr, node, url) {
          var responseUrl = xhr.responseURL || getFullUrl(url, location.href);
          var statusText = xhr.statusText ? "(".concat(xhr.statusText, ")") : "Unspecified Error" + (xhr.status === 0 ? " (possibly CORS related)" : "");
          var errorMsg = "CSS XHR Error: ".concat(responseUrl, " ").concat(xhr.status, " ").concat(statusText);
          handleError(errorMsg, node, xhr, responseUrl);
        },
        onSuccess: function onSuccess2(cssText, node, url) {
          var isUserDisabled = (node.sheet || {}).disabled && !node.__cssVars;
          if (isUserDisabled) {
            return false;
          }
          var isLink = node.nodeName.toLowerCase() === "link";
          var isStyleImport = node.nodeName.toLowerCase() === "style" && cssText !== node.textContent;
          var returnVal = settings.onSuccess(cssText, node, url);
          cssText = returnVal !== void 0 && Boolean(returnVal) === false ? "" : returnVal || cssText;
          if (settings.updateURLs && (isLink || isStyleImport)) {
            cssText = fixRelativeCssUrls(cssText, url);
          }
          return cssText;
        },
        onComplete: function onComplete2(cssText, cssArray) {
          var nodeArray = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
          var currentVars = _extends2({}, variableStore.dom, variableStore.user);
          var hasVarChange2 = false;
          variableStore.job = {};
          nodeArray.forEach(function(node, i5) {
            var nodeCSS = cssArray[i5];
            node.__cssVars = node.__cssVars || {};
            node.__cssVars.text = nodeCSS;
            if (regex.cssVars.test(nodeCSS)) {
              try {
                var cssTree = parseCss(nodeCSS, {
                  preserveStatic: settings.preserveStatic,
                  removeComments: true
                });
                parseVars(cssTree, {
                  parseHost: Boolean(settings.rootElement.host),
                  store: variableStore.dom,
                  onWarning: handleWarning
                });
                node.__cssVars.tree = cssTree;
              } catch (err) {
                handleError(err.message, node);
              }
            }
          });
          _extends2(variableStore.job, variableStore.dom);
          if (settings.updateDOM) {
            _extends2(variableStore.user, settings.variables);
            _extends2(variableStore.job, variableStore.user);
          } else {
            _extends2(variableStore.job, variableStore.user, settings.variables);
            _extends2(currentVars, settings.variables);
          }
          hasVarChange2 = counters.job > 0 && Boolean(Object.keys(variableStore.job).length > Object.keys(currentVars).length || Boolean(Object.keys(currentVars).length && Object.keys(variableStore.job).some(function(key) {
            return variableStore.job[key] !== currentVars[key];
          })));
          if (hasVarChange2) {
            resetCssNodes(settings.rootElement);
            cssVars(settings);
          } else {
            var outCssArray = [];
            var outNodeArray = [];
            var hasKeyframesWithVars = false;
            if (settings.updateDOM) {
              counters.job++;
            }
            nodeArray.forEach(function(node, i5) {
              var isSkip = !node.__cssVars.tree;
              if (node.__cssVars.tree) {
                try {
                  transformCss(node.__cssVars.tree, _extends2({}, settings, {
                    variables: variableStore.job,
                    onWarning: handleWarning
                  }));
                  var outCss = stringifyCss(node.__cssVars.tree);
                  if (settings.updateDOM) {
                    var nodeCSS = cssArray[i5];
                    var hasCSSVarFunc = regex.cssVarFunc.test(nodeCSS);
                    if (!node.getAttribute("data-cssvars")) {
                      node.setAttribute("data-cssvars", "src");
                    }
                    if (outCss.length && hasCSSVarFunc) {
                      var dataGroup = node.getAttribute("data-cssvars-group") || ++counters.group;
                      var outCssNoSpaces = outCss.replace(/\s/g, "");
                      var outNode = settings.rootElement.querySelector('[data-cssvars="out"][data-cssvars-group="'.concat(dataGroup, '"]')) || document.createElement("style");
                      hasKeyframesWithVars = hasKeyframesWithVars || regex.cssKeyframes.test(outCss);
                      if (settings.preserveStatic) {
                        node.sheet && (node.sheet.disabled = true);
                      }
                      if (!outNode.hasAttribute("data-cssvars")) {
                        outNode.setAttribute("data-cssvars", "out");
                      }
                      if (outCssNoSpaces === node.textContent.replace(/\s/g, "")) {
                        isSkip = true;
                        if (outNode && outNode.parentNode) {
                          node.removeAttribute("data-cssvars-group");
                          outNode.parentNode.removeChild(outNode);
                        }
                      } else if (outCssNoSpaces !== outNode.textContent.replace(/\s/g, "")) {
                        [node, outNode].forEach(function(n3) {
                          n3.setAttribute("data-cssvars-job", counters.job);
                          n3.setAttribute("data-cssvars-group", dataGroup);
                        });
                        outNode.textContent = outCss;
                        outCssArray.push(outCss);
                        outNodeArray.push(outNode);
                        if (!outNode.parentNode) {
                          node.parentNode.insertBefore(outNode, node.nextSibling);
                        }
                      }
                    }
                  } else {
                    if (node.textContent.replace(/\s/g, "") !== outCss) {
                      outCssArray.push(outCss);
                    }
                  }
                } catch (err) {
                  handleError(err.message, node);
                }
              }
              if (isSkip) {
                node.setAttribute("data-cssvars", "skip");
              }
              if (!node.hasAttribute("data-cssvars-job")) {
                node.setAttribute("data-cssvars-job", counters.job);
              }
            });
            cssVarsSrcNodeCount = settings.rootElement.querySelectorAll('[data-cssvars]:not([data-cssvars="out"])').length;
            if (settings.shadowDOM) {
              var elms = [].concat(settings.rootElement).concat([].slice.call(settings.rootElement.querySelectorAll("*")));
              for (var i4 = 0, elm; elm = elms[i4]; ++i4) {
                if (elm.shadowRoot && elm.shadowRoot.querySelector("style")) {
                  var shadowSettings = _extends2({}, settings, {
                    rootElement: elm.shadowRoot
                  });
                  cssVars(shadowSettings);
                }
              }
            }
            if (settings.updateDOM && hasKeyframesWithVars) {
              fixKeyframes(settings.rootElement);
            }
            cssVarsIsRunning = false;
            settings.onComplete(outCssArray.join(""), outNodeArray, JSON.parse(JSON.stringify(variableStore.job)), getTimeStamp() - settings.__benchmark);
            handleFinally(outNodeArray.length);
          }
        }
      });
    }
  } else {
    document.addEventListener("DOMContentLoaded", function init(evt) {
      cssVars(options);
      document.removeEventListener("DOMContentLoaded", init);
    });
  }
}
cssVars.reset = function() {
  counters.job = 0;
  counters.group = 0;
  cssVarsIsRunning = false;
  if (cssVarsObserver) {
    cssVarsObserver.disconnect();
    cssVarsObserver = null;
  }
  cssVarsSrcNodeCount = 0;
  debounceTimer = null;
  isShadowDOMReady = false;
  for (var prop in variableStore) {
    variableStore[prop] = {};
  }
};
function addMutationObserver(settings) {
  function isDisabled(node) {
    var isDisabledAttr = isLink(node) && node.hasAttribute("disabled");
    var isDisabledSheet = (node.sheet || {}).disabled;
    return isDisabledAttr || isDisabledSheet;
  }
  function isLink(node) {
    var isStylesheet = node.nodeName.toLowerCase() === "link" && (node.getAttribute("rel") || "").indexOf("stylesheet") !== -1;
    return isStylesheet;
  }
  function isStyle(node) {
    return node.nodeName.toLowerCase() === "style";
  }
  function isValidAttributeMutation(mutation) {
    var isValid3 = false;
    if (mutation.type === "attributes" && isLink(mutation.target) && !isDisabled(mutation.target)) {
      var isEnabledMutation = mutation.attributeName === "disabled";
      var isHrefMutation = mutation.attributeName === "href";
      var isSkipNode = mutation.target.getAttribute("data-cssvars") === "skip";
      var isSrcNode = mutation.target.getAttribute("data-cssvars") === "src";
      if (isEnabledMutation) {
        isValid3 = !isSkipNode && !isSrcNode;
      } else if (isHrefMutation) {
        if (isSkipNode) {
          mutation.target.setAttribute("data-cssvars", "");
        } else if (isSrcNode) {
          resetCssNodes(settings.rootElement, true);
        }
        isValid3 = true;
      }
    }
    return isValid3;
  }
  function isValidStyleTextMutation(mutation) {
    var isValid3 = false;
    if (mutation.type === "childList") {
      var isStyleElm = isStyle(mutation.target);
      var isOutNode = mutation.target.getAttribute("data-cssvars") === "out";
      isValid3 = isStyleElm && !isOutNode;
    }
    return isValid3;
  }
  function isValidAddMutation(mutation) {
    var isValid3 = false;
    if (mutation.type === "childList") {
      isValid3 = [].slice.call(mutation.addedNodes).some(function(node) {
        var isElm = node.nodeType === 1;
        var hasAttr = isElm && node.hasAttribute("data-cssvars");
        var isStyleWithVars = isStyle(node) && regex.cssVars.test(node.textContent);
        var isValid4 = !hasAttr && (isLink(node) || isStyleWithVars);
        return isValid4 && !isDisabled(node);
      });
    }
    return isValid3;
  }
  function isValidRemoveMutation(mutation) {
    var isValid3 = false;
    if (mutation.type === "childList") {
      isValid3 = [].slice.call(mutation.removedNodes).some(function(node) {
        var isElm = node.nodeType === 1;
        var isOutNode = isElm && node.getAttribute("data-cssvars") === "out";
        var isSrcNode = isElm && node.getAttribute("data-cssvars") === "src";
        var isValid4 = isSrcNode;
        if (isSrcNode || isOutNode) {
          var dataGroup = node.getAttribute("data-cssvars-group");
          var orphanNode = settings.rootElement.querySelector('[data-cssvars-group="'.concat(dataGroup, '"]'));
          if (isSrcNode) {
            resetCssNodes(settings.rootElement, true);
          }
          if (orphanNode) {
            orphanNode.parentNode.removeChild(orphanNode);
          }
        }
        return isValid4;
      });
    }
    return isValid3;
  }
  if (!window.MutationObserver) {
    return;
  }
  if (cssVarsObserver) {
    cssVarsObserver.disconnect();
    cssVarsObserver = null;
  }
  cssVarsObserver = new MutationObserver(function(mutations) {
    var hasValidMutation = mutations.some(function(mutation) {
      return isValidAttributeMutation(mutation) || isValidStyleTextMutation(mutation) || isValidAddMutation(mutation) || isValidRemoveMutation(mutation);
    });
    if (hasValidMutation) {
      cssVars(settings);
    }
  });
  cssVarsObserver.observe(document.documentElement, {
    attributes: true,
    attributeFilter: ["disabled", "href"],
    childList: true,
    subtree: true
  });
}
function cssVarsDebounced(settings) {
  var delay = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 100;
  clearTimeout(debounceTimer);
  debounceTimer = setTimeout(function() {
    settings.__benchmark = null;
    cssVars(settings);
  }, delay);
}
function fixKeyframes(rootElement) {
  var animationNameProp = ["animation-name", "-moz-animation-name", "-webkit-animation-name"].filter(function(prop) {
    return getComputedStyle(document.body)[prop];
  })[0];
  if (animationNameProp) {
    var allNodes = [].slice.call(rootElement.querySelectorAll("*"));
    var keyframeNodes = [];
    var nameMarker = "__CSSVARSPONYFILL-KEYFRAMES__";
    for (var i4 = 0, len = allNodes.length; i4 < len; i4++) {
      var node = allNodes[i4];
      var animationName = getComputedStyle(node)[animationNameProp];
      if (animationName !== "none") {
        node.style[animationNameProp] += nameMarker;
        keyframeNodes.push(node);
      }
    }
    void document.body.offsetHeight;
    for (var _i2 = 0, _len = keyframeNodes.length; _i2 < _len; _i2++) {
      var nodeStyle = keyframeNodes[_i2].style;
      nodeStyle[animationNameProp] = nodeStyle[animationNameProp].replace(nameMarker, "");
    }
  }
}
function fixRelativeCssUrls(cssText, baseUrl) {
  var cssUrls = cssText.replace(regex.cssComments, "").match(regex.cssUrls) || [];
  cssUrls.forEach(function(cssUrl) {
    var oldUrl = cssUrl.replace(regex.cssUrls, "$1");
    var newUrl = getFullUrl(oldUrl, baseUrl);
    cssText = cssText.replace(cssUrl, cssUrl.replace(oldUrl, newUrl));
  });
  return cssText;
}
function fixVarNames() {
  var varObj = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var reLeadingHyphens = /^-{2}/;
  return Object.keys(varObj).reduce(function(obj, value) {
    var key = reLeadingHyphens.test(value) ? value : "--".concat(value.replace(/^-+/, ""));
    obj[key] = varObj[value];
    return obj;
  }, {});
}
function getFullUrl(url) {
  var base = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : location.href;
  var d5 = document.implementation.createHTMLDocument("");
  var b6 = d5.createElement("base");
  var a5 = d5.createElement("a");
  d5.head.appendChild(b6);
  d5.body.appendChild(a5);
  b6.href = base;
  a5.href = url;
  return a5.href;
}
function getTimeStamp() {
  return isBrowser && (window.performance || {}).now ? window.performance.now() : (/* @__PURE__ */ new Date()).getTime();
}
function resetCssNodes(rootElement) {
  var resetDOMVariableStore = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var resetNodes = [].slice.call(rootElement.querySelectorAll('[data-cssvars="skip"],[data-cssvars="src"]'));
  resetNodes.forEach(function(node) {
    return node.setAttribute("data-cssvars", "");
  });
  if (resetDOMVariableStore) {
    variableStore.dom = {};
  }
}

// node_modules/@sendbird/uikit-react/chunks/bundle-Bq93DTET.js
var uuidv4 = function() {
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c4) {
    var r4 = Math.random() * 16 | 0;
    var v5 = c4 === "x" ? r4 : r4 & 3 | 8;
    return v5.toString(16);
  });
};

// node_modules/@sendbird/chat/openChannel.js
var Ce3 = function(r4) {
  function a5() {
    var e4 = null !== r4 && r4.apply(this, arguments) || this;
    return e4._channels = /* @__PURE__ */ new Map(), e4._enteredChannelUrls = [], e4;
  }
  return t(a5, r4), Object.defineProperty(a5.prototype, "enteredChannels", { get: function() {
    var e4 = this;
    return this._enteredChannelUrls.map(function(n3) {
      return e4._channels.get(n3);
    }).filter(function(e5) {
      return !!e5;
    });
  }, enumerable: false, configurable: true }), a5.prototype.isEnteredChannel = function(e4) {
    return this._enteredChannelUrls.includes(e4);
  }, a5.prototype.enter = function(e4) {
    this._enteredChannelUrls.indexOf(e4) < 0 && this._enteredChannelUrls.push(e4);
  }, a5.prototype.exit = function(e4) {
    var n3 = this._enteredChannelUrls.indexOf(e4);
    n3 >= 0 && this._enteredChannelUrls.splice(n3, 1);
  }, a5.prototype.exitAll = function() {
    this._enteredChannelUrls = [];
  }, a5.prototype.get = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        return [2, this._channels.get(e4)];
      });
    });
  }, a5.prototype.upsert = function(e4) {
    return r(this, void 0, void 0, function() {
      var n3, r5 = this;
      return s(this, function(t7) {
        return n3 = [], e4.forEach(function(e5) {
          if (r5._channels.has(e5.url)) {
            var t8 = r5._channels.get(e5.url);
            Object.assign(t8, e5), n3.push(t8);
          } else r5._channels.set(e5.url, e5), n3.push(e5);
        }), [2, n3];
      });
    });
  }, a5.prototype.remove = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        return this._channels.delete(e4), this.exit(e4), [2];
      });
    });
  }, a5.prototype.clear = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        return this._channels.clear(), this._enteredChannelUrls = [], [2];
      });
    });
  }, a5;
}(zr);
var ve2 = { channelUrl: void 0, name: void 0, coverUrlOrImage: void 0, data: void 0, customType: void 0, operatorUserIds: void 0, isEphemeral: void 0 };
var _e2 = function(n3) {
  function t7(e4) {
    var t8 = e4.channelUrl, r4 = e4.isInternalCall, a5 = n3.call(this) || this;
    return a5.method = oe.GET, a5.path = "".concat(r4 ? fe : _e, "/").concat(encodeURIComponent(t8)), a5.params = { show_pinned_messages: true }, a5;
  }
  return t(t7, n3), t7;
}(xe);
var ge2 = function(n3) {
  function t7(e4, t8) {
    var r4 = n3.call(this, e4, t8) || this;
    return r4.channel = new xe3(e4, t8), r4;
  }
  return t(t7, n3), t7;
}(Ue);
var ye2 = function(n3) {
  function t7(e4) {
    var t8 = this, r4 = e4.channelUrl, a5 = e4.coverUrlOrImage, u4 = e4.name, c4 = e4.data, h4 = e4.customType, f4 = e4.operatorUserIds, C3 = e4.isEphemeral;
    return (t8 = n3.call(this) || this).method = oe.POST, t8.path = _e, t8.params = re(se({ channel_url: r4, cover_url: w("string", a5) ? a5 : null, cover_file: k(a5) ? a5 : null, name: u4, data: c4, custom_type: h4, operators: f4, is_ephemeral: C3 })), t8;
  }
  return t(t7, n3), t7;
}(xe);
!function(n3) {
  function t7(e4, t8) {
    var r4 = n3.call(this, e4, t8) || this;
    return r4.channel = new xe3(e4, t8), r4;
  }
  t(t7, n3);
}(Ue);
var me2 = function(n3) {
  function t7(e4) {
    var t8 = e4.channelUrl;
    return n3.call(this, { code: "ENTR", payload: { channel_url: t8 }, ackRequired: true }) || this;
  }
  return t(t7, n3), t7;
}(qe);
var Ue2 = function(n3) {
  function t7(e4, t8, r4) {
    var a5, s6, i4 = this;
    return i4 = n3.call(this, e4, "SYEV", r4) || this, r4.data && (i4.participantCount = null !== (a5 = r4.data.participant_count) && void 0 !== a5 ? a5 : 0, i4.user = new es(e4, r4.data), i4.ts = null !== (s6 = r4.data.edge_ts) && void 0 !== s6 ? s6 : 0), i4;
  }
  return t(t7, n3), t7;
}(v3);
var Ee2 = function(n3) {
  function t7(e4) {
    var t8 = e4.channelUrl;
    return n3.call(this, { code: "EXIT", payload: { channel_url: t8 }, ackRequired: true }) || this;
  }
  return t(t7, n3), t7;
}(qe);
var Me2 = function(n3) {
  function t7(e4, t8, r4) {
    var a5, s6, i4 = this;
    return i4 = n3.call(this, e4, "EXIT", r4) || this, r4.data && (i4.participantCount = null !== (a5 = r4.data.participant_count) && void 0 !== a5 ? a5 : 0, i4.user = new es(e4, r4.data), i4.ts = null !== (s6 = r4.data.edge_ts) && void 0 !== s6 ? s6 : 0), i4;
  }
  return t(t7, n3), t7;
}(v3);
var we = {};
var Pe3 = function(r4) {
  function o3(e4, a5) {
    var s6 = r4.call(this, e4, n(n({}, a5), { channelType: q.OPEN })) || this;
    return s6.subscribeChannelEvent = st, s6.unsubscribeChannelEvent = st, s6.refreshChannel = function() {
      return r(s6, void 0, void 0, function() {
        return s(this, function(e5) {
          return [2, st()];
        });
      });
    }, s6._openChannelCache = new Ce3(e4), s6._openChannelHandlers = /* @__PURE__ */ new Map(), s6._dispatcher.on(function(e5) {
      var n3, t7;
      if (e5 instanceof Fe) s6._handleEvent(e5).catch(function(e6) {
        if (g(e6) && "foreground" === s6._sdkState.appState) throw e6;
      });
      else if (e5 instanceof kr && e5.stateType === Sr.CONNECTED) {
        var r5 = s6._openChannelCache.enteredChannels;
        try {
          for (var a6 = o(r5), i4 = a6.next(); !i4.done; i4 = a6.next()) {
            i4.value.enter();
          }
        } catch (e6) {
          n3 = { error: e6 };
        } finally {
          try {
            i4 && !i4.done && (t7 = a6.return) && t7.call(a6);
          } finally {
            if (n3) throw n3.error;
          }
        }
      }
    }), we[e4] || (we[e4] = s6), s6;
  }
  return t(o3, r4), o3.of = function(e4) {
    return we[e4];
  }, o3.prototype.buildOpenChannelFromSerializedData = function(e4) {
    var n3 = Xr(e4);
    return new xe3(this._iid, xe3.payloadify(n3));
  }, o3.prototype.getChannelFromCache = function(e4) {
    var r5;
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._openChannelCache.get(e4)];
          case 1:
            return [2, null !== (r5 = n3.sent()) && void 0 !== r5 ? r5 : null];
        }
      });
    });
  }, o3.prototype.upsertChannelsToCache = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        switch (n3.label) {
          case 0:
            return [4, this._openChannelCache.upsert(e4)];
          case 1:
            return [2, n3.sent()];
        }
      });
    });
  }, o3.prototype.removeChannelsFromCache = function(e4) {
    return r(this, void 0, void 0, function() {
      var n3, r5, a5, s6, i4, o4;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            t7.trys.push([0, 5, 6, 7]), n3 = o(e4), r5 = n3.next(), t7.label = 1;
          case 1:
            return r5.done ? [3, 4] : (a5 = r5.value, [4, this._openChannelCache.remove(a5)]);
          case 2:
            t7.sent(), t7.label = 3;
          case 3:
            return r5 = n3.next(), [3, 1];
          case 4:
            return [3, 7];
          case 5:
            return s6 = t7.sent(), i4 = { error: s6 }, [3, 7];
          case 6:
            try {
              r5 && !r5.done && (o4 = n3.return) && o4.call(n3);
            } finally {
              if (i4) throw i4.error;
            }
            return [7];
          case 7:
            return [2];
        }
      });
    });
  }, o3.prototype.setEnteredToCache = function(e4) {
    this._openChannelCache.enter(e4.url);
  }, o3.prototype.setExitedToCache = function(e4) {
    this._openChannelCache.exit(e4.url);
  }, Object.defineProperty(o3.prototype, "handlers", { get: function() {
    return c([], a(this._openChannelHandlers.values()), false);
  }, enumerable: false, configurable: true }), o3.prototype._handleEvent = function(e4) {
    return r(this, void 0, void 0, function() {
      var r5, a5, s6, i4, o4, u4, l3, c4, h4, d5, p4, f4, C3, v5, _2, g4, y6, U2, E4, w4, P2, O4, x2, L5, R4, F2, k3, S6, $2, J, ee, ne, te2, ae, fe2, Ce4, ve3, _e3, ge3, ye3, me3, Ee3, we2, Pe4, be3, Te2, Ne3, De5, He4, Ie3, Oe4, xe4, Ae3, Le4, Re4, Fe4, ke4, Se, ze3, qe4, Qe4, Ge2, je3, Be4, Ke3, Ve3, We4, Xe3, Ye4, Ze4, $e3, Je4, en4, nn4, tn4 = this;
      return s(this, function(rn4) {
        switch (rn4.label) {
          case 0:
            switch (rn4.trys.push([0, 59, , 60]), e4.code) {
              case "MESG":
              case "FILE":
              case "ADMM":
              case "BRDM":
                return [3, 1];
              case "MEDI":
              case "FEDI":
              case "AEDI":
                return [3, 4];
              case "DELM":
                return [3, 7];
              case "MRCT":
                return [3, 10];
              case "MTHD":
                return [3, 13];
              case "MCNT":
                return [3, 16];
              case "PEDI":
                return [3, 27];
              case "VOTE":
                return [3, 30];
              case "SYEV":
                return [3, 33];
            }
            return [3, 58];
          case 1:
            return i4 = null, "MESG" === e4.code ? i4 = e4.as(pr) : "FILE" === e4.code ? i4 = e4.as(Ct) : "ADMM" !== e4.code && "BRDM" != e4.code || (i4 = e4.as(L3)), i4 ? (r5 = i4.message, a5 = i4.isMentioned, r5.channelType !== q.OPEN ? [3, 3] : [4, this.getChannel(r5.channelUrl, true)]) : [3, 3];
          case 2:
            s6 = rn4.sent(), os(function() {
              return r(tn4, void 0, void 0, function() {
                var e5, n3, i5, o5, u5;
                return s(this, function(t7) {
                  try {
                    for (e5 = o(this._openChannelHandlers.values()), n3 = e5.next(); !n3.done; n3 = e5.next()) i5 = n3.value, this._openChannelCache.isEnteredChannel(s6.url) && (i5.onMessageReceived && i5.onMessageReceived(s6, r5), a5 && i5.onMentionReceived && i5.onMentionReceived(s6, r5));
                  } catch (e6) {
                    o5 = { error: e6 };
                  } finally {
                    try {
                      n3 && !n3.done && (u5 = e5.return) && u5.call(e5);
                    } finally {
                      if (o5) throw o5.error;
                    }
                  }
                  return [2];
                });
              });
            }), rn4.label = 3;
          case 3:
            return [3, 58];
          case 4:
            return i4 = null, "MEDI" === e4.code ? i4 = e4.as(vr) : "FEDI" === e4.code ? i4 = e4.as(_r) : "AEDI" === e4.code && (i4 = e4.as(I3)), i4 ? (o4 = i4.message, u4 = i4.mentionCountChange, o4.channelType !== q.OPEN ? [3, 6] : [4, this.getChannel(o4.channelUrl, true)]) : [3, 6];
          case 5:
            l3 = rn4.sent(), c4 = false, l3.lastPinnedMessage && l3.lastPinnedMessage.messageId === o4.messageId && l3.lastPinnedMessage.updatedAt < o4.updatedAt && (l3.lastPinnedMessage = o4, c4 = true), os(function() {
              return r(tn4, void 0, void 0, function() {
                var e5, n3, r6, a6, s7, i5, h5;
                return s(this, function(t7) {
                  try {
                    for (e5 = o(this._openChannelHandlers.values()), n3 = e5.next(); !n3.done; n3 = e5.next()) r6 = n3.value, this._openChannelCache.isEnteredChannel(l3.url) && (c4 && (null === (i5 = r6.onPinnedMessageUpdated) || void 0 === i5 || i5.call(r6, l3), null === (h5 = r6.onChannelChanged) || void 0 === h5 || h5.call(r6, l3)), r6.onMessageUpdated && r6.onMessageUpdated(l3, o4), u4 > 0 && r6.onMentionReceived && r6.onMentionReceived(l3, o4));
                  } catch (e6) {
                    a6 = { error: e6 };
                  } finally {
                    try {
                      n3 && !n3.done && (s7 = e5.return) && s7.call(e5);
                    } finally {
                      if (a6) throw a6.error;
                    }
                  }
                  return [2];
                });
              });
            }), rn4.label = 6;
          case 6:
            return [3, 58];
          case 7:
            return h4 = e4.as(it), ne = h4.channelUrl, te2 = h4.channelType, d5 = h4.messageId, te2 !== q.OPEN ? [3, 9] : [4, this.getChannel(ne, true)];
          case 8:
            p4 = rn4.sent(), os(function() {
              return r(tn4, void 0, void 0, function() {
                var e5, n3, r6, a6, s7;
                return s(this, function(t7) {
                  try {
                    for (e5 = o(this._openChannelHandlers.values()), n3 = e5.next(); !n3.done; n3 = e5.next()) r6 = n3.value, this._openChannelCache.isEnteredChannel(p4.url) && r6.onMessageDeleted && r6.onMessageDeleted(p4, d5);
                  } catch (e6) {
                    a6 = { error: e6 };
                  } finally {
                    try {
                      n3 && !n3.done && (s7 = e5.return) && s7.call(e5);
                    } finally {
                      if (a6) throw a6.error;
                    }
                  }
                  return [2];
                });
              });
            }), rn4.label = 9;
          case 9:
            return [3, 58];
          case 10:
            return f4 = e4.as(U), ne = f4.channelUrl, te2 = f4.channelType, C3 = f4.event, te2 !== q.OPEN ? [3, 12] : [4, this.getChannel(ne, true)];
          case 11:
            v5 = rn4.sent(), os(function() {
              return r(tn4, void 0, void 0, function() {
                var e5, n3, r6, a6, s7;
                return s(this, function(t7) {
                  try {
                    for (e5 = o(this._openChannelHandlers.values()), n3 = e5.next(); !n3.done; n3 = e5.next()) r6 = n3.value, this._openChannelCache.isEnteredChannel(v5.url) && r6.onReactionUpdated && r6.onReactionUpdated(v5, C3);
                  } catch (e6) {
                    a6 = { error: e6 };
                  } finally {
                    try {
                      n3 && !n3.done && (s7 = e5.return) && s7.call(e5);
                    } finally {
                      if (a6) throw a6.error;
                    }
                  }
                  return [2];
                });
              });
            }), rn4.label = 12;
          case 12:
            return [3, 58];
          case 13:
            return (_2 = e4.as(M2).event).channelType !== q.OPEN ? [3, 15] : [4, this.getChannel(_2.channelUrl, true)];
          case 14:
            g4 = rn4.sent(), os(function() {
              return r(tn4, void 0, void 0, function() {
                var e5, n3, r6, a6, s7;
                return s(this, function(t7) {
                  try {
                    for (e5 = o(this._openChannelHandlers.values()), n3 = e5.next(); !n3.done; n3 = e5.next()) r6 = n3.value, this._openChannelCache.isEnteredChannel(g4.url) && r6.onThreadInfoUpdated && r6.onThreadInfoUpdated(g4, _2);
                  } catch (e6) {
                    a6 = { error: e6 };
                  } finally {
                    try {
                      n3 && !n3.done && (s7 = e5.return) && s7.call(e5);
                    } finally {
                      if (a6) throw a6.error;
                    }
                  }
                  return [2];
                });
              });
            }), rn4.label = 15;
          case 15:
            return [3, 58];
          case 16:
            y6 = e4.as(y2).openChannelMemberCounts, U2 = [], rn4.label = 17;
          case 17:
            rn4.trys.push([17, 22, 23, 24]), E4 = o(y6), w4 = E4.next(), rn4.label = 18;
          case 18:
            return w4.done ? [3, 21] : (P2 = w4.value, ne = P2.channelUrl, Ee3 = P2.participantCount, O4 = P2.updatedAt, [4, this.getChannelFromCache(ne)]);
          case 19:
            (x2 = rn4.sent()) && x2._updateParticipantCount(Ee3, O4) && U2.push(x2), rn4.label = 20;
          case 20:
            return w4 = E4.next(), [3, 18];
          case 21:
            return [3, 24];
          case 22:
            return L5 = rn4.sent(), en4 = { error: L5 }, [3, 24];
          case 23:
            try {
              w4 && !w4.done && (nn4 = E4.return) && nn4.call(E4);
            } finally {
              if (en4) throw en4.error;
            }
            return [7];
          case 24:
            return U2.length > 0 ? [4, this.upsertChannelsToCache(U2)] : [3, 26];
          case 25:
            R4 = rn4.sent(), os(function() {
              return r(tn4, void 0, void 0, function() {
                var e5, n3, r6, a6, s7;
                return s(this, function(t7) {
                  try {
                    for (e5 = o(this._openChannelHandlers.values()), n3 = e5.next(); !n3.done; n3 = e5.next()) (r6 = n3.value).onChannelMemberCountChanged && r6.onChannelMemberCountChanged(R4);
                  } catch (e6) {
                    a6 = { error: e6 };
                  } finally {
                    try {
                      n3 && !n3.done && (s7 = e5.return) && s7.call(e5);
                    } finally {
                      if (a6) throw a6.error;
                    }
                  }
                  return [2];
                });
              });
            }), rn4.label = 26;
          case 26:
            return [3, 58];
          case 27:
            return F2 = e4.as(b2), k3 = F2.event, S6 = F2.status, ne = F2.channelUrl, te2 = F2.channelType, ne && te2 === q.OPEN ? [4, this.getChannel(ne, true)] : [3, 29];
          case 28:
            $2 = rn4.sent(), this._dispatcher.dispatch(new so({ event: k3, source: Ks.EVENT_POLL_UPDATED })), os(S6 === ao ? function() {
              return r(tn4, void 0, void 0, function() {
                var e5, n3, r6, a6, s7;
                return s(this, function(t7) {
                  try {
                    for (e5 = o(this._openChannelHandlers.values()), n3 = e5.next(); !n3.done; n3 = e5.next()) (r6 = n3.value).onPollDeleted && r6.onPollDeleted($2, k3.pollId);
                  } catch (e6) {
                    a6 = { error: e6 };
                  } finally {
                    try {
                      n3 && !n3.done && (s7 = e5.return) && s7.call(e5);
                    } finally {
                      if (a6) throw a6.error;
                    }
                  }
                  return [2];
                });
              });
            } : function() {
              return r(tn4, void 0, void 0, function() {
                var e5, n3, r6, a6, s7;
                return s(this, function(t7) {
                  try {
                    for (e5 = o(this._openChannelHandlers.values()), n3 = e5.next(); !n3.done; n3 = e5.next()) (r6 = n3.value).onPollUpdated && r6.onPollUpdated($2, k3);
                  } catch (e6) {
                    a6 = { error: e6 };
                  } finally {
                    try {
                      n3 && !n3.done && (s7 = e5.return) && s7.call(e5);
                    } finally {
                      if (a6) throw a6.error;
                    }
                  }
                  return [2];
                });
              });
            }), rn4.label = 29;
          case 29:
            return [3, 58];
          case 30:
            return J = e4.as(zr2), ee = J.event, ne = J.channelUrl, te2 = J.channelType, ne && te2 === q.OPEN ? [4, this.getChannel(ne, true)] : [3, 32];
          case 31:
            ae = rn4.sent(), this._dispatcher.dispatch(new oo({ event: ee, source: Ks.EVENT_POLL_VOTED })), os(function() {
              return r(tn4, void 0, void 0, function() {
                var e5, n3, r6, a6, s7;
                return s(this, function(t7) {
                  try {
                    for (e5 = o(this._openChannelHandlers.values()), n3 = e5.next(); !n3.done; n3 = e5.next()) (r6 = n3.value).onPollVoted && r6.onPollVoted(ae, ee);
                  } catch (e6) {
                    a6 = { error: e6 };
                  } finally {
                    try {
                      n3 && !n3.done && (s7 = e5.return) && s7.call(e5);
                    } finally {
                      if (a6) throw a6.error;
                    }
                  }
                  return [2];
                });
              });
            }), rn4.label = 32;
          case 32:
            return [3, 58];
          case 33:
            if (!(fe2 = e4.as(v3).event).isOpenChannelEvent) return [3, 57];
            switch (fe2.category) {
              case f2.CHANNEL_ENTER:
                return [3, 34];
              case f2.CHANNEL_EXIT:
                return [3, 36];
              case f2.CHANNEL_OPERATOR_UPDATE:
                return [3, 38];
              case f2.USER_CHANNEL_MUTE:
              case f2.USER_CHANNEL_UNMUTE:
                return [3, 40];
              case f2.USER_CHANNEL_BAN:
              case f2.USER_CHANNEL_UNBAN:
                return [3, 42];
              case f2.CHANNEL_FREEZE:
              case f2.CHANNEL_UNFREEZE:
                return [3, 44];
              case f2.CHANNEL_DELETED:
                return [3, 46];
              case f2.CHANNEL_PROP_CHANGED:
                return [3, 49];
              case f2.CHANNEL_META_DATA_CHANGED:
                return [3, 51];
              case f2.CHANNEL_META_COUNTERS_CHANGED:
                return [3, 53];
              case f2.PINNED_MESSAGE_CHANGED:
                return [3, 55];
            }
            return [3, 57];
          case 34:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 35:
            return Ce4 = rn4.sent(), ve3 = e4.as(Ue2), Ee3 = ve3.participantCount, _e3 = ve3.user, ge3 = Ce4._updateParticipantCount(Ee3, fe2.ts), os(function() {
              return r(tn4, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._openChannelHandlers.forEach(function(e6) {
                    e6.onUserEntered && e6.onUserEntered(Ce4, _e3), ge3 && e6.onChannelParticipantCountChanged && e6.onChannelParticipantCountChanged(Ce4);
                  }), [2];
                });
              });
            }), [3, 57];
          case 36:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 37:
            return ye3 = rn4.sent(), me3 = e4.as(Me2), Ee3 = me3.participantCount, we2 = me3.user, Pe4 = ye3._updateParticipantCount(Ee3, fe2.ts), os(function() {
              return r(tn4, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._openChannelHandlers.forEach(function(e6) {
                    e6.onUserExited && e6.onUserExited(ye3, we2), Pe4 && e6.onChannelParticipantCountChanged && e6.onChannelParticipantCountChanged(ye3);
                  }), [2];
                });
              });
            }), [3, 57];
          case 38:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 39:
            return be3 = rn4.sent(), Te2 = e4.as(T2).operators, be3.operators = Te2, this.upsertChannelsToCache([be3]), os(function() {
              return r(tn4, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._openChannelHandlers.forEach(function(e6) {
                    e6.onOperatorUpdated && e6.onOperatorUpdated(be3, Te2);
                  }), [2];
                });
              });
            }), [3, 57];
          case 40:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 41:
            return Ne3 = rn4.sent(), De5 = fe2.category === f2.USER_CHANNEL_MUTE, He4 = e4.as(De5 ? tr : rr).user, os(function() {
              return r(tn4, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._openChannelHandlers.forEach(function(e6) {
                    De5 ? e6.onUserMuted && e6.onUserMuted(Ne3, He4) : e6.onUserUnmuted && e6.onUserUnmuted(Ne3, He4);
                  }), [2];
                });
              });
            }), [3, 57];
          case 42:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 43:
            return Ie3 = rn4.sent(), Oe4 = fe2.category === f2.USER_CHANNEL_BAN, xe4 = e4.as(Oe4 ? sr : or).user, os(function() {
              return r(tn4, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._openChannelHandlers.forEach(function(e6) {
                    Oe4 ? e6.onUserBanned && e6.onUserBanned(Ie3, xe4) : e6.onUserUnbanned && e6.onUserUnbanned(Ie3, xe4);
                  }), [2];
                });
              });
            }), [3, 57];
          case 44:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 45:
            return Ae3 = rn4.sent(), Le4 = e4.as(cr).freeze, Ae3.isFrozen = Le4, this.upsertChannelsToCache([Ae3]), os(function() {
              return r(tn4, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._openChannelHandlers.forEach(function(e6) {
                    Le4 ? e6.onChannelFrozen && e6.onChannelFrozen(Ae3) : e6.onChannelUnfrozen && e6.onChannelUnfrozen(Ae3);
                  }), [2];
                });
              });
            }), [3, 57];
          case 46:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 47:
            return Re4 = rn4.sent(), [4, this.removeChannelsFromCache([Re4.url])];
          case 48:
            return rn4.sent(), os(function() {
              return r(tn4, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._openChannelHandlers.forEach(function(e6) {
                    e6.onChannelDeleted && e6.onChannelDeleted(Re4.url, Re4.channelType);
                  }), [2];
                });
              });
            }), [3, 57];
          case 49:
            return [4, this.getChannelWithoutCache(fe2.channelUrl, true)];
          case 50:
            return Fe4 = rn4.sent(), os(function() {
              return r(tn4, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._openChannelHandlers.forEach(function(e6) {
                    e6.onChannelChanged && e6.onChannelChanged(Fe4);
                  }), [2];
                });
              });
            }), [3, 57];
          case 51:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 52:
            return ke4 = rn4.sent(), Se = e4.as(zn), ze3 = Se.created, qe4 = Se.updated, Qe4 = Se.deleted, ze3 && ke4._upsertCachedMetaData(ze3, fe2.ts), qe4 && ke4._upsertCachedMetaData(qe4, fe2.ts), Qe4 && ke4._removeFromCachedMetaData(Qe4, fe2.ts), os(function() {
              return r(tn4, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._openChannelHandlers.forEach(function(e6) {
                    ze3 && e6.onMetaDataCreated && e6.onMetaDataCreated(ke4, ze3), qe4 && e6.onMetaDataUpdated && e6.onMetaDataUpdated(ke4, qe4), Qe4 && e6.onMetaDataDeleted && e6.onMetaDataDeleted(ke4, Qe4);
                  }), [2];
                });
              });
            }), [3, 57];
          case 53:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 54:
            return Ge2 = rn4.sent(), je3 = e4.as(Xn), Be4 = je3.created, Ke3 = je3.updated, Ve3 = je3.deleted, os(function() {
              return r(tn4, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._openChannelHandlers.forEach(function(e6) {
                    Be4 && e6.onMetaCounterCreated && e6.onMetaCounterCreated(Ge2, Be4), Ke3 && e6.onMetaCounterUpdated && e6.onMetaCounterUpdated(Ge2, Ke3), Ve3 && e6.onMetaCounterDeleted && e6.onMetaCounterDeleted(Ge2, Ve3);
                  }), [2];
                });
              });
            }), [3, 57];
          case 55:
            return [4, this.getChannel(fe2.channelUrl, true)];
          case 56:
            return We4 = rn4.sent(), Xe3 = e4.as(g2), Ye4 = Xe3.pinnedMessageIds, Ze4 = Xe3.latestPinnedMessage, ($e3 = Xe3.ts) > We4._pinnedMessagesUpdatedAt && (We4.pinnedMessageIds = Ye4, We4.lastPinnedMessage = Ze4, We4._pinnedMessagesUpdatedAt = $e3, this.upsertChannelsToCache([We4]), os(function() {
              return r(tn4, void 0, void 0, function() {
                var e5, n3, r6, a6, s7;
                return s(this, function(t7) {
                  try {
                    for (e5 = o(this._openChannelHandlers.values()), n3 = e5.next(); !n3.done; n3 = e5.next()) (r6 = n3.value).onChannelChanged && r6.onChannelChanged(We4);
                  } catch (e6) {
                    a6 = { error: e6 };
                  } finally {
                    try {
                      n3 && !n3.done && (s7 = e5.return) && s7.call(e5);
                    } finally {
                      if (a6) throw a6.error;
                    }
                  }
                  return [2];
                });
              });
            }), os(function() {
              return r(tn4, void 0, void 0, function() {
                return s(this, function(e5) {
                  return this._openChannelHandlers.forEach(function(e6) {
                    e6.onPinnedMessageUpdated && e6.onPinnedMessageUpdated(We4);
                  }), [2];
                });
              });
            })), [3, 57];
          case 57:
            return [3, 58];
          case 58:
            return [3, 60];
          case 59:
            if (Je4 = rn4.sent(), g(Je4)) throw Je4;
            return [3, 60];
          case 60:
            return [2];
        }
      });
    });
  }, o3.prototype.addHandler = function(e4, n3) {
    this._openChannelHandlers.set(e4, n3);
  }, o3.prototype.removeHandler = function(e4) {
    this._openChannelHandlers.delete(e4);
  }, o3.prototype.clearHandler = function() {
    this._openChannelHandlers.clear();
  }, o3.prototype.getChannel = function(e4, r5) {
    return void 0 === r5 && (r5 = false), r(this, void 0, void 0, function() {
      var n3;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            Jr(w("string", e4)).throw(v.invalidParameters), t7.label = 1;
          case 1:
            return t7.trys.push([1, 3, , 4]), [4, this.getChannelFromCache(e4)];
          case 2:
            return (n3 = t7.sent()) ? [2, n3] : [3, 4];
          case 3:
            return t7.sent(), [3, 4];
          case 4:
            return [4, this.getChannelWithoutCache(e4, r5)];
          case 5:
            return [2, t7.sent()];
        }
      });
    });
  }, o3.prototype.getChannelWithoutCache = function(e4, r5) {
    return void 0 === r5 && (r5 = false), r(this, void 0, void 0, function() {
      var n3, a5, i4;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return Jr(w("string", e4)).throw(v.invalidParameters), n3 = new _e2({ channelUrl: e4, isInternalCall: r5 }), [4, this._requestQueue.send(n3)];
          case 1:
            return a5 = t7.sent(), i4 = a5.as(ge2).channel, [4, this.upsertChannelsToCache([i4])];
          case 2:
            return [2, t7.sent()[0]];
        }
      });
    });
  }, o3.prototype.createChannel = function(e4) {
    return r(this, void 0, void 0, function() {
      var n3, r5, o4, u4;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return n3 = n(n({}, ve2), e4), Jr(function(e5) {
              return N("string", e5.operatorUserIds, true) && (w("string", e5.coverUrlOrImage, true) || k(e5.coverUrlOrImage, true)) && w("string", e5.name, true) && w("string", e5.data, true) && w("string", e5.customType, true) && (w("string", e5.channelUrl) && /^\w+$/.test(e5.channelUrl) || null === e5.channelUrl || void 0 === e5.channelUrl) && w("boolean", e5.isEphemeral, true);
            }(n3)).throw(v.invalidParameters), r5 = new ye2(n3), [4, this._requestQueue.send(r5)];
          case 1:
            return o4 = t7.sent(), u4 = o4.as(ge2).channel, this.upsertChannelsToCache([u4]), [2, u4];
        }
      });
    });
  }, o3;
}(H2);
var be2 = { name: void 0, coverUrlOrImage: void 0, data: void 0, customType: void 0, operatorUserIds: void 0 };
var Te = function(n3) {
  function t7(e4) {
    var t8 = this, r4 = e4.channelUrl, a5 = e4.token, s6 = e4.limit;
    return (t8 = n3.call(this) || this).method = oe.GET, t8.path = "".concat(_e, "/").concat(encodeURIComponent(r4), "/participants"), t8.params = { token: a5, limit: s6 }, t8;
  }
  return t(t7, n3), t7;
}(xe);
var Ne2 = function(n3) {
  function t7(e4, t8) {
    var r4 = n3.call(this, e4, t8) || this;
    r4.participants = [];
    var a5 = t8.next, s6 = t8.participants;
    return r4.token = a5, r4.participants = s6.map(function(n4) {
      return new Jt(e4, n4);
    }), r4;
  }
  return t(t7, n3), t7;
}(Ue);
var De4 = function(r4) {
  function a5(e4, n3, t7) {
    return r4.call(this, e4, n3, q.OPEN, t7) || this;
  }
  return t(a5, r4), a5.prototype._validate = function() {
    return r4.prototype._validate.call(this);
  }, a5.prototype.next = function() {
    return r(this, void 0, void 0, function() {
      var e4, n3, r5, a6, s6, i4;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 3] : this._hasNext ? (this._isLoading = true, e4 = Ws.of(this._iid).requestQueue, n3 = new Te(n(n({}, this), { token: this._token })), [4, e4.send(n3)]) : [3, 2] : [3, 5];
          case 1:
            return r5 = t7.sent(), a6 = r5.as(Ne2), s6 = a6.participants, i4 = a6.token, this._token = i4, this._hasNext = !!i4, this._isLoading = false, [2, s6];
          case 2:
            return [2, []];
          case 3:
            throw v.queryInProgress;
          case 4:
            return [3, 6];
          case 5:
            throw v.invalidParameters;
          case 6:
            return [2];
        }
      });
    });
  }, a5;
}(fo);
var He3 = function(n3) {
  function t7(e4) {
    var t8 = this, r4 = e4.channelUrl, a5 = e4.coverUrlOrImage, u4 = e4.name, c4 = e4.data, h4 = e4.customType, f4 = e4.operatorUserIds;
    return (t8 = n3.call(this) || this).method = oe.PUT, t8.path = "".concat(_e, "/").concat(encodeURIComponent(r4)), t8.params = re(se({ cover_url: w("string", a5) ? a5 : null, cover_file: k(a5) ? a5 : null, name: u4, data: c4, custom_type: h4, operators: f4 })), t8;
  }
  return t(t7, n3), t7;
}(xe);
var Ie2 = function(n3) {
  function t7(e4, t8) {
    var r4 = n3.call(this, e4, t8) || this;
    return r4.channel = new xe3(e4, t8), r4;
  }
  return t(t7, n3), t7;
}(Ue);
var Oe3 = function(n3) {
  function t7(e4) {
    var t8 = this, r4 = e4.channelUrl;
    return (t8 = n3.call(this) || this).method = oe.DELETE, t8.path = "".concat(_e, "/").concat(encodeURIComponent(r4)), t8;
  }
  return t(t7, n3), t7;
}(xe);
!function(n3) {
  function t7(e4, t8) {
    return n3.call(this, e4, t8) || this;
  }
  t(t7, n3);
}(Ue);
var xe3 = function(r4) {
  function o3(e4, n3) {
    var t7, a5 = this;
    return (a5 = r4.call(this, e4, n3) || this)._lastParticipantCountUpdated = 0, a5.participantCount = 0, a5.operators = [], a5.lastPinnedMessage = null, a5._pinnedMessagesUpdatedAt = 0, a5.channelType = q.OPEN, a5.participantCount = null !== (t7 = n3.participant_count) && void 0 !== t7 ? t7 : 0, a5.operators = Array.isArray(n3.operators) ? n3.operators.map(function(n4) {
      return new es(e4, n4);
    }) : [], a5.lastPinnedMessage = n3.latest_pinned_message ? Mt(a5._iid, n({ channel_type: a5.channelType }, n3.latest_pinned_message)) : null, a5;
  }
  return t(o3, r4), o3.payloadify = function(e4) {
    return re(se(n(n({}, pi.payloadify(e4)), { participant_count: e4.participantCount, operators: e4.operators.map(function(e5) {
      return es.payloadify(e5);
    }), latest_pinned_message: e4.lastPinnedMessage ? wt(e4.lastPinnedMessage) : null })));
  }, o3.prototype.serialize = function() {
    return Yr(this);
  }, o3.prototype.isOperator = function(e4) {
    return e4 instanceof es ? this.isOperator(e4.userId) : this.operators.some(function(n3) {
      return n3.userId === e4;
    });
  }, o3.prototype._updateParticipantCount = function(e4, n3) {
    return n3 > this._lastParticipantCountUpdated && (this.participantCount = e4, this._lastParticipantCountUpdated = n3, true);
  }, o3.prototype.createParticipantListQuery = function(e4) {
    return new De4(this._iid, this.url, e4);
  }, o3.prototype.refresh = function() {
    return r(this, void 0, void 0, function() {
      return s(this, function(e4) {
        switch (e4.label) {
          case 0:
            return [4, Pe3.of(this._iid).getChannelWithoutCache(this.url)];
          case 1:
            return [2, e4.sent()];
        }
      });
    });
  }, o3.prototype.enter = function() {
    return r(this, void 0, void 0, function() {
      var e4, n3, r5, a5, s6, i4;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return e4 = Ws.of(this._iid).requestQueue, n3 = new me2({ channelUrl: this.url }), [4, e4.send(n3)];
          case 1:
            return r5 = t7.sent(), a5 = r5.as(Ue2), s6 = a5.participantCount, i4 = a5.ts, this._updateParticipantCount(s6, i4), Pe3.of(this._iid).setEnteredToCache(this), [2];
        }
      });
    });
  }, o3.prototype.exit = function() {
    return r(this, void 0, void 0, function() {
      var e4, n3, r5, a5, s6, i4;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return e4 = Ws.of(this._iid).requestQueue, n3 = new Ee2({ channelUrl: this.url }), [4, e4.send(n3)];
          case 1:
            return r5 = t7.sent(), a5 = r5.as(Me2), s6 = a5.participantCount, i4 = a5.ts, this._updateParticipantCount(s6, i4), Pe3.of(this._iid).setExitedToCache(this), ea.of(this._iid).fileMessageQueue.cancel(this), [2];
        }
      });
    });
  }, o3.prototype.updateChannel = function(e4) {
    return r(this, void 0, void 0, function() {
      var n3, r5, o4, u4, l3;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return n3 = n(n({}, be2), e4), Jr(function(e5) {
              return N("string", e5.operatorUserIds, true) && (w("string", e5.coverUrlOrImage, true) || k(e5.coverUrlOrImage, true)) && w("string", e5.name, true) && w("string", e5.data, true) && w("string", e5.customType, true);
            }(n3)).throw(v.invalidParameters), r5 = Ws.of(this._iid).requestQueue, o4 = new He3(n({ channelUrl: this.url }, n3)), [4, r5.send(o4)];
          case 1:
            return u4 = t7.sent(), l3 = u4.as(Ie2).channel, this._update(l3), [4, Pe3.of(this._iid).upsertChannelsToCache([l3])];
          case 2:
            return t7.sent(), [2, this];
        }
      });
    });
  }, o3.prototype.updateChannelWithOperatorUserIds = function(e4, r5, a5, s6, i4) {
    return r(this, void 0, void 0, function() {
      var n3;
      return s(this, function(t7) {
        return n3 = n(n({}, be2), { name: e4, coverUrlOrImage: r5, data: a5, operatorUserIds: s6, customType: i4 }), [2, this.updateChannel(n3)];
      });
    });
  }, o3.prototype.delete = function() {
    return r(this, void 0, void 0, function() {
      var e4, n3;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return e4 = Ws.of(this._iid).requestQueue, n3 = new Oe3({ channelUrl: this.url }), [4, e4.send(n3)];
          case 1:
            return t7.sent(), [4, Pe3.of(this._iid).removeChannelsFromCache([this.url])];
          case 2:
            return t7.sent(), [2];
        }
      });
    });
  }, o3.prototype.updateUserMessage = function(e4, a5) {
    return r(this, void 0, void 0, function() {
      var n3, s6, i4, o4 = this;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return [4, r4.prototype.updateUserMessage.call(this, e4, a5)];
          case 1:
            return n3 = t7.sent(), s6 = false, i4 = false, this.lastPinnedMessage && this.lastPinnedMessage.messageId === n3.messageId && (this.lastPinnedMessage = n3, s6 = true, i4 = true), s6 && Pe3.of(this._iid).handlers.map(function(e5) {
              e5.onChannelChanged && e5.onChannelChanged(o4);
            }), i4 && Pe3.of(this._iid).handlers.map(function(e5) {
              e5.onPinnedMessageUpdated && e5.onPinnedMessageUpdated(o4);
            }), [2, n3];
        }
      });
    });
  }, o3.prototype.updateFileMessage = function(e4, a5) {
    return r(this, void 0, void 0, function() {
      var n3, s6, i4, o4 = this;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return [4, r4.prototype.updateFileMessage.call(this, e4, a5)];
          case 1:
            return n3 = t7.sent(), s6 = false, i4 = false, this.lastPinnedMessage && this.lastPinnedMessage.messageId === n3.messageId && (this.lastPinnedMessage = n3, s6 = true, i4 = true), s6 && Pe3.of(this._iid).handlers.map(function(e5) {
              e5.onChannelChanged && e5.onChannelChanged(o4);
            }), i4 && Pe3.of(this._iid).handlers.map(function(e5) {
              e5.onPinnedMessageUpdated && e5.onPinnedMessageUpdated(o4);
            }), [2, n3];
        }
      });
    });
  }, o3;
}(pi);
var Ae2 = function(n3) {
  function t7(e4) {
    void 0 === e4 && (e4 = {});
    var t8 = n3.call(this) || this;
    return Object.keys(e4).forEach(function(n4) {
      t8.hasOwnProperty(n4) && (t8[n4] = e4[n4]);
    }), t8;
  }
  return t(t7, n3), t7;
}(function(n3) {
  function t7() {
    var e4 = null !== n3 && n3.apply(this, arguments) || this;
    return e4.onUserEntered = st, e4.onUserExited = st, e4.onChannelParticipantCountChanged = st, e4.onPollUpdated = st, e4.onPollVoted = st, e4.onPollDeleted = st, e4.onPinnedMessageUpdated = st, e4;
  }
  return t(t7, n3), t7;
}(t2));
var Le3 = function(n3) {
  function t7(e4) {
    var t8 = this, r4 = e4.token, a5 = e4.limit, s6 = e4.nameKeyword, i4 = e4.urlKeyword, u4 = e4.customTypes, c4 = e4.includeFrozen, h4 = e4.includeMetaData;
    return (t8 = n3.call(this) || this).method = oe.GET, t8.path = _e, t8.params = re({ token: r4, limit: a5, name_contains: s6, url_contains: i4, custom_types: u4, show_frozen: c4, show_metadata: h4, show_pinned_messages: true }), t8;
  }
  return t(t7, n3), t7;
}(xe);
var Re3 = function(n3) {
  function t7(e4, t8) {
    var r4 = n3.call(this, e4, t8) || this;
    r4.channels = [];
    var a5 = t8.next, s6 = t8.channels, i4 = t8.ts;
    return r4.token = a5, s6 && s6.length > 0 && (r4.channels = s6.map(function(n4) {
      return new xe3(e4, n4);
    })), r4.ts = "number" == typeof i4 ? i4 : null, r4;
  }
  return t(t7, n3), t7;
}(Ue);
var Fe3 = function(r4) {
  function i4(e4, n3) {
    var t7, a5, s6, i5, o3, u4 = this;
    return (u4 = r4.call(this, e4, n3) || this).includeFrozen = true, u4.includeMetaData = true, u4.nameKeyword = null, u4.urlKeyword = null, u4.customTypes = null, u4.includeFrozen = null === (t7 = n3.includeFrozen) || void 0 === t7 || t7, u4.includeMetaData = null === (a5 = n3.includeMetaData) || void 0 === a5 || a5, u4.nameKeyword = null !== (s6 = n3.nameKeyword) && void 0 !== s6 ? s6 : null, u4.urlKeyword = null !== (i5 = n3.urlKeyword) && void 0 !== i5 ? i5 : null, u4.customTypes = null !== (o3 = n3.customTypes) && void 0 !== o3 ? o3 : null, u4;
  }
  return t(i4, r4), i4.prototype._validate = function() {
    return r4.prototype._validate.call(this) && w("boolean", this.includeFrozen) && w("boolean", this.includeMetaData) && w("string", this.nameKeyword, true) && w("string", this.urlKeyword, true) && N("string", this.customTypes, true);
  }, i4.prototype.next = function() {
    return r(this, void 0, void 0, function() {
      var e4, n3, r5, a5, s6, i5;
      return s(this, function(t7) {
        switch (t7.label) {
          case 0:
            return this._validate() ? this._isLoading ? [3, 4] : this._hasNext ? (this._isLoading = true, e4 = Ws.of(this._iid).requestQueue, n3 = new Le3(se(n(n({}, this), { token: this._token }))), [4, e4.send(n3)]) : [3, 3] : [3, 6];
          case 1:
            return r5 = t7.sent(), a5 = r5.as(Re3), s6 = a5.channels, i5 = a5.token, this._token = i5, this._hasNext = !!i5, [4, Pe3.of(this._iid).upsertChannelsToCache(s6)];
          case 2:
            return t7.sent(), this._isLoading = false, [2, s6];
          case 3:
            return [2, []];
          case 4:
            throw v.queryInProgress;
          case 5:
            return [3, 7];
          case 6:
            throw v.invalidParameters;
          case 7:
            return [2];
        }
      });
    });
  }, i4;
}(_o);
var ke3 = function(r4) {
  function a5() {
    var e4 = null !== r4 && r4.apply(this, arguments) || this;
    return e4.name = "openChannel", e4;
  }
  return t(a5, r4), a5.prototype.init = function(e4, n3) {
    var t7 = n3.sdkState, a6 = n3.dispatcher, s6 = n3.sessionManager, i4 = n3.requestQueue, o3 = n3.logger, u4 = n3.onlineDetector, l3 = n3.cacheContext;
    r4.prototype.init.call(this, e4, { sdkState: t7, dispatcher: a6, sessionManager: s6, requestQueue: i4, logger: o3, onlineDetector: u4, cacheContext: l3 }), this._manager = new Pe3(e4, { sdkState: t7, dispatcher: a6, requestQueue: i4, logger: o3, cacheContext: l3, sessionManager: s6 });
  }, a5.prototype.createOpenChannelListQuery = function(e4) {
    return void 0 === e4 && (e4 = {}), new Fe3(this._iid, e4);
  }, a5.prototype.addOpenChannelHandler = function(e4, n3) {
    this._manager.addHandler(e4, n3);
  }, a5.prototype.removeOpenChannelHandler = function(e4) {
    this._manager.removeHandler(e4);
  }, a5.prototype.removeAllOpenChannelHandlers = function() {
    this._manager.clearHandler();
  }, a5.prototype.buildOpenChannelFromSerializedData = function(e4) {
    return this._manager.buildOpenChannelFromSerializedData(e4);
  }, a5.prototype.getChannel = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        return [2, this._manager.getChannel(e4)];
      });
    });
  }, a5.prototype.getChannelWithoutCache = function(e4) {
    return r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        return [2, this._manager.getChannelWithoutCache(e4)];
      });
    });
  }, a5.prototype.createChannel = function(e4) {
    return void 0 === e4 && (e4 = {}), r(this, void 0, void 0, function() {
      return s(this, function(n3) {
        return [2, this._manager.createChannel(e4)];
      });
    });
  }, a5.prototype.createChannelWithOperatorUserIds = function(e4, r5, a6, s6, i4) {
    return r(this, void 0, void 0, function() {
      var n3;
      return s(this, function(t7) {
        return (n3 = n({}, ve2)).name = e4, n3.coverUrlOrImage = r5, n3.data = a6, n3.operatorUserIds = s6, n3.customType = i4, [2, this._manager.createChannel(n3)];
      });
    });
  }, a5;
}(Zs);

// node_modules/@sendbird/uikit-react/chunks/bundle-BMJP8SSM.js
var import_react21 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/useSendbirdStateContext.js
var import_react20 = __toESM(require_react(), 1);
var NO_CONTEXT_ERROR = "No sendbird state value available. Make sure you are rendering `<SendbirdProvider>` at the top of your app.";
function useSendbirdStateContext() {
  var context = (0, import_react20.useContext)(SendbirdSdkContext);
  if (!context)
    throw new Error(NO_CONTEXT_ERROR);
  return context;
}

// node_modules/@sendbird/uikit-react/chunks/bundle-BMJP8SSM.js
var INITIALIZE_AUDIO_UNIT = "INITIALIZE_AUDIO_UNIT";
var RESET_AUDIO_UNIT = "RESET_AUDIO_UNIT";
var SET_CURRENT_PLAYER = "SET_CURRENT_PLAYER";
var ON_VOICE_PLAYER_PLAY = "ON_VOICE_PLAYER_PLAY";
var ON_VOICE_PLAYER_PAUSE = "ON_VOICE_PLAYER_PAUSE";
var ON_CURRENT_TIME_UPDATE = "ON_CURRENT_TIME_UPDATE";
var VOICE_PLAYER_STATUS = {
  IDLE: "IDLE",
  PREPARING: "PREPARING",
  PLAYING: "PLAYING",
  PAUSED: "PAUSED",
  COMPLETED: "COMPLETED"
};
var AudioUnitDefaultValue = function() {
  return {
    audioFile: null,
    playbackTime: 0,
    duration: 1e3,
    playingStatus: VOICE_PLAYER_STATUS.IDLE
  };
};
var voicePlayerInitialState = {
  currentPlayer: null,
  currentGroupKey: "",
  audioStorage: {}
};
function voicePlayerReducer(state, action) {
  var _a3, _b2, _c, _d, _e3;
  var _f, _g2, _h, _j;
  switch (action.type) {
    case INITIALIZE_AUDIO_UNIT: {
      var groupKey = action.payload.groupKey;
      var audioUnit = ((_f = state.audioStorage) === null || _f === void 0 ? void 0 : _f[groupKey]) ? state.audioStorage[groupKey] : AudioUnitDefaultValue();
      audioUnit.playingStatus = VOICE_PLAYER_STATUS.PREPARING;
      return __assign(__assign({}, state), { audioStorage: __assign(__assign({}, state.audioStorage), (_a3 = {}, _a3[groupKey] = audioUnit, _a3)) });
    }
    case RESET_AUDIO_UNIT: {
      var groupKey = action.payload.groupKey;
      return __assign(__assign({}, state), { audioStorage: __assign(__assign({}, state.audioStorage), (_b2 = {}, _b2[groupKey] = AudioUnitDefaultValue(), _b2)) });
    }
    case SET_CURRENT_PLAYER: {
      var _k = action.payload, audioPlayer = _k.audioPlayer, groupKey = _k.groupKey;
      return __assign(__assign({}, state), { currentPlayer: audioPlayer, currentGroupKey: groupKey });
    }
    case ON_VOICE_PLAYER_PLAY: {
      var _l = action.payload, groupKey = _l.groupKey, audioFile = _l.audioFile;
      var audioUnit = ((_g2 = state.audioStorage) === null || _g2 === void 0 ? void 0 : _g2[groupKey]) ? state.audioStorage[groupKey] : AudioUnitDefaultValue();
      audioUnit.audioFile = audioFile;
      audioUnit.playingStatus = VOICE_PLAYER_STATUS.PLAYING;
      return __assign(__assign({}, state), { audioStorage: __assign(__assign({}, state.audioStorage), (_c = {}, _c[groupKey] = audioUnit, _c)) });
    }
    case ON_VOICE_PLAYER_PAUSE: {
      var _m = action.payload, groupKey = _m.groupKey, duration = _m.duration, currentTime = _m.currentTime;
      var audioUnit = ((_h = state.audioStorage) === null || _h === void 0 ? void 0 : _h[groupKey]) ? state.audioStorage[groupKey] : AudioUnitDefaultValue();
      audioUnit.playingStatus = VOICE_PLAYER_STATUS.PAUSED;
      if (duration === currentTime) {
        audioUnit.playbackTime = 0;
      }
      return __assign(__assign({}, state), { audioStorage: __assign(__assign({}, state.audioStorage), (_d = {}, _d[groupKey] = audioUnit, _d)) });
    }
    case ON_CURRENT_TIME_UPDATE: {
      var groupKey = action.payload.groupKey;
      var _o2 = state.currentPlayer, currentTime = _o2.currentTime, duration = _o2.duration;
      var audioUnit = ((_j = state.audioStorage) === null || _j === void 0 ? void 0 : _j[groupKey]) ? state.audioStorage[groupKey] : AudioUnitDefaultValue();
      if (audioUnit.playbackTime === audioUnit.duration && audioUnit.playingStatus === VOICE_PLAYER_STATUS.PAUSED) {
        audioUnit.playbackTime = 0;
      } else if (currentTime > 0 && duration > 0) {
        audioUnit.playbackTime = currentTime;
        audioUnit.duration = duration;
      }
      return __assign(__assign({}, state), { audioStorage: __assign(__assign({}, state.audioStorage), (_e3 = {}, _e3[groupKey] = audioUnit, _e3)) });
    }
    default:
      return state;
  }
}
var generateGroupKey = function(channelUrl, key) {
  if (channelUrl === void 0) {
    channelUrl = "";
  }
  if (key === void 0) {
    key = "";
  }
  return "".concat(channelUrl, "-").concat(key);
};
var getParsedVoiceAudioFileInfo = function(mimeType) {
  if (isSafari(navigator.userAgent) && mimeType.includes("m4a")) {
    return {
      name: VOICE_MESSAGE_FILE_NAME__XM4A,
      mimeType: VOICE_MESSAGE_MIME_TYPE__XM4A
    };
  }
  return {
    name: VOICE_MESSAGE_FILE_NAME,
    mimeType: VOICE_MESSAGE_MIME_TYPE
  };
};
var ALL = "ALL";
var noop2 = function() {
};
var VoicePlayerStoreDefaultValue = {
  currentGroupKey: "",
  currentPlayer: null,
  audioStorage: {}
};
var Context = (0, import_react21.createContext)({
  play: noop2,
  pause: noop2,
  stop: noop2,
  voicePlayerStore: VoicePlayerStoreDefaultValue
});
var VoicePlayerProvider = function(_a3) {
  var children = _a3.children;
  var _b2 = (0, import_react21.useReducer)(voicePlayerReducer, voicePlayerInitialState), voicePlayerStore = _b2[0], voicePlayerDispatcher = _b2[1];
  var currentGroupKey = voicePlayerStore.currentGroupKey, currentPlayer = voicePlayerStore.currentPlayer, audioStorage = voicePlayerStore.audioStorage;
  var config = useSendbirdStateContext().config;
  var logger = config.logger;
  var stop = function(text2) {
    if (text2 === void 0) {
      text2 = "";
    }
    if (currentGroupKey.includes(text2)) {
      logger.info("VoicePlayer: Pause playing(by text).");
      pause(currentGroupKey);
    }
  };
  var pause = function(groupKey) {
    if (currentPlayer) {
      if (groupKey === currentGroupKey) {
        logger.info("VoicePlayer: Pause playing(by group key).");
        currentPlayer.pause();
      } else if (groupKey === ALL) {
        logger.info("VoicePlayer: Pause playing(all).");
        currentPlayer.pause();
      }
    } else {
      logger.warning("VoicePlayer: No currentPlayer to pause.");
    }
  };
  var play = function(_a4) {
    var groupKey = _a4.groupKey, audioFile = _a4.audioFile, _b3 = _a4.audioFileUrl, audioFileUrl = _b3 === void 0 ? "" : _b3, _c = _a4.audioFileMimeType, audioFileMimeType = _c === void 0 ? VOICE_MESSAGE_MIME_TYPE : _c;
    if (groupKey !== currentGroupKey) {
      pause(currentGroupKey);
    }
    var voicePlayerRoot = document.getElementById(VOICE_PLAYER_ROOT_ID);
    var voicePlayerAudioElement = document.getElementById(VOICE_PLAYER_AUDIO_ID);
    if (voicePlayerRoot && voicePlayerAudioElement) {
      voicePlayerRoot.removeChild(voicePlayerAudioElement);
    }
    logger.info("VoicePlayer: Start getting audio file.");
    new Promise(function(resolve, reject) {
      var _a5;
      voicePlayerDispatcher({
        type: INITIALIZE_AUDIO_UNIT,
        payload: { groupKey }
      });
      if (audioFile) {
        logger.info("VoicePlayer: Use the audioFile instance.");
        resolve(audioFile);
        return;
      }
      var cachedAudioFile = (_a5 = audioStorage === null || audioStorage === void 0 ? void 0 : audioStorage[groupKey]) === null || _a5 === void 0 ? void 0 : _a5.audioFile;
      if (cachedAudioFile) {
        logger.info("VoicePlayer: Get from the audioStorage.");
        resolve(cachedAudioFile);
        return;
      }
      fetch(audioFileUrl).then(function(res) {
        return res.blob();
      }).then(function(blob) {
        var audioFile2 = new File([blob], getParsedVoiceAudioFileInfo(audioFileMimeType).name, {
          lastModified: (/* @__PURE__ */ new Date()).getTime(),
          type: getParsedVoiceAudioFileInfo(audioFileMimeType).mimeType
        });
        resolve(audioFile2);
        logger.info("VoicePlayer: Get the audioFile from URL.");
      }).catch(reject);
    }).then(function(audioFile2) {
      var _a5;
      var voicePlayerRoot2 = document.getElementById(VOICE_PLAYER_ROOT_ID);
      logger.info("VoicePlayer: Succeeded getting audio file.", { audioFile: audioFile2 });
      var currentAudioUnit = audioStorage[groupKey] || AudioUnitDefaultValue();
      var audioPlayer = new Audio((_a5 = URL === null || URL === void 0 ? void 0 : URL.createObjectURL) === null || _a5 === void 0 ? void 0 : _a5.call(URL, audioFile2));
      audioPlayer.id = VOICE_PLAYER_AUDIO_ID;
      audioPlayer.currentTime = currentAudioUnit.playbackTime;
      audioPlayer.volume = 1;
      audioPlayer.loop = false;
      audioPlayer.onplaying = function() {
        logger.info("VoicePlayer: OnPlaying event is called from audioPlayer", { groupKey, audioPlayer });
        voicePlayerDispatcher({
          type: ON_VOICE_PLAYER_PLAY,
          payload: { groupKey, audioFile: audioFile2 }
        });
      };
      audioPlayer.onpause = function() {
        logger.info("VoicePlayer: OnPause event is called from audioPlayer", { groupKey, audioPlayer });
        voicePlayerDispatcher({
          type: ON_VOICE_PLAYER_PAUSE,
          payload: { groupKey, duration: audioPlayer.duration, currentTime: audioPlayer.currentTime }
        });
      };
      audioPlayer.ontimeupdate = function() {
        voicePlayerDispatcher({
          type: ON_CURRENT_TIME_UPDATE,
          payload: { groupKey }
        });
      };
      audioPlayer.onerror = function(error) {
        logger.error("VoicePlayer: Failed to load the audioFile on the audio player.", error);
        voicePlayerDispatcher({
          type: RESET_AUDIO_UNIT,
          payload: { groupKey }
        });
      };
      audioPlayer.dataset.sbGroupId = groupKey;
      try {
        voicePlayerRoot2 === null || voicePlayerRoot2 === void 0 ? void 0 : voicePlayerRoot2.childNodes.forEach(function(node) {
          var _a6, _b4;
          var element = node;
          var thisGroupKey = (_a6 = element.dataset) === null || _a6 === void 0 ? void 0 : _a6.sbGroupKey;
          if (thisGroupKey !== groupKey) {
            (_b4 = element === null || element === void 0 ? void 0 : element.pause) === null || _b4 === void 0 ? void 0 : _b4.call(element);
            voicePlayerRoot2.removeChild(element);
            logger.info("VoicePlayer: Removed other player.", { element });
          }
        });
      } finally {
        audioPlayer === null || audioPlayer === void 0 ? void 0 : audioPlayer.play();
        voicePlayerRoot2 === null || voicePlayerRoot2 === void 0 ? void 0 : voicePlayerRoot2.appendChild(audioPlayer);
        voicePlayerDispatcher({
          type: SET_CURRENT_PLAYER,
          payload: { groupKey, audioPlayer }
        });
        logger.info("VoicePlayer: Succeeded playing audio player.", { groupKey, audioPlayer });
      }
    }).catch(function(error) {
      logger.warning("VoicePlayer: Failed loading audio file with URL.", error);
      voicePlayerDispatcher({
        type: RESET_AUDIO_UNIT,
        payload: { groupKey }
      });
    });
  };
  return import_react21.default.createElement(
    Context.Provider,
    { value: {
      play,
      pause,
      stop,
      voicePlayerStore
    } },
    import_react21.default.createElement("div", { id: VOICE_PLAYER_ROOT_ID, style: { display: "none" } }),
    children
  );
};
var useVoicePlayerContext = function() {
  return (0, import_react21.useContext)(Context);
};

// node_modules/@sendbird/uikit-react/chunks/bundle-ml-PByBw.js
var import_react23 = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);

// node_modules/@sendbird/uikit-react/ui/SortByRow.js
var import_react22 = __toESM(require_react(), 1);
var componentClassName = "sendbird-sort-by-row";
function SortByRow(_a3) {
  var _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, maxItemCount = _a3.maxItemCount, itemWidth = _a3.itemWidth, itemHeight = _a3.itemHeight, children = _a3.children;
  if (Array.isArray(children) && children.length > maxItemCount) {
    var result = [];
    for (var i4 = 0; i4 < children.length; i4 += maxItemCount) {
      result.push(import_react22.default.createElement("div", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
        componentClassName
      ], false).join(" "), key: uuidv4(), style: {
        width: itemWidth * maxItemCount,
        height: itemHeight
      } }, children.slice(i4, i4 + maxItemCount)));
    }
    return import_react22.default.createElement(import_react22.default.Fragment, null, result);
  }
  return import_react22.default.createElement("div", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
    componentClassName
  ], false).join(" "), style: {
    width: itemWidth * (Array.isArray(children) ? children.length : 1),
    height: itemHeight
  } }, children);
}

// node_modules/@sendbird/uikit-react/chunks/bundle-ml-PByBw.js
var APP_LAYOUT_ROOT = "sendbird-app__layout";
var HEIGHT_PADDING = 60;
var MenuItems$1 = (
  /** @class */
  function(_super) {
    __extends(MenuItems2, _super);
    function MenuItems2(props) {
      var _this = _super.call(this, props) || this;
      _this.menuRef = import_react23.default.createRef();
      _this.setupEvents = function() {
        var closeDropdown = _this.props.closeDropdown;
        var menuRef = _this.menuRef;
        var handleClickOutside = function(event) {
          var _a3, _b2;
          if ((menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) && !((_b2 = (_a3 = menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) === null || _a3 === void 0 ? void 0 : _a3.contains) === null || _b2 === void 0 ? void 0 : _b2.call(_a3, event.target))) {
            closeDropdown === null || closeDropdown === void 0 ? void 0 : closeDropdown();
          }
        };
        _this.setState({
          handleClickOutside
        });
        document.addEventListener("mousedown", handleClickOutside);
      };
      _this.cleanUpEvents = function() {
        var handleClickOutside = _this.state.handleClickOutside;
        document.removeEventListener("mousedown", handleClickOutside);
      };
      _this.getMenuPosition = function() {
        var _a3, _b2, _c;
        var _d = _this.props, parentRef = _d.parentRef, openLeft = _d.openLeft;
        var portalElement = document.getElementById(APP_LAYOUT_ROOT);
        var portalRect = ((_a3 = portalElement === null || portalElement === void 0 ? void 0 : portalElement.getBoundingClientRect) === null || _a3 === void 0 ? void 0 : _a3.call(portalElement)) || {
          top: 0,
          left: 0,
          width: window.innerWidth,
          height: window.innerHeight
        };
        var parentRect = (_c = (_b2 = parentRef === null || parentRef === void 0 ? void 0 : parentRef.current) === null || _b2 === void 0 ? void 0 : _b2.getBoundingClientRect) === null || _c === void 0 ? void 0 : _c.call(_b2);
        var x2 = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.x) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.left) || 0) - portalRect.left;
        var y6 = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.y) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.top) || 0) - portalRect.top;
        var menuStyle = {
          top: y6,
          left: x2
        };
        if (!_this.menuRef.current)
          return menuStyle;
        var rect = _this.menuRef.current.getBoundingClientRect();
        if (y6 + rect.height + HEIGHT_PADDING > portalRect.height) {
          menuStyle.top -= rect.height;
        }
        if (x2 + rect.width > portalRect.width && !openLeft) {
          menuStyle.left -= rect.width;
        }
        if (menuStyle.top < 0) {
          menuStyle.top = rect.height < portalRect.height ? (portalRect.height - rect.height) / 2 : 0;
        }
        menuStyle.top += 32;
        if (openLeft) {
          var padding = Number.isNaN(rect.width - 30) ? 108 : rect.width - 30;
          menuStyle.left -= padding;
        }
        if (menuStyle.left < 0) {
          menuStyle.left = rect.width < portalRect.width ? (portalRect.width - rect.width) / 2 : 0;
        }
        _this.setState({ menuStyle });
        return menuStyle;
      };
      _this.state = {
        menuStyle: { top: 0, left: 0 },
        handleClickOutside: function() {
        }
      };
      return _this;
    }
    MenuItems2.prototype.componentDidMount = function() {
      this.setupEvents();
      this.getMenuPosition();
    };
    MenuItems2.prototype.componentWillUnmount = function() {
      this.cleanUpEvents();
    };
    MenuItems2.prototype.render = function() {
      var portalElement = document.getElementById(MENU_ROOT_ID);
      if (!portalElement)
        return import_react23.default.createElement(import_react23.default.Fragment, null);
      var menuStyle = this.state.menuStyle;
      var _a3 = this.props, children = _a3.children, style = _a3.style, _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, testID = _a3.testID, id2 = _a3.id;
      return (0, import_react_dom.createPortal)(import_react23.default.createElement(
        "div",
        { className: classnames(MENU_OBSERVING_CLASS_NAME, className), "data-testid": testID, id: id2 },
        import_react23.default.createElement("div", { className: "sendbird-dropdown__menu-backdrop" }),
        import_react23.default.createElement("ul", { className: "".concat(className, " sendbird-dropdown__menu"), ref: this.menuRef, style: __assign({ display: "inline-block", position: "fixed", left: "".concat(Math.round(menuStyle.left), "px"), top: "".concat(Math.round(menuStyle.top), "px") }, style), "data-testid": "sendbird-dropdown-menu" }, children)
      ), portalElement);
    };
    return MenuItems2;
  }(import_react23.default.Component)
);
var MuteMenuItem = function(_a3) {
  var channel = _a3.channel, user = _a3.user, _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, children = _a3.children, _c = _a3.disable, disable = _c === void 0 ? false : _c, _d = _a3.dataSbId, dataSbId = _d === void 0 ? "" : _d, testID = _a3.testID, _e3 = _a3.onChange, onChange = _e3 === void 0 ? function() {
  } : _e3, _f = _a3.onError, onError2 = _f === void 0 ? function() {
  } : _f;
  var _g2 = (0, import_react23.useState)(user.isMuted), isMuted = _g2[0], setIsMuted = _g2[1];
  var isProcessing = (0, import_react23.useRef)(false);
  var onClickHandler = (0, import_react23.useCallback)(function() {
    if (!isProcessing.current) {
      isProcessing.current = true;
      if (isMuted) {
        channel.unmuteUser(user).then(function() {
          setIsMuted(false);
          onChange(channel, user, false);
          isProcessing.current = false;
        }).catch(function(err) {
          onError2(err);
          isProcessing.current = false;
        });
      } else {
        channel.muteUser(user).then(function() {
          setIsMuted(true);
          onChange(channel, user, true);
          isProcessing.current = false;
        }).catch(function(err) {
          onError2(err);
          isProcessing.current = false;
        });
      }
    }
  }, [isProcessing, isMuted]);
  return import_react23.default.createElement(MenuItem, { className, disable, testID: testID !== null && testID !== void 0 ? testID : dataSbId, onClick: onClickHandler }, children);
};
var OperatorMenuItem = function(_a3) {
  var channel = _a3.channel, user = _a3.user, _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, children = _a3.children, _c = _a3.disable, disable = _c === void 0 ? false : _c, _d = _a3.dataSbId, dataSbId = _d === void 0 ? "" : _d, testID = _a3.testID, _e3 = _a3.onChange, onChange = _e3 === void 0 ? function() {
  } : _e3, _f = _a3.onError, onError2 = _f === void 0 ? function() {
  } : _f;
  var _g2 = (0, import_react23.useState)(channel instanceof xe3 ? channel.isOperator(user) : user.role === V.OPERATOR), isOperator3 = _g2[0], setIsOperator = _g2[1];
  var isProcessing = (0, import_react23.useRef)(false);
  var onClickHandler = (0, import_react23.useCallback)(function() {
    if (!isProcessing.current) {
      isProcessing.current = true;
      if (isOperator3) {
        channel.removeOperators([user.userId]).then(function() {
          setIsOperator(false);
          onChange(channel, user, false);
          isProcessing.current = false;
        }).catch(function(err) {
          onError2(err);
          isProcessing.current = false;
        });
      } else {
        channel.addOperators([user.userId]).then(function() {
          setIsOperator(true);
          onChange(channel, user, true);
          isProcessing.current = false;
        }).catch(function(err) {
          onError2(err);
          isProcessing.current = false;
        });
      }
    }
  }, [isProcessing, isOperator3]);
  return import_react23.default.createElement(MenuItem, { className, disable, testID: testID !== null && testID !== void 0 ? testID : dataSbId, onClick: onClickHandler }, children);
};
var defaultParentRect = { x: 0, y: 0, left: 0, top: 0, height: 0 };
var EmojiListItems$1 = function(_a3) {
  var id2 = _a3.id, children = _a3.children, parentRef = _a3.parentRef, parentContainRef = _a3.parentContainRef, _b2 = _a3.spaceFromTrigger, spaceFromTrigger = _b2 === void 0 ? { x: 0, y: 0 } : _b2, closeDropdown = _a3.closeDropdown;
  var _c = (0, import_react23.useState)({ left: 0, top: 0 }), reactionStyle = _c[0], setReactionStyle = _c[1];
  var reactionRef = (0, import_react23.useRef)(null);
  (0, import_react23.useEffect)(function() {
    if (parentContainRef && (parentContainRef === null || parentContainRef === void 0 ? void 0 : parentContainRef.current)) {
      parentContainRef.current.classList.add("sendbird-reactions--pressed");
    }
    return function() {
      if (parentContainRef && (parentContainRef === null || parentContainRef === void 0 ? void 0 : parentContainRef.current)) {
        parentContainRef.current.classList.remove("sendbird-reactions--pressed");
      }
    };
  }, []);
  (0, import_react23.useEffect)(function() {
    var handleClickOutSide = function(event) {
      var _a4, _b3;
      if ((reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current) && !((_b3 = (_a4 = reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current) === null || _a4 === void 0 ? void 0 : _a4.contains) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, event.target))) {
        closeDropdown();
      }
    };
    document.addEventListener("mousedown", handleClickOutSide);
    return function() {
      document.removeEventListener("mousedown", handleClickOutSide);
    };
  }, []);
  (0, import_react23.useEffect)(function() {
    var _a4, _b3, _c2, _d;
    var spaceFromTriggerX = (spaceFromTrigger === null || spaceFromTrigger === void 0 ? void 0 : spaceFromTrigger.x) || 0;
    var spaceFromTriggerY = (spaceFromTrigger === null || spaceFromTrigger === void 0 ? void 0 : spaceFromTrigger.y) || 0;
    var portalElement = document.getElementById(APP_LAYOUT_ROOT);
    var portalRect = ((_a4 = portalElement === null || portalElement === void 0 ? void 0 : portalElement.getBoundingClientRect) === null || _a4 === void 0 ? void 0 : _a4.call(portalElement)) || {
      top: 0,
      left: 0,
      width: window.innerWidth,
      height: window.innerHeight
    };
    var parentRect = (_c2 = (_b3 = parentRef === null || parentRef === void 0 ? void 0 : parentRef.current) === null || _b3 === void 0 ? void 0 : _b3.getBoundingClientRect()) !== null && _c2 !== void 0 ? _c2 : defaultParentRect;
    var x2 = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.x) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.left) || 0) - portalRect.left;
    var y6 = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.y) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.top) || 0) - portalRect.top;
    var reactionStyle2 = {
      top: y6,
      left: x2
    };
    if (!(reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current)) {
      setReactionStyle(reactionStyle2);
    } else {
      var rect = (_d = reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current) === null || _d === void 0 ? void 0 : _d.getBoundingClientRect();
      if (reactionStyle2.top < rect.height) {
        reactionStyle2.top += parentRect.height;
        reactionStyle2.top += spaceFromTriggerY;
      } else {
        reactionStyle2.top -= rect.height;
        reactionStyle2.top -= spaceFromTriggerY;
      }
      reactionStyle2.left -= rect.width / 2;
      reactionStyle2.left += parentRect.height / 2 - 2;
      reactionStyle2.left += spaceFromTriggerX;
      var maximumLeft = portalRect.width - rect.width;
      if (maximumLeft < reactionStyle2.left) {
        reactionStyle2.left = maximumLeft;
      }
      if (reactionStyle2.left < 0) {
        reactionStyle2.left = 0;
      }
      setReactionStyle(reactionStyle2);
    }
  }, []);
  var rootElement = document.getElementById(EMOJI_MENU_ROOT_ID);
  if (rootElement) {
    return (0, import_react_dom.createPortal)(import_react23.default.createElement(
      "div",
      { className: MENU_OBSERVING_CLASS_NAME, id: id2 },
      import_react23.default.createElement("div", { className: "sendbird-dropdown__menu-backdrop" }),
      import_react23.default.createElement(
        "ul",
        { className: "sendbird-dropdown__reaction-bar", "data-testid": "sendbird-dropdown__reaction-bar", ref: reactionRef, style: {
          display: "inline-block",
          position: "fixed",
          left: "".concat(Math.round(reactionStyle.left), "px"),
          top: "".concat(Math.round(reactionStyle.top), "px")
        } },
        import_react23.default.createElement(SortByRow, { className: "sendbird-dropdown__reaction-bar__row", maxItemCount: 8, itemWidth: 44, itemHeight: 40 }, children)
      )
    ), rootElement);
  }
  return null;
};
var MessageMenuContext = (0, import_react23.createContext)(void 0);
var MessageMenuProvider = function(_a3) {
  var children = _a3.children, value = _a3.value;
  return import_react23.default.createElement(MessageMenuContext.Provider, { value }, children);
};
var useMessageMenuContext = function() {
  var context = (0, import_react23.useContext)(MessageMenuContext);
  if (!context) {
    throw new Error("useMessageMenuContext must be used within a MessageMenuProvider.");
  }
  return context;
};
var MenuItem$1 = function(_a3) {
  var className = _a3.className, disabled = _a3.disabled, _b2 = _a3.tabIndex, tabIndex = _b2 === void 0 ? 0 : _b2, testID = _a3.testID, onClick = _a3.onClick, children = _a3.children;
  var handleClickEvent = function(e4) {
    if (!disabled && onClick) {
      onClick(e4);
    }
  };
  return import_react23.default.createElement(
    "li",
    { className: classnames("sendbird-menu-item", className), role: "menuitem", "aria-disabled": disabled, "data-testid": testID, tabIndex, onClick: handleClickEvent, onKeyDown: function(e4) {
      if (e4.code === "Enter")
        handleClickEvent(e4);
    } },
    import_react23.default.createElement(Label, { className: "sendbird-menu-item__text", type: LabelTypography.SUBTITLE_2, color: disabled ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1 }, children)
  );
};
var BottomSheetMenuItem = function(_a3) {
  var className = _a3.className, _b2 = _a3.disabled, disabled = _b2 === void 0 ? false : _b2, _c = _a3.tabIndex, tabIndex = _c === void 0 ? 0 : _c, testID = _a3.testID, onClick = _a3.onClick, children = _a3.children;
  return import_react23.default.createElement("div", { className: classnames("sendbird-message__bottomsheet--action", className), role: "menuitem", tabIndex, "aria-disabled": disabled, onClick, "data-testid": testID }, children);
};
var MENU_OBSERVING_CLASS_NAME = "sendbird-observing-message-menu";
var getObservingId = function(txt) {
  return "m_".concat(txt);
};
var MenuItems = MenuItems$1;
var EmojiListItems = EmojiListItems$1;
var MenuItem = function(_a3) {
  var _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, children = _a3.children, onClick = _a3.onClick, _c = _a3.disable, disable = _c === void 0 ? false : _c, _d = _a3.dataSbId, dataSbId = _d === void 0 ? "" : _d, testID = _a3.testID;
  return import_react23.default.createElement(MenuItem$1, { className: classnames.apply(void 0, __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], false), [
    "sendbird-dropdown__menu-item",
    disable ? "disable" : ""
  ], false)), disabled: disable, testID: testID !== null && testID !== void 0 ? testID : dataSbId, onClick }, children);
};
var MENU_ROOT_ID = "sendbird-dropdown-portal";
var MenuRoot = function() {
  return import_react23.default.createElement("div", { id: MENU_ROOT_ID, className: MENU_ROOT_ID });
};
var EMOJI_MENU_ROOT_ID = "sendbird-emoji-list-portal";
var EmojiReactionListRoot = function() {
  return import_react23.default.createElement("div", { id: EMOJI_MENU_ROOT_ID });
};
function ContextMenu(_a3) {
  var menuTrigger = _a3.menuTrigger, menuItems = _a3.menuItems, isOpen = _a3.isOpen, onClick = _a3.onClick;
  var _b2 = (0, import_react23.useState)(false), showMenu = _b2[0], setShowMenu = _b2[1];
  return import_react23.default.createElement(
    "div",
    { className: "sendbird-context-menu", onClick },
    menuTrigger === null || menuTrigger === void 0 ? void 0 : menuTrigger(function() {
      return setShowMenu(!showMenu);
    }),
    (showMenu || isOpen) && menuItems(function() {
      return setShowMenu(false);
    })
  );
}

// node_modules/@sendbird/uikit-react/chunks/bundle-NL8iE1lF.js
var colorMapping = {
  // Primary / Secondary / Error / Information
  100: "extra-light",
  200: "light",
  300: "main",
  400: "dark",
  500: "extra-dark",
  // Overlay
  "overlay-01": "overlay-dark",
  "overlay-02": "overlay-light",
  // OnLight
  "onlight-01": "onlight-text-high-emphasis",
  "onlight-02": "onlight-text-mid-emphasis",
  "onlight-03": "onlight-text-low-emphasis",
  "onlight-04": "onlight-text-disabled",
  // OnDark
  "ondark-01": "ondark-text-high-emphasis",
  "ondark-02": "ondark-text-mid-emphasis",
  "ondark-03": "ondark-text-low-emphasis",
  "ondark-04": "ondark-text-disabled"
};
var colorMappingOrder = Object.values(colorMapping).sort(function(a5, b6) {
  return b6.length - a5.length;
});
var colorMappingMap = new Map(Object.entries(colorMapping).map(function(_a3) {
  var key = _a3[0], value = _a3[1];
  return [value, key];
}));
var mapColorKeys = function(colorSet) {
  var mappedColors = {};
  Object.entries(colorSet).forEach(function(_a3) {
    var key = _a3[0], value = _a3[1];
    var descriptiveKey = key;
    for (var _i2 = 0, colorMappingOrder_1 = colorMappingOrder; _i2 < colorMappingOrder_1.length; _i2++) {
      var mappingValue = colorMappingOrder_1[_i2];
      var regex2 = new RegExp("-".concat(mappingValue, "$"));
      if (regex2.test(key)) {
        var numericKey = colorMappingMap.get(mappingValue);
        if (numericKey) {
          descriptiveKey = key.replace(regex2, "-".concat(numericKey));
          break;
        }
      }
    }
    mappedColors[descriptiveKey] = value;
  });
  return mappedColors;
};
var MODAL_ROOT = "sendbird-modal-root";
var ModalRoot = function() {
  return import_react24.default.createElement("div", { id: MODAL_ROOT, className: MODAL_ROOT });
};
var ModalHeader = function(_a3) {
  var titleText = _a3.titleText, onCloseClick = _a3.onCloseClick;
  return import_react24.default.createElement(
    "div",
    { className: "sendbird-modal__header" },
    import_react24.default.createElement(Label, { type: LabelTypography.H_1, color: LabelColors.ONBACKGROUND_1 }, titleText),
    import_react24.default.createElement(
      "div",
      { className: "sendbird-modal__close" },
      import_react24.default.createElement(
        IconButton,
        { width: "32px", height: "32px", onClick: onCloseClick },
        import_react24.default.createElement(Icon, { type: IconTypes.CLOSE, fillColor: IconColors.DEFAULT, width: "24px", height: "24px" })
      )
    )
  );
};
var ModalBody = function(_a3) {
  var children = _a3.children;
  return import_react24.default.createElement(
    "div",
    { className: "sendbird-modal__body" },
    import_react24.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_2 }, children)
  );
};
var ModalFooter = function(_a3) {
  var submitText = _a3.submitText, _b2 = _a3.disabled, disabled = _b2 === void 0 ? false : _b2, _c = _a3.hideCancelButton, hideCancelButton = _c === void 0 ? false : _c, _d = _a3.type, type = _d === void 0 ? ButtonTypes.DANGER : _d, onSubmit = _a3.onSubmit, onCancel = _a3.onCancel;
  var stringSet2 = (0, import_react24.useContext)(LocalizationContext).stringSet;
  return import_react24.default.createElement(
    "div",
    { className: "sendbird-modal__footer" },
    !hideCancelButton && import_react24.default.createElement(
      Button,
      { type: ButtonTypes.SECONDARY, onClick: onCancel },
      import_react24.default.createElement(Label, { type: LabelTypography.BUTTON_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.BUTTON__CANCEL)
    ),
    import_react24.default.createElement(Button, { type, disabled, onClick: onSubmit }, submitText)
  );
};
function Modal(props) {
  var _a3;
  var _b2 = props.children, children = _b2 === void 0 ? null : _b2, _c = props.className, className = _c === void 0 ? "" : _c, _d = props.contentClassName, contentClassName = _d === void 0 ? "" : _d, _e3 = props.isCloseOnClickOutside, isCloseOnClickOutside = _e3 === void 0 ? false : _e3, _f = props.isFullScreenOnMobile, isFullScreenOnMobile = _f === void 0 ? false : _f, titleText = props.titleText, submitText = props.submitText, _g2 = props.disabled, disabled = _g2 === void 0 ? false : _g2, _h = props.hideFooter, hideFooter = _h === void 0 ? false : _h, _j = props.type, type = _j === void 0 ? ButtonTypes.DANGER : _j, renderHeader = props.renderHeader, _k = props.onSubmit, onSubmit = _k === void 0 ? noop : _k, onClose = props.onClose, onCancel = props.onCancel, customFooter = props.customFooter;
  var handleClose = (_a3 = onClose !== null && onClose !== void 0 ? onClose : onCancel) !== null && _a3 !== void 0 ? _a3 : noop;
  var eventHandlers = useSendbirdStateContext().eventHandlers;
  var id2 = (0, import_react24.useState)(function() {
    return "sbu-modal-".concat(uuidv4());
  })[0];
  (0, import_react24.useEffect)(function() {
    var _a4, _b3;
    return (_b3 = (_a4 = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.modal) === null || _a4 === void 0 ? void 0 : _a4.onMounted) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, { close: handleClose, id: id2 });
  }, []);
  var isMobile = useMediaQueryContext().isMobile;
  return (0, import_react_dom2.createPortal)(import_react24.default.createElement(
    "div",
    { className: classnames("sendbird-modal", className, isFullScreenOnMobile && isMobile && "sendbird-modal--full-mobile") },
    import_react24.default.createElement(
      "div",
      { className: classnames.apply(void 0, __spreadArray(["sendbird-modal__content"], Array.isArray(contentClassName) ? contentClassName : [contentClassName], false)) },
      (renderHeader === null || renderHeader === void 0 ? void 0 : renderHeader()) || import_react24.default.createElement(ModalHeader, { titleText: titleText !== null && titleText !== void 0 ? titleText : "", onCloseClick: handleClose }),
      import_react24.default.createElement(ModalBody, null, children),
      !hideFooter && (customFooter !== null && customFooter !== void 0 ? customFooter : import_react24.default.createElement(ModalFooter, { disabled, onCancel: handleClose, onSubmit, submitText: submitText !== null && submitText !== void 0 ? submitText : "", type }))
    ),
    import_react24.default.createElement("div", { className: classnames("sendbird-modal__backdrop", isCloseOnClickOutside && "sendbird-modal__backdrop--clickoutside"), onClick: function(e4) {
      e4 === null || e4 === void 0 ? void 0 : e4.stopPropagation();
      if (isCloseOnClickOutside) {
        handleClose();
      }
    } })
  ), document.getElementById(MODAL_ROOT));
}
var Context2 = (0, import_react24.createContext)({
  start: noop,
  stop: noop,
  isRecordable: false
});
var VoiceRecorderProvider = function(props) {
  var _a3;
  var children = props.children;
  var config = useSendbirdStateContext().config;
  var logger = config.logger, groupChannel = config.groupChannel;
  var _b2 = (0, import_react24.useState)(null), mediaRecorder = _b2[0], setMediaRecorder = _b2[1];
  var _c = (0, import_react24.useState)(false), isRecordable = _c[0], setIsRecordable = _c[1];
  var _d = (0, import_react24.useState)(false), permissionWarning = _d[0], setPermissionWarning = _d[1];
  var stringSet2 = useLocalization().stringSet;
  var isVoiceMessageEnabled = groupChannel.enableVoiceMessage;
  var _e3 = (0, import_react24.useState)(null), webAudioUtils = _e3[0], setWebAudioUtils = _e3[1];
  var browserSupportMimeType = (_a3 = BROWSER_SUPPORT_MIME_TYPE_LIST.find(function(mimeType) {
    return MediaRecorder.isTypeSupported(mimeType);
  })) !== null && _a3 !== void 0 ? _a3 : "";
  if (isVoiceMessageEnabled && !browserSupportMimeType) {
    logger.error("VoiceRecorder: Browser does not support mimeType", { mimmeTypes: BROWSER_SUPPORT_MIME_TYPE_LIST });
  }
  (0, import_react24.useEffect)(function() {
    if (isVoiceMessageEnabled && !webAudioUtils) {
      import("./bundle-Ck3AoOzP-CLAXYYLG.js").then(function(module) {
        return setWebAudioUtils(module);
      });
    }
  }, [isVoiceMessageEnabled, webAudioUtils]);
  var start = (0, import_react24.useCallback)(function(eventHandler) {
    var _a4, _b3;
    if (isVoiceMessageEnabled && !webAudioUtils) {
      logger.error("VoiceRecorder: Recording audio processor is being loaded.");
      return;
    }
    var checkPermission = function() {
      try {
        navigator.permissions.query({ name: "microphone" }).then(function(result) {
          if (result.state === "denied") {
            logger.warning("VoiceRecorder: Permission denied.");
            setPermissionWarning(true);
          }
        });
      } catch (error) {
        logger.warning("VoiceRecorder: Failed to check permission.", error);
      }
    };
    logger.info("VoiceRecorder: Start recording.");
    if (mediaRecorder) {
      stop();
      logger.info("VoiceRecorder: Previous mediaRecorder is stopped.");
    }
    checkPermission();
    (_b3 = (_a4 = navigator === null || navigator === void 0 ? void 0 : navigator.mediaDevices) === null || _a4 === void 0 ? void 0 : _a4.getUserMedia) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, { audio: true }).then(function(stream) {
      var _a5;
      logger.info("VoiceRecorder: Succeeded getting media stream.", stream);
      setIsRecordable(true);
      var mediaRecorder2 = new MediaRecorder(stream, {
        mimeType: browserSupportMimeType,
        audioBitsPerSecond: VOICE_RECORDER_AUDIO_BIT_RATE
      });
      mediaRecorder2.ondataavailable = function(e4) {
        logger.info("VoiceRecorder: Succeeded getting an available data.", e4.data);
        var audioFile = new File([e4.data], VOICE_MESSAGE_FILE_NAME, {
          lastModified: (/* @__PURE__ */ new Date()).getTime(),
          type: VOICE_MESSAGE_MIME_TYPE
        });
        webAudioUtils === null || webAudioUtils === void 0 ? void 0 : webAudioUtils.downsampleToWav(audioFile, function(buffer) {
          var _a6;
          var mp3Buffer = webAudioUtils === null || webAudioUtils === void 0 ? void 0 : webAudioUtils.encodeMp3(buffer);
          var mp3blob = new Blob(mp3Buffer, { type: VOICE_MESSAGE_MIME_TYPE });
          var convertedAudioFile = new File([mp3blob], VOICE_MESSAGE_FILE_NAME, {
            lastModified: (/* @__PURE__ */ new Date()).getTime(),
            type: VOICE_MESSAGE_MIME_TYPE
          });
          (_a6 = eventHandler === null || eventHandler === void 0 ? void 0 : eventHandler.onRecordingEnded) === null || _a6 === void 0 ? void 0 : _a6.call(eventHandler, convertedAudioFile);
          logger.info("VoiceRecorder: Succeeded converting audio file.", convertedAudioFile);
        });
        var tracks = stream.getAudioTracks();
        tracks.forEach(function(track) {
          return track.stop();
        });
        setIsRecordable(false);
      };
      mediaRecorder2.onstart = (_a5 = eventHandler === null || eventHandler === void 0 ? void 0 : eventHandler.onRecordingStarted) !== null && _a5 !== void 0 ? _a5 : noop;
      mediaRecorder2 === null || mediaRecorder2 === void 0 ? void 0 : mediaRecorder2.start();
      setMediaRecorder(mediaRecorder2);
    }).catch(function(err) {
      logger.error("VoiceRecorder: Failed getting media stream.", err);
      setMediaRecorder(null);
    });
  }, [mediaRecorder, webAudioUtils]);
  var stop = (0, import_react24.useCallback)(function() {
    mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.stop();
    setMediaRecorder(null);
    setIsRecordable(false);
    logger.info("VoiceRecorder: Stop recording.");
  }, [mediaRecorder]);
  return import_react24.default.createElement(
    Context2.Provider,
    { value: { start, stop, isRecordable } },
    children,
    permissionWarning && import_react24.default.createElement(
      Modal,
      { hideFooter: true, onClose: function() {
        return setPermissionWarning(false);
      } },
      import_react24.default.createElement(import_react24.default.Fragment, null, stringSet2.VOICE_RECORDING_PERMISSION_DENIED)
    )
  );
};
var useVoiceRecorderContext = function() {
  return (0, import_react24.useContext)(Context2);
};
var GlobalModalContext = (0, import_react24.createContext)({
  openModal: noop
});
var GlobalModalProvider = function(_a3) {
  var children = _a3.children;
  var _b2 = (0, import_react24.useState)([]), globalModalQueue = _b2[0], setGlobalModalQueue = _b2[1];
  var openModal = (0, import_react24.useCallback)(function(props) {
    setGlobalModalQueue(function(currentQue) {
      return __spreadArray(__spreadArray([], currentQue, true), [props], false);
    });
  }, []);
  var closeModal = (0, import_react24.useCallback)(function() {
    setGlobalModalQueue(function(currentQue) {
      return currentQue.slice(1);
    });
  }, []);
  var ModalComponent = (0, import_react24.useMemo)(function() {
    return function() {
      return K2(globalModalQueue).when(function(q3) {
        return q3.length === 0;
      }, function() {
        return import_react24.default.createElement(import_react24.default.Fragment, null);
      }).otherwise(function() {
        var _a4 = globalModalQueue[0], modalProps = _a4.modalProps, childElement = _a4.childElement;
        return import_react24.default.createElement(Modal, __assign({}, modalProps, { className: classnames("sendbird-global-modal", modalProps === null || modalProps === void 0 ? void 0 : modalProps.className), onClose: function() {
          var _a5;
          (_a5 = modalProps === null || modalProps === void 0 ? void 0 : modalProps.onClose) === null || _a5 === void 0 ? void 0 : _a5.call(modalProps);
          closeModal();
        } }), childElement({
          closeModal
        }));
      });
    };
  }, [globalModalQueue]);
  return import_react24.default.createElement(
    GlobalModalContext.Provider,
    { value: {
      openModal
    } },
    import_react24.default.createElement(ModalComponent, null),
    children
  );
};
var useGlobalModalContext = function() {
  return (0, import_react24.useContext)(GlobalModalContext);
};
var EmojiManager = (
  /** @class */
  function() {
    function EmojiManager2(props) {
      var _this = this;
      var _a3;
      var sdk = props.sdk, logger = props.logger;
      (_a3 = sdk === null || sdk === void 0 ? void 0 : sdk.getAllEmoji) === null || _a3 === void 0 ? void 0 : _a3.call(sdk).then(function(emojiContainer) {
        _this._emojiContainer = emojiContainer;
        logger === null || logger === void 0 ? void 0 : logger.info("EmojiManager | Succeeded getting all emojis. ", emojiContainer);
      }).catch(function() {
        logger === null || logger === void 0 ? void 0 : logger.warning("EmojiManager | Failed getting all emojis.");
      });
    }
    Object.defineProperty(EmojiManager2.prototype, "AllEmojisAsArray", {
      get: function() {
        return this._emojiContainer.emojiCategories.flatMap(function(category) {
          return category.emojis;
        });
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(EmojiManager2.prototype, "AllEmojisAsMap", {
      get: function() {
        return this._emojiContainer.emojiCategories.flatMap(function(category) {
          return category.emojis;
        }).reduce(function(map, emoji) {
          map.set(emoji.key, emoji.url);
          return map;
        }, /* @__PURE__ */ new Map());
      },
      enumerable: false,
      configurable: true
    });
    EmojiManager2.prototype.getAllEmojis = function(type) {
      var _this = this;
      return K2(type).when(function(type2) {
        return ["array", "arr"].includes(type2);
      }, function() {
        return _this.AllEmojisAsArray;
      }).when(function(type2) {
        return ["map"].includes(type2);
      }, function() {
        return _this.AllEmojisAsMap;
      }).otherwise(function() {
        return _this.AllEmojisAsArray;
      });
    };
    EmojiManager2.prototype.getEmojiUrl = function(reactionKey) {
      var _a3, _b2;
      return (_b2 = (_a3 = this.AllEmojisAsArray.find(function(emoji) {
        return emoji.key === reactionKey;
      })) === null || _a3 === void 0 ? void 0 : _a3.url) !== null && _b2 !== void 0 ? _b2 : "";
    };
    Object.defineProperty(EmojiManager2.prototype, "emojiContainer", {
      get: function() {
        return this._emojiContainer;
      },
      enumerable: false,
      configurable: true
    });
    return EmojiManager2;
  }()
);

// node_modules/@sendbird/uikit-react/chunks/bundle-DaJasFqz.js
var USER_ACTIONS = {
  INIT_USER: "INIT_USER",
  RESET_USER: "RESET_USER",
  UPDATE_USER_INFO: "UPDATE_USER_INFO"
};

// node_modules/@sendbird/uikit-react/chunks/bundle-DNUUqUmN.js
var import_react25 = __toESM(require_react(), 1);
function useOnlineStatus(sdk, logger) {
  var _a3, _b2;
  var _c = (0, import_react25.useState)(
    // window is undefined in SSR env
    typeof window !== "undefined" ? (_b2 = (_a3 = window === null || window === void 0 ? void 0 : window.navigator) === null || _a3 === void 0 ? void 0 : _a3.onLine) !== null && _b2 !== void 0 ? _b2 : true : true
  ), isOnline = _c[0], setIsOnline = _c[1];
  (0, import_react25.useEffect)(function() {
    var uniqueHandlerId = uuidv4();
    try {
      logger.warning("sdk changed", uniqueHandlerId);
      var handler = new mi({
        onDisconnected: function() {
          setIsOnline(false);
          logger.warning("onDisconnected", { isOnline });
        },
        onReconnectStarted: function() {
          setIsOnline(false);
          logger.warning("onReconnectStarted", { isOnline });
        },
        onReconnectSucceeded: function() {
          setIsOnline(true);
          logger.warning("onReconnectSucceeded", { isOnline });
        },
        onReconnectFailed: function() {
          sdk.reconnect();
          logger.warning("onReconnectFailed");
        }
      });
      if (sdk === null || sdk === void 0 ? void 0 : sdk.addConnectionHandler) {
        sdk.addConnectionHandler(uniqueHandlerId, handler);
        logger.info("Added ConnectionHandler", uniqueHandlerId);
      }
    } catch (_a4) {
    }
    return function() {
      try {
        sdk.removeConnectionHandler(uniqueHandlerId);
        logger.info("Removed ConnectionHandler", uniqueHandlerId);
      } catch (_a4) {
      }
    };
  }, [sdk]);
  (0, import_react25.useEffect)(function() {
    var tryReconnect = function() {
      try {
        logger.warning("Try reconnecting SDK");
        if (sdk.connectionState !== "OPEN") {
          sdk.reconnect();
        }
      } catch (_a4) {
      }
    };
    window.addEventListener("online", tryReconnect);
    return function() {
      window.removeEventListener("online", tryReconnect);
    };
  }, [sdk]);
  (0, import_react25.useEffect)(function() {
    var body = document.querySelector("body");
    if (!isOnline && !(sdk === null || sdk === void 0 ? void 0 : sdk.isCacheEnabled)) {
      try {
        body === null || body === void 0 ? void 0 : body.classList.add("sendbird__offline");
        logger.info("Added class sendbird__offline to body");
      } catch (e4) {
      }
    } else {
      try {
        body === null || body === void 0 ? void 0 : body.classList.remove("sendbird__offline");
        logger.info("Removed class sendbird__offline from body");
      } catch (e4) {
      }
    }
  }, [isOnline, sdk === null || sdk === void 0 ? void 0 : sdk.isCacheEnabled]);
  return isOnline;
}
var TIMEOUT = 2e3;
function schedulerFactory(_a3) {
  var logger = _a3.logger, timeout = _a3.timeout, cb = _a3.cb;
  var queue = [];
  var interval = null;
  var push = function(channel) {
    var channelPresent = queue.find(function(c4) {
      return c4.url === channel.url;
    });
    if (!channelPresent) {
      queue.push(channel);
    } else {
      logger.info("Channel: Mark as read already in queue", { channel });
    }
    if (interval) {
      return;
    }
    var item = queue.shift();
    if (item) {
      cb(item);
    }
    interval = setInterval(function() {
      if (queue.length === 0 && interval) {
        clearInterval(interval);
        interval = null;
        return;
      }
      var item2 = queue.shift();
      if (item2) {
        cb(item2);
      }
    }, timeout || TIMEOUT);
  };
  var clear = function() {
    queue = [];
    if (interval) {
      clearInterval(interval);
      interval = null;
    }
  };
  return {
    push,
    clear,
    getQueue: function() {
      return queue;
    }
  };
}
function useUnmount(callback, deps) {
  if (deps === void 0) {
    deps = [];
  }
  (0, import_react25.useLayoutEffect)(function() {
    return function() {
      callback();
    };
  }, deps);
}
function useMarkAsDeliveredScheduler(_a3, _b2) {
  var _this = this;
  var isConnected = _a3.isConnected;
  var logger = _b2.logger;
  var markAsDeliveredScheduler = (0, import_react25.useMemo)(function() {
    return schedulerFactory({
      logger,
      cb: function(channel) {
        return __awaiter(_this, void 0, void 0, function() {
          var error_1;
          return __generator(this, function(_a4) {
            switch (_a4.label) {
              case 0:
                _a4.trys.push([0, 2, , 3]);
                return [4, channel.markAsDelivered()];
              case 1:
                _a4.sent();
                return [3, 3];
              case 2:
                error_1 = _a4.sent();
                logger.warning("Channel: Mark as delivered failed", { channel, error: error_1 });
                return [3, 3];
              case 3:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }
    });
  }, []);
  (0, import_react25.useEffect)(function() {
    if (!isConnected) {
      markAsDeliveredScheduler.clear();
    }
  }, [isConnected]);
  useUnmount(function() {
    markAsDeliveredScheduler.clear();
  });
  return markAsDeliveredScheduler;
}

// node_modules/@sendbird/uikit-react/chunks/bundle-B5OWYHQO.js
var pubSubFactory = function(opts) {
  var topics = {};
  return {
    __getTopics: function() {
      return topics;
    },
    subscribe: function(topic, listener) {
      var _a3;
      (_a3 = topics[topic]) !== null && _a3 !== void 0 ? _a3 : topics[topic] = /* @__PURE__ */ new Set();
      topics[topic].add(listener);
      return {
        remove: function() {
          topics[topic].delete(listener);
        }
      };
    },
    publish: function(topic, info) {
      if (topics[topic]) {
        topics[topic].forEach(function(fn4) {
          if (opts === null || opts === void 0 ? void 0 : opts.publishSynchronous) {
            fn4(info !== void 0 ? info : {});
          } else {
            setTimeout(function() {
              return fn4(info !== void 0 ? info : {});
            }, 0);
          }
        });
      }
    }
  };
};

// node_modules/@sendbird/uikit-react/chunks/bundle-BOn8npYv.js
function getCaseResolvedReplyType(replyType) {
  return {
    lowerCase: replyType.toLowerCase(),
    upperCase: replyType.toUpperCase()
  };
}
function getCaseResolvedThreadReplySelectType(threadReplySelectType) {
  return {
    lowerCase: threadReplySelectType.toLowerCase(),
    upperCase: threadReplySelectType.toUpperCase()
  };
}

// node_modules/@sendbird/uikit-react/chunks/bundle-BbVJcZ9w.js
var import_react26 = __toESM(require_react(), 1);
var useHTMLTextDirection = function(direction) {
  (0, import_react26.useEffect)(function() {
    var targetElement = document.getElementById(VOICE_PLAYER_ROOT_ID);
    targetElement.parentElement.dir = direction;
  }, [direction]);
};
var useMessageLayoutDirection = function(direction, forceLeftToRightMessageLayout, loading) {
  (0, import_react26.useEffect)(function() {
    if (loading)
      return;
    var messageListElements = document.getElementsByClassName("sendbird-conversation__messages");
    if (messageListElements.length > 0) {
      Array.from(messageListElements).forEach(function(elem) {
        elem.dir = forceLeftToRightMessageLayout ? "ltr" : direction;
      });
    }
  }, [direction, forceLeftToRightMessageLayout, loading]);
};

// node_modules/@sendbird/uikit-react/SendbirdProvider.js
var import_react_dom3 = __toESM(require_react_dom(), 1);
var DEFAULT_COLOR_SET = {
  "--sendbird-dark-primary-500": "#4d2aa6",
  "--sendbird-dark-primary-400": "#6440C4",
  "--sendbird-dark-primary-300": "#7B53EF",
  "--sendbird-dark-primary-200": "#9E8CF5",
  "--sendbird-dark-primary-100": "#E2DFFF",
  "--sendbird-dark-secondary-500": "#007A7A",
  "--sendbird-dark-secondary-400": "#189A8D",
  "--sendbird-dark-secondary-300": "#2EBA9F",
  "--sendbird-dark-secondary-200": "#6FD6BE",
  "--sendbird-dark-secondary-100": "#AEF2DC",
  "--sendbird-dark-information-100": "#b2d9ff",
  "--sendbird-dark-error-500": "#A30E2D",
  "--sendbird-dark-error-400": "#C11F41",
  "--sendbird-dark-error-300": "#E53157",
  "--sendbird-dark-error-200": "#FF6183",
  "--sendbird-dark-error-100": "#FFABBD",
  "--sendbird-dark-background-700": "#000000",
  "--sendbird-dark-background-600": "#161616",
  "--sendbird-dark-background-500": "#2C2C2C",
  "--sendbird-dark-background-400": "#393939",
  "--sendbird-dark-background-300": "#A8A8A8",
  "--sendbird-dark-background-200": "#D9D9D9",
  "--sendbird-dark-background-100": "#F0F0F0",
  "--sendbird-dark-background-50": "#FFFFFF",
  "--sendbird-dark-overlay": "rgba(0, 0, 0, 0.32)",
  "--sendbird-dark-onlight-01": "rgba(0, 0, 0, 0.88)",
  "--sendbird-dark-onlight-02": "rgba(0, 0, 0, 0.50)",
  "--sendbird-dark-onlight-03": "rgba(0, 0, 0, 0.38)",
  "--sendbird-dark-onlight-04": "rgba(0, 0, 0, 0.12)",
  "--sendbird-dark-ondark-01": "rgba(255, 255, 255, 0.88)",
  "--sendbird-dark-ondark-02": "rgba(255, 255, 255, 0.50)",
  "--sendbird-dark-ondark-03": "rgba(255, 255, 255, 0.38)",
  "--sendbird-dark-ondark-04": "rgba(255, 255, 255, 0.12)",
  "--sendbird-dark-shadow-01": "0 1px 5px 0 rgba(33, 34, 66, 0.04), 0 0 3px 0 rgba(0, 0, 0, 0.08), 0 2px 1px 0 rgba(0, 0, 0, 0.12)",
  "--sendbird-dark-shadow-02": "0 3px 5px -3px rgba(33, 34, 66, 0.04), 0 3px 14px 2px rgba(0, 0, 0, 0.08), 0 8px 10px 1px rgba(0, 0, 0, 0.12)",
  "--sendbird-dark-shadow-03": "0 6px 10px -5px rgba(0, 0, 0, 0.04), 0 6px 30px 5px rgba(0, 0, 0, 0.08), 0 16px 24px 2px rgba(0, 0, 0, 0.12)",
  "--sendbird-dark-shadow-04": "0 9px 15px -7px rgba(0, 0, 0, 0.04), 0 9px 46px 8px rgba(0, 0, 0, 0.08), 0 24px 38px 3px rgba(0, 0, 0, 0.12)",
  "--sendbird-dark-shadow-message-input": "0 1px 5px 0 rgba(33, 34, 66, 0.12), 0 0 1px 0 rgba(33, 34, 66, 0.16), 0 2px 1px 0 rgba(33, 34, 66, 0.08), 0 1px 5px 0 rgba(0, 0, 0, 0.12)",
  "--sendbird-light-primary-500": "#4d2aa6",
  "--sendbird-light-primary-400": "#6440C4",
  "--sendbird-light-primary-300": "#7B53EF",
  "--sendbird-light-primary-200": "#9E8CF5",
  "--sendbird-light-primary-100": "#E2DFFF",
  "--sendbird-light-secondary-500": "#007A7A",
  "--sendbird-light-secondary-400": "#189A8D",
  "--sendbird-light-secondary-300": "#2EBA9F",
  "--sendbird-light-secondary-200": "#6FD6BE",
  "--sendbird-light-secondary-100": "#AEF2DC",
  "--sendbird-light-information-100": "#b2d9ff",
  "--sendbird-light-error-500": "#A30E2D",
  "--sendbird-light-error-400": "#C11F41",
  "--sendbird-light-error-300": "#E53157",
  "--sendbird-light-error-200": "#FF6183",
  "--sendbird-light-error-100": "#FFABBD",
  "--sendbird-light-background-700": "#000000",
  "--sendbird-light-background-600": "#161616",
  "--sendbird-light-background-500": "#2C2C2C",
  "--sendbird-light-background-400": "#393939",
  "--sendbird-light-background-300": "#A8A8A8",
  "--sendbird-light-background-200": "#D9D9D9",
  "--sendbird-light-background-100": "#F0F0F0",
  "--sendbird-light-background-50": " #FFFFFF",
  "--sendbird-light-overlay": "rgba(0, 0, 0, 0.32)",
  "--sendbird-light-onlight-01": "rgba(0, 0, 0, 0.88)",
  "--sendbird-light-onlight-02": "rgba(0, 0, 0, 0.50)",
  "--sendbird-light-onlight-03": "rgba(0, 0, 0, 0.38)",
  "--sendbird-light-onlight-04": "rgba(0, 0, 0, 0.12)",
  "--sendbird-light-ondark-01": "rgba(255, 255, 255, 0.88)",
  "--sendbird-light-ondark-02": "rgba(255, 255, 255, 0.50)",
  "--sendbird-light-ondark-03": "rgba(255, 255, 255, 0.38)",
  "--sendbird-light-ondark-04": "rgba(255, 255, 255, 0.12)",
  "--sendbird-light-shadow-01": "0 1px 5px 0 rgba(33, 34, 66, 0.04), 0 0 3px 0 rgba(0, 0, 0, 0.08), 0 2px 1px 0 rgba(0, 0, 0, 0.12)",
  "--sendbird-light-shadow-02": "0 3px 5px -3px rgba(33, 34, 66, 0.04), 0 3px 14px 2px rgba(0, 0, 0, 0.08), 0 8px 10px 1px rgba(0, 0, 0, 0.12)",
  "--sendbird-light-shadow-03": "0 6px 10px -5px rgba(0, 0, 0, 0.04), 0 6px 30px 5px rgba(0, 0, 0, 0.08), 0 16px 24px 2px rgba(0, 0, 0, 0.12)",
  "--sendbird-light-shadow-04": "0 9px 15px -7px rgba(0, 0, 0, 0.04), 0 9px 46px 8px rgba(0, 0, 0, 0.08), 0 24px 38px 3px rgba(0, 0, 0, 0.12)",
  "--sendbird-light-shadow-message-input": "0 1px 5px 0 rgba(33, 34, 66, 0.12), 0 0 1px 0 rgba(33, 34, 66, 0.16), 0 2px 1px 0 rgba(33, 34, 66, 0.08), 0 1px 5px 0 rgba(0, 0, 0, 0.12)"
};
var isEmpty = function(obj) {
  if (obj === null || obj === void 0) {
    return true;
  }
  for (var prop in obj) {
    if (obj.hasOwnProperty(prop)) {
      return false;
    }
  }
  return JSON.stringify(obj) === JSON.stringify({});
};
var useTheme = function(overrides) {
  (0, import_react27.useLayoutEffect)(function() {
    if (!isEmpty(overrides)) {
      var variables = __assign(__assign({}, DEFAULT_COLOR_SET), mapColorKeys(overrides));
      cssVars({ variables });
    }
  }, [overrides]);
};
var SDK_ACTIONS = {
  INIT_SDK: "INIT_SDK",
  SET_SDK_LOADING: "SET_SDK_LOADING",
  RESET_SDK: "RESET_SDK",
  SDK_ERROR: "SDK_ERROR"
};
var initialState$2 = {
  initialized: false,
  loading: false,
  sdk: {},
  error: false
};
function reducer$2(state, action) {
  return K2(action).with({ type: SDK_ACTIONS.SET_SDK_LOADING }, function(_a3) {
    var payload = _a3.payload;
    return __assign(__assign({}, state), { initialized: false, loading: payload });
  }).with({ type: SDK_ACTIONS.SDK_ERROR }, function() {
    return __assign(__assign({}, state), { initialized: false, loading: false, error: true });
  }).with({ type: SDK_ACTIONS.INIT_SDK }, function(_a3) {
    var payload = _a3.payload;
    return {
      sdk: payload,
      initialized: true,
      loading: false,
      error: false
    };
  }).with({ type: SDK_ACTIONS.RESET_SDK }, function() {
    return initialState$2;
  }).otherwise(function() {
    return state;
  });
}
var initialState$1 = {
  initialized: false,
  loading: false,
  user: {}
};
function reducer$1(state, action) {
  return K2(action).with({ type: USER_ACTIONS.INIT_USER }, function(_a3) {
    var payload = _a3.payload;
    return {
      initialized: true,
      loading: false,
      user: payload
    };
  }).with({ type: USER_ACTIONS.RESET_USER }, function() {
    return initialState$1;
  }).with({ type: USER_ACTIONS.UPDATE_USER_INFO }, function(_a3) {
    var payload = _a3.payload;
    return __assign(__assign({}, state), { user: payload });
  }).otherwise(function() {
    return state;
  });
}
var APP_INFO_ACTIONS = {
  INITIALIZE_MESSAGE_TEMPLATES_INFO: "INITIALIZE_MESSAGE_TEMPLATES_INFO",
  UPSERT_MESSAGE_TEMPLATES: "UPSERT_MESSAGE_TEMPLATES",
  UPSERT_WAITING_TEMPLATE_KEYS: "UPSERT_WAITING_TEMPLATE_KEYS",
  MARK_ERROR_WAITING_TEMPLATE_KEYS: "MARK_ERROR_WAITING_TEMPLATE_KEYS"
};
function reducer2(state, action) {
  return K2(action).with({ type: APP_INFO_ACTIONS.INITIALIZE_MESSAGE_TEMPLATES_INFO }, function(_a3) {
    var payload = _a3.payload;
    return {
      messageTemplatesInfo: payload,
      waitingTemplateKeysMap: {}
    };
  }).with({ type: APP_INFO_ACTIONS.UPSERT_MESSAGE_TEMPLATES }, function(_a3) {
    var payload = _a3.payload;
    var templatesInfo = state.messageTemplatesInfo;
    if (!templatesInfo)
      return state;
    var waitingTemplateKeysMap = __assign({}, state.waitingTemplateKeysMap);
    payload.forEach(function(templatesMapData) {
      var key = templatesMapData.key, template = templatesMapData.template;
      templatesInfo.templatesMap[key] = template;
      delete waitingTemplateKeysMap[key];
    });
    return __assign(__assign({}, state), { waitingTemplateKeysMap, messageTemplatesInfo: templatesInfo });
  }).with({ type: APP_INFO_ACTIONS.UPSERT_WAITING_TEMPLATE_KEYS }, function(_a3) {
    var payload = _a3.payload;
    var keys = payload.keys, requestedAt = payload.requestedAt;
    var waitingTemplateKeysMap = __assign({}, state.waitingTemplateKeysMap);
    keys.forEach(function(key) {
      var _a4, _b2;
      waitingTemplateKeysMap[key] = {
        erroredMessageIds: (_b2 = (_a4 = waitingTemplateKeysMap[key]) === null || _a4 === void 0 ? void 0 : _a4.erroredMessageIds) !== null && _b2 !== void 0 ? _b2 : [],
        requestedAt
      };
    });
    return __assign(__assign({}, state), { waitingTemplateKeysMap });
  }).with({ type: APP_INFO_ACTIONS.MARK_ERROR_WAITING_TEMPLATE_KEYS }, function(_a3) {
    var payload = _a3.payload;
    var keys = payload.keys, messageId = payload.messageId;
    var waitingTemplateKeysMap = __assign({}, state.waitingTemplateKeysMap);
    keys.forEach(function(key) {
      var waitingTemplateKeyData = waitingTemplateKeysMap[key];
      if (waitingTemplateKeyData && waitingTemplateKeyData.erroredMessageIds.indexOf(messageId) === -1) {
        waitingTemplateKeyData.erroredMessageIds.push(messageId);
      }
    });
    return __assign(__assign({}, state), { waitingTemplateKeysMap });
  }).otherwise(function() {
    return state;
  });
}
var initialState = {
  waitingTemplateKeysMap: {}
};
function disconnectSdk(_a3) {
  return __awaiter(this, arguments, void 0, function(_b2) {
    var sdkDispatcher = _b2.sdkDispatcher, userDispatcher = _b2.userDispatcher, sdk = _b2.sdk;
    return __generator(this, function(_c) {
      return [2, new Promise(function(resolve) {
        sdkDispatcher({ type: SDK_ACTIONS.SET_SDK_LOADING, payload: true });
        if (sdk === null || sdk === void 0 ? void 0 : sdk.disconnectWebSocket) {
          sdk.disconnectWebSocket().then(function() {
            sdkDispatcher({ type: SDK_ACTIONS.RESET_SDK });
            userDispatcher({ type: USER_ACTIONS.RESET_USER });
          }).finally(function() {
            resolve(true);
          });
        } else {
          resolve(true);
        }
      })];
    });
  });
}
var APP_VERSION_STRING = "3.15.5";
var INIT_SDK = SDK_ACTIONS.INIT_SDK;
var SET_SDK_LOADING = SDK_ACTIONS.SET_SDK_LOADING;
var RESET_SDK = SDK_ACTIONS.RESET_SDK;
var SDK_ERROR = SDK_ACTIONS.SDK_ERROR;
var INIT_USER = USER_ACTIONS.INIT_USER;
var UPDATE_USER_INFO = USER_ACTIONS.UPDATE_USER_INFO;
var RESET_USER = USER_ACTIONS.RESET_USER;
function getMissingParamError(_a3) {
  var userId = _a3.userId, appId = _a3.appId;
  return "SendbirdProvider | useConnect/setupConnection/Connection failed UserId: ".concat(userId, " or appId: ").concat(appId, " missing");
}
function getConnectSbError(error) {
  return "SendbirdProvider | useConnect/setupConnection/Connection failed. ".concat((error === null || error === void 0 ? void 0 : error.code) || "", " ").concat((error === null || error === void 0 ? void 0 : error.message) || "");
}
function setUpConnection(_a3) {
  return __awaiter(this, arguments, void 0, function(_b2) {
    var errorMessage;
    var _this = this;
    var _c, _d;
    var logger = _b2.logger, sdkDispatcher = _b2.sdkDispatcher, userDispatcher = _b2.userDispatcher, initDashboardConfigs = _b2.initDashboardConfigs, userId = _b2.userId, appId = _b2.appId, isNewApp = _b2.isNewApp, customApiHost = _b2.customApiHost, customWebSocketHost = _b2.customWebSocketHost, configureSession = _b2.configureSession, nickname = _b2.nickname, profileUrl = _b2.profileUrl, accessToken = _b2.accessToken, isUserIdUsedForNickname = _b2.isUserIdUsedForNickname, sdkInitParams = _b2.sdkInitParams, customExtensionParams = _b2.customExtensionParams, _e3 = _b2.isMobile, isMobile = _e3 === void 0 ? false : _e3, eventHandlers = _b2.eventHandlers, initializeMessageTemplatesInfo = _b2.initializeMessageTemplatesInfo;
    return __generator(this, function(_f) {
      (_c = logger.info) === null || _c === void 0 ? void 0 : _c.call(logger, "SendbirdProvider | useConnect/setupConnection/init", { userId, appId });
      sdkDispatcher({ type: SET_SDK_LOADING, payload: true });
      if (!userId || !appId) {
        errorMessage = getMissingParamError({ userId, appId });
        (_d = logger.error) === null || _d === void 0 ? void 0 : _d.call(logger, errorMessage);
        sdkDispatcher({ type: SDK_ERROR });
        return [2, Promise.reject(errorMessage)];
      }
      return [2, new Promise(function(resolve, reject) {
        var _a4;
        (_a4 = logger.info) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "SendbirdProvider | useConnect/setupConnection/connect connecting using ".concat(accessToken !== null && accessToken !== void 0 ? accessToken : userId));
        var sdk = initSDK({ appId, customApiHost, customWebSocketHost, isNewApp, sdkInitParams });
        var sessionHandler = typeof configureSession === "function" ? configureSession(sdk) : void 0;
        setupSDK(sdk, { logger, sessionHandler, customExtensionParams, isMobile });
        sdk.connect(userId, accessToken).then(function(user) {
          return onConnected(user);
        }).catch(function(error) {
          return __awaiter(_this, void 0, void 0, function() {
            var sessionToken, user, error_1;
            var _a5;
            return __generator(this, function(_b3) {
              switch (_b3.label) {
                case 0:
                  if (!(shouldRetryWithValidSessionToken(error) && sessionHandler)) return [3, 6];
                  _b3.label = 1;
                case 1:
                  _b3.trys.push([1, 5, , 6]);
                  return [4, new Promise(sessionHandler.onSessionTokenRequired)];
                case 2:
                  sessionToken = _b3.sent();
                  if (!sessionToken) return [3, 4];
                  (_a5 = logger.info) === null || _a5 === void 0 ? void 0 : _a5.call(logger, "SendbirdProvider | useConnect/setupConnection/connect retry connect with valid session token: ".concat(sessionToken.slice(0, 10) + "..."));
                  return [4, sdk.connect(userId, sessionToken)];
                case 3:
                  user = _b3.sent();
                  return [2, onConnected(user)];
                case 4:
                  return [3, 6];
                case 5:
                  error_1 = _b3.sent();
                  if (error_1 instanceof v) {
                    return [2, onConnectFailed(error_1)];
                  }
                  return [3, 6];
                case 6:
                  return [2, onConnectFailed(error)];
              }
            });
          });
        });
        var onConnected = function(user) {
          return __awaiter(_this, void 0, void 0, function() {
            var error_2, error_3, updateParams, updatedUser;
            var _b3, _c2, _d2, _e4, _f2, _g2, _h, _j;
            return __generator(this, function(_k) {
              switch (_k.label) {
                case 0:
                  (_b3 = logger.info) === null || _b3 === void 0 ? void 0 : _b3.call(logger, "SendbirdProvider | useConnect/setupConnection/onConnected", user);
                  sdkDispatcher({ type: INIT_SDK, payload: sdk });
                  userDispatcher({ type: INIT_USER, payload: user });
                  _k.label = 1;
                case 1:
                  _k.trys.push([1, 3, , 4]);
                  return [4, initializeMessageTemplatesInfo(sdk)];
                case 2:
                  _k.sent();
                  return [3, 4];
                case 3:
                  error_2 = _k.sent();
                  (_c2 = logger.error) === null || _c2 === void 0 ? void 0 : _c2.call(logger, "SendbirdProvider | useConnect/setupConnection/upsertMessageTemplateListInLocalStorage failed", { error: error_2 });
                  return [3, 4];
                case 4:
                  _k.trys.push([4, 6, , 7]);
                  return [4, initDashboardConfigs(sdk)];
                case 5:
                  _k.sent();
                  (_d2 = logger.info) === null || _d2 === void 0 ? void 0 : _d2.call(logger, "SendbirdProvider | useConnect/setupConnection/getUIKitConfiguration success");
                  return [3, 7];
                case 6:
                  error_3 = _k.sent();
                  (_e4 = logger.error) === null || _e4 === void 0 ? void 0 : _e4.call(logger, "SendbirdProvider | useConnect/setupConnection/getUIKitConfiguration failed", { error: error_3 });
                  return [3, 7];
                case 7:
                  _k.trys.push([7, 10, , 11]);
                  if (!((nickname !== user.nickname || profileUrl !== user.profileUrl) && !(isTextuallyNull(nickname) && isTextuallyNull(profileUrl)))) return [3, 9];
                  (_f2 = logger.info) === null || _f2 === void 0 ? void 0 : _f2.call(logger, "SendbirdProvider | useConnect/setupConnection/updateCurrentUserInfo", { nickname, profileUrl });
                  updateParams = {
                    nickname: nickname || user.nickname || (isUserIdUsedForNickname ? user.userId : ""),
                    profileUrl: profileUrl || user.profileUrl
                  };
                  return [4, sdk.updateCurrentUserInfo(updateParams)];
                case 8:
                  updatedUser = _k.sent();
                  (_g2 = logger.info) === null || _g2 === void 0 ? void 0 : _g2.call(logger, "SendbirdProvider | useConnect/setupConnection/updateCurrentUserInfo success", updateParams);
                  userDispatcher({ type: UPDATE_USER_INFO, payload: updatedUser });
                  _k.label = 9;
                case 9:
                  return [3, 11];
                case 10:
                  _k.sent();
                  return [3, 11];
                case 11:
                  resolve();
                  (_j = (_h = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.connection) === null || _h === void 0 ? void 0 : _h.onConnected) === null || _j === void 0 ? void 0 : _j.call(_h, user);
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
        var onConnectFailed = function(e4) {
          return __awaiter(_this, void 0, void 0, function() {
            var errorMessage2;
            var _a5, _b3, _c2, _d2;
            return __generator(this, function(_e4) {
              switch (_e4.label) {
                case 0:
                  if (!(sdk.isCacheEnabled && shouldClearCache(e4))) return [3, 2];
                  (_a5 = logger.error) === null || _a5 === void 0 ? void 0 : _a5.call(logger, "SendbirdProvider | useConnect/setupConnection/connect clear cache [".concat(e4.code, "/").concat(e4.message, "]"));
                  return [4, sdk.clearCachedData()];
                case 1:
                  _e4.sent();
                  _e4.label = 2;
                case 2:
                  errorMessage2 = getConnectSbError(e4);
                  (_b3 = logger.error) === null || _b3 === void 0 ? void 0 : _b3.call(logger, errorMessage2, { e: e4, appId, userId });
                  userDispatcher({ type: RESET_USER });
                  sdkDispatcher({ type: RESET_SDK });
                  sdkDispatcher({ type: SDK_ERROR });
                  reject(errorMessage2);
                  (_d2 = (_c2 = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.connection) === null || _c2 === void 0 ? void 0 : _c2.onFailed) === null || _d2 === void 0 ? void 0 : _d2.call(_c2, e4);
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        };
      })];
    });
  });
}
function initSDK(_a3) {
  var appId = _a3.appId, _b2 = _a3.isNewApp, isNewApp = _b2 === void 0 ? false : _b2, customApiHost = _a3.customApiHost, customWebSocketHost = _a3.customWebSocketHost, _c = _a3.sdkInitParams, sdkInitParams = _c === void 0 ? {} : _c;
  var params = Object.assign(sdkInitParams, {
    appId,
    modules: [new $e2(), new ke3()],
    newInstance: isNewApp,
    localCacheEnabled: true
  });
  if (customApiHost)
    params.customApiHost = customApiHost;
  if (customWebSocketHost)
    params.customWebSocketHost = customWebSocketHost;
  return In3.init(params);
}
function setupSDK(sdk, params) {
  var _a3, _b2;
  var logger = params.logger, sessionHandler = params.sessionHandler, isMobile = params.isMobile, customExtensionParams = params.customExtensionParams;
  (_a3 = logger.info) === null || _a3 === void 0 ? void 0 : _a3.call(logger, "SendbirdProvider | useConnect/setupConnection/setVersion", { version: APP_VERSION_STRING });
  sdk.addExtension("sb_uikit", APP_VERSION_STRING);
  sdk.addSendbirdExtensions([{ product: Be.UIKIT_CHAT, version: APP_VERSION_STRING, platform: Qe === null || Qe === void 0 ? void 0 : Qe.JS }], { platform: isMobile ? We.MOBILE_WEB : We.WEB }, customExtensionParams);
  if (sessionHandler) {
    (_b2 = logger.info) === null || _b2 === void 0 ? void 0 : _b2.call(logger, "SendbirdProvider | useConnect/setupConnection/configureSession", sessionHandler);
    sdk.setSessionHandler(sessionHandler);
  }
}
function shouldClearCache(error) {
  if (!(error instanceof v))
    return false;
  return [
    u.USER_AUTH_DEACTIVATED,
    u.USER_AUTH_DELETED_OR_NOT_FOUND,
    u.SESSION_TOKEN_EXPIRED,
    u.SESSION_REVOKED
  ].includes(error.code);
}
function shouldRetryWithValidSessionToken(error) {
  if (!(error instanceof v))
    return false;
  return [
    u.SESSION_TOKEN_EXPIRED,
    /**
     * Note: INVALID_TOKEN has been added arbitrarily due to legacy constraints
     *
     * In the useEffect of the useConnect hook, authentication is being performed
     * but changes of the `accessToken` is not being detected.
     * `disconnectSdk` is called when connect is called redundantly for the same user ID, causing issues, so `accessToken` has been excluded form the deps.
     *
     * In case the `accessToken` is missed, an additional attempt to connect is made
     * */
    u.INVALID_TOKEN
  ].includes(error.code);
}
function connect(_a3) {
  return __awaiter(this, arguments, void 0, function(_b2) {
    var logger = _b2.logger, sdkDispatcher = _b2.sdkDispatcher, userDispatcher = _b2.userDispatcher, appInfoDispatcher = _b2.appInfoDispatcher, initDashboardConfigs = _b2.initDashboardConfigs, userId = _b2.userId, appId = _b2.appId, _c = _b2.isNewApp, isNewApp = _c === void 0 ? false : _c, customApiHost = _b2.customApiHost, customWebSocketHost = _b2.customWebSocketHost, configureSession = _b2.configureSession, nickname = _b2.nickname, profileUrl = _b2.profileUrl, accessToken = _b2.accessToken, sdk = _b2.sdk, sdkInitParams = _b2.sdkInitParams, customExtensionParams = _b2.customExtensionParams, isMobile = _b2.isMobile, eventHandlers = _b2.eventHandlers, isUserIdUsedForNickname = _b2.isUserIdUsedForNickname, initializeMessageTemplatesInfo = _b2.initializeMessageTemplatesInfo;
    return __generator(this, function(_d) {
      switch (_d.label) {
        case 0:
          return [4, disconnectSdk({
            logger,
            sdkDispatcher,
            userDispatcher,
            sdk
          })];
        case 1:
          _d.sent();
          return [4, setUpConnection({
            logger,
            sdkDispatcher,
            userDispatcher,
            appInfoDispatcher,
            initDashboardConfigs,
            userId,
            appId,
            isNewApp,
            customApiHost,
            customWebSocketHost,
            configureSession,
            nickname,
            profileUrl,
            accessToken,
            sdkInitParams,
            customExtensionParams,
            isMobile,
            eventHandlers,
            isUserIdUsedForNickname,
            initializeMessageTemplatesInfo
          })];
        case 2:
          _d.sent();
          return [
            2
            /*return*/
          ];
      }
    });
  });
}
function useConnect(triggerTypes, staticTypes) {
  var _this = this;
  var userId = triggerTypes.userId, appId = triggerTypes.appId, accessToken = triggerTypes.accessToken, isMobile = triggerTypes.isMobile, isUserIdUsedForNickname = triggerTypes.isUserIdUsedForNickname;
  var logger = staticTypes.logger, nickname = staticTypes.nickname, profileUrl = staticTypes.profileUrl, configureSession = staticTypes.configureSession, customApiHost = staticTypes.customApiHost, customWebSocketHost = staticTypes.customWebSocketHost, sdk = staticTypes.sdk, sdkDispatcher = staticTypes.sdkDispatcher, userDispatcher = staticTypes.userDispatcher, appInfoDispatcher = staticTypes.appInfoDispatcher, initDashboardConfigs = staticTypes.initDashboardConfigs, sdkInitParams = staticTypes.sdkInitParams, customExtensionParams = staticTypes.customExtensionParams, eventHandlers = staticTypes.eventHandlers, initializeMessageTemplatesInfo = staticTypes.initializeMessageTemplatesInfo;
  var connectDeps = (0, import_react27.useRef)({
    appId: "",
    userId: ""
  });
  (0, import_react27.useEffect)(function() {
    var _a3;
    (_a3 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a3 === void 0 ? void 0 : _a3.call(logger, "SendbirdProvider | useConnect/useEffect", { userId, appId, accessToken });
    var isNewApp = connectDeps.current.appId !== appId;
    if (connectDeps.current.appId === appId && connectDeps.current.userId === userId) {
      return;
    } else {
      connectDeps.current = { appId, userId };
    }
    connect({
      userId,
      appId,
      isNewApp,
      accessToken,
      logger,
      nickname,
      profileUrl,
      configureSession,
      customApiHost,
      customWebSocketHost,
      sdk,
      sdkDispatcher,
      userDispatcher,
      appInfoDispatcher,
      initDashboardConfigs,
      isUserIdUsedForNickname,
      sdkInitParams,
      customExtensionParams,
      isMobile,
      eventHandlers,
      initializeMessageTemplatesInfo
    }).catch(function(error) {
      var _a4;
      (_a4 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "SendbirdProvider | useConnect/useEffect", error);
    });
  }, [userId, appId]);
  var reconnect = (0, import_react27.useCallback)(function() {
    return __awaiter(_this, void 0, void 0, function() {
      var error_1;
      var _a3, _b2;
      return __generator(this, function(_c) {
        switch (_c.label) {
          case 0:
            (_a3 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a3 === void 0 ? void 0 : _a3.call(logger, "SendbirdProvider | useConnect/reconnect/useCallback", { sdk });
            _c.label = 1;
          case 1:
            _c.trys.push([1, 3, , 4]);
            return [4, connect({
              userId,
              appId,
              accessToken,
              logger,
              nickname,
              profileUrl,
              configureSession,
              customApiHost,
              customWebSocketHost,
              sdk,
              sdkDispatcher,
              userDispatcher,
              appInfoDispatcher,
              initDashboardConfigs,
              isUserIdUsedForNickname,
              sdkInitParams,
              customExtensionParams,
              isMobile,
              eventHandlers,
              initializeMessageTemplatesInfo
            })];
          case 2:
            _c.sent();
            return [3, 4];
          case 3:
            error_1 = _c.sent();
            (_b2 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _b2 === void 0 ? void 0 : _b2.call(logger, "SendbirdProvider | useConnect/reconnect/useCallback", error_1);
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [sdk]);
  return reconnect;
}
var LOG_LEVELS = {
  DEBUG: "debug",
  WARNING: "warning",
  ERROR: "error",
  INFO: "info",
  ALL: "all"
};
var colorLog = function(level) {
  switch (level) {
    case LOG_LEVELS.WARNING:
      return "color: Orange";
    case LOG_LEVELS.ERROR:
      return "color: Red";
    default:
      return "color: Gray";
  }
};
var printLog = function(_a3) {
  var level = _a3.level, title = _a3.title, _b2 = _a3.description, description = _b2 === void 0 ? "" : _b2, _c = _a3.payload, payload = _c === void 0 ? [] : _c;
  console.log.apply(console, __spreadArray(["%c SendbirdUIKit | ".concat(level, " | ").concat((/* @__PURE__ */ new Date()).toISOString(), " | ").concat(title, " ").concat(description && "|"), colorLog(level), description], payload, false));
};
var getDefaultLogger = function() {
  return {
    info: noop,
    error: noop,
    warning: noop
  };
};
var LoggerFactory = function(lvl, customInterface) {
  var logInterface = printLog;
  var lvlArray = Array.isArray(lvl) ? lvl : [lvl];
  var applyLog = function(lgLvl) {
    return function(title, description) {
      var payload = [];
      for (var _i2 = 2; _i2 < arguments.length; _i2++) {
        payload[_i2 - 2] = arguments[_i2];
      }
      return logInterface({
        level: lgLvl,
        title,
        description,
        payload
      });
    };
  };
  return lvlArray.reduce(function(accumulator, currentLvl) {
    if (currentLvl === LOG_LEVELS.DEBUG || currentLvl === LOG_LEVELS.ALL) {
      return __assign(__assign({}, accumulator), { info: applyLog(LOG_LEVELS.INFO), error: applyLog(LOG_LEVELS.ERROR), warning: applyLog(LOG_LEVELS.WARNING) });
    }
    if (currentLvl === LOG_LEVELS.INFO) {
      return __assign(__assign({}, accumulator), { info: applyLog(LOG_LEVELS.INFO) });
    }
    if (currentLvl === LOG_LEVELS.ERROR) {
      return __assign(__assign({}, accumulator), { error: applyLog(LOG_LEVELS.ERROR) });
    }
    if (currentLvl === LOG_LEVELS.WARNING) {
      return __assign(__assign({}, accumulator), { warning: applyLog(LOG_LEVELS.WARNING) });
    }
    return __assign({}, accumulator);
  }, getDefaultLogger());
};
var VoiceMessageProvider = function(_a3) {
  var children = _a3.children;
  return import_react27.default.createElement(
    VoicePlayerProvider,
    null,
    import_react27.default.createElement(VoiceRecorderProvider, null, children)
  );
};
function uikitConfigMapper(_a3) {
  var _b2, _c, _d, _e3, _f, _g2, _h, _j, _k, _l, _m, _o2, _p, _q, _r2, _s4, _t3, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8;
  var legacyConfig = _a3.legacyConfig, _9 = _a3.uikitOptions, uikitOptions = _9 === void 0 ? {} : _9;
  var replyType = legacyConfig.replyType, isMentionEnabled = legacyConfig.isMentionEnabled, isReactionEnabled = legacyConfig.isReactionEnabled, disableUserProfile = legacyConfig.disableUserProfile, isVoiceMessageEnabled = legacyConfig.isVoiceMessageEnabled, isTypingIndicatorEnabledOnChannelList = legacyConfig.isTypingIndicatorEnabledOnChannelList, isMessageReceiptStatusEnabledOnChannelList = legacyConfig.isMessageReceiptStatusEnabledOnChannelList, showSearchIcon = legacyConfig.showSearchIcon;
  return {
    common: {
      enableUsingDefaultUserProfile: (_c = (_b2 = uikitOptions.common) === null || _b2 === void 0 ? void 0 : _b2.enableUsingDefaultUserProfile) !== null && _c !== void 0 ? _c : typeof disableUserProfile === "boolean" ? !disableUserProfile : void 0
    },
    groupChannel: {
      enableOgtag: (_d = uikitOptions.groupChannel) === null || _d === void 0 ? void 0 : _d.enableOgtag,
      enableMention: (_f = (_e3 = uikitOptions.groupChannel) === null || _e3 === void 0 ? void 0 : _e3.enableMention) !== null && _f !== void 0 ? _f : isMentionEnabled,
      enableReactions: (_h = (_g2 = uikitOptions.groupChannel) === null || _g2 === void 0 ? void 0 : _g2.enableReactions) !== null && _h !== void 0 ? _h : isReactionEnabled,
      enableReactionsSupergroup: (_j = uikitOptions.groupChannel) === null || _j === void 0 ? void 0 : _j.enableReactionsSupergroup,
      enableTypingIndicator: (_k = uikitOptions.groupChannel) === null || _k === void 0 ? void 0 : _k.enableTypingIndicator,
      enableVoiceMessage: (_m = (_l = uikitOptions.groupChannel) === null || _l === void 0 ? void 0 : _l.enableVoiceMessage) !== null && _m !== void 0 ? _m : isVoiceMessageEnabled,
      replyType: (_p = (_o2 = uikitOptions.groupChannel) === null || _o2 === void 0 ? void 0 : _o2.replyType) !== null && _p !== void 0 ? _p : replyType != null ? getCaseResolvedReplyType(replyType).lowerCase : void 0,
      threadReplySelectType: (_q = uikitOptions.groupChannel) === null || _q === void 0 ? void 0 : _q.threadReplySelectType,
      input: {
        enableDocument: (_s4 = (_r2 = uikitOptions.groupChannel) === null || _r2 === void 0 ? void 0 : _r2.input) === null || _s4 === void 0 ? void 0 : _s4.enableDocument
      },
      typingIndicatorTypes: (_t3 = uikitOptions.groupChannel) === null || _t3 === void 0 ? void 0 : _t3.typingIndicatorTypes,
      enableFeedback: (_u = uikitOptions.groupChannel) === null || _u === void 0 ? void 0 : _u.enableFeedback,
      enableSuggestedReplies: (_v = uikitOptions.groupChannel) === null || _v === void 0 ? void 0 : _v.enableSuggestedReplies,
      showSuggestedRepliesFor: (_w = uikitOptions.groupChannel) === null || _w === void 0 ? void 0 : _w.showSuggestedRepliesFor,
      suggestedRepliesDirection: (_x = uikitOptions.groupChannel) === null || _x === void 0 ? void 0 : _x.suggestedRepliesDirection,
      enableMarkdownForUserMessage: (_y = uikitOptions.groupChannel) === null || _y === void 0 ? void 0 : _y.enableMarkdownForUserMessage,
      enableFormTypeMessage: (_z = uikitOptions.groupChannel) === null || _z === void 0 ? void 0 : _z.enableFormTypeMessage
    },
    groupChannelList: {
      enableTypingIndicator: (_1 = (_0 = uikitOptions.groupChannelList) === null || _0 === void 0 ? void 0 : _0.enableTypingIndicator) !== null && _1 !== void 0 ? _1 : isTypingIndicatorEnabledOnChannelList,
      enableMessageReceiptStatus: (_3 = (_2 = uikitOptions.groupChannelList) === null || _2 === void 0 ? void 0 : _2.enableMessageReceiptStatus) !== null && _3 !== void 0 ? _3 : isMessageReceiptStatusEnabledOnChannelList
    },
    groupChannelSettings: {
      enableMessageSearch: (_5 = (_4 = uikitOptions.groupChannelSettings) === null || _4 === void 0 ? void 0 : _4.enableMessageSearch) !== null && _5 !== void 0 ? _5 : showSearchIcon
    },
    openChannel: {
      enableOgtag: (_6 = uikitOptions.openChannel) === null || _6 === void 0 ? void 0 : _6.enableOgtag,
      input: {
        enableDocument: (_8 = (_7 = uikitOptions.openChannel) === null || _7 === void 0 ? void 0 : _7.input) === null || _8 === void 0 ? void 0 : _8.enableDocument
      }
    }
  };
}
function useMarkAsReadScheduler(_a3, _b2) {
  var isConnected = _a3.isConnected;
  var logger = _b2.logger;
  var markAsReadScheduler = (0, import_react27.useMemo)(function() {
    return schedulerFactory({
      logger,
      cb: function(channel) {
        try {
          channel.markAsRead();
        } catch (error) {
          logger.warning("Channel: Mark as delivered failed", { channel, error });
        }
      }
    });
  }, []);
  (0, import_react27.useEffect)(function() {
    if (!isConnected) {
      markAsReadScheduler.clear();
    }
  }, [isConnected]);
  useUnmount(function() {
    markAsReadScheduler.clear();
  });
  return markAsReadScheduler;
}
var uikitConfigStorage = {
  getItem: function(key) {
    return __awaiter(this, void 0, void 0, function() {
      var _a3;
      return __generator(this, function(_b2) {
        return [2, (_a3 = localStorage.getItem(key)) !== null && _a3 !== void 0 ? _a3 : null];
      });
    });
  },
  setItem: function(key, value) {
    return __awaiter(this, void 0, void 0, function() {
      return __generator(this, function(_a3) {
        return [2, localStorage.setItem(key, value)];
      });
    });
  }
};
var getProcessedTemplate = function(parsedTemplate) {
  return {
    version: Number(parsedTemplate.ui_template.version),
    uiTemplate: JSON.stringify(parsedTemplate.ui_template.body.items),
    colorVariables: parsedTemplate.color_variables
  };
};
var getProcessedTemplatesMap = function(parsedTemplates) {
  var processedTemplates = {};
  parsedTemplates.forEach(function(template) {
    processedTemplates[template.key] = getProcessedTemplate(template);
  });
  return processedTemplates;
};
var MESSAGE_TEMPLATES_FETCH_LIMIT = 20;
var INITIALIZE_MESSAGE_TEMPLATES_INFO = APP_INFO_ACTIONS.INITIALIZE_MESSAGE_TEMPLATES_INFO;
var UPSERT_MESSAGE_TEMPLATES = APP_INFO_ACTIONS.UPSERT_MESSAGE_TEMPLATES;
var UPSERT_WAITING_TEMPLATE_KEYS = APP_INFO_ACTIONS.UPSERT_WAITING_TEMPLATE_KEYS;
var MARK_ERROR_WAITING_TEMPLATE_KEYS = APP_INFO_ACTIONS.MARK_ERROR_WAITING_TEMPLATE_KEYS;
function useMessageTemplateUtils(_a3) {
  var _this = this;
  var sdk = _a3.sdk, logger = _a3.logger, appInfoStore = _a3.appInfoStore, appInfoDispatcher = _a3.appInfoDispatcher;
  var messageTemplatesInfo = appInfoStore === null || appInfoStore === void 0 ? void 0 : appInfoStore.messageTemplatesInfo;
  var getCachedTemplate = function(key) {
    var _a4, _b2;
    if (!messageTemplatesInfo)
      return null;
    var cachedTemplate = null;
    var cachedMessageTemplates = (_a4 = messageTemplatesInfo === null || messageTemplatesInfo === void 0 ? void 0 : messageTemplatesInfo.templatesMap) !== null && _a4 !== void 0 ? _a4 : null;
    if (cachedMessageTemplates) {
      cachedTemplate = (_b2 = cachedMessageTemplates[key]) !== null && _b2 !== void 0 ? _b2 : null;
    }
    return cachedTemplate;
  };
  var fetchAllMessageTemplates = function(readySdk) {
    return __awaiter(_this, void 0, void 0, function() {
      var hasMore, paginationToken, fetchedTemplates, res;
      return __generator(this, function(_a4) {
        switch (_a4.label) {
          case 0:
            hasMore = true;
            paginationToken = null;
            fetchedTemplates = [];
            _a4.label = 1;
          case 1:
            if (!hasMore) return [3, 3];
            return [4, readySdk.message.getMessageTemplatesByToken(paginationToken, { limit: MESSAGE_TEMPLATES_FETCH_LIMIT })];
          case 2:
            res = _a4.sent();
            hasMore = res.hasMore;
            paginationToken = res.token;
            res.templates.forEach(function(messageTemplate) {
              fetchedTemplates.push(JSON.parse(messageTemplate.template));
            });
            return [3, 1];
          case 3:
            return [2, fetchedTemplates];
        }
      });
    });
  };
  var initializeMessageTemplatesInfo = function(readySdk) {
    return __awaiter(_this, void 0, void 0, function() {
      var sdkMessageTemplateToken, cachedMessageTemplatesToken, cachedMessageTemplates, parsedTemplates, newMessageTemplatesInfo, parsedTemplates, newMessageTemplatesInfo;
      var _a4;
      return __generator(this, function(_b2) {
        switch (_b2.label) {
          case 0:
            sdkMessageTemplateToken = (_a4 = readySdk.appInfo) === null || _a4 === void 0 ? void 0 : _a4.messageTemplateInfo.token;
            if (!sdkMessageTemplateToken) {
              localStorage.removeItem(CACHED_MESSAGE_TEMPLATES_TOKEN_KEY);
              localStorage.removeItem(CACHED_MESSAGE_TEMPLATES_KEY);
              return [
                2
                /*return*/
              ];
            }
            cachedMessageTemplatesToken = localStorage.getItem(CACHED_MESSAGE_TEMPLATES_TOKEN_KEY);
            cachedMessageTemplates = localStorage.getItem(CACHED_MESSAGE_TEMPLATES_KEY);
            if (!(!cachedMessageTemplatesToken || cachedMessageTemplatesToken !== sdkMessageTemplateToken)) return [3, 2];
            return [4, fetchAllMessageTemplates(readySdk)];
          case 1:
            parsedTemplates = _b2.sent();
            newMessageTemplatesInfo = {
              token: sdkMessageTemplateToken,
              templatesMap: getProcessedTemplatesMap(parsedTemplates)
            };
            appInfoDispatcher({ type: INITIALIZE_MESSAGE_TEMPLATES_INFO, payload: newMessageTemplatesInfo });
            localStorage.setItem(CACHED_MESSAGE_TEMPLATES_TOKEN_KEY, sdkMessageTemplateToken);
            localStorage.setItem(CACHED_MESSAGE_TEMPLATES_KEY, JSON.stringify(parsedTemplates));
            return [3, 3];
          case 2:
            if (cachedMessageTemplatesToken && cachedMessageTemplatesToken === sdkMessageTemplateToken && cachedMessageTemplates) {
              parsedTemplates = JSON.parse(cachedMessageTemplates);
              newMessageTemplatesInfo = {
                token: sdkMessageTemplateToken,
                templatesMap: getProcessedTemplatesMap(parsedTemplates)
              };
              appInfoDispatcher({ type: INITIALIZE_MESSAGE_TEMPLATES_INFO, payload: newMessageTemplatesInfo });
            }
            _b2.label = 3;
          case 3:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  var updateMessageTemplatesInfo = function(templateKeys, messageId, requestedAt) {
    return __awaiter(_this, void 0, void 0, function() {
      var newParsedTemplates_1, hasMore, token, result, e_1, cachedMessageTemplates, parsedTemplates_1, existingKeys_1;
      var _a4;
      return __generator(this, function(_b2) {
        switch (_b2.label) {
          case 0:
            if (!appInfoDispatcher) return [3, 7];
            appInfoDispatcher({
              type: UPSERT_WAITING_TEMPLATE_KEYS,
              payload: {
                keys: templateKeys,
                requestedAt
              }
            });
            newParsedTemplates_1 = [];
            _b2.label = 1;
          case 1:
            _b2.trys.push([1, 5, , 6]);
            hasMore = true;
            token = null;
            _b2.label = 2;
          case 2:
            if (!hasMore) return [3, 4];
            return [4, sdk.message.getMessageTemplatesByToken(token, {
              keys: templateKeys
            })];
          case 3:
            result = _b2.sent();
            result.templates.forEach(function(newTemplate) {
              newParsedTemplates_1.push(JSON.parse(newTemplate.template));
            });
            hasMore = result.hasMore;
            token = result.token;
            return [3, 2];
          case 4:
            return [3, 6];
          case 5:
            e_1 = _b2.sent();
            (_a4 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "Sendbird | fetchProcessedMessageTemplates failed", e_1, templateKeys);
            return [3, 6];
          case 6:
            if (newParsedTemplates_1.length > 0) {
              cachedMessageTemplates = localStorage.getItem(CACHED_MESSAGE_TEMPLATES_KEY);
              if (cachedMessageTemplates) {
                parsedTemplates_1 = JSON.parse(cachedMessageTemplates);
                existingKeys_1 = parsedTemplates_1.map(function(parsedTemplate) {
                  return parsedTemplate.key;
                });
                newParsedTemplates_1.forEach(function(newParsedTemplate) {
                  if (!existingKeys_1.includes(newParsedTemplate.key)) {
                    parsedTemplates_1.push(newParsedTemplate);
                  }
                });
                localStorage.setItem(CACHED_MESSAGE_TEMPLATES_KEY, JSON.stringify(parsedTemplates_1));
              } else {
                localStorage.setItem(CACHED_MESSAGE_TEMPLATES_KEY, JSON.stringify([newParsedTemplates_1]));
              }
              appInfoDispatcher({
                type: UPSERT_MESSAGE_TEMPLATES,
                payload: newParsedTemplates_1.map(function(newParsedTemplate) {
                  return {
                    key: newParsedTemplate.key,
                    template: getProcessedTemplate(newParsedTemplate)
                  };
                })
              });
            } else {
              appInfoDispatcher({
                type: MARK_ERROR_WAITING_TEMPLATE_KEYS,
                payload: {
                  keys: templateKeys,
                  messageId
                }
              });
            }
            _b2.label = 7;
          case 7:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  return {
    getCachedTemplate,
    updateMessageTemplatesInfo,
    initializeMessageTemplatesInfo
  };
}
function SendbirdProvider(props) {
  var localConfigs = uikitConfigMapper({
    legacyConfig: {
      replyType: props.replyType,
      isMentionEnabled: props.isMentionEnabled,
      isReactionEnabled: props.isReactionEnabled,
      disableUserProfile: props.disableUserProfile,
      isVoiceMessageEnabled: props.isVoiceMessageEnabled,
      isTypingIndicatorEnabledOnChannelList: props.isTypingIndicatorEnabledOnChannelList,
      isMessageReceiptStatusEnabledOnChannelList: props.isMessageReceiptStatusEnabledOnChannelList,
      showSearchIcon: props.showSearchIcon
    },
    uikitOptions: props.uikitOptions
  });
  return import_react27.default.createElement(
    UIKitConfigProvider,
    { storage: uikitConfigStorage, localConfigs: {
      common: localConfigs === null || localConfigs === void 0 ? void 0 : localConfigs.common,
      groupChannel: {
        channel: localConfigs === null || localConfigs === void 0 ? void 0 : localConfigs.groupChannel,
        channelList: localConfigs === null || localConfigs === void 0 ? void 0 : localConfigs.groupChannelList,
        setting: localConfigs === null || localConfigs === void 0 ? void 0 : localConfigs.groupChannelSettings
      },
      openChannel: {
        channel: localConfigs === null || localConfigs === void 0 ? void 0 : localConfigs.openChannel
      }
    } },
    import_react27.default.createElement(SendbirdSDK, __assign({}, props))
  );
}
var SendbirdSDK = function(_a3) {
  var _b2, _c, _d;
  var appId = _a3.appId, userId = _a3.userId, children = _a3.children, accessToken = _a3.accessToken, customApiHost = _a3.customApiHost, customWebSocketHost = _a3.customWebSocketHost, configureSession = _a3.configureSession, _e3 = _a3.theme, theme = _e3 === void 0 ? "light" : _e3, _f = _a3.config, config = _f === void 0 ? {} : _f, _g2 = _a3.nickname, nickname = _g2 === void 0 ? "" : _g2, colorSet = _a3.colorSet, stringSet2 = _a3.stringSet, dateLocale = _a3.dateLocale, _h = _a3.profileUrl, profileUrl = _h === void 0 ? "" : _h, voiceRecord = _a3.voiceRecord, userListQuery = _a3.userListQuery, _j = _a3.imageCompression, imageCompression = _j === void 0 ? {} : _j, _k = _a3.allowProfileEdit, allowProfileEdit = _k === void 0 ? false : _k, _l = _a3.disableMarkAsDelivered, disableMarkAsDelivered = _l === void 0 ? false : _l, renderUserProfile = _a3.renderUserProfile, _onUserProfileMessage = _a3.onUserProfileMessage, _onStartDirectMessage = _a3.onStartDirectMessage, _m = _a3.breakpoint, breakpoint = _m === void 0 ? false : _m, _o2 = _a3.isUserIdUsedForNickname, isUserIdUsedForNickname = _o2 === void 0 ? true : _o2, sdkInitParams = _a3.sdkInitParams, customExtensionParams = _a3.customExtensionParams, _p = _a3.isMultipleFilesMessageEnabled, isMultipleFilesMessageEnabled = _p === void 0 ? false : _p, eventHandlers = _a3.eventHandlers, _q = _a3.htmlTextDirection, htmlTextDirection = _q === void 0 ? "ltr" : _q, _r2 = _a3.forceLeftToRightMessageLayout, forceLeftToRightMessageLayout = _r2 === void 0 ? false : _r2;
  var onStartDirectMessage = _onStartDirectMessage !== null && _onStartDirectMessage !== void 0 ? _onStartDirectMessage : _onUserProfileMessage;
  var _s4 = config.logLevel, logLevel = _s4 === void 0 ? "" : _s4, _t3 = config.userMention, userMention = _t3 === void 0 ? {} : _t3, _u = config.isREMUnitEnabled, isREMUnitEnabled = _u === void 0 ? false : _u, customPubSub = config.pubSub;
  var isMobile = useMediaQueryContext().isMobile;
  var _v = (0, import_react27.useState)(LoggerFactory(logLevel)), logger = _v[0], setLogger = _v[1];
  var pubSub = (0, import_react27.useState)(function() {
    return customPubSub !== null && customPubSub !== void 0 ? customPubSub : pubSubFactory();
  })[0];
  var _w = (0, import_react27.useReducer)(reducer$2, initialState$2), sdkStore = _w[0], sdkDispatcher = _w[1];
  var _x = (0, import_react27.useReducer)(reducer$1, initialState$1), userStore = _x[0], userDispatcher = _x[1];
  var _y = (0, import_react27.useReducer)(reducer2, initialState), appInfoStore = _y[0], appInfoDispatcher = _y[1];
  var _z = useUIKitConfig(), configs = _z.configs, configsWithAppAttr = _z.configsWithAppAttr, initDashboardConfigs = _z.initDashboardConfigs;
  var sdkInitialized = sdkStore.initialized;
  var sdk = sdkStore === null || sdkStore === void 0 ? void 0 : sdkStore.sdk;
  var _0 = (_b2 = sdk === null || sdk === void 0 ? void 0 : sdk.appInfo) !== null && _b2 !== void 0 ? _b2 : {}, uploadSizeLimit = _0.uploadSizeLimit, multipleFilesMessageFileCountLimit = _0.multipleFilesMessageFileCountLimit;
  useTheme(colorSet);
  var _1 = useMessageTemplateUtils({
    sdk,
    logger,
    appInfoStore,
    appInfoDispatcher
  }), getCachedTemplate = _1.getCachedTemplate, updateMessageTemplatesInfo = _1.updateMessageTemplatesInfo, initializeMessageTemplatesInfo = _1.initializeMessageTemplatesInfo;
  var utils = {
    updateMessageTemplatesInfo,
    getCachedTemplate
  };
  var reconnect = useConnect({
    appId,
    userId,
    accessToken,
    isUserIdUsedForNickname,
    isMobile
  }, {
    logger,
    nickname,
    profileUrl,
    configureSession,
    customApiHost,
    customWebSocketHost,
    sdkInitParams,
    customExtensionParams,
    sdk,
    sdkDispatcher,
    userDispatcher,
    appInfoDispatcher,
    initDashboardConfigs,
    eventHandlers,
    initializeMessageTemplatesInfo
  });
  useUnmount(function() {
    if (typeof sdk.disconnect === "function") {
      disconnectSdk({
        logger,
        sdkDispatcher,
        userDispatcher,
        sdk
      });
    }
  }, [sdk.disconnectWebSocket]);
  (0, import_react27.useEffect)(function() {
    setLogger(LoggerFactory(logLevel));
  }, [logLevel]);
  var _2 = (0, import_react27.useState)(theme), currentTheme = _2[0], setCurrentTheme = _2[1];
  (0, import_react27.useEffect)(function() {
    setCurrentTheme(theme);
  }, [theme]);
  (0, import_react27.useEffect)(function() {
    var body = document.querySelector("body");
    body === null || body === void 0 ? void 0 : body.classList.remove("sendbird-experimental__rem__units");
    if (isREMUnitEnabled) {
      body === null || body === void 0 ? void 0 : body.classList.add("sendbird-experimental__rem__units");
    }
  }, [isREMUnitEnabled]);
  (0, import_react27.useEffect)(function() {
    logger.info("Setup theme", "Theme: ".concat(currentTheme));
    try {
      var body = document.querySelector("body");
      body === null || body === void 0 ? void 0 : body.classList.remove("sendbird-theme--light");
      body === null || body === void 0 ? void 0 : body.classList.remove("sendbird-theme--dark");
      body === null || body === void 0 ? void 0 : body.classList.add("sendbird-theme--".concat(currentTheme || "light"));
      logger.info("Finish setup theme");
    } catch (e4) {
      logger.warning("Setup theme failed", "".concat(e4));
    }
    return function() {
      try {
        var body2 = document.querySelector("body");
        body2 === null || body2 === void 0 ? void 0 : body2.classList.remove("sendbird-theme--light");
        body2 === null || body2 === void 0 ? void 0 : body2.classList.remove("sendbird-theme--dark");
      } catch (_a4) {
      }
    };
  }, [currentTheme]);
  useHTMLTextDirection(htmlTextDirection);
  var isOnline = useOnlineStatus(sdkStore.sdk, logger);
  var markAsReadScheduler = useMarkAsReadScheduler({ isConnected: isOnline }, { logger });
  var markAsDeliveredScheduler = useMarkAsDeliveredScheduler({ isConnected: isOnline }, { logger });
  var localeStringSet = import_react27.default.useMemo(function() {
    return __assign(__assign({}, getStringSet("en")), stringSet2);
  }, [stringSet2]);
  var uikitMultipleFilesMessageLimit = (0, import_react27.useMemo)(function() {
    return Math.min(DEFAULT_MULTIPLE_FILES_MESSAGE_LIMIT, multipleFilesMessageFileCountLimit !== null && multipleFilesMessageFileCountLimit !== void 0 ? multipleFilesMessageFileCountLimit : Number.MAX_SAFE_INTEGER);
  }, [multipleFilesMessageFileCountLimit]);
  var emojiManager = (0, import_react27.useMemo)(function() {
    return new EmojiManager({
      sdk,
      logger
    });
  }, [sdkStore.initialized]);
  return import_react27.default.createElement(
    SendbirdSdkContext.Provider,
    { value: {
      stores: {
        sdkStore,
        userStore,
        appInfoStore
      },
      dispatchers: {
        sdkDispatcher,
        userDispatcher,
        appInfoDispatcher,
        reconnect
      },
      config: {
        disableMarkAsDelivered,
        renderUserProfile,
        onStartDirectMessage,
        onUserProfileMessage: onStartDirectMessage,
        // legacy of onStartDirectMessage
        allowProfileEdit,
        isOnline,
        userId,
        appId,
        accessToken,
        theme: currentTheme,
        setCurrentTheme,
        setCurrenttheme: setCurrentTheme,
        // deprecated: typo
        isMultipleFilesMessageEnabled,
        uikitUploadSizeLimit: uploadSizeLimit !== null && uploadSizeLimit !== void 0 ? uploadSizeLimit : DEFAULT_UPLOAD_SIZE_LIMIT,
        uikitMultipleFilesMessageLimit,
        userListQuery,
        logger,
        pubSub,
        imageCompression: __assign({ compressionRate: 0.7, outputFormat: "preserve" }, imageCompression),
        voiceRecord: {
          maxRecordingTime: (_c = voiceRecord === null || voiceRecord === void 0 ? void 0 : voiceRecord.maxRecordingTime) !== null && _c !== void 0 ? _c : VOICE_RECORDER_DEFAULT_MAX,
          minRecordingTime: (_d = voiceRecord === null || voiceRecord === void 0 ? void 0 : voiceRecord.minRecordingTime) !== null && _d !== void 0 ? _d : VOICE_RECORDER_DEFAULT_MIN
        },
        userMention: {
          maxMentionCount: (userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount) || 10,
          maxSuggestionCount: (userMention === null || userMention === void 0 ? void 0 : userMention.maxSuggestionCount) || 15
        },
        markAsReadScheduler,
        markAsDeliveredScheduler,
        // Remote configs set from dashboard by UIKit feature configuration
        common: configs.common,
        groupChannel: {
          enableOgtag: sdkInitialized && configsWithAppAttr(sdk).groupChannel.channel.enableOgtag,
          enableTypingIndicator: configs.groupChannel.channel.enableTypingIndicator,
          enableReactions: sdkInitialized && configsWithAppAttr(sdk).groupChannel.channel.enableReactions,
          enableMention: configs.groupChannel.channel.enableMention,
          replyType: configs.groupChannel.channel.replyType,
          threadReplySelectType: configs.groupChannel.channel.threadReplySelectType,
          enableVoiceMessage: configs.groupChannel.channel.enableVoiceMessage,
          enableDocument: configs.groupChannel.channel.input.enableDocument,
          typingIndicatorTypes: configs.groupChannel.channel.typingIndicatorTypes,
          enableFeedback: configs.groupChannel.channel.enableFeedback,
          enableSuggestedReplies: configs.groupChannel.channel.enableSuggestedReplies,
          showSuggestedRepliesFor: configs.groupChannel.channel.showSuggestedRepliesFor,
          suggestedRepliesDirection: configs.groupChannel.channel.suggestedRepliesDirection,
          enableMarkdownForUserMessage: configs.groupChannel.channel.enableMarkdownForUserMessage,
          enableFormTypeMessage: configs.groupChannel.channel.enableFormTypeMessage,
          enableReactionsSupergroup: sdkInitialized && configsWithAppAttr(sdk).groupChannel.channel.enableReactionsSupergroup
        },
        groupChannelList: {
          enableTypingIndicator: configs.groupChannel.channelList.enableTypingIndicator,
          enableMessageReceiptStatus: configs.groupChannel.channelList.enableMessageReceiptStatus
        },
        groupChannelSettings: {
          enableMessageSearch: sdkInitialized && configsWithAppAttr(sdk).groupChannel.setting.enableMessageSearch
        },
        openChannel: {
          enableOgtag: sdkInitialized && configsWithAppAttr(sdk).openChannel.channel.enableOgtag,
          enableDocument: configs.openChannel.channel.input.enableDocument
        },
        // deprecated configs
        disableUserProfile: !configs.common.enableUsingDefaultUserProfile,
        isReactionEnabled: sdkInitialized && configsWithAppAttr(sdk).groupChannel.channel.enableReactions,
        isMentionEnabled: configs.groupChannel.channel.enableMention,
        isVoiceMessageEnabled: configs.groupChannel.channel.enableVoiceMessage,
        replyType: getCaseResolvedReplyType(configs.groupChannel.channel.replyType).upperCase,
        isTypingIndicatorEnabledOnChannelList: configs.groupChannel.channelList.enableTypingIndicator,
        isMessageReceiptStatusEnabledOnChannelList: configs.groupChannel.channelList.enableMessageReceiptStatus,
        showSearchIcon: sdkInitialized && configsWithAppAttr(sdk).groupChannel.setting.enableMessageSearch,
        htmlTextDirection,
        forceLeftToRightMessageLayout
      },
      eventHandlers,
      emojiManager,
      utils
    } },
    import_react27.default.createElement(
      MediaQueryProvider,
      { logger, breakpoint },
      import_react27.default.createElement(
        LocalizationProvider,
        { stringSet: localeStringSet, dateLocale },
        import_react27.default.createElement(
          VoiceMessageProvider,
          null,
          import_react27.default.createElement(GlobalModalProvider, null, children)
        )
      )
    ),
    import_react27.default.createElement(EmojiReactionListRoot, null),
    import_react27.default.createElement(ModalRoot, null),
    import_react27.default.createElement(MenuRoot, null)
  );
};

// node_modules/@sendbird/uikit-react/App.js
var import_react184 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/GroupChannel.js
var import_react114 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/GroupChannel/context.js
var import_react30 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-Bv8KtnvF.js
var import_react28 = __toESM(require_react(), 1);
var import_react_dom4 = __toESM(require_react_dom(), 1);
var UserProfileContext = import_react28.default.createContext({
  disableUserProfile: true,
  isOpenChannel: false
});
var useUserProfileContext = function() {
  return (0, import_react28.useContext)(UserProfileContext);
};
var UserProfileProvider = function(_a3) {
  var _b2;
  var _c = _a3.isOpenChannel, isOpenChannel = _c === void 0 ? false : _c, _d = _a3.disableUserProfile, _disableUserProfile = _d === void 0 ? false : _d, _renderUserProfile = _a3.renderUserProfile, _onUserProfileMessage = _a3.onUserProfileMessage, _onStartDirectMessage = _a3.onStartDirectMessage, children = _a3.children;
  var config = useSendbirdStateContext().config;
  var onStartDirectMessage = (_b2 = _onStartDirectMessage !== null && _onStartDirectMessage !== void 0 ? _onStartDirectMessage : _onUserProfileMessage) !== null && _b2 !== void 0 ? _b2 : config.onStartDirectMessage;
  return import_react28.default.createElement(UserProfileContext.Provider, { value: {
    isOpenChannel,
    disableUserProfile: _disableUserProfile !== null && _disableUserProfile !== void 0 ? _disableUserProfile : !config.common.enableUsingDefaultUserProfile,
    renderUserProfile: _renderUserProfile !== null && _renderUserProfile !== void 0 ? _renderUserProfile : config.renderUserProfile,
    onStartDirectMessage,
    /** legacy of onStartDirectMessage */
    onUserProfileMessage: onStartDirectMessage
  } }, children);
};

// node_modules/@sendbird/uikit-react/chunks/bundle-BApwq9D9.js
var import_react29 = __toESM(require_react(), 1);
var LOG_PRESET = "useToggleReactionCallback:";
function useToggleReactionCallback(currentChannel, logger) {
  return (0, import_react29.useCallback)(function(message, key, isReacted) {
    if (!currentChannel) {
      logger === null || logger === void 0 ? void 0 : logger.warning("".concat(LOG_PRESET, " currentChannel doesn't exist"), currentChannel);
      return;
    }
    if (isReacted) {
      currentChannel.deleteReaction(message, key).then(function(res) {
        logger === null || logger === void 0 ? void 0 : logger.info("".concat(LOG_PRESET, " Delete reaction success"), res);
      }).catch(function(err) {
        logger === null || logger === void 0 ? void 0 : logger.warning("".concat(LOG_PRESET, " Delete reaction failed"), err);
      });
    } else {
      currentChannel.addReaction(message, key).then(function(res) {
        logger === null || logger === void 0 ? void 0 : logger.info("".concat(LOG_PRESET, " Add reaction success"), res);
      }).catch(function(err) {
        logger === null || logger === void 0 ? void 0 : logger.warning("".concat(LOG_PRESET, " Add reaction failed"), err);
      });
    }
  }, [currentChannel]);
}

// node_modules/@sendbird/uikit-react/chunks/bundle-C6DfLTJj.js
var MAX_USER_MENTION_COUNT = 10;
var MAX_USER_SUGGESTION_COUNT = 15;
var USER_MENTION_TEMP_CHAR = "@";
var UIKIT_COMPATIBLE_FORM_VERSION = 1;
var ThreadReplySelectType;
(function(ThreadReplySelectType2) {
  ThreadReplySelectType2["PARENT"] = "PARENT";
  ThreadReplySelectType2["THREAD"] = "THREAD";
})(ThreadReplySelectType || (ThreadReplySelectType = {}));

// node_modules/@sendbird/uikit-react/chunks/bundle-BaMsxnN_.js
function getComponentKeyFromMessage(message) {
  if ("sendingStatus" in message) {
    if (message.sendingStatus === "succeeded")
      return String(message.messageId);
    return message.reqId;
  }
  return String(message.messageId);
}
function isContextMenuClosed() {
  var _a3, _b2;
  return ((_a3 = document.getElementById("sendbird-dropdown-portal")) === null || _a3 === void 0 ? void 0 : _a3.childElementCount) === 0 && ((_b2 = document.getElementById("sendbird-emoji-list-portal")) === null || _b2 === void 0 ? void 0 : _b2.childElementCount) === 0;
}
function getMessageTopOffset(messageCreatedAt) {
  var _a3;
  var element = (_a3 = document.querySelectorAll('[data-sb-created-at="'.concat(messageCreatedAt, '"]'))) === null || _a3 === void 0 ? void 0 : _a3[0];
  if (element instanceof HTMLElement) {
    return element.offsetTop;
  }
  return null;
}
var isDisabledBecauseFrozen = function(groupChannel) {
  if (!groupChannel)
    return false;
  return groupChannel.isFrozen && groupChannel.myRole !== "operator";
};
var isDisabledBecauseMuted = function(groupChannel) {
  if (!groupChannel)
    return false;
  return groupChannel.myMutedState === "muted";
};
var isDisabledBecauseSuggestedReplies = function(channel, enableSuggestedReplies) {
  var _a3, _b2, _c, _d;
  return enableSuggestedReplies && Array.isArray((_b2 = (_a3 = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _a3 === void 0 ? void 0 : _a3.extendedMessagePayload) === null || _b2 === void 0 ? void 0 : _b2.suggested_replies) && !!((_d = (_c = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _c === void 0 ? void 0 : _c.extendedMessagePayload) === null || _d === void 0 ? void 0 : _d.disable_chat_input);
};
var isFormVersionCompatible = function(version) {
  return version <= UIKIT_COMPATIBLE_FORM_VERSION;
};
var isDisabledBecauseMessageForm = function(allMessages, enableFormTypeMessage) {
  return enableFormTypeMessage && allMessages.some(function(message) {
    var _a3;
    return !!message.messageForm && !message.messageForm.isSubmitted && !!((_a3 = message.extendedMessagePayload) === null || _a3 === void 0 ? void 0 : _a3.disable_chat_input) && isFormVersionCompatible(message.messageForm.version);
  });
};

// node_modules/@sendbird/uikit-react/chunks/bundle-DRlnZqdp.js
var PublishingModuleType;
(function(PublishingModuleType2) {
  PublishingModuleType2["CHANNEL"] = "CHANNEL";
  PublishingModuleType2["THREAD"] = "THREAD";
})(PublishingModuleType || (PublishingModuleType = {}));
var isTargetIncludedInModules = function(target, modules) {
  if (!modules || modules.length === 0)
    return true;
  else
    return modules.includes(target);
};
function shouldPubSubPublishToChannel(modules) {
  return isTargetIncludedInModules(PublishingModuleType.CHANNEL, modules);
}
function shouldPubSubPublishToThread(modules) {
  return isTargetIncludedInModules(PublishingModuleType.THREAD, modules);
}
var PUBSUB_TOPICS;
(function(PUBSUB_TOPICS2) {
  PUBSUB_TOPICS2["USER_UPDATED"] = "USER_UPDATED";
  PUBSUB_TOPICS2["SEND_MESSAGE_START"] = "SEND_MESSAGE_START";
  PUBSUB_TOPICS2["SEND_MESSAGE_FAILED"] = "SEND_MESSAGE_FAILED";
  PUBSUB_TOPICS2["SEND_USER_MESSAGE"] = "SEND_USER_MESSAGE";
  PUBSUB_TOPICS2["SEND_FILE_MESSAGE"] = "SEND_FILE_MESSAGE";
  PUBSUB_TOPICS2["ON_FILE_INFO_UPLOADED"] = "ON_FILE_INFO_UPLOADED";
  PUBSUB_TOPICS2["UPDATE_USER_MESSAGE"] = "UPDATE_USER_MESSAGE";
  PUBSUB_TOPICS2["DELETE_MESSAGE"] = "DELETE_MESSAGE";
  PUBSUB_TOPICS2["LEAVE_CHANNEL"] = "LEAVE_CHANNEL";
  PUBSUB_TOPICS2["CREATE_CHANNEL"] = "CREATE_CHANNEL";
  PUBSUB_TOPICS2["UPDATE_OPEN_CHANNEL"] = "UPDATE_OPEN_CHANNEL";
})(PUBSUB_TOPICS || (PUBSUB_TOPICS = {}));
var pubSubTopics = PUBSUB_TOPICS;

// node_modules/@sendbird/uikit-react/chunks/bundle-B2NeDUAs.js
function getIsReactionEnabled(_a3) {
  var channel = _a3.channel, config = _a3.config, moduleLevel = _a3.moduleLevel;
  if (!channel || channel.isBroadcast || channel.isEphemeral) {
    return false;
  }
  if (channel.isSuper)
    return moduleLevel !== null && moduleLevel !== void 0 ? moduleLevel : config.groupChannel.enableReactionsSupergroup;
  return moduleLevel !== null && moduleLevel !== void 0 ? moduleLevel : config.groupChannel.enableReactions;
}

// node_modules/@sendbird/uikit-react/GroupChannel/context.js
var import_react_dom5 = __toESM(require_react_dom(), 1);
function useMessageListScroll(behavior, deps) {
  if (deps === void 0) {
    deps = [];
  }
  var scrollRef = (0, import_react30.useRef)(null);
  var scrollPositionRef = (0, import_react30.useRef)(0);
  var scrollDistanceFromBottomRef = (0, import_react30.useRef)(0);
  var scrollPubSub = (0, import_react30.useState)(function() {
    return pubSubFactory({ publishSynchronous: true });
  })[0];
  var _a3 = (0, import_react30.useState)(true), isScrollBottomReached = _a3[0], setIsScrollBottomReached = _a3[1];
  (0, import_react30.useLayoutEffect)(function() {
    scrollPositionRef.current = 0;
    scrollDistanceFromBottomRef.current = 0;
    setIsScrollBottomReached(true);
    if (scrollRef.current)
      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;
  }, deps);
  (0, import_react30.useLayoutEffect)(function() {
    var unsubscribes = [];
    unsubscribes.push(scrollPubSub.subscribe("scrollToBottom", function(_a4) {
      var resolve = _a4.resolve, animated = _a4.animated;
      runCallback(function() {
        if (!scrollRef.current) {
          if (resolve)
            resolve();
          return;
        }
        if (scrollRef.current.scroll) {
          scrollRef.current.scroll({ top: scrollRef.current.scrollHeight, behavior: getScrollBehavior(behavior, animated) });
        } else {
          scrollRef.current.scrollTop = scrollRef.current.scrollHeight;
        }
        scrollDistanceFromBottomRef.current = 0;
        setIsScrollBottomReached(true);
        if (resolve)
          resolve();
      });
    }));
    unsubscribes.push(scrollPubSub.subscribe("scroll", function(_a4) {
      var top = _a4.top, animated = _a4.animated, lazy = _a4.lazy, resolve = _a4.resolve;
      runCallback(function() {
        if (!scrollRef.current)
          return;
        var _a5 = scrollRef.current, scrollTop = _a5.scrollTop, scrollHeight = _a5.scrollHeight, clientHeight = _a5.clientHeight;
        if (scrollRef.current.scroll) {
          scrollRef.current.scroll({ top, behavior: getScrollBehavior(behavior, animated) });
        } else if (typeof top === "number") {
          scrollRef.current.scrollTop = top;
        }
        scrollDistanceFromBottomRef.current = Math.max(0, scrollHeight - scrollTop - clientHeight);
        setIsScrollBottomReached(scrollDistanceFromBottomRef.current === 0);
        if (resolve)
          resolve();
      }, lazy);
    }));
    return function() {
      unsubscribes.forEach(function(_a4) {
        var remove = _a4.remove;
        return remove();
      });
    };
  }, [behavior]);
  return {
    scrollRef,
    scrollPubSub,
    isScrollBottomReached,
    setIsScrollBottomReached,
    scrollDistanceFromBottomRef,
    scrollPositionRef
  };
}
function runCallback(callback, lazy) {
  if (lazy === void 0) {
    lazy = true;
  }
  if (lazy) {
    setTimeout(function() {
      callback();
    });
  } else {
    callback();
  }
}
function getScrollBehavior(behavior, animated) {
  if (typeof animated === "boolean")
    return animated ? "smooth" : "auto";
  return behavior;
}
var pass = function(value) {
  return value;
};
function useMessageActions(params) {
  var _this = this;
  var _a3 = params.onBeforeSendUserMessage, onBeforeSendUserMessage = _a3 === void 0 ? pass : _a3, _b2 = params.onBeforeSendFileMessage, onBeforeSendFileMessage = _b2 === void 0 ? pass : _b2, _c = params.onBeforeUpdateUserMessage, onBeforeUpdateUserMessage = _c === void 0 ? pass : _c, _d = params.onBeforeSendVoiceMessage, onBeforeSendVoiceMessage = _d === void 0 ? pass : _d, _e3 = params.onBeforeSendMultipleFilesMessage, onBeforeSendMultipleFilesMessage = _e3 === void 0 ? pass : _e3, sendFileMessage = params.sendFileMessage, sendMultipleFilesMessage = params.sendMultipleFilesMessage, sendUserMessage = params.sendUserMessage, updateUserMessage = params.updateUserMessage, scrollToBottom = params.scrollToBottom, quoteMessage = params.quoteMessage, replyType = params.replyType;
  var buildInternalMessageParams = (0, import_react30.useCallback)(function(basicParams) {
    var messageParams = __assign({}, basicParams);
    if (params.quoteMessage && replyType !== "NONE") {
      messageParams.isReplyToChannel = true;
      messageParams.parentMessageId = quoteMessage === null || quoteMessage === void 0 ? void 0 : quoteMessage.messageId;
    }
    return messageParams;
  }, [replyType, quoteMessage]);
  var asyncScrollToBottom = (0, import_react30.useCallback)(function() {
    setTimeout(scrollToBottom, 0);
  }, []);
  return {
    sendUserMessage: (0, import_react30.useCallback)(function(params2) {
      return __awaiter(_this, void 0, void 0, function() {
        var internalParams, processedParams;
        return __generator(this, function(_a4) {
          switch (_a4.label) {
            case 0:
              internalParams = buildInternalMessageParams(params2);
              return [4, onBeforeSendUserMessage(internalParams)];
            case 1:
              processedParams = _a4.sent();
              return [2, sendUserMessage(processedParams, asyncScrollToBottom)];
          }
        });
      });
    }, [buildInternalMessageParams, sendUserMessage, scrollToBottom]),
    sendFileMessage: (0, import_react30.useCallback)(function(params2) {
      return __awaiter(_this, void 0, void 0, function() {
        var internalParams, processedParams;
        return __generator(this, function(_a4) {
          switch (_a4.label) {
            case 0:
              internalParams = buildInternalMessageParams(params2);
              return [4, onBeforeSendFileMessage(internalParams)];
            case 1:
              processedParams = _a4.sent();
              return [2, sendFileMessage(processedParams, asyncScrollToBottom)];
          }
        });
      });
    }, [buildInternalMessageParams, sendFileMessage, scrollToBottom]),
    sendMultipleFilesMessage: (0, import_react30.useCallback)(function(params2) {
      return __awaiter(_this, void 0, void 0, function() {
        var internalParams, processedParams;
        return __generator(this, function(_a4) {
          switch (_a4.label) {
            case 0:
              internalParams = buildInternalMessageParams(params2);
              return [4, onBeforeSendMultipleFilesMessage(internalParams)];
            case 1:
              processedParams = _a4.sent();
              return [2, sendMultipleFilesMessage(processedParams, asyncScrollToBottom)];
          }
        });
      });
    }, [buildInternalMessageParams, sendMultipleFilesMessage, scrollToBottom]),
    sendVoiceMessage: (0, import_react30.useCallback)(function(params2, duration) {
      return __awaiter(_this, void 0, void 0, function() {
        var internalParams, processedParams;
        return __generator(this, function(_a4) {
          switch (_a4.label) {
            case 0:
              internalParams = buildInternalMessageParams(__assign(__assign({}, params2), { fileName: VOICE_MESSAGE_FILE_NAME, mimeType: VOICE_MESSAGE_MIME_TYPE, metaArrays: [
                new je({
                  key: META_ARRAY_VOICE_DURATION_KEY,
                  value: ["".concat(duration)]
                }),
                new je({
                  key: META_ARRAY_MESSAGE_TYPE_KEY,
                  value: [META_ARRAY_MESSAGE_TYPE_VALUE__VOICE]
                })
              ] }));
              return [4, onBeforeSendVoiceMessage(internalParams)];
            case 1:
              processedParams = _a4.sent();
              return [2, sendFileMessage(processedParams, asyncScrollToBottom)];
          }
        });
      });
    }, [buildInternalMessageParams, sendFileMessage, scrollToBottom]),
    updateUserMessage: (0, import_react30.useCallback)(function(messageId, params2) {
      return __awaiter(_this, void 0, void 0, function() {
        var internalParams, processedParams;
        return __generator(this, function(_a4) {
          switch (_a4.label) {
            case 0:
              internalParams = buildInternalMessageParams(params2);
              return [4, onBeforeUpdateUserMessage(internalParams)];
            case 1:
              processedParams = _a4.sent();
              return [2, updateUserMessage(messageId, processedParams)];
          }
        });
      });
    }, [buildInternalMessageParams, updateUserMessage])
  };
}
var GroupChannelContext = import_react30.default.createContext(null);
var GroupChannelProvider = function(props) {
  var channelUrl = props.channelUrl, children = props.children, moduleReactionEnabled = props.isReactionEnabled, moduleReplyType = props.replyType, moduleThreadReplySelectType = props.threadReplySelectType, _a3 = props.isMessageGroupingEnabled, isMessageGroupingEnabled = _a3 === void 0 ? true : _a3, isMultipleFilesMessageEnabled = props.isMultipleFilesMessageEnabled, showSearchIcon = props.showSearchIcon, _b2 = props.disableMarkAsRead, disableMarkAsRead = _b2 === void 0 ? false : _b2, _c = props.scrollBehavior, scrollBehavior = _c === void 0 ? "auto" : _c, startingPoint = props.startingPoint, _animatedMessageId = props.animatedMessageId, messageListQueryParams = props.messageListQueryParams, onBeforeSendUserMessage = props.onBeforeSendUserMessage, onBeforeSendFileMessage = props.onBeforeSendFileMessage, onBeforeSendVoiceMessage = props.onBeforeSendVoiceMessage, onBeforeSendMultipleFilesMessage = props.onBeforeSendMultipleFilesMessage, onBeforeUpdateUserMessage = props.onBeforeUpdateUserMessage, onBeforeDownloadFileMessage = props.onBeforeDownloadFileMessage, onMessageAnimated = props.onMessageAnimated, onBackClick = props.onBackClick, onChatHeaderActionClick = props.onChatHeaderActionClick, onReplyInThreadClick = props.onReplyInThreadClick, onSearchClick = props.onSearchClick, onQuoteMessageClick = props.onQuoteMessageClick, renderUserMentionItem = props.renderUserMentionItem, filterEmojiCategoryIds = props.filterEmojiCategoryIds;
  var _d = useSendbirdStateContext(), config = _d.config, stores = _d.stores;
  var sdkStore = stores.sdkStore;
  var markAsReadScheduler = config.markAsReadScheduler, logger = config.logger, htmlTextDirection = config.htmlTextDirection, forceLeftToRightMessageLayout = config.forceLeftToRightMessageLayout;
  var _e3 = (0, import_react30.useState)(null), quoteMessage = _e3[0], setQuoteMessage = _e3[1];
  var _f = (0, import_react30.useState)(null), animatedMessageId = _f[0], setAnimatedMessageId = _f[1];
  var _g2 = (0, import_react30.useState)(null), currentChannel = _g2[0], setCurrentChannel = _g2[1];
  var _h = (0, import_react30.useState)(null), fetchChannelError = _h[0], setFetchChannelError = _h[1];
  var _j = useMessageListScroll(scrollBehavior, [currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url]), scrollRef = _j.scrollRef, scrollPubSub = _j.scrollPubSub, scrollDistanceFromBottomRef = _j.scrollDistanceFromBottomRef, isScrollBottomReached = _j.isScrollBottomReached, setIsScrollBottomReached = _j.setIsScrollBottomReached, scrollPositionRef = _j.scrollPositionRef;
  var messageInputRef = (0, import_react30.useRef)(null);
  var toggleReaction = useToggleReactionCallback(currentChannel, logger);
  var replyType = getCaseResolvedReplyType(moduleReplyType !== null && moduleReplyType !== void 0 ? moduleReplyType : config.groupChannel.replyType).upperCase;
  var threadReplySelectType = getCaseResolvedThreadReplySelectType(moduleThreadReplySelectType !== null && moduleThreadReplySelectType !== void 0 ? moduleThreadReplySelectType : config.groupChannel.threadReplySelectType).upperCase;
  var chatReplyType = useIIFE(function() {
    if (replyType === "NONE")
      return B.NONE;
    return B.ONLY_REPLY_TO_CHANNEL;
  });
  var isReactionEnabled = getIsReactionEnabled({
    channel: currentChannel,
    config,
    moduleLevel: moduleReactionEnabled
  });
  var nicknamesMap = (0, import_react30.useMemo)(function() {
    var _a4;
    return new Map(((_a4 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.members) !== null && _a4 !== void 0 ? _a4 : []).map(function(_a5) {
      var userId = _a5.userId, nickname = _a5.nickname;
      return [userId, nickname];
    }));
  }, [currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.members]);
  var messageDataSource = useGroupChannelMessages(sdkStore.sdk, currentChannel, {
    startingPoint,
    replyType: chatReplyType,
    collectionCreator: getCollectionCreator(currentChannel, messageListQueryParams),
    shouldCountNewMessages: function() {
      return !isScrollBottomReached;
    },
    markAsRead: function(channels) {
      if (isScrollBottomReached && !disableMarkAsRead) {
        channels.forEach(function(it3) {
          return markAsReadScheduler.push(it3);
        });
      }
    },
    onMessagesReceived: function() {
      if (isScrollBottomReached && isContextMenuClosed()) {
        setTimeout(function() {
          scrollPubSub.publish("scrollToBottom", {});
        }, 10);
      }
    },
    onChannelDeleted: function() {
      setCurrentChannel(null);
      setFetchChannelError(null);
      onBackClick === null || onBackClick === void 0 ? void 0 : onBackClick();
    },
    onCurrentUserBanned: function() {
      setCurrentChannel(null);
      setFetchChannelError(null);
      onBackClick === null || onBackClick === void 0 ? void 0 : onBackClick();
    },
    onChannelUpdated: function(channel) {
      return setCurrentChannel(channel);
    },
    logger
  });
  useAsyncEffect(function() {
    return __awaiter(void 0, void 0, void 0, function() {
      var channel, error_1;
      var _a4;
      return __generator(this, function(_b3) {
        switch (_b3.label) {
          case 0:
            if (!(sdkStore.initialized && channelUrl)) return [3, 5];
            _b3.label = 1;
          case 1:
            _b3.trys.push([1, 3, 4, 5]);
            return [4, sdkStore.sdk.groupChannel.getChannel(channelUrl)];
          case 2:
            channel = _b3.sent();
            setCurrentChannel(channel);
            setFetchChannelError(null);
            return [3, 5];
          case 3:
            error_1 = _b3.sent();
            setCurrentChannel(null);
            setFetchChannelError(error_1);
            (_a4 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "GroupChannelProvider: error when fetching channel", error_1);
            return [3, 5];
          case 4:
            setQuoteMessage(null);
            setAnimatedMessageId(null);
            return [
              7
              /*endfinally*/
            ];
          case 5:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [sdkStore.initialized, sdkStore.sdk, channelUrl]);
  useAsyncLayoutEffect(function() {
    return __awaiter(void 0, void 0, void 0, function() {
      var onSentMessageFromOtherModule, subscribes;
      return __generator(this, function(_a4) {
        if (messageDataSource.initialized) {
          scrollPubSub.publish("scrollToBottom", {});
        }
        onSentMessageFromOtherModule = function(data) {
          if (data.channel.url === (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url))
            scrollPubSub.publish("scrollToBottom", {});
        };
        subscribes = [
          config.pubSub.subscribe(pubSubTopics.SEND_USER_MESSAGE, onSentMessageFromOtherModule),
          config.pubSub.subscribe(pubSubTopics.SEND_FILE_MESSAGE, onSentMessageFromOtherModule)
        ];
        return [2, function() {
          subscribes.forEach(function(subscribe) {
            return subscribe.remove();
          });
        }];
      });
    });
  }, [messageDataSource.initialized, currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url]);
  (0, import_react30.useEffect)(function() {
    if (typeof startingPoint === "number") {
      scrollToMessage(startingPoint, 0, false, false);
    }
  }, [startingPoint]);
  (0, import_react30.useEffect)(function() {
    if (_animatedMessageId)
      setAnimatedMessageId(_animatedMessageId);
  }, [_animatedMessageId]);
  useMessageLayoutDirection(htmlTextDirection, forceLeftToRightMessageLayout, messageDataSource.loading);
  var scrollToBottom = usePreservedCallback(function(animated) {
    return __awaiter(void 0, void 0, void 0, function() {
      return __generator(this, function(_a4) {
        switch (_a4.label) {
          case 0:
            if (!scrollRef.current)
              return [
                2
                /*return*/
              ];
            setAnimatedMessageId(null);
            setIsScrollBottomReached(true);
            if (!(config.isOnline && messageDataSource.hasNext())) return [3, 2];
            return [4, messageDataSource.resetWithStartingPoint(Number.MAX_SAFE_INTEGER)];
          case 1:
            _a4.sent();
            scrollPubSub.publish("scrollToBottom", { animated });
            return [3, 3];
          case 2:
            scrollPubSub.publish("scrollToBottom", { animated });
            _a4.label = 3;
          case 3:
            if (currentChannel && !messageDataSource.hasNext()) {
              messageDataSource.resetNewMessages();
              if (!disableMarkAsRead)
                markAsReadScheduler.push(currentChannel);
            }
            return [
              2
              /*return*/
            ];
        }
      });
    });
  });
  var scrollToMessage = usePreservedCallback(function(createdAt, messageId, messageFocusAnimated, scrollAnimated) {
    return __awaiter(void 0, void 0, void 0, function() {
      var element, parentNode, clickHandler, message, topOffset;
      return __generator(this, function(_a4) {
        switch (_a4.label) {
          case 0:
            element = scrollRef.current;
            parentNode = element === null || element === void 0 ? void 0 : element.parentNode;
            clickHandler = {
              activate: function() {
                if (!element || !parentNode)
                  return;
                element.style.pointerEvents = "auto";
                parentNode.style.cursor = "auto";
              },
              deactivate: function() {
                if (!element || !parentNode)
                  return;
                element.style.pointerEvents = "none";
                parentNode.style.cursor = "wait";
              }
            };
            clickHandler.deactivate();
            setAnimatedMessageId(null);
            message = messageDataSource.messages.find(function(it3) {
              return it3.messageId === messageId || it3.createdAt === createdAt;
            });
            if (!message) return [3, 1];
            topOffset = getMessageTopOffset(message.createdAt);
            if (topOffset)
              scrollPubSub.publish("scroll", { top: topOffset, animated: scrollAnimated });
            if (messageFocusAnimated !== null && messageFocusAnimated !== void 0 ? messageFocusAnimated : true)
              setAnimatedMessageId(messageId);
            return [3, 3];
          case 1:
            return [4, messageDataSource.resetWithStartingPoint(createdAt)];
          case 2:
            _a4.sent();
            setTimeout(function() {
              var topOffset2 = getMessageTopOffset(createdAt);
              if (topOffset2)
                scrollPubSub.publish("scroll", { top: topOffset2, lazy: false, animated: scrollAnimated });
              if (messageFocusAnimated !== null && messageFocusAnimated !== void 0 ? messageFocusAnimated : true)
                setAnimatedMessageId(messageId);
            });
            _a4.label = 3;
          case 3:
            clickHandler.activate();
            return [
              2
              /*return*/
            ];
        }
      });
    });
  });
  var messageActions = useMessageActions(__assign(__assign(__assign({}, props), messageDataSource), { scrollToBottom, quoteMessage, replyType }));
  return import_react30.default.createElement(
    GroupChannelContext.Provider,
    { value: __assign(__assign({
      // # Props
      channelUrl,
      isReactionEnabled,
      isMessageGroupingEnabled,
      isMultipleFilesMessageEnabled,
      showSearchIcon: showSearchIcon !== null && showSearchIcon !== void 0 ? showSearchIcon : config.groupChannelSettings.enableMessageSearch,
      replyType,
      threadReplySelectType,
      disableMarkAsRead,
      scrollBehavior,
      // # Custom Props
      messageListQueryParams,
      // ## Message
      onBeforeSendUserMessage,
      onBeforeSendFileMessage,
      onBeforeSendVoiceMessage,
      onBeforeSendMultipleFilesMessage,
      onBeforeUpdateUserMessage,
      onBeforeDownloadFileMessage,
      // ## Focusing
      onMessageAnimated,
      // ## Click
      onBackClick,
      onChatHeaderActionClick,
      onReplyInThreadClick,
      onSearchClick,
      onQuoteMessageClick,
      // ## Custom render
      renderUserMentionItem,
      filterEmojiCategoryIds,
      // Internal Interface
      currentChannel,
      fetchChannelError,
      nicknamesMap,
      scrollRef,
      scrollDistanceFromBottomRef,
      scrollPositionRef,
      scrollPubSub,
      messageInputRef,
      quoteMessage,
      setQuoteMessage,
      animatedMessageId,
      setAnimatedMessageId,
      isScrollBottomReached,
      setIsScrollBottomReached,
      scrollToBottom,
      scrollToMessage,
      toggleReaction
    }, messageDataSource), messageActions) },
    import_react30.default.createElement(UserProfileProvider, __assign({}, props), children)
  );
};
var useGroupChannelContext = function() {
  var context = (0, import_react30.useContext)(GroupChannelContext);
  if (!context)
    throw new Error("GroupChannelContext not found. Use within the GroupChannel module.");
  return context;
};
function getCollectionCreator(groupChannel, messageListQueryParams) {
  return function(defaultParams) {
    var params = __assign(__assign(__assign({}, defaultParams), { prevResultLimit: 30, nextResultLimit: 30 }), messageListQueryParams);
    return groupChannel.createMessageCollection(__assign(__assign({}, params), { filter: new Os(params) }));
  };
}

// node_modules/@sendbird/uikit-react/GroupChannel/components/GroupChannelUI.js
var import_react113 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-CLczesce.js
var import_react35 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/GroupChannel/components/TypingIndicator.js
var import_react31 = __toESM(require_react(), 1);
var TypingIndicatorText = function(_a3) {
  var members = _a3.members;
  function getText() {
    var stringSet2 = (0, import_react31.useContext)(LocalizationContext).stringSet;
    if (!members || members.length === 0) {
      return "";
    }
    if (members && members.length === 1) {
      return "".concat(members[0].nickname, " ").concat(stringSet2.TYPING_INDICATOR__IS_TYPING);
    }
    if (members && members.length === 2) {
      return "".concat(members[0].nickname, " ").concat(stringSet2.TYPING_INDICATOR__AND, " ").concat(members[1].nickname, " ").concat(stringSet2.TYPING_INDICATOR__ARE_TYPING);
    }
    return stringSet2.TYPING_INDICATOR__MULTIPLE_TYPING;
  }
  return import_react31.default.createElement(import_react31.default.Fragment, null, getText());
};
var TypingIndicator = function(_a3) {
  var _b2, _c, _d;
  var channelUrl = _a3.channelUrl;
  var globalStore = useSendbirdStateContext();
  var sb = (_c = (_b2 = globalStore === null || globalStore === void 0 ? void 0 : globalStore.stores) === null || _b2 === void 0 ? void 0 : _b2.sdkStore) === null || _c === void 0 ? void 0 : _c.sdk;
  var logger = (_d = globalStore === null || globalStore === void 0 ? void 0 : globalStore.config) === null || _d === void 0 ? void 0 : _d.logger;
  var _e3 = (0, import_react31.useState)(uuidv4()), handlerId = _e3[0], setHandlerId = _e3[1];
  var _f = (0, import_react31.useState)([]), typingMembers = _f[0], setTypingMembers = _f[1];
  (0, import_react31.useEffect)(function() {
    var _a4;
    if ((_a4 = sb === null || sb === void 0 ? void 0 : sb.groupChannel) === null || _a4 === void 0 ? void 0 : _a4.addGroupChannelHandler) {
      sb.groupChannel.removeGroupChannelHandler(handlerId);
      var newHandlerId = uuidv4();
      var handler = new Ye3({
        onTypingStatusUpdated: function(groupChannel) {
          logger.info("Channel > Typing Indicator: onTypingStatusUpdated", groupChannel);
          if (groupChannel.url === channelUrl) {
            var members = groupChannel.getTypingUsers();
            setTypingMembers(members);
          }
        }
      });
      sb.groupChannel.addGroupChannelHandler(newHandlerId, handler);
      setHandlerId(newHandlerId);
    }
    return function() {
      var _a5;
      setTypingMembers([]);
      if ((_a5 = sb === null || sb === void 0 ? void 0 : sb.groupChannel) === null || _a5 === void 0 ? void 0 : _a5.removeGroupChannelHandler) {
        sb.groupChannel.removeGroupChannelHandler(handlerId);
      }
    };
  }, [channelUrl]);
  return import_react31.default.createElement(
    Label,
    { className: "sendbird-conversation__footer__typing-indicator__text", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 },
    import_react31.default.createElement(TypingIndicatorText, { members: typingMembers })
  );
};

// node_modules/@sendbird/uikit-react/chunks/bundle-BY9N9Qg0.js
var TypingIndicatorType;
(function(TypingIndicatorType2) {
  TypingIndicatorType2["Text"] = "text";
  TypingIndicatorType2["Bubble"] = "bubble";
})(TypingIndicatorType || (TypingIndicatorType = {}));

// node_modules/@sendbird/uikit-react/ui/ConnectionStatus.js
var import_react32 = __toESM(require_react(), 1);
function ConnectionStatus() {
  var stringSet2 = (0, import_react32.useContext)(LocalizationContext).stringSet;
  return import_react32.default.createElement(
    "div",
    { className: "sendbird-connection-status" },
    import_react32.default.createElement(Label, { type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_2 }, stringSet2.TRYING_TO_CONNECT),
    import_react32.default.createElement(Icon, { type: IconTypes.DISCONNECTED, fillColor: IconColors.SENT, width: "14px", height: "14px" })
  );
}

// node_modules/@sendbird/uikit-react/ui/PlaceHolder.js
var import_react34 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ui/Loader.js
var import_react33 = __toESM(require_react(), 1);
function Loader(_a3) {
  var _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, _c = _a3.width, width = _c === void 0 ? "26px" : _c, _d = _a3.height, height = _d === void 0 ? "26px" : _d, children = _a3.children, testID = _a3.testID;
  return import_react33.default.createElement("div", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
    "sendbird-loader"
  ], false).join(" "), "data-testid": testID, style: {
    width: typeof width === "string" ? width : "".concat(width, "px"),
    height: typeof height === "string" ? height : "".concat(height, "px")
  } }, children || import_react33.default.createElement(Icon, { type: IconTypes.SPINNER, width: "26px", height: "26px" }));
}

// node_modules/@sendbird/uikit-react/ui/PlaceHolder.js
var PlaceHolderTypes = {
  LOADING: "LOADING",
  NO_CHANNELS: "NO_CHANNELS",
  NO_MESSAGES: "NO_MESSAGES",
  WRONG: "WRONG",
  SEARCH_IN: "SEARCH_IN",
  SEARCHING: "SEARCHING",
  NO_RESULTS: "NO_RESULTS"
};
function PlaceHolder(_a3) {
  var _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, type = _a3.type, iconSize = _a3.iconSize, _c = _a3.searchInString, searchInString = _c === void 0 ? "" : _c, retryToConnect = _a3.retryToConnect;
  var stringSet2 = (0, import_react34.useContext)(LocalizationContext).stringSet;
  return import_react34.default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-place-holder"
    ], false).join(" ") },
    type === PlaceHolderTypes.LOADING && import_react34.default.createElement(
      Loader,
      { width: iconSize || "48px", height: iconSize || "48px" },
      import_react34.default.createElement(Icon, { type: IconTypes.SPINNER, fillColor: IconColors.PRIMARY, width: iconSize || "48px", height: iconSize || "48px" })
    ),
    (type === PlaceHolderTypes.NO_CHANNELS || type === PlaceHolderTypes.NO_MESSAGES || type === PlaceHolderTypes.WRONG) && import_react34.default.createElement(
      "div",
      { className: "sendbird-place-holder__body" },
      type === PlaceHolderTypes.NO_CHANNELS && import_react34.default.createElement(Icon, { className: "sendbird-place-holder__body__icon", type: IconTypes.CHAT, fillColor: IconColors.ON_BACKGROUND_3, width: iconSize || "64px", height: iconSize || "64px" }),
      type === PlaceHolderTypes.WRONG && import_react34.default.createElement(Icon, { className: "sendbird-place-holder__body__icon", type: IconTypes.ERROR, fillColor: IconColors.ON_BACKGROUND_3, width: iconSize || "64px", height: iconSize || "64px" }),
      type === PlaceHolderTypes.NO_MESSAGES && import_react34.default.createElement(Icon, { className: "sendbird-place-holder__body__icon", type: IconTypes.MESSAGE, fillColor: IconColors.ON_BACKGROUND_3, width: iconSize || "64px", height: iconSize || "64px" }),
      import_react34.default.createElement(
        Label,
        { className: "sendbird-place-holder__body__text", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 },
        type === PlaceHolderTypes.NO_CHANNELS && stringSet2.PLACE_HOLDER__NO_CHANNEL,
        type === PlaceHolderTypes.WRONG && stringSet2.PLACE_HOLDER__WRONG,
        type === PlaceHolderTypes.NO_MESSAGES && stringSet2.PLACE_HOLDER__NO_MESSAGES
      ),
      retryToConnect && import_react34.default.createElement(
        "div",
        { className: "sendbird-place-holder__body__reconnect", role: "button", onClick: retryToConnect, onKeyPress: retryToConnect, tabIndex: 0 },
        import_react34.default.createElement(Icon, { className: "sendbird-place-holder__body__reconnect__icon", type: IconTypes.REFRESH, fillColor: IconColors.PRIMARY, width: "20px", height: "20px" }),
        import_react34.default.createElement(Label, { className: "sendbird-place-holder__body__reconnect__text", type: LabelTypography.BUTTON_1, color: LabelColors.PRIMARY }, stringSet2.PLACE_HOLDER__RETRY_TO_CONNECT)
      )
    ),
    (type === PlaceHolderTypes.NO_RESULTS || type === PlaceHolderTypes.SEARCH_IN || type === PlaceHolderTypes.SEARCHING) && import_react34.default.createElement(
      "div",
      { className: "sendbird-place-holder__body--align-top" },
      type === PlaceHolderTypes.SEARCH_IN && import_react34.default.createElement(
        "div",
        { className: "sendbird-place-holder__body--align-top__text" },
        import_react34.default.createElement(Label, { className: "sendbird-place-holder__body--align-top__text__search-in", type: LabelTypography.BUTTON_2, color: LabelColors.ONBACKGROUND_2 }, stringSet2.SEARCH_IN),
        import_react34.default.createElement(Label, { className: "sendbird-place-holder__body--align-top__text__channel-name", type: LabelTypography.BUTTON_2, color: LabelColors.PRIMARY }, "'".concat(searchInString)),
        import_react34.default.createElement(Label, { className: "sendbird-place-holder__body--align-top__text__quote", type: LabelTypography.BUTTON_2, color: LabelColors.PRIMARY }, "'")
      ),
      type === PlaceHolderTypes.SEARCHING && import_react34.default.createElement(Label, { className: "sendbird-place-hlder__body--align-top__searching", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, stringSet2.SEARCHING),
      type === PlaceHolderTypes.NO_RESULTS && import_react34.default.createElement(Label, { className: "sendbird-place-hlder__body--align-top__no-result", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, stringSet2.NO_SEARCHED_MESSAGE)
    )
  );
}

// node_modules/@sendbird/uikit-react/chunks/bundle-CLczesce.js
var GroupChannelUIView = function(props) {
  var _a3, _b2, _c, _d;
  var isLoading = props.isLoading, isInvalid = props.isInvalid, channelUrl = props.channelUrl;
  var _e3 = deleteNullish(props), renderChannelHeader = _e3.renderChannelHeader, renderMessageList = _e3.renderMessageList, renderMessageInput = _e3.renderMessageInput, renderTypingIndicator = _e3.renderTypingIndicator, renderPlaceholderLoader = _e3.renderPlaceholderLoader, renderPlaceholderInvalid = _e3.renderPlaceholderInvalid;
  var _f = useSendbirdStateContext(), stores = _f.stores, config = _f.config;
  var sdkError = (_a3 = stores === null || stores === void 0 ? void 0 : stores.sdkStore) === null || _a3 === void 0 ? void 0 : _a3.error;
  var logger = config.logger, isOnline = config.isOnline;
  if (isLoading) {
    return import_react35.default.createElement("div", { className: "sendbird-conversation" }, (renderPlaceholderLoader === null || renderPlaceholderLoader === void 0 ? void 0 : renderPlaceholderLoader()) || import_react35.default.createElement(PlaceHolder, { type: PlaceHolderTypes.LOADING }));
  }
  if (!channelUrl) {
    return import_react35.default.createElement("div", { className: "sendbird-conversation" }, (renderPlaceholderInvalid === null || renderPlaceholderInvalid === void 0 ? void 0 : renderPlaceholderInvalid()) || import_react35.default.createElement(PlaceHolder, { type: PlaceHolderTypes.NO_CHANNELS }));
  }
  if (isInvalid) {
    return import_react35.default.createElement("div", { className: "sendbird-conversation" }, (renderPlaceholderInvalid === null || renderPlaceholderInvalid === void 0 ? void 0 : renderPlaceholderInvalid()) || import_react35.default.createElement(PlaceHolder, { type: PlaceHolderTypes.WRONG }));
  }
  if (sdkError) {
    return import_react35.default.createElement("div", { className: "sendbird-conversation" }, (renderPlaceholderInvalid === null || renderPlaceholderInvalid === void 0 ? void 0 : renderPlaceholderInvalid()) || import_react35.default.createElement(PlaceHolder, { type: PlaceHolderTypes.WRONG, retryToConnect: function() {
      logger.info("Channel: reconnecting");
    } }));
  }
  return import_react35.default.createElement(
    "div",
    { className: "sendbird-conversation" },
    renderChannelHeader === null || renderChannelHeader === void 0 ? void 0 : renderChannelHeader({ className: "sendbird-conversation__channel-header" }),
    renderMessageList === null || renderMessageList === void 0 ? void 0 : renderMessageList(props),
    import_react35.default.createElement(
      "div",
      { className: "sendbird-conversation__footer" },
      renderMessageInput === null || renderMessageInput === void 0 ? void 0 : renderMessageInput(),
      import_react35.default.createElement(
        "div",
        { className: "sendbird-conversation__footer__typing-indicator" },
        (renderTypingIndicator === null || renderTypingIndicator === void 0 ? void 0 : renderTypingIndicator()) || ((_b2 = config === null || config === void 0 ? void 0 : config.groupChannel) === null || _b2 === void 0 ? void 0 : _b2.enableTypingIndicator) && ((_d = (_c = config === null || config === void 0 ? void 0 : config.groupChannel) === null || _c === void 0 ? void 0 : _c.typingIndicatorTypes) === null || _d === void 0 ? void 0 : _d.has(TypingIndicatorType.Text)) && import_react35.default.createElement(TypingIndicator, { channelUrl }),
        !isOnline && import_react35.default.createElement(ConnectionStatus, null)
      )
    )
  );
};

// node_modules/@sendbird/uikit-react/GroupChannel/components/GroupChannelHeader.js
var import_react42 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-BpNhTt2R.js
var import_react41 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ui/ChannelAvatar.js
var import_react38 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-52W7LREX.js
var import_react37 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ui/ImageRenderer.js
var import_react36 = __toESM(require_react(), 1);
var numberToPx = function(value) {
  if (value === null)
    return void 0;
  return typeof value === "number" ? "".concat(value, "px") : value;
};
function getDynamicMinLengthInPx(sideLength, maxSideLength, defaultMinLength) {
  var _a3;
  return "min(".concat(maxSideLength !== null && maxSideLength !== void 0 ? maxSideLength : defaultMinLength, ", ").concat((_a3 = numberToPx(sideLength)) !== null && _a3 !== void 0 ? _a3 : defaultMinLength, ")");
}
function useDynamicSideLength(_a3) {
  var width = _a3.width, height = _a3.height, maxSideLength = _a3.maxSideLength, defaultMinLength = _a3.defaultMinLength;
  var dynamicMinWidth = (0, import_react36.useMemo)(function() {
    return getDynamicMinLengthInPx(width, maxSideLength, defaultMinLength);
  }, [width]);
  var dynamicMinHeight = (0, import_react36.useMemo)(function() {
    return getDynamicMinLengthInPx(height, maxSideLength, defaultMinLength);
  }, [height]);
  return [dynamicMinWidth, dynamicMinHeight];
}
var useIsElementInViewport = function() {
  var _a3 = (0, import_react36.useState)(false), isVisible = _a3[0], setIsVisible = _a3[1];
  var _b2 = (0, import_react36.useState)(null), element = _b2[0], setElement = _b2[1];
  var ref = (0, import_react36.useCallback)(function(node) {
    if (node !== null)
      setElement(node);
  }, []);
  (0, import_react36.useEffect)(function() {
    if (!element)
      return;
    var observer = new IntersectionObserver(function(entries2) {
      var entry = entries2[0];
      setIsVisible(entry.isIntersecting);
    });
    observer.observe(element);
    return function() {
      observer.disconnect();
    };
  }, [element]);
  return [ref, isVisible];
};
var useLazyImageLoader = function() {
  var isLoaded = (0, import_react36.useRef)(false);
  var _a3 = useIsElementInViewport(), ref = _a3[0], isVisible = _a3[1];
  if (isVisible)
    isLoaded.current = true;
  return [ref, isLoaded.current];
};
function getBorderRadiusForImageRenderer(circle, borderRadius) {
  if (circle === void 0) {
    circle = false;
  }
  if (borderRadius === void 0) {
    borderRadius = null;
  }
  return circle ? "50%" : numberToPx(borderRadius);
}
function getBorderRadiusForMultipleImageRenderer(borderRadius, index, totalCount) {
  var value = typeof borderRadius === "string" ? parseInt(borderRadius, 10) : borderRadius;
  var lastIndex = totalCount - 1;
  var topLeft = index === 0 ? value * 2 : value;
  var topRight = index === 1 ? value * 2 : value;
  var bottomRight = index === lastIndex ? value * 2 : value;
  var bottomLeft = index === lastIndex - 1 ? value * 2 : value;
  return "".concat(topLeft, "px ").concat(topRight, "px ").concat(bottomRight, "px ").concat(bottomLeft, "px");
}
var ImageRenderer = function(_a3) {
  var _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, url = _a3.url, _c = _a3.alt, alt = _c === void 0 ? "" : _c, _d = _a3.width, width = _d === void 0 ? null : _d, _e3 = _a3.maxSideLength, maxSideLength = _e3 === void 0 ? null : _e3, _f = _a3.height, height = _f === void 0 ? null : _f, _g2 = _a3.circle, circle = _g2 === void 0 ? false : _g2, _h = _a3.fixedSize, fixedSize = _h === void 0 ? false : _h, _j = _a3.placeHolder, placeHolder = _j === void 0 ? null : _j, _k = _a3.defaultComponent, defaultComponent = _k === void 0 ? null : _k, _l = _a3.borderRadius, borderRadius = _l === void 0 ? null : _l, _m = _a3.onLoad, onLoad = _m === void 0 ? noop : _m, _o2 = _a3.onError, onError2 = _o2 === void 0 ? noop : _o2, shadeOnHover = _a3.shadeOnHover, _p = _a3.isUploaded, isUploaded = _p === void 0 ? true : _p;
  var _q = useLazyImageLoader(), ref = _q[0], isVisible = _q[1];
  var internalUrl = isVisible ? url : null;
  var _r2 = (0, import_react36.useState)(false), defaultComponentVisible = _r2[0], setDefaultComponentVisible = _r2[1];
  var _s4 = (0, import_react36.useState)(true), placeholderVisible = _s4[0], setPlaceholderVisible = _s4[1];
  var _t3 = useDynamicSideLength({
    width,
    height,
    maxSideLength,
    defaultMinLength: "400px"
  }), dynamicMinWidth = _t3[0], dynamicMinHeight = _t3[1];
  var renderPlaceholder = function() {
    if (typeof placeHolder === "function") {
      return placeHolder({
        style: {
          width: "100%",
          minWidth: dynamicMinWidth,
          maxWidth: fixedSize ? dynamicMinWidth : "400px",
          height: dynamicMinHeight,
          position: "absolute",
          display: "flex",
          justifyContent: "center",
          alignItems: "center"
        }
      });
    }
    return placeHolder;
  };
  var renderDefault = function() {
    if (typeof defaultComponent === "function")
      return defaultComponent();
    return defaultComponent;
  };
  var renderImage = function() {
    var backgroundStyle = internalUrl ? {
      backgroundRepeat: "no-repeat",
      backgroundPosition: "center",
      backgroundSize: "cover",
      backgroundImage: "url(".concat(internalUrl, ")")
    } : {};
    return import_react36.default.createElement("div", { className: "sendbird-image-renderer__image", style: __assign({ width: "100%", minWidth: dynamicMinWidth, maxWidth: fixedSize ? dynamicMinWidth : "400px", height: dynamicMinHeight, position: "absolute", borderRadius: getBorderRadiusForImageRenderer(circle, borderRadius) }, backgroundStyle) });
  };
  return dynamicMinWidth && dynamicMinHeight && import_react36.default.createElement(
    "div",
    { ref, className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), ["sendbird-image-renderer"], false).join(" "), style: {
      width: "100%",
      minWidth: dynamicMinWidth,
      maxWidth: fixedSize ? dynamicMinWidth : "400px",
      height: dynamicMinHeight
    } },
    placeholderVisible && renderPlaceholder(),
    !internalUrl || defaultComponentVisible ? renderDefault() : renderImage(),
    shadeOnHover && import_react36.default.createElement("div", { className: "sendbird-multiple-files-image-renderer__image-cover", style: __assign({ borderRadius: getBorderRadiusForImageRenderer(circle, borderRadius) }, isUploaded ? {} : { display: "inline-flex" }) }),
    internalUrl && import_react36.default.createElement(HiddenImageLoader, { src: internalUrl, alt, onLoadStart: function() {
      setPlaceholderVisible(true);
      setDefaultComponentVisible(false);
    }, onLoad: function() {
      setPlaceholderVisible(false);
      setDefaultComponentVisible(false);
      onLoad();
    }, onError: function() {
      setPlaceholderVisible(false);
      setDefaultComponentVisible(true);
      onError2();
    } })
  );
};
var HiddenImageLoader = function(props) {
  var src = props.src, alt = props.alt, _a3 = props.onLoadStart, onLoadStart = _a3 === void 0 ? noop : _a3, _b2 = props.onLoad, onLoad = _b2 === void 0 ? noop : _b2, _c = props.onError, onError2 = _c === void 0 ? noop : _c;
  var reloadCtx = (0, import_react36.useRef)({
    currSrc: src,
    prevSrc: src,
    loadFailure: false
  });
  if (reloadCtx.current.currSrc !== src) {
    reloadCtx.current.prevSrc = reloadCtx.current.currSrc;
    reloadCtx.current.currSrc = src;
  }
  (0, import_react36.useLayoutEffect)(function() {
    if (src) {
      var sourceChanged = reloadCtx.current.prevSrc !== reloadCtx.current.currSrc;
      var loadFailure = reloadCtx.current.loadFailure;
      if (sourceChanged || loadFailure) {
        onLoadStart();
      }
    }
  }, [src, navigator.onLine]);
  return import_react36.default.createElement("img", { className: "sendbird-image-renderer__hidden-image-loader", src, alt, onLoad: function() {
    reloadCtx.current.loadFailure = false;
    onLoad();
  }, onError: function() {
    reloadCtx.current.loadFailure = true;
    onError2();
  } });
};

// node_modules/@sendbird/uikit-react/chunks/bundle-BdwvjJsK.js
var pxToNumber = function(px) {
  if (typeof px === "number") {
    return px;
  }
  if (typeof px === "string") {
    var parsed = Number.parseFloat(px);
    if (!Number.isNaN(parsed)) {
      return parsed;
    }
  }
  return NaN;
};

// node_modules/@sendbird/uikit-react/chunks/bundle-52W7LREX.js
var AvatarDefault = function(props) {
  var width = props.width, height = props.height, text2 = props.text;
  var iconWidth = pxToNumber(width);
  var iconHeight = pxToNumber(height);
  if (typeof iconWidth === "number" && !Number.isNaN(iconWidth)) {
    iconWidth *= 0.575;
  }
  if (typeof iconHeight === "number" && !Number.isNaN(iconHeight)) {
    iconHeight *= 0.575;
  }
  return import_react37.default.createElement("div", { className: classnames("sendbird-avatar-img--default", text2 && "text"), style: { width, height } }, text2 ? import_react37.default.createElement("div", { className: "sendbird-avatar-text" }, text2) : import_react37.default.createElement(Icon, { type: IconTypes.USER, fillColor: IconColors.CONTENT, width: iconWidth, height: iconHeight }));
};
var imageRendererClassName = "sendbird-avatar-img";
var AvatarInner = function(_a3) {
  var _b2 = _a3.src, src = _b2 === void 0 ? "" : _b2, _c = _a3.alt, alt = _c === void 0 ? "" : _c, height = _a3.height, width = _a3.width, customDefaultComponent = _a3.customDefaultComponent;
  var defaultComponent = function() {
    return customDefaultComponent ? customDefaultComponent({ width, height }) : import_react37.default.createElement(AvatarDefault, { width, height });
  };
  if (typeof src === "string") {
    return import_react37.default.createElement(ImageRenderer, { className: imageRendererClassName, url: src, height, width, alt, defaultComponent });
  }
  if (src && src.length) {
    if (src.length === 1) {
      return import_react37.default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[0], height, width, alt, defaultComponent });
    }
    if (src.length === 2) {
      return import_react37.default.createElement(
        "div",
        { className: "sendbird-avatar--inner__two-child" },
        import_react37.default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[0], height, width, alt, defaultComponent }),
        import_react37.default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[1], height, width, alt, defaultComponent })
      );
    }
    if (src.length === 3) {
      return import_react37.default.createElement(
        import_react37.default.Fragment,
        null,
        import_react37.default.createElement(
          "div",
          { className: "sendbird-avatar--inner__three-child--upper" },
          import_react37.default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[0], height, width, alt, defaultComponent })
        ),
        import_react37.default.createElement(
          "div",
          { className: "sendbird-avatar--inner__three-child--lower" },
          import_react37.default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[1], height, width, alt, defaultComponent }),
          import_react37.default.createElement(ImageRenderer, { className: imageRendererClassName, url: src[2], height, width, alt, defaultComponent })
        )
      );
    }
    return import_react37.default.createElement("div", { className: "sendbird-avatar--inner__four-child" }, src.slice(0, 4).map(function(url, index) {
      return import_react37.default.createElement(ImageRenderer, { className: imageRendererClassName, url, height, width, alt, key: "".concat(url, "-").concat(index), defaultComponent });
    }));
  }
  return import_react37.default.createElement(ImageRenderer, { className: imageRendererClassName, url: "", height, width, alt, defaultComponent });
};
function Avatar(_a3, ref) {
  var _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, _c = _a3.src, src = _c === void 0 ? "" : _c, _d = _a3.alt, alt = _d === void 0 ? "" : _d, _e3 = _a3.width, width = _e3 === void 0 ? "56px" : _e3, _f = _a3.height, height = _f === void 0 ? "56px" : _f, _g2 = _a3.zIndex, zIndex = _g2 === void 0 ? 0 : _g2, _h = _a3.left, left = _h === void 0 ? "" : _h, _j = _a3.bottom, bottom = _j === void 0 ? "" : _j, onClick = _a3.onClick, customDefaultComponent = _a3.customDefaultComponent;
  return import_react37.default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-avatar"
    ], false).join(" "), role: "button", ref, style: {
      height,
      width,
      zIndex,
      left,
      bottom
    }, onClick, onKeyDown: onClick, tabIndex: 0 },
    import_react37.default.createElement(AvatarInner, { src, width, height, alt, customDefaultComponent })
  );
}
var Avatar$1 = import_react37.default.forwardRef(Avatar);

// node_modules/@sendbird/uikit-react/chunks/bundle-CcuSHuDt.js
var DEFAULT_URL_PREFIX = "https://static.sendbird.com/sample/cover/cover_";
var getOpenChannelAvatar = function(channel) {
  if (channel === null || channel === void 0 ? void 0 : channel.coverUrl) {
    return channel.coverUrl;
  }
  return void 0;
};
var getChannelAvatarSource = function(channel, currentUserId) {
  if (channel === null || channel === void 0 ? void 0 : channel.coverUrl) {
    if (!new RegExp("^".concat(DEFAULT_URL_PREFIX)).test(channel.coverUrl)) {
      return channel.coverUrl;
    }
  }
  return ((channel === null || channel === void 0 ? void 0 : channel.members) || []).filter(function(member) {
    return member.userId !== currentUserId;
  }).map(function(_a3) {
    var profileUrl = _a3.profileUrl;
    return profileUrl;
  });
};
var generateDefaultAvatar = function(channel) {
  if (channel === null || channel === void 0 ? void 0 : channel.coverUrl) {
    if (new RegExp("^".concat(DEFAULT_URL_PREFIX)).test(channel.coverUrl)) {
      return true;
    }
    return false;
  }
  return true;
};

// node_modules/@sendbird/uikit-react/ui/ChannelAvatar.js
function ChannelAvatar(_a3) {
  var channel = _a3.channel, userId = _a3.userId, theme = _a3.theme, _b2 = _a3.width, width = _b2 === void 0 ? 56 : _b2, _c = _a3.height, height = _c === void 0 ? 56 : _c;
  var isBroadcast = channel === null || channel === void 0 ? void 0 : channel.isBroadcast;
  var memoizedAvatar = (0, import_react38.useMemo)(function() {
    return isBroadcast ? generateDefaultAvatar(channel) ? import_react38.default.createElement(
      "div",
      { className: "sendbird-chat-header--default-avatar", style: {
        width,
        height,
        display: "flex",
        justifyContent: "center",
        alignItems: "center"
      } },
      import_react38.default.createElement(Icon, { type: IconTypes.BROADCAST, fillColor: IconColors.CONTENT, width: width * 0.575, height: height * 0.575 })
    ) : import_react38.default.createElement(Avatar$1, { className: "sendbird-chat-header--avatar--broadcast-channel", src: getChannelAvatarSource(channel, userId), width, height, alt: channel === null || channel === void 0 ? void 0 : channel.name }) : import_react38.default.createElement(Avatar$1, { className: "sendbird-chat-header--avatar--group-channel", src: getChannelAvatarSource(channel, userId), width: "".concat(width, "px"), height: "".concat(height, "px"), alt: channel === null || channel === void 0 ? void 0 : channel.name });
  }, [getChannelAvatarSource(channel, userId), theme]);
  return import_react38.default.createElement(import_react38.default.Fragment, null, memoizedAvatar);
}

// node_modules/@sendbird/uikit-react/chunks/bundle-CgymNuYl.js
var getChannelTitle = function(channel, currentUserId, stringSet2) {
  var _a3;
  var LABEL_STRING_SET = stringSet2 || LabelStringSet;
  if (!(channel === null || channel === void 0 ? void 0 : channel.name) && !(channel === null || channel === void 0 ? void 0 : channel.members)) {
    return LABEL_STRING_SET.NO_TITLE;
  }
  if ((channel === null || channel === void 0 ? void 0 : channel.name) && channel.name !== "Group Channel") {
    return channel.name;
  }
  if (((_a3 = channel === null || channel === void 0 ? void 0 : channel.members) === null || _a3 === void 0 ? void 0 : _a3.length) === 1) {
    return LABEL_STRING_SET.NO_MEMBERS;
  }
  return channel === null || channel === void 0 ? void 0 : channel.members.filter(function(_a4) {
    var userId = _a4.userId;
    return userId !== currentUserId;
  }).map(function(_a4) {
    var nickname = _a4.nickname;
    return nickname || LABEL_STRING_SET.NO_NAME;
  }).join(", ");
};

// node_modules/@sendbird/uikit-react/ui/Header.js
var import_react40 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ui/TextButton.js
var import_react39 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-BL3yUpTV.js
var Colors3;
(function(Colors4) {
  Colors4["ONBACKGROUND_1"] = "ONBACKGROUND_1";
  Colors4["ONBACKGROUND_2"] = "ONBACKGROUND_2";
  Colors4["ONBACKGROUND_3"] = "ONBACKGROUND_3";
  Colors4["ONBACKGROUND_4"] = "ONBACKGROUND_4";
  Colors4["ONCONTENT_1"] = "ONCONTENT_1";
  Colors4["ONCONTENT_2"] = "ONCONTENT_2";
  Colors4["PRIMARY"] = "PRIMARY";
  Colors4["ERROR"] = "ERROR";
})(Colors3 || (Colors3 = {}));
var changeColorToClassName3 = function(color) {
  switch (color) {
    case Colors3.ONBACKGROUND_1:
      return "sendbird-color--onbackground-1";
    case Colors3.ONBACKGROUND_2:
      return "sendbird-color--onbackground-2";
    case Colors3.ONBACKGROUND_3:
      return "sendbird-color--onbackground-3";
    case Colors3.ONBACKGROUND_4:
      return "sendbird-color--onbackground-4";
    case Colors3.ONCONTENT_1:
      return "sendbird-color--oncontent-1";
    case Colors3.PRIMARY:
      return "sendbird-color--primary";
    case Colors3.ERROR:
      return "sendbird-color--error";
    default:
      return "";
  }
};

// node_modules/@sendbird/uikit-react/ui/TextButton.js
var TextButton = function(_a3) {
  var _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, _c = _a3.color, color = _c === void 0 ? Colors3.ONBACKGROUND_1 : _c, _d = _a3.disabled, disabled = _d === void 0 ? false : _d, _e3 = _a3.disableUnderline, disableUnderline = _e3 === void 0 ? false : _e3, _f = _a3.onClick, onClick = _f === void 0 ? function() {
  } : _f, children = _a3.children;
  return import_react39.default.createElement("div", { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
    changeColorToClassName3(color),
    disableUnderline ? "sendbird-textbutton--not-underline" : "sendbird-textbutton",
    disabled ? "sendbird-textbutton--disabled" : ""
  ], false).join(" "), role: "button", tabIndex: 0, onClick: function(e4) {
    return onClick(e4);
  }, onKeyPress: function(e4) {
    return onClick(e4);
  } }, children);
};

// node_modules/@sendbird/uikit-react/ui/Header.js
var Header = function(_a3) {
  var _b2;
  var className = _a3.className, renderLeft = _a3.renderLeft, renderRight = _a3.renderRight, renderMiddle = _a3.renderMiddle;
  var isMobile = false;
  try {
    isMobile = (_b2 = useMediaQueryContext === null || useMediaQueryContext === void 0 ? void 0 : useMediaQueryContext()) === null || _b2 === void 0 ? void 0 : _b2.isMobile;
  } catch (err) {
  }
  return import_react40.default.createElement(
    "div",
    { className: classnames("sendbird-ui-header", className), "data-testid": "sendbird-ui-header" },
    renderLeft ? import_react40.default.createElement("div", { className: classnames("sendbird-ui-header__left", isMobile ? "sendbird-ui-header--is-mobile" : "sendbird-ui-header--is-desktop") }, renderLeft === null || renderLeft === void 0 ? void 0 : renderLeft()) : null,
    import_react40.default.createElement("div", { className: "sendbird-ui-header__middle" }, renderMiddle === null || renderMiddle === void 0 ? void 0 : renderMiddle()),
    renderRight ? import_react40.default.createElement("div", { className: classnames("sendbird-ui-header__right", isMobile ? "sendbird-ui-header--is-mobile" : "sendbird-ui-header--is-desktop") }, renderRight === null || renderRight === void 0 ? void 0 : renderRight()) : null
  );
};
var Title = function(_a3) {
  var title = _a3.title, subtitle = _a3.subtitle, onClickSubtitle = _a3.onClickSubtitle;
  return import_react40.default.createElement(
    "div",
    { className: "sendbird-ui-header__middle" },
    title && import_react40.default.createElement(Label, { className: "sendbird-ui-header__middle__title", type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, title),
    subtitle && (onClickSubtitle ? import_react40.default.createElement(
      TextButton,
      { className: "sendbird-ui-header__middle__subtitle__container", onClick: onClickSubtitle, disableUnderline: true },
      import_react40.default.createElement(Label, { className: "sendbird-ui-header__middle__subtitle", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, subtitle)
    ) : import_react40.default.createElement(Label, { className: "sendbird-ui-header__middle__subtitle", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, subtitle))
  );
};
var IconButton2 = function(_a3) {
  var className = _a3.className, onClick = _a3.onClick, type = _a3.type, color = _a3.color, _b2 = _a3.width, width = _b2 === void 0 ? "32px" : _b2, _c = _a3.height, height = _c === void 0 ? "32px" : _c, _d = _a3.renderIcon, renderIcon = _d === void 0 ? function(props) {
    return import_react40.default.createElement(Icon2, __assign({}, props));
  } : _d;
  return import_react40.default.createElement(IconButton, { className, width, height, onClick }, renderIcon({ type, color }));
};
var Icon2 = function(_a3) {
  var className = _a3.className, type = _a3.type, color = _a3.color, _b2 = _a3.width, width = _b2 === void 0 ? "22px" : _b2, _c = _a3.height, height = _c === void 0 ? "22px" : _c, _d = _a3.onClick, onClick = _d === void 0 ? noop : _d;
  return import_react40.default.createElement(Icon, { className, type, fillColor: color, width, height, onClick: function(e4) {
    return onClick === null || onClick === void 0 ? void 0 : onClick(e4);
  } });
};
var Header$1 = Object.assign(Header, { Title, IconButton: IconButton2, Icon: Icon2 });

// node_modules/@sendbird/uikit-react/chunks/bundle-BpNhTt2R.js
var GroupChannelHeaderView = function(_a3) {
  var className = _a3.className, currentChannel = _a3.currentChannel, showSearchIcon = _a3.showSearchIcon, onBackClick = _a3.onBackClick, onSearchClick = _a3.onSearchClick, onChatHeaderActionClick = _a3.onChatHeaderActionClick, renderLeft = _a3.renderLeft, renderMiddle = _a3.renderMiddle, renderRight = _a3.renderRight;
  var config = useSendbirdStateContext().config;
  var userId = config.userId, theme = config.theme;
  var isMobile = useMediaQueryContext().isMobile;
  var stringSet2 = useLocalization().stringSet;
  var isMuted = (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.myMutedState) === "muted";
  var channelTitle = getChannelTitle(currentChannel, userId, stringSet2);
  return import_react41.default.createElement(Header$1, { className: classnames("sendbird-chat-header", className), renderLeft: renderLeft !== null && renderLeft !== void 0 ? renderLeft : function() {
    return import_react41.default.createElement(
      import_react41.default.Fragment,
      null,
      isMobile && import_react41.default.createElement(Header$1.Icon, { className: "sendbird-chat-header__icon_back", onClick: onBackClick, type: IconTypes.ARROW_LEFT, color: IconColors.PRIMARY, width: "24px", height: "24px" }),
      import_react41.default.createElement(ChannelAvatar, { theme, channel: currentChannel, userId, height: 32, width: 32 })
    );
  }, renderMiddle: renderMiddle !== null && renderMiddle !== void 0 ? renderMiddle : function() {
    return import_react41.default.createElement(Header$1.Title, { title: channelTitle });
  }, renderRight: renderRight !== null && renderRight !== void 0 ? renderRight : function() {
    return import_react41.default.createElement(
      import_react41.default.Fragment,
      null,
      isMuted && import_react41.default.createElement(Header$1.Icon, { className: "sendbird-chat-header__right__mute", type: IconTypes.NOTIFICATIONS_OFF_FILLED, color: IconColors.ON_BACKGROUND_2, width: "24px", height: "24px" }),
      showSearchIcon && !(currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.isEphemeral) && import_react41.default.createElement(Header$1.IconButton, { className: "sendbird-chat-header__right__search", onClick: onSearchClick, type: IconTypes.SEARCH, color: IconColors.PRIMARY, renderIcon: function(props) {
        return import_react41.default.createElement(Header$1.Icon, __assign({}, props, { width: "24px", height: "24px" }));
      } }),
      import_react41.default.createElement(Header$1.IconButton, { className: "sendbird-chat-header__right__info", onClick: onChatHeaderActionClick, type: IconTypes.INFO, color: IconColors.PRIMARY, renderIcon: function(props) {
        return import_react41.default.createElement(Header$1.Icon, __assign({}, props, { width: "24px", height: "24px" }));
      } })
    );
  } });
};

// node_modules/@sendbird/uikit-react/GroupChannel/components/GroupChannelHeader.js
var import_react_dom6 = __toESM(require_react_dom(), 1);
var GroupChannelHeader = function(props) {
  var context = useGroupChannelContext();
  return import_react42.default.createElement(GroupChannelHeaderView, __assign({}, props, context, { currentChannel: context.currentChannel }));
};

// node_modules/@sendbird/uikit-react/GroupChannel/components/MessageList.js
var import_react106 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/GroupChannel/components/Message.js
var import_react100 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-CJirTNRH.js
var import_react95 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-QTCuDZTl.js
function isDate(value) {
  requiredArgs(1, arguments);
  return value instanceof Date || _typeof(value) === "object" && Object.prototype.toString.call(value) === "[object Date]";
}
function isValid(dirtyDate) {
  requiredArgs(1, arguments);
  if (!isDate(dirtyDate) && typeof dirtyDate !== "number") {
    return false;
  }
  var date = toDate(dirtyDate);
  return !isNaN(Number(date));
}
function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }
  var number = Number(dirtyNumber);
  if (isNaN(number)) {
    return number;
  }
  return number < 0 ? Math.ceil(number) : Math.floor(number);
}
function addMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var timestamp = toDate(dirtyDate).getTime();
  var amount = toInteger(dirtyAmount);
  return new Date(timestamp + amount);
}
function subMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, -amount);
}
var MILLISECONDS_IN_DAY = 864e5;
function getUTCDayOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var timestamp = date.getTime();
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date.getTime();
  var difference = timestamp - startOfYearTimestamp;
  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
}
function startOfUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var weekStartsOn = 1;
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}
function getUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = /* @__PURE__ */ new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = /* @__PURE__ */ new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}
function startOfUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var year = getUTCISOWeekYear(dirtyDate);
  var fourthOfJanuary = /* @__PURE__ */ new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCISOWeek(fourthOfJanuary);
  return date;
}
var MILLISECONDS_IN_WEEK$1 = 6048e5;
function getUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK$1) + 1;
}
var defaultOptions = {};
function getDefaultOptions() {
  return defaultOptions;
}
function startOfUTCWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions3 = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions3.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions3.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}
function getUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var defaultOptions3 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions3.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions3.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var firstWeekOfNextYear = /* @__PURE__ */ new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);
  var firstWeekOfThisYear = /* @__PURE__ */ new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}
function startOfUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions3 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions3.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions3.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  var year = getUTCWeekYear(dirtyDate, options);
  var firstWeek = /* @__PURE__ */ new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCWeek(firstWeek, options);
  return date;
}
var MILLISECONDS_IN_WEEK = 6048e5;
function getUTCWeek(dirtyDate, options) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}
function addLeadingZeros(number, targetLength) {
  var sign = number < 0 ? "-" : "";
  var output = Math.abs(number).toString();
  while (output.length < targetLength) {
    output = "0" + output;
  }
  return sign + output;
}
var formatters$1 = {
  // Year
  y: function y4(date, token) {
    var signedYear = date.getUTCFullYear();
    var year = signedYear > 0 ? signedYear : 1 - signedYear;
    return addLeadingZeros(token === "yy" ? year % 100 : year, token.length);
  },
  // Month
  M: function M3(date, token) {
    var month = date.getUTCMonth();
    return token === "M" ? String(month + 1) : addLeadingZeros(month + 1, 2);
  },
  // Day of the month
  d: function d3(date, token) {
    return addLeadingZeros(date.getUTCDate(), token.length);
  },
  // AM or PM
  a: function a3(date, token) {
    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
        return dayPeriodEnumValue.toUpperCase();
      case "aaa":
        return dayPeriodEnumValue;
      case "aaaaa":
        return dayPeriodEnumValue[0];
      case "aaaa":
      default:
        return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
    }
  },
  // Hour [1-12]
  h: function h2(date, token) {
    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);
  },
  // Hour [0-23]
  H: function H3(date, token) {
    return addLeadingZeros(date.getUTCHours(), token.length);
  },
  // Minute
  m: function m3(date, token) {
    return addLeadingZeros(date.getUTCMinutes(), token.length);
  },
  // Second
  s: function s4(date, token) {
    return addLeadingZeros(date.getUTCSeconds(), token.length);
  },
  // Fraction of second
  S: function S4(date, token) {
    var numberOfDigits = token.length;
    var milliseconds2 = date.getUTCMilliseconds();
    var fractionalSeconds = Math.floor(milliseconds2 * Math.pow(10, numberOfDigits - 3));
    return addLeadingZeros(fractionalSeconds, token.length);
  }
};
var dayPeriodEnum = {
  am: "am",
  pm: "pm",
  midnight: "midnight",
  noon: "noon",
  morning: "morning",
  afternoon: "afternoon",
  evening: "evening",
  night: "night"
};
var formatters = {
  // Era
  G: function G2(date, token, localize3) {
    var era = date.getUTCFullYear() > 0 ? 1 : 0;
    switch (token) {
      case "G":
      case "GG":
      case "GGG":
        return localize3.era(era, {
          width: "abbreviated"
        });
      case "GGGGG":
        return localize3.era(era, {
          width: "narrow"
        });
      case "GGGG":
      default:
        return localize3.era(era, {
          width: "wide"
        });
    }
  },
  // Year
  y: function y5(date, token, localize3) {
    if (token === "yo") {
      var signedYear = date.getUTCFullYear();
      var year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize3.ordinalNumber(year, {
        unit: "year"
      });
    }
    return formatters$1.y(date, token);
  },
  // Local week-numbering year
  Y: function Y2(date, token, localize3, options) {
    var signedWeekYear = getUTCWeekYear(date, options);
    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
    if (token === "YY") {
      var twoDigitYear = weekYear % 100;
      return addLeadingZeros(twoDigitYear, 2);
    }
    if (token === "Yo") {
      return localize3.ordinalNumber(weekYear, {
        unit: "year"
      });
    }
    return addLeadingZeros(weekYear, token.length);
  },
  // ISO week-numbering year
  R: function R3(date, token) {
    var isoWeekYear = getUTCISOWeekYear(date);
    return addLeadingZeros(isoWeekYear, token.length);
  },
  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function u3(date, token) {
    var year = date.getUTCFullYear();
    return addLeadingZeros(year, token.length);
  },
  // Quarter
  Q: function Q2(date, token, localize3) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      case "Q":
        return String(quarter);
      case "QQ":
        return addLeadingZeros(quarter, 2);
      case "Qo":
        return localize3.ordinalNumber(quarter, {
          unit: "quarter"
        });
      case "QQQ":
        return localize3.quarter(quarter, {
          width: "abbreviated",
          context: "formatting"
        });
      case "QQQQQ":
        return localize3.quarter(quarter, {
          width: "narrow",
          context: "formatting"
        });
      case "QQQQ":
      default:
        return localize3.quarter(quarter, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Stand-alone quarter
  q: function q2(date, token, localize3) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      case "q":
        return String(quarter);
      case "qq":
        return addLeadingZeros(quarter, 2);
      case "qo":
        return localize3.ordinalNumber(quarter, {
          unit: "quarter"
        });
      case "qqq":
        return localize3.quarter(quarter, {
          width: "abbreviated",
          context: "standalone"
        });
      case "qqqqq":
        return localize3.quarter(quarter, {
          width: "narrow",
          context: "standalone"
        });
      case "qqqq":
      default:
        return localize3.quarter(quarter, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  // Month
  M: function M4(date, token, localize3) {
    var month = date.getUTCMonth();
    switch (token) {
      case "M":
      case "MM":
        return formatters$1.M(date, token);
      case "Mo":
        return localize3.ordinalNumber(month + 1, {
          unit: "month"
        });
      case "MMM":
        return localize3.month(month, {
          width: "abbreviated",
          context: "formatting"
        });
      case "MMMMM":
        return localize3.month(month, {
          width: "narrow",
          context: "formatting"
        });
      case "MMMM":
      default:
        return localize3.month(month, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Stand-alone month
  L: function L4(date, token, localize3) {
    var month = date.getUTCMonth();
    switch (token) {
      case "L":
        return String(month + 1);
      case "LL":
        return addLeadingZeros(month + 1, 2);
      case "Lo":
        return localize3.ordinalNumber(month + 1, {
          unit: "month"
        });
      case "LLL":
        return localize3.month(month, {
          width: "abbreviated",
          context: "standalone"
        });
      case "LLLLL":
        return localize3.month(month, {
          width: "narrow",
          context: "standalone"
        });
      case "LLLL":
      default:
        return localize3.month(month, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  // Local week of year
  w: function w3(date, token, localize3, options) {
    var week = getUTCWeek(date, options);
    if (token === "wo") {
      return localize3.ordinalNumber(week, {
        unit: "week"
      });
    }
    return addLeadingZeros(week, token.length);
  },
  // ISO week of year
  I: function I4(date, token, localize3) {
    var isoWeek = getUTCISOWeek(date);
    if (token === "Io") {
      return localize3.ordinalNumber(isoWeek, {
        unit: "week"
      });
    }
    return addLeadingZeros(isoWeek, token.length);
  },
  // Day of the month
  d: function d4(date, token, localize3) {
    if (token === "do") {
      return localize3.ordinalNumber(date.getUTCDate(), {
        unit: "date"
      });
    }
    return formatters$1.d(date, token);
  },
  // Day of year
  D: function D2(date, token, localize3) {
    var dayOfYear = getUTCDayOfYear(date);
    if (token === "Do") {
      return localize3.ordinalNumber(dayOfYear, {
        unit: "dayOfYear"
      });
    }
    return addLeadingZeros(dayOfYear, token.length);
  },
  // Day of week
  E: function E3(date, token, localize3) {
    var dayOfWeek = date.getUTCDay();
    switch (token) {
      case "E":
      case "EE":
      case "EEE":
        return localize3.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "EEEEE":
        return localize3.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "EEEEEE":
        return localize3.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "EEEE":
      default:
        return localize3.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Local day of week
  e: function e3(date, token, localize3, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      case "e":
        return String(localDayOfWeek);
      case "ee":
        return addLeadingZeros(localDayOfWeek, 2);
      case "eo":
        return localize3.ordinalNumber(localDayOfWeek, {
          unit: "day"
        });
      case "eee":
        return localize3.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "eeeee":
        return localize3.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "eeeeee":
        return localize3.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "eeee":
      default:
        return localize3.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Stand-alone local day of week
  c: function c3(date, token, localize3, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      case "c":
        return String(localDayOfWeek);
      case "cc":
        return addLeadingZeros(localDayOfWeek, token.length);
      case "co":
        return localize3.ordinalNumber(localDayOfWeek, {
          unit: "day"
        });
      case "ccc":
        return localize3.day(dayOfWeek, {
          width: "abbreviated",
          context: "standalone"
        });
      case "ccccc":
        return localize3.day(dayOfWeek, {
          width: "narrow",
          context: "standalone"
        });
      case "cccccc":
        return localize3.day(dayOfWeek, {
          width: "short",
          context: "standalone"
        });
      case "cccc":
      default:
        return localize3.day(dayOfWeek, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  // ISO day of week
  i: function i3(date, token, localize3) {
    var dayOfWeek = date.getUTCDay();
    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
    switch (token) {
      case "i":
        return String(isoDayOfWeek);
      case "ii":
        return addLeadingZeros(isoDayOfWeek, token.length);
      case "io":
        return localize3.ordinalNumber(isoDayOfWeek, {
          unit: "day"
        });
      case "iii":
        return localize3.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "iiiii":
        return localize3.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "iiiiii":
        return localize3.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "iiii":
      default:
        return localize3.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // AM or PM
  a: function a4(date, token, localize3) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
        return localize3.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "aaa":
        return localize3.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        }).toLowerCase();
      case "aaaaa":
        return localize3.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "aaaa":
      default:
        return localize3.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // AM, PM, midnight, noon
  b: function b5(date, token, localize3) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
    }
    switch (token) {
      case "b":
      case "bb":
        return localize3.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "bbb":
        return localize3.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        }).toLowerCase();
      case "bbbbb":
        return localize3.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "bbbb":
      default:
        return localize3.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // in the morning, in the afternoon, in the evening, at night
  B: function B2(date, token, localize3) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }
    switch (token) {
      case "B":
      case "BB":
      case "BBB":
        return localize3.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "BBBBB":
        return localize3.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "BBBB":
      default:
        return localize3.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Hour [1-12]
  h: function h3(date, token, localize3) {
    if (token === "ho") {
      var hours = date.getUTCHours() % 12;
      if (hours === 0) hours = 12;
      return localize3.ordinalNumber(hours, {
        unit: "hour"
      });
    }
    return formatters$1.h(date, token);
  },
  // Hour [0-23]
  H: function H4(date, token, localize3) {
    if (token === "Ho") {
      return localize3.ordinalNumber(date.getUTCHours(), {
        unit: "hour"
      });
    }
    return formatters$1.H(date, token);
  },
  // Hour [0-11]
  K: function K3(date, token, localize3) {
    var hours = date.getUTCHours() % 12;
    if (token === "Ko") {
      return localize3.ordinalNumber(hours, {
        unit: "hour"
      });
    }
    return addLeadingZeros(hours, token.length);
  },
  // Hour [1-24]
  k: function k2(date, token, localize3) {
    var hours = date.getUTCHours();
    if (hours === 0) hours = 24;
    if (token === "ko") {
      return localize3.ordinalNumber(hours, {
        unit: "hour"
      });
    }
    return addLeadingZeros(hours, token.length);
  },
  // Minute
  m: function m4(date, token, localize3) {
    if (token === "mo") {
      return localize3.ordinalNumber(date.getUTCMinutes(), {
        unit: "minute"
      });
    }
    return formatters$1.m(date, token);
  },
  // Second
  s: function s5(date, token, localize3) {
    if (token === "so") {
      return localize3.ordinalNumber(date.getUTCSeconds(), {
        unit: "second"
      });
    }
    return formatters$1.s(date, token);
  },
  // Fraction of second
  S: function S5(date, token) {
    return formatters$1.S(date, token);
  },
  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function X2(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    if (timezoneOffset === 0) {
      return "Z";
    }
    switch (token) {
      case "X":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      case "XXXX":
      case "XX":
        return formatTimezone(timezoneOffset);
      case "XXXXX":
      case "XXX":
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function x(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "x":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      case "xxxx":
      case "xx":
        return formatTimezone(timezoneOffset);
      case "xxxxx":
      case "xxx":
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (GMT)
  O: function O3(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "O":
      case "OO":
      case "OOO":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      case "OOOO":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (specific non-location)
  z: function z2(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "z":
      case "zz":
      case "zzz":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      case "zzzz":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  // Seconds timestamp
  t: function t6(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = Math.floor(originalDate.getTime() / 1e3);
    return addLeadingZeros(timestamp, token.length);
  },
  // Milliseconds timestamp
  T: function T3(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = originalDate.getTime();
    return addLeadingZeros(timestamp, token.length);
  }
};
function formatTimezoneShort(offset, dirtyDelimiter) {
  var sign = offset > 0 ? "-" : "+";
  var absOffset = Math.abs(offset);
  var hours = Math.floor(absOffset / 60);
  var minutes = absOffset % 60;
  if (minutes === 0) {
    return sign + String(hours);
  }
  var delimiter = dirtyDelimiter;
  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);
}
function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
  if (offset % 60 === 0) {
    var sign = offset > 0 ? "-" : "+";
    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);
  }
  return formatTimezone(offset, dirtyDelimiter);
}
function formatTimezone(offset, dirtyDelimiter) {
  var delimiter = dirtyDelimiter || "";
  var sign = offset > 0 ? "-" : "+";
  var absOffset = Math.abs(offset);
  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);
  var minutes = addLeadingZeros(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}
var dateLongFormatter = function dateLongFormatter2(pattern, formatLong3) {
  switch (pattern) {
    case "P":
      return formatLong3.date({
        width: "short"
      });
    case "PP":
      return formatLong3.date({
        width: "medium"
      });
    case "PPP":
      return formatLong3.date({
        width: "long"
      });
    case "PPPP":
    default:
      return formatLong3.date({
        width: "full"
      });
  }
};
var timeLongFormatter = function timeLongFormatter2(pattern, formatLong3) {
  switch (pattern) {
    case "p":
      return formatLong3.time({
        width: "short"
      });
    case "pp":
      return formatLong3.time({
        width: "medium"
      });
    case "ppp":
      return formatLong3.time({
        width: "long"
      });
    case "pppp":
    default:
      return formatLong3.time({
        width: "full"
      });
  }
};
var dateTimeLongFormatter = function dateTimeLongFormatter2(pattern, formatLong3) {
  var matchResult = pattern.match(/(P+)(p+)?/) || [];
  var datePattern = matchResult[1];
  var timePattern = matchResult[2];
  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong3);
  }
  var dateTimeFormat;
  switch (datePattern) {
    case "P":
      dateTimeFormat = formatLong3.dateTime({
        width: "short"
      });
      break;
    case "PP":
      dateTimeFormat = formatLong3.dateTime({
        width: "medium"
      });
      break;
    case "PPP":
      dateTimeFormat = formatLong3.dateTime({
        width: "long"
      });
      break;
    case "PPPP":
    default:
      dateTimeFormat = formatLong3.dateTime({
        width: "full"
      });
      break;
  }
  return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong3)).replace("{{time}}", timeLongFormatter(timePattern, formatLong3));
};
var longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter
};
function getTimezoneOffsetInMilliseconds(date) {
  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
  utcDate.setUTCFullYear(date.getFullYear());
  return date.getTime() - utcDate.getTime();
}
var protectedDayOfYearTokens = ["D", "DD"];
var protectedWeekYearTokens = ["YY", "YYYY"];
function isProtectedDayOfYearToken(token) {
  return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
  return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token, format3, input) {
  if (token === "YYYY") {
    throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format3, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "YY") {
    throw new RangeError("Use `yy` instead of `YY` (in `".concat(format3, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "D") {
    throw new RangeError("Use `d` instead of `D` (in `".concat(format3, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "DD") {
    throw new RangeError("Use `dd` instead of `DD` (in `".concat(format3, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  }
}
var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
function format(dirtyDate, dirtyFormatStr, options) {
  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
  requiredArgs(2, arguments);
  var formatStr = String(dirtyFormatStr);
  var defaultOptions3 = getDefaultOptions();
  var locale$1 = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions3.locale) !== null && _ref !== void 0 ? _ref : locale;
  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions3.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions3.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions3.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions3.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  if (!locale$1.localize) {
    throw new RangeError("locale must contain localize property");
  }
  if (!locale$1.formatLong) {
    throw new RangeError("locale must contain formatLong property");
  }
  var originalDate = toDate(dirtyDate);
  if (!isValid(originalDate)) {
    throw new RangeError("Invalid time value");
  }
  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);
  var utcDate = subMilliseconds(originalDate, timezoneOffset);
  var formatterOptions = {
    firstWeekContainsDate,
    weekStartsOn,
    locale: locale$1,
    _originalDate: originalDate
  };
  var result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {
    var firstCharacter = substring[0];
    if (firstCharacter === "p" || firstCharacter === "P") {
      var longFormatter = longFormatters[firstCharacter];
      return longFormatter(substring, locale$1.formatLong);
    }
    return substring;
  }).join("").match(formattingTokensRegExp).map(function(substring) {
    if (substring === "''") {
      return "'";
    }
    var firstCharacter = substring[0];
    if (firstCharacter === "'") {
      return cleanEscapedString(substring);
    }
    var formatter = formatters[firstCharacter];
    if (formatter) {
      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
      }
      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
      }
      return formatter(utcDate, substring, locale$1.localize, formatterOptions);
    }
    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
      throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
    }
    return substring;
  }).join("");
  return result;
}
function cleanEscapedString(input) {
  var matched = input.match(escapedStringRegExp);
  if (!matched) {
    return input;
  }
  return matched[1].replace(doubleQuoteRegExp, "'");
}

// node_modules/@sendbird/uikit-react/Message/hooks/useDirtyGetMentions.js
var import_react43 = __toESM(require_react(), 1);
function getMentionNodes(root) {
  if (root) {
    var mentions = root.querySelectorAll("[data-sb-mention='true']");
    var mentionsArray = Array.from(mentions);
    return mentionsArray;
  }
  return [];
}
function useDirtyGetMentions(_a3, _b2) {
  var ref = _a3.ref;
  var logger = _b2.logger;
  var targetNode = ref.current;
  var _c = (0, import_react43.useState)([]), mentionNodes = _c[0], setMentionNodes = _c[1];
  (0, import_react43.useLayoutEffect)(function() {
    if (targetNode) {
      var mentions = getMentionNodes(targetNode);
      setMentionNodes(mentions);
    }
  }, [targetNode]);
  (0, import_react43.useEffect)(function() {
    var config = { childList: true, subtree: true };
    var callback = function(mutationList) {
      var hasMutation = mutationList.length > 0;
      if (hasMutation) {
        setMentionNodes(getMentionNodes(targetNode));
      }
    };
    var observer = new MutationObserver(callback);
    if (targetNode) {
      observer.observe(targetNode, config);
    }
    return function() {
      try {
        observer.disconnect();
      } catch (error) {
        logger.error("useDirtyGetMentions: observer disconnect failed", { observer });
      }
    };
  }, [targetNode]);
  return mentionNodes;
}

// node_modules/@sendbird/uikit-react/ui/DateSeparator.js
var import_react44 = __toESM(require_react(), 1);
var DateSeparator = function(_a3) {
  var _b2 = _a3.children, children = _b2 === void 0 ? void 0 : _b2, _c = _a3.className, className = _c === void 0 ? "" : _c, _d = _a3.separatorColor, separatorColor = _d === void 0 ? Colors3.ONBACKGROUND_4 : _d;
  return import_react44.default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-separator"
    ], false).join(" ") },
    import_react44.default.createElement("div", { className: ["sendbird-separator__left", "".concat(changeColorToClassName3(separatorColor), "--background-color")].join(" ") }),
    import_react44.default.createElement("div", { className: "sendbird-separator__text" }, children || import_react44.default.createElement(Label, { type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, "Date Separator")),
    import_react44.default.createElement("div", { className: ["sendbird-separator__right", "".concat(changeColorToClassName3(separatorColor), "--background-color")].join(" ") })
  );
};

// node_modules/@sendbird/uikit-react/ui/MessageInput.js
var import_react46 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-CLlCJbe7.js
var MessageInputKeys = {
  Enter: "Enter",
  ArrowUp: "ArrowUp",
  ArrowDown: "ArrowDown",
  Backspace: "Backspace"
};
var NodeTypes = {
  ElementNode: 1,
  TextNode: 3
};
var NodeNames = {
  Span: "SPAN",
  Br: "BR",
  Div: "DIV"
};

// node_modules/@sendbird/uikit-react/chunks/bundle-tC4B8MXx.js
var import_react45 = __toESM(require_react(), 1);

// node_modules/dompurify/dist/purify.es.mjs
var {
  entries,
  setPrototypeOf,
  isFrozen,
  getPrototypeOf,
  getOwnPropertyDescriptor
} = Object;
var {
  freeze,
  seal,
  create
} = Object;
var {
  apply,
  construct
} = typeof Reflect !== "undefined" && Reflect;
if (!freeze) {
  freeze = function freeze2(x2) {
    return x2;
  };
}
if (!seal) {
  seal = function seal2(x2) {
    return x2;
  };
}
if (!apply) {
  apply = function apply2(fun, thisValue, args) {
    return fun.apply(thisValue, args);
  };
}
if (!construct) {
  construct = function construct2(Func, args) {
    return new Func(...args);
  };
}
var arrayForEach = unapply(Array.prototype.forEach);
var arrayPop = unapply(Array.prototype.pop);
var arrayPush = unapply(Array.prototype.push);
var stringToLowerCase = unapply(String.prototype.toLowerCase);
var stringToString = unapply(String.prototype.toString);
var stringMatch = unapply(String.prototype.match);
var stringReplace = unapply(String.prototype.replace);
var stringIndexOf = unapply(String.prototype.indexOf);
var stringTrim = unapply(String.prototype.trim);
var objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);
var regExpTest = unapply(RegExp.prototype.test);
var typeErrorCreate = unconstruct(TypeError);
function unapply(func) {
  return function(thisArg) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return apply(func, thisArg, args);
  };
}
function unconstruct(func) {
  return function() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    return construct(func, args);
  };
}
function addToSet(set2, array) {
  let transformCaseFunc = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : stringToLowerCase;
  if (setPrototypeOf) {
    setPrototypeOf(set2, null);
  }
  let l3 = array.length;
  while (l3--) {
    let element = array[l3];
    if (typeof element === "string") {
      const lcElement = transformCaseFunc(element);
      if (lcElement !== element) {
        if (!isFrozen(array)) {
          array[l3] = lcElement;
        }
        element = lcElement;
      }
    }
    set2[element] = true;
  }
  return set2;
}
function cleanArray(array) {
  for (let index = 0; index < array.length; index++) {
    const isPropertyExist = objectHasOwnProperty(array, index);
    if (!isPropertyExist) {
      array[index] = null;
    }
  }
  return array;
}
function clone(object) {
  const newObject = create(null);
  for (const [property, value] of entries(object)) {
    const isPropertyExist = objectHasOwnProperty(object, property);
    if (isPropertyExist) {
      if (Array.isArray(value)) {
        newObject[property] = cleanArray(value);
      } else if (value && typeof value === "object" && value.constructor === Object) {
        newObject[property] = clone(value);
      } else {
        newObject[property] = value;
      }
    }
  }
  return newObject;
}
function lookupGetter(object, prop) {
  while (object !== null) {
    const desc = getOwnPropertyDescriptor(object, prop);
    if (desc) {
      if (desc.get) {
        return unapply(desc.get);
      }
      if (typeof desc.value === "function") {
        return unapply(desc.value);
      }
    }
    object = getPrototypeOf(object);
  }
  function fallbackValue() {
    return null;
  }
  return fallbackValue;
}
var html$1 = freeze(["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"]);
var svg$1 = freeze(["svg", "a", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "filter", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "style", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern"]);
var svgFilters = freeze(["feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence"]);
var svgDisallowed = freeze(["animate", "color-profile", "cursor", "discard", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignobject", "hatch", "hatchpath", "mesh", "meshgradient", "meshpatch", "meshrow", "missing-glyph", "script", "set", "solidcolor", "unknown", "use"]);
var mathMl$1 = freeze(["math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover", "mprescripts"]);
var mathMlDisallowed = freeze(["maction", "maligngroup", "malignmark", "mlongdiv", "mscarries", "mscarry", "msgroup", "mstack", "msline", "msrow", "semantics", "annotation", "annotation-xml", "mprescripts", "none"]);
var text = freeze(["#text"]);
var html = freeze(["accept", "action", "align", "alt", "autocapitalize", "autocomplete", "autopictureinpicture", "autoplay", "background", "bgcolor", "border", "capture", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "controls", "controlslist", "coords", "crossorigin", "datetime", "decoding", "default", "dir", "disabled", "disablepictureinpicture", "disableremoteplayback", "download", "draggable", "enctype", "enterkeyhint", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "inputmode", "integrity", "ismap", "kind", "label", "lang", "list", "loading", "loop", "low", "max", "maxlength", "media", "method", "min", "minlength", "multiple", "muted", "name", "nonce", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "playsinline", "popover", "popovertarget", "popovertargetaction", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "role", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "sizes", "span", "srclang", "start", "src", "srcset", "step", "style", "summary", "tabindex", "title", "translate", "type", "usemap", "valign", "value", "width", "wrap", "xmlns", "slot"]);
var svg = freeze(["accent-height", "accumulate", "additive", "alignment-baseline", "amplitude", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "class", "clip", "clippathunits", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "exponent", "fill", "fill-opacity", "fill-rule", "filter", "filterunits", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "height", "href", "id", "image-rendering", "in", "in2", "intercept", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lang", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "media", "method", "mode", "min", "name", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "preserveaspectratio", "primitiveunits", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "result", "rotate", "scale", "seed", "shape-rendering", "slope", "specularconstant", "specularexponent", "spreadmethod", "startoffset", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "style", "surfacescale", "systemlanguage", "tabindex", "tablevalues", "targetx", "targety", "transform", "transform-origin", "text-anchor", "text-decoration", "text-rendering", "textlength", "type", "u1", "u2", "unicode", "values", "viewbox", "visibility", "version", "vert-adv-y", "vert-origin-x", "vert-origin-y", "width", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "xmlns", "y", "y1", "y2", "z", "zoomandpan"]);
var mathMl = freeze(["accent", "accentunder", "align", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "dir", "display", "displaystyle", "encoding", "fence", "frame", "height", "href", "id", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "width", "xmlns"]);
var xml = freeze(["xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"]);
var MUSTACHE_EXPR = seal(/\{\{[\w\W]*|[\w\W]*\}\}/gm);
var ERB_EXPR = seal(/<%[\w\W]*|[\w\W]*%>/gm);
var TMPLIT_EXPR = seal(/\${[\w\W]*}/gm);
var DATA_ATTR = seal(/^data-[\-\w.\u00B7-\uFFFF]/);
var ARIA_ATTR = seal(/^aria-[\-\w]+$/);
var IS_ALLOWED_URI = seal(
  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i
  // eslint-disable-line no-useless-escape
);
var IS_SCRIPT_OR_DATA = seal(/^(?:\w+script|data):/i);
var ATTR_WHITESPACE = seal(
  /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g
  // eslint-disable-line no-control-regex
);
var DOCTYPE_NAME = seal(/^html$/i);
var CUSTOM_ELEMENT = seal(/^[a-z][.\w]*(-[.\w]+)+$/i);
var EXPRESSIONS = Object.freeze({
  __proto__: null,
  MUSTACHE_EXPR,
  ERB_EXPR,
  TMPLIT_EXPR,
  DATA_ATTR,
  ARIA_ATTR,
  IS_ALLOWED_URI,
  IS_SCRIPT_OR_DATA,
  ATTR_WHITESPACE,
  DOCTYPE_NAME,
  CUSTOM_ELEMENT
});
var NODE_TYPE = {
  element: 1,
  attribute: 2,
  text: 3,
  cdataSection: 4,
  entityReference: 5,
  // Deprecated
  entityNode: 6,
  // Deprecated
  progressingInstruction: 7,
  comment: 8,
  document: 9,
  documentType: 10,
  documentFragment: 11,
  notation: 12
  // Deprecated
};
var getGlobal = function getGlobal2() {
  return typeof window === "undefined" ? null : window;
};
var _createTrustedTypesPolicy = function _createTrustedTypesPolicy2(trustedTypes, purifyHostElement) {
  if (typeof trustedTypes !== "object" || typeof trustedTypes.createPolicy !== "function") {
    return null;
  }
  let suffix = null;
  const ATTR_NAME = "data-tt-policy-suffix";
  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {
    suffix = purifyHostElement.getAttribute(ATTR_NAME);
  }
  const policyName = "dompurify" + (suffix ? "#" + suffix : "");
  try {
    return trustedTypes.createPolicy(policyName, {
      createHTML(html2) {
        return html2;
      },
      createScriptURL(scriptUrl) {
        return scriptUrl;
      }
    });
  } catch (_2) {
    console.warn("TrustedTypes policy " + policyName + " could not be created.");
    return null;
  }
};
function createDOMPurify() {
  let window2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : getGlobal();
  const DOMPurify = (root) => createDOMPurify(root);
  DOMPurify.version = "3.1.7";
  DOMPurify.removed = [];
  if (!window2 || !window2.document || window2.document.nodeType !== NODE_TYPE.document) {
    DOMPurify.isSupported = false;
    return DOMPurify;
  }
  let {
    document: document2
  } = window2;
  const originalDocument = document2;
  const currentScript = originalDocument.currentScript;
  const {
    DocumentFragment,
    HTMLTemplateElement,
    Node: Node2,
    Element,
    NodeFilter,
    NamedNodeMap = window2.NamedNodeMap || window2.MozNamedAttrMap,
    HTMLFormElement,
    DOMParser,
    trustedTypes
  } = window2;
  const ElementPrototype = Element.prototype;
  const cloneNode = lookupGetter(ElementPrototype, "cloneNode");
  const remove = lookupGetter(ElementPrototype, "remove");
  const getNextSibling = lookupGetter(ElementPrototype, "nextSibling");
  const getChildNodes = lookupGetter(ElementPrototype, "childNodes");
  const getParentNode = lookupGetter(ElementPrototype, "parentNode");
  if (typeof HTMLTemplateElement === "function") {
    const template = document2.createElement("template");
    if (template.content && template.content.ownerDocument) {
      document2 = template.content.ownerDocument;
    }
  }
  let trustedTypesPolicy;
  let emptyHTML = "";
  const {
    implementation,
    createNodeIterator,
    createDocumentFragment,
    getElementsByTagName
  } = document2;
  const {
    importNode
  } = originalDocument;
  let hooks = {};
  DOMPurify.isSupported = typeof entries === "function" && typeof getParentNode === "function" && implementation && implementation.createHTMLDocument !== void 0;
  const {
    MUSTACHE_EXPR: MUSTACHE_EXPR2,
    ERB_EXPR: ERB_EXPR2,
    TMPLIT_EXPR: TMPLIT_EXPR2,
    DATA_ATTR: DATA_ATTR2,
    ARIA_ATTR: ARIA_ATTR2,
    IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA2,
    ATTR_WHITESPACE: ATTR_WHITESPACE2,
    CUSTOM_ELEMENT: CUSTOM_ELEMENT2
  } = EXPRESSIONS;
  let {
    IS_ALLOWED_URI: IS_ALLOWED_URI$1
  } = EXPRESSIONS;
  let ALLOWED_TAGS = null;
  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);
  let ALLOWED_ATTR = null;
  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);
  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {
    tagNameCheck: {
      writable: true,
      configurable: false,
      enumerable: true,
      value: null
    },
    attributeNameCheck: {
      writable: true,
      configurable: false,
      enumerable: true,
      value: null
    },
    allowCustomizedBuiltInElements: {
      writable: true,
      configurable: false,
      enumerable: true,
      value: false
    }
  }));
  let FORBID_TAGS = null;
  let FORBID_ATTR = null;
  let ALLOW_ARIA_ATTR = true;
  let ALLOW_DATA_ATTR = true;
  let ALLOW_UNKNOWN_PROTOCOLS = false;
  let ALLOW_SELF_CLOSE_IN_ATTR = true;
  let SAFE_FOR_TEMPLATES = false;
  let SAFE_FOR_XML = true;
  let WHOLE_DOCUMENT = false;
  let SET_CONFIG = false;
  let FORCE_BODY = false;
  let RETURN_DOM = false;
  let RETURN_DOM_FRAGMENT = false;
  let RETURN_TRUSTED_TYPE = false;
  let SANITIZE_DOM = true;
  let SANITIZE_NAMED_PROPS = false;
  const SANITIZE_NAMED_PROPS_PREFIX = "user-content-";
  let KEEP_CONTENT = true;
  let IN_PLACE = false;
  let USE_PROFILES = {};
  let FORBID_CONTENTS = null;
  const DEFAULT_FORBID_CONTENTS = addToSet({}, ["annotation-xml", "audio", "colgroup", "desc", "foreignobject", "head", "iframe", "math", "mi", "mn", "mo", "ms", "mtext", "noembed", "noframes", "noscript", "plaintext", "script", "style", "svg", "template", "thead", "title", "video", "xmp"]);
  let DATA_URI_TAGS = null;
  const DEFAULT_DATA_URI_TAGS = addToSet({}, ["audio", "video", "img", "source", "image", "track"]);
  let URI_SAFE_ATTRIBUTES = null;
  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ["alt", "class", "for", "id", "label", "name", "pattern", "placeholder", "role", "summary", "title", "value", "style", "xmlns"]);
  const MATHML_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
  const SVG_NAMESPACE = "http://www.w3.org/2000/svg";
  const HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
  let NAMESPACE = HTML_NAMESPACE;
  let IS_EMPTY_INPUT = false;
  let ALLOWED_NAMESPACES = null;
  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);
  let PARSER_MEDIA_TYPE = null;
  const SUPPORTED_PARSER_MEDIA_TYPES = ["application/xhtml+xml", "text/html"];
  const DEFAULT_PARSER_MEDIA_TYPE = "text/html";
  let transformCaseFunc = null;
  let CONFIG = null;
  const formElement = document2.createElement("form");
  const isRegexOrFunction = function isRegexOrFunction2(testValue) {
    return testValue instanceof RegExp || testValue instanceof Function;
  };
  const _parseConfig = function _parseConfig2() {
    let cfg = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (CONFIG && CONFIG === cfg) {
      return;
    }
    if (!cfg || typeof cfg !== "object") {
      cfg = {};
    }
    cfg = clone(cfg);
    PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes
    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;
    transformCaseFunc = PARSER_MEDIA_TYPE === "application/xhtml+xml" ? stringToString : stringToLowerCase;
    ALLOWED_TAGS = objectHasOwnProperty(cfg, "ALLOWED_TAGS") ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;
    ALLOWED_ATTR = objectHasOwnProperty(cfg, "ALLOWED_ATTR") ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;
    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, "ALLOWED_NAMESPACES") ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;
    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, "ADD_URI_SAFE_ATTR") ? addToSet(
      clone(DEFAULT_URI_SAFE_ATTRIBUTES),
      // eslint-disable-line indent
      cfg.ADD_URI_SAFE_ATTR,
      // eslint-disable-line indent
      transformCaseFunc
      // eslint-disable-line indent
    ) : DEFAULT_URI_SAFE_ATTRIBUTES;
    DATA_URI_TAGS = objectHasOwnProperty(cfg, "ADD_DATA_URI_TAGS") ? addToSet(
      clone(DEFAULT_DATA_URI_TAGS),
      // eslint-disable-line indent
      cfg.ADD_DATA_URI_TAGS,
      // eslint-disable-line indent
      transformCaseFunc
      // eslint-disable-line indent
    ) : DEFAULT_DATA_URI_TAGS;
    FORBID_CONTENTS = objectHasOwnProperty(cfg, "FORBID_CONTENTS") ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;
    FORBID_TAGS = objectHasOwnProperty(cfg, "FORBID_TAGS") ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};
    FORBID_ATTR = objectHasOwnProperty(cfg, "FORBID_ATTR") ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};
    USE_PROFILES = objectHasOwnProperty(cfg, "USE_PROFILES") ? cfg.USE_PROFILES : false;
    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false;
    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false;
    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false;
    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false;
    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false;
    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false;
    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false;
    RETURN_DOM = cfg.RETURN_DOM || false;
    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false;
    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false;
    FORCE_BODY = cfg.FORCE_BODY || false;
    SANITIZE_DOM = cfg.SANITIZE_DOM !== false;
    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false;
    KEEP_CONTENT = cfg.KEEP_CONTENT !== false;
    IN_PLACE = cfg.IN_PLACE || false;
    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;
    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;
    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};
    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {
      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;
    }
    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {
      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;
    }
    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === "boolean") {
      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;
    }
    if (SAFE_FOR_TEMPLATES) {
      ALLOW_DATA_ATTR = false;
    }
    if (RETURN_DOM_FRAGMENT) {
      RETURN_DOM = true;
    }
    if (USE_PROFILES) {
      ALLOWED_TAGS = addToSet({}, text);
      ALLOWED_ATTR = [];
      if (USE_PROFILES.html === true) {
        addToSet(ALLOWED_TAGS, html$1);
        addToSet(ALLOWED_ATTR, html);
      }
      if (USE_PROFILES.svg === true) {
        addToSet(ALLOWED_TAGS, svg$1);
        addToSet(ALLOWED_ATTR, svg);
        addToSet(ALLOWED_ATTR, xml);
      }
      if (USE_PROFILES.svgFilters === true) {
        addToSet(ALLOWED_TAGS, svgFilters);
        addToSet(ALLOWED_ATTR, svg);
        addToSet(ALLOWED_ATTR, xml);
      }
      if (USE_PROFILES.mathMl === true) {
        addToSet(ALLOWED_TAGS, mathMl$1);
        addToSet(ALLOWED_ATTR, mathMl);
        addToSet(ALLOWED_ATTR, xml);
      }
    }
    if (cfg.ADD_TAGS) {
      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {
        ALLOWED_TAGS = clone(ALLOWED_TAGS);
      }
      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);
    }
    if (cfg.ADD_ATTR) {
      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {
        ALLOWED_ATTR = clone(ALLOWED_ATTR);
      }
      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);
    }
    if (cfg.ADD_URI_SAFE_ATTR) {
      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);
    }
    if (cfg.FORBID_CONTENTS) {
      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {
        FORBID_CONTENTS = clone(FORBID_CONTENTS);
      }
      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);
    }
    if (KEEP_CONTENT) {
      ALLOWED_TAGS["#text"] = true;
    }
    if (WHOLE_DOCUMENT) {
      addToSet(ALLOWED_TAGS, ["html", "head", "body"]);
    }
    if (ALLOWED_TAGS.table) {
      addToSet(ALLOWED_TAGS, ["tbody"]);
      delete FORBID_TAGS.tbody;
    }
    if (cfg.TRUSTED_TYPES_POLICY) {
      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== "function") {
        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');
      }
      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== "function") {
        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');
      }
      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;
      emptyHTML = trustedTypesPolicy.createHTML("");
    } else {
      if (trustedTypesPolicy === void 0) {
        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);
      }
      if (trustedTypesPolicy !== null && typeof emptyHTML === "string") {
        emptyHTML = trustedTypesPolicy.createHTML("");
      }
    }
    if (freeze) {
      freeze(cfg);
    }
    CONFIG = cfg;
  };
  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ["mi", "mo", "mn", "ms", "mtext"]);
  const HTML_INTEGRATION_POINTS = addToSet({}, ["annotation-xml"]);
  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ["title", "style", "font", "a", "script"]);
  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);
  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);
  const _checkValidNamespace = function _checkValidNamespace2(element) {
    let parent = getParentNode(element);
    if (!parent || !parent.tagName) {
      parent = {
        namespaceURI: NAMESPACE,
        tagName: "template"
      };
    }
    const tagName = stringToLowerCase(element.tagName);
    const parentTagName = stringToLowerCase(parent.tagName);
    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {
      return false;
    }
    if (element.namespaceURI === SVG_NAMESPACE) {
      if (parent.namespaceURI === HTML_NAMESPACE) {
        return tagName === "svg";
      }
      if (parent.namespaceURI === MATHML_NAMESPACE) {
        return tagName === "svg" && (parentTagName === "annotation-xml" || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);
      }
      return Boolean(ALL_SVG_TAGS[tagName]);
    }
    if (element.namespaceURI === MATHML_NAMESPACE) {
      if (parent.namespaceURI === HTML_NAMESPACE) {
        return tagName === "math";
      }
      if (parent.namespaceURI === SVG_NAMESPACE) {
        return tagName === "math" && HTML_INTEGRATION_POINTS[parentTagName];
      }
      return Boolean(ALL_MATHML_TAGS[tagName]);
    }
    if (element.namespaceURI === HTML_NAMESPACE) {
      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {
        return false;
      }
      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {
        return false;
      }
      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);
    }
    if (PARSER_MEDIA_TYPE === "application/xhtml+xml" && ALLOWED_NAMESPACES[element.namespaceURI]) {
      return true;
    }
    return false;
  };
  const _forceRemove = function _forceRemove2(node) {
    arrayPush(DOMPurify.removed, {
      element: node
    });
    try {
      getParentNode(node).removeChild(node);
    } catch (_2) {
      remove(node);
    }
  };
  const _removeAttribute = function _removeAttribute2(name, node) {
    try {
      arrayPush(DOMPurify.removed, {
        attribute: node.getAttributeNode(name),
        from: node
      });
    } catch (_2) {
      arrayPush(DOMPurify.removed, {
        attribute: null,
        from: node
      });
    }
    node.removeAttribute(name);
    if (name === "is" && !ALLOWED_ATTR[name]) {
      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {
        try {
          _forceRemove(node);
        } catch (_2) {
        }
      } else {
        try {
          node.setAttribute(name, "");
        } catch (_2) {
        }
      }
    }
  };
  const _initDocument = function _initDocument2(dirty) {
    let doc = null;
    let leadingWhitespace = null;
    if (FORCE_BODY) {
      dirty = "<remove></remove>" + dirty;
    } else {
      const matches = stringMatch(dirty, /^[\r\n\t ]+/);
      leadingWhitespace = matches && matches[0];
    }
    if (PARSER_MEDIA_TYPE === "application/xhtml+xml" && NAMESPACE === HTML_NAMESPACE) {
      dirty = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + dirty + "</body></html>";
    }
    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;
    if (NAMESPACE === HTML_NAMESPACE) {
      try {
        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);
      } catch (_2) {
      }
    }
    if (!doc || !doc.documentElement) {
      doc = implementation.createDocument(NAMESPACE, "template", null);
      try {
        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;
      } catch (_2) {
      }
    }
    const body = doc.body || doc.documentElement;
    if (dirty && leadingWhitespace) {
      body.insertBefore(document2.createTextNode(leadingWhitespace), body.childNodes[0] || null);
    }
    if (NAMESPACE === HTML_NAMESPACE) {
      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? "html" : "body")[0];
    }
    return WHOLE_DOCUMENT ? doc.documentElement : body;
  };
  const _createNodeIterator = function _createNodeIterator2(root) {
    return createNodeIterator.call(
      root.ownerDocument || root,
      root,
      // eslint-disable-next-line no-bitwise
      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION,
      null
    );
  };
  const _isClobbered = function _isClobbered2(elm) {
    return elm instanceof HTMLFormElement && (typeof elm.nodeName !== "string" || typeof elm.textContent !== "string" || typeof elm.removeChild !== "function" || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== "function" || typeof elm.setAttribute !== "function" || typeof elm.namespaceURI !== "string" || typeof elm.insertBefore !== "function" || typeof elm.hasChildNodes !== "function");
  };
  const _isNode = function _isNode2(object) {
    return typeof Node2 === "function" && object instanceof Node2;
  };
  const _executeHook = function _executeHook2(entryPoint, currentNode, data) {
    if (!hooks[entryPoint]) {
      return;
    }
    arrayForEach(hooks[entryPoint], (hook) => {
      hook.call(DOMPurify, currentNode, data, CONFIG);
    });
  };
  const _sanitizeElements = function _sanitizeElements2(currentNode) {
    let content = null;
    _executeHook("beforeSanitizeElements", currentNode, null);
    if (_isClobbered(currentNode)) {
      _forceRemove(currentNode);
      return true;
    }
    const tagName = transformCaseFunc(currentNode.nodeName);
    _executeHook("uponSanitizeElement", currentNode, {
      tagName,
      allowedTags: ALLOWED_TAGS
    });
    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\w]/g, currentNode.innerHTML) && regExpTest(/<[/\w]/g, currentNode.textContent)) {
      _forceRemove(currentNode);
      return true;
    }
    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {
      _forceRemove(currentNode);
      return true;
    }
    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\w]/g, currentNode.data)) {
      _forceRemove(currentNode);
      return true;
    }
    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {
        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {
          return false;
        }
        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {
          return false;
        }
      }
      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {
        const parentNode = getParentNode(currentNode) || currentNode.parentNode;
        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;
        if (childNodes && parentNode) {
          const childCount = childNodes.length;
          for (let i4 = childCount - 1; i4 >= 0; --i4) {
            const childClone = cloneNode(childNodes[i4], true);
            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;
            parentNode.insertBefore(childClone, getNextSibling(currentNode));
          }
        }
      }
      _forceRemove(currentNode);
      return true;
    }
    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {
      _forceRemove(currentNode);
      return true;
    }
    if ((tagName === "noscript" || tagName === "noembed" || tagName === "noframes") && regExpTest(/<\/no(script|embed|frames)/i, currentNode.innerHTML)) {
      _forceRemove(currentNode);
      return true;
    }
    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {
      content = currentNode.textContent;
      arrayForEach([MUSTACHE_EXPR2, ERB_EXPR2, TMPLIT_EXPR2], (expr) => {
        content = stringReplace(content, expr, " ");
      });
      if (currentNode.textContent !== content) {
        arrayPush(DOMPurify.removed, {
          element: currentNode.cloneNode()
        });
        currentNode.textContent = content;
      }
    }
    _executeHook("afterSanitizeElements", currentNode, null);
    return false;
  };
  const _isValidAttribute = function _isValidAttribute2(lcTag, lcName, value) {
    if (SANITIZE_DOM && (lcName === "id" || lcName === "name") && (value in document2 || value in formElement)) {
      return false;
    }
    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR2, lcName)) ;
    else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR2, lcName)) ;
    else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {
      if (
        // First condition does a very basic check if a) it's basically a valid custom element tagname AND
        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck
        _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND
        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
        lcName === "is" && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))
      ) ;
      else {
        return false;
      }
    } else if (URI_SAFE_ATTRIBUTES[lcName]) ;
    else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE2, ""))) ;
    else if ((lcName === "src" || lcName === "xlink:href" || lcName === "href") && lcTag !== "script" && stringIndexOf(value, "data:") === 0 && DATA_URI_TAGS[lcTag]) ;
    else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA2, stringReplace(value, ATTR_WHITESPACE2, ""))) ;
    else if (value) {
      return false;
    } else ;
    return true;
  };
  const _isBasicCustomElement = function _isBasicCustomElement2(tagName) {
    return tagName !== "annotation-xml" && stringMatch(tagName, CUSTOM_ELEMENT2);
  };
  const _sanitizeAttributes = function _sanitizeAttributes2(currentNode) {
    _executeHook("beforeSanitizeAttributes", currentNode, null);
    const {
      attributes
    } = currentNode;
    if (!attributes) {
      return;
    }
    const hookEvent = {
      attrName: "",
      attrValue: "",
      keepAttr: true,
      allowedAttributes: ALLOWED_ATTR
    };
    let l3 = attributes.length;
    while (l3--) {
      const attr = attributes[l3];
      const {
        name,
        namespaceURI,
        value: attrValue
      } = attr;
      const lcName = transformCaseFunc(name);
      let value = name === "value" ? attrValue : stringTrim(attrValue);
      hookEvent.attrName = lcName;
      hookEvent.attrValue = value;
      hookEvent.keepAttr = true;
      hookEvent.forceKeepAttr = void 0;
      _executeHook("uponSanitizeAttribute", currentNode, hookEvent);
      value = hookEvent.attrValue;
      if (hookEvent.forceKeepAttr) {
        continue;
      }
      _removeAttribute(name, currentNode);
      if (!hookEvent.keepAttr) {
        continue;
      }
      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\/>/i, value)) {
        _removeAttribute(name, currentNode);
        continue;
      }
      if (SAFE_FOR_TEMPLATES) {
        arrayForEach([MUSTACHE_EXPR2, ERB_EXPR2, TMPLIT_EXPR2], (expr) => {
          value = stringReplace(value, expr, " ");
        });
      }
      const lcTag = transformCaseFunc(currentNode.nodeName);
      if (!_isValidAttribute(lcTag, lcName, value)) {
        continue;
      }
      if (SANITIZE_NAMED_PROPS && (lcName === "id" || lcName === "name")) {
        _removeAttribute(name, currentNode);
        value = SANITIZE_NAMED_PROPS_PREFIX + value;
      }
      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\/(style|title)/i, value)) {
        _removeAttribute(name, currentNode);
        continue;
      }
      if (trustedTypesPolicy && typeof trustedTypes === "object" && typeof trustedTypes.getAttributeType === "function") {
        if (namespaceURI) ;
        else {
          switch (trustedTypes.getAttributeType(lcTag, lcName)) {
            case "TrustedHTML": {
              value = trustedTypesPolicy.createHTML(value);
              break;
            }
            case "TrustedScriptURL": {
              value = trustedTypesPolicy.createScriptURL(value);
              break;
            }
          }
        }
      }
      try {
        if (namespaceURI) {
          currentNode.setAttributeNS(namespaceURI, name, value);
        } else {
          currentNode.setAttribute(name, value);
        }
        if (_isClobbered(currentNode)) {
          _forceRemove(currentNode);
        } else {
          arrayPop(DOMPurify.removed);
        }
      } catch (_2) {
      }
    }
    _executeHook("afterSanitizeAttributes", currentNode, null);
  };
  const _sanitizeShadowDOM = function _sanitizeShadowDOM2(fragment) {
    let shadowNode = null;
    const shadowIterator = _createNodeIterator(fragment);
    _executeHook("beforeSanitizeShadowDOM", fragment, null);
    while (shadowNode = shadowIterator.nextNode()) {
      _executeHook("uponSanitizeShadowNode", shadowNode, null);
      if (_sanitizeElements(shadowNode)) {
        continue;
      }
      if (shadowNode.content instanceof DocumentFragment) {
        _sanitizeShadowDOM2(shadowNode.content);
      }
      _sanitizeAttributes(shadowNode);
    }
    _executeHook("afterSanitizeShadowDOM", fragment, null);
  };
  DOMPurify.sanitize = function(dirty) {
    let cfg = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    let body = null;
    let importedNode = null;
    let currentNode = null;
    let returnNode = null;
    IS_EMPTY_INPUT = !dirty;
    if (IS_EMPTY_INPUT) {
      dirty = "<!-->";
    }
    if (typeof dirty !== "string" && !_isNode(dirty)) {
      if (typeof dirty.toString === "function") {
        dirty = dirty.toString();
        if (typeof dirty !== "string") {
          throw typeErrorCreate("dirty is not a string, aborting");
        }
      } else {
        throw typeErrorCreate("toString is not a function");
      }
    }
    if (!DOMPurify.isSupported) {
      return dirty;
    }
    if (!SET_CONFIG) {
      _parseConfig(cfg);
    }
    DOMPurify.removed = [];
    if (typeof dirty === "string") {
      IN_PLACE = false;
    }
    if (IN_PLACE) {
      if (dirty.nodeName) {
        const tagName = transformCaseFunc(dirty.nodeName);
        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
          throw typeErrorCreate("root node is forbidden and cannot be sanitized in-place");
        }
      }
    } else if (dirty instanceof Node2) {
      body = _initDocument("<!---->");
      importedNode = body.ownerDocument.importNode(dirty, true);
      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === "BODY") {
        body = importedNode;
      } else if (importedNode.nodeName === "HTML") {
        body = importedNode;
      } else {
        body.appendChild(importedNode);
      }
    } else {
      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes
      dirty.indexOf("<") === -1) {
        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;
      }
      body = _initDocument(dirty);
      if (!body) {
        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : "";
      }
    }
    if (body && FORCE_BODY) {
      _forceRemove(body.firstChild);
    }
    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);
    while (currentNode = nodeIterator.nextNode()) {
      if (_sanitizeElements(currentNode)) {
        continue;
      }
      if (currentNode.content instanceof DocumentFragment) {
        _sanitizeShadowDOM(currentNode.content);
      }
      _sanitizeAttributes(currentNode);
    }
    if (IN_PLACE) {
      return dirty;
    }
    if (RETURN_DOM) {
      if (RETURN_DOM_FRAGMENT) {
        returnNode = createDocumentFragment.call(body.ownerDocument);
        while (body.firstChild) {
          returnNode.appendChild(body.firstChild);
        }
      } else {
        returnNode = body;
      }
      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {
        returnNode = importNode.call(originalDocument, returnNode, true);
      }
      return returnNode;
    }
    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;
    if (WHOLE_DOCUMENT && ALLOWED_TAGS["!doctype"] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {
      serializedHTML = "<!DOCTYPE " + body.ownerDocument.doctype.name + ">\n" + serializedHTML;
    }
    if (SAFE_FOR_TEMPLATES) {
      arrayForEach([MUSTACHE_EXPR2, ERB_EXPR2, TMPLIT_EXPR2], (expr) => {
        serializedHTML = stringReplace(serializedHTML, expr, " ");
      });
    }
    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;
  };
  DOMPurify.setConfig = function() {
    let cfg = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    _parseConfig(cfg);
    SET_CONFIG = true;
  };
  DOMPurify.clearConfig = function() {
    CONFIG = null;
    SET_CONFIG = false;
  };
  DOMPurify.isValidAttribute = function(tag, attr, value) {
    if (!CONFIG) {
      _parseConfig({});
    }
    const lcTag = transformCaseFunc(tag);
    const lcName = transformCaseFunc(attr);
    return _isValidAttribute(lcTag, lcName, value);
  };
  DOMPurify.addHook = function(entryPoint, hookFunction) {
    if (typeof hookFunction !== "function") {
      return;
    }
    hooks[entryPoint] = hooks[entryPoint] || [];
    arrayPush(hooks[entryPoint], hookFunction);
  };
  DOMPurify.removeHook = function(entryPoint) {
    if (hooks[entryPoint]) {
      return arrayPop(hooks[entryPoint]);
    }
  };
  DOMPurify.removeHooks = function(entryPoint) {
    if (hooks[entryPoint]) {
      hooks[entryPoint] = [];
    }
  };
  DOMPurify.removeAllHooks = function() {
    hooks = {};
  };
  return DOMPurify;
}
var purify = createDOMPurify();

// node_modules/@sendbird/uikit-react/chunks/bundle--FsN6ZvY.js
var MENTION_USER_LABEL_CLASSNAME = "sendbird-mention-user-label";

// node_modules/@sendbird/uikit-react/chunks/bundle-CXiD3Is4.js
var TEXT_MESSAGE_BODY_CLASSNAME = "sendbird-text-message-item-body";

// node_modules/@sendbird/uikit-react/chunks/bundle-BmHwyA9G.js
var OG_MESSAGE_BODY_CLASSNAME = "sendbird-og-message-item-body__text-bubble";

// node_modules/@sendbird/uikit-react/chunks/bundle-tC4B8MXx.js
function renderToString(_a3) {
  var userId = _a3.userId, nickname = _a3.nickname;
  var el = '<span data-userid="'.concat(userId, '" data-sb-mention="true" class="').concat(MENTION_USER_LABEL_CLASSNAME, '">').concat(nickname, "</span>");
  var purifier = purify(window);
  var sanitized_ = purifier.sanitize(el);
  var token = sanitized_.split(" ");
  var spanTag = token[0], rest = token.slice(1);
  var sanitized = __spreadArray([spanTag, 'contenteditable="false"'], rest, true).join(" ");
  return sanitized;
}
var sanitizeString = function(str) {
  return str === null || str === void 0 ? void 0 : str.replace(/[\u00A0-\u9999<>]/gim, function(i4) {
    return "".concat("&#", String(i4.charCodeAt(0)), ";");
  });
};
var nodeListToArray = function(childNodes) {
  return childNodes ? Array.from(childNodes) : [];
};
function isChannelTypeSupportsMultipleFilesMessage(channel) {
  var _a3;
  return channel && ((_a3 = channel.isGroupChannel) === null || _a3 === void 0 ? void 0 : _a3.call(channel)) && !channel.isBroadcast && !channel.isSuper;
}
function isHTMLElement(node) {
  return node.nodeType === NodeTypes.ElementNode;
}
function extractTextAndMentions(childNodes) {
  var messageText = "";
  var mentionTemplate = "";
  childNodes.forEach(function(node) {
    if (isHTMLElement(node) && node.nodeName === NodeNames.Span) {
      var innerText = node.innerText, _a3 = node.dataset, dataset = _a3 === void 0 ? {} : _a3;
      var _b2 = dataset.userid, userid = _b2 === void 0 ? "" : _b2;
      messageText += innerText;
      mentionTemplate += "".concat(USER_MENTION_TEMP_CHAR, "{").concat(userid, "}");
    } else if (isHTMLElement(node) && node.nodeName === NodeNames.Br) {
      messageText += "\n";
      mentionTemplate += "\n";
    } else if (isHTMLElement(node) && node.nodeName === NodeNames.Div) {
      var _c = node.textContent, textContent = _c === void 0 ? "" : _c;
      messageText += "\n".concat(textContent);
      mentionTemplate += "\n".concat(textContent);
    } else {
      var _d = node.textContent, textContent = _d === void 0 ? "" : _d;
      messageText += textContent;
      mentionTemplate += textContent;
    }
  });
  return { messageText, mentionTemplate };
}
function inserTemplateToDOM(templateList) {
  var nodes = templateList.map(function(template) {
    var text2 = template.text, userId = template.userId;
    if (userId) {
      return renderToString({ userId, nickname: text2 });
    }
    return sanitizeString(text2);
  }).join(" ").concat(" ");
  document.execCommand("insertHTML", false, nodes);
}
var PASTE_NODE = "sendbird-uikit__paste-node";
var TEXT_MESSAGE_CLASS = "sendbird-word";
var MENTION_CLASS = "sendbird-word__mention";
var MENTION_CLASS_IN_INPUT = "sendbird-mention-user-label";
var MENTION_CLASS_COMBINED_QUERY = ".".concat(MENTION_CLASS, ", .").concat(MENTION_CLASS_IN_INPUT);
function querySelectorIncludingSelf(master, selector) {
  var result = __spreadArray([
    master
  ], Array.from(master.querySelectorAll(selector)), true).find(function(el) {
    return el.matches(selector);
  });
  return result;
}
function getLeafNodes(master) {
  var ogMessage = querySelectorIncludingSelf(master, ".".concat(OG_MESSAGE_BODY_CLASSNAME));
  if (ogMessage) {
    return nodeListToArray(ogMessage.childNodes);
  }
  var textMessageBody = querySelectorIncludingSelf(master, ".".concat(TEXT_MESSAGE_BODY_CLASSNAME));
  if (textMessageBody) {
    return nodeListToArray(textMessageBody.childNodes);
  }
  return nodeListToArray(master.childNodes);
}
function createPasteNode() {
  var pasteNode = document.body.querySelector("#".concat(PASTE_NODE));
  if (pasteNode) {
    pasteNode === null || pasteNode === void 0 ? void 0 : pasteNode.remove();
  }
  var node = document.createElement("div");
  node.id = PASTE_NODE;
  node.style.display = "none";
  return node;
}
function hasMention(parent) {
  return (parent === null || parent === void 0 ? void 0 : parent.querySelector(MENTION_CLASS_COMBINED_QUERY)) ? true : false;
}
var extractTextFromNodes = function(nodes) {
  var text2 = "";
  nodes.forEach(function(node) {
    var textNodes = node.querySelectorAll(".".concat(TEXT_MESSAGE_CLASS));
    if (textNodes.length > 0) {
      text2 += extractTextFromNodes(Array.from(textNodes)) + " ";
    }
    text2 += node.innerText + " ";
  });
  return text2;
};
function domToMessageTemplate(nodeArray) {
  var templates = nodeArray === null || nodeArray === void 0 ? void 0 : nodeArray.reduce(function(accumulator, currentValue) {
    var _a3, _b2;
    var mentionNode;
    var text2 = currentValue === null || currentValue === void 0 ? void 0 : currentValue.innerText;
    if (currentValue instanceof Text) {
      mentionNode = false;
      text2 = (_a3 = currentValue.textContent) !== null && _a3 !== void 0 ? _a3 : "";
    }
    if (currentValue instanceof HTMLElement) {
      mentionNode = currentValue.classList.contains(MENTION_CLASS) || currentValue.classList.contains(MENTION_CLASS_IN_INPUT) ? currentValue : currentValue.querySelector(MENTION_CLASS_COMBINED_QUERY);
    }
    if (mentionNode) {
      var text_1 = currentValue === null || currentValue === void 0 ? void 0 : currentValue.innerText;
      var userId = (_b2 = mentionNode.dataset) === null || _b2 === void 0 ? void 0 : _b2.userid;
      return __spreadArray(__spreadArray([], accumulator, true), [
        {
          text: text_1,
          userId
        }
      ], false);
    }
    return __spreadArray(__spreadArray([], accumulator, true), [
      {
        text: text2
      }
    ], false);
  }, []);
  return templates;
}
function getUsersFromWords(templates, channel) {
  var userMap = {};
  var users = channel.members;
  templates.forEach(function(template) {
    if (template.userId) {
      var mentionedMember = users.find(function(user) {
        return user.userId === template.userId;
      });
      if (mentionedMember) {
        userMap[template.userId] = mentionedMember;
      }
    }
  });
  return Object.values(userMap);
}
function usePaste(_a3) {
  var ref = _a3.ref, setIsInput = _a3.setIsInput, setHeight = _a3.setHeight, channel = _a3.channel, setMentionedUsers = _a3.setMentionedUsers;
  return (0, import_react45.useCallback)(function(e4) {
    e4.preventDefault();
    var html2 = e4.clipboardData.getData("text/html");
    if (!html2) {
      var text2 = e4.clipboardData.getData("text") || getURIListText(e4);
      document.execCommand("insertText", false, sanitizeString(text2));
      setIsInput(true);
      setHeight();
      return;
    }
    var purifier = purify(window);
    var clean = purifier.sanitize(html2);
    var pasteNode = createPasteNode();
    if (pasteNode) {
      pasteNode.innerHTML = clean;
      if (!hasMention(pasteNode)) {
        var text2 = extractTextFromNodes(Array.from(pasteNode.children));
        document.execCommand("insertText", false, sanitizeString(text2));
        pasteNode.remove();
        setIsInput(true);
        setHeight();
        return;
      }
      var leafNodes = getLeafNodes(pasteNode);
      var words = domToMessageTemplate(leafNodes);
      var mentionedUsers = channel.isGroupChannel() ? getUsersFromWords(words, channel) : [];
      setMentionedUsers(mentionedUsers);
      inserTemplateToDOM(words);
      pasteNode.remove();
    }
    setIsInput(true);
    setHeight();
  }, [ref, setIsInput, setHeight, channel, setMentionedUsers]);
}
function getURIListText(e4) {
  var pasteData = e4.clipboardData.getData("text/uri-list");
  if (pasteData.length === 0)
    return "";
  return pasteData.split("\n").reduce(function(accumulator, line) {
    var txt = line.trim();
    if (txt !== "" && !txt.startsWith("#")) {
      accumulator += txt + "\n";
    }
    return accumulator;
  }, "");
}

// node_modules/@sendbird/uikit-react/chunks/bundle-D7JevDoE.js
var USER_MENTION_PREFIX = "@";
var TOKEN_TYPES = {
  string: "string",
  mention: "mention",
  url: "url",
  undetermined: "undetermined",
  markdown: "markdown"
};
var MarkdownRegex = /\[(.*?)\]\((.*?)\)|\*\*(.*?)\*\*/g;
function getUserMentionRegex(mentionedUsers, templatePrefix_) {
  var templatePrefix = templatePrefix_ || USER_MENTION_PREFIX;
  return RegExp("(".concat(mentionedUsers.map(function(u4) {
    var userId = u4.userId.replace(
      // If user.id includes these patterns, need to convert it into an escaped one
      /([.*+?^${}()|[\]\\])/g,
      "\\$1"
    );
    return "".concat(templatePrefix, "\\{").concat(userId, "\\}");
  }).join("|"), ")"), "g");
}
function identifyMentions(_a3) {
  var tokens = _a3.tokens, _b2 = _a3.mentionedUsers, mentionedUsers = _b2 === void 0 ? [] : _b2, _c = _a3.templatePrefix, templatePrefix = _c === void 0 ? USER_MENTION_PREFIX : _c;
  if (!(mentionedUsers === null || mentionedUsers === void 0 ? void 0 : mentionedUsers.length)) {
    return tokens;
  }
  var userMentionRegex = getUserMentionRegex(mentionedUsers, templatePrefix);
  var results = tokens.map(function(token) {
    if (token.type !== TOKEN_TYPES.undetermined) {
      return token;
    }
    var value = token.value;
    var parts = value.split(userMentionRegex);
    var tokens2 = parts.map(function(part) {
      if (part.match(userMentionRegex)) {
        var matchedUser = mentionedUsers.find(function(user) {
          return "@{".concat(user === null || user === void 0 ? void 0 : user.userId, "}") === part;
        });
        var nickname = (matchedUser === null || matchedUser === void 0 ? void 0 : matchedUser.nickname) || "(No name)";
        return { value: nickname, type: TOKEN_TYPES.mention, userId: matchedUser === null || matchedUser === void 0 ? void 0 : matchedUser.userId };
      } else {
        return { value: part, type: TOKEN_TYPES.undetermined };
      }
    });
    return tokens2;
  }).flat();
  return results;
}
function identifyUrlsAndStrings(token) {
  var URL_REG = /(?:https?:\/\/|www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.(xn--)?[a-z]{2,20}\b([-a-zA-Z0-9@:%_+[\],.~#?&/=]*[-a-zA-Z0-9@:%_+~#?&/=])*/g;
  var results = token.map(function(token2) {
    if (token2.type !== TOKEN_TYPES.undetermined) {
      return token2;
    }
    var _a3 = token2.value, value = _a3 === void 0 ? "" : _a3;
    var matches = Array.from(value.matchAll(URL_REG));
    var founds = matches.map(function(value2) {
      var _a4;
      var text2 = value2[0];
      var start = (_a4 = value2.index) !== null && _a4 !== void 0 ? _a4 : 0;
      var end = start + text2.length;
      return { text: text2, start, end };
    });
    var items = [{ value, type: TOKEN_TYPES.string }];
    var cursor = 0;
    founds.forEach(function(_a4) {
      var text2 = _a4.text, start = _a4.start, end = _a4.end;
      var restText = items.pop().value;
      var head = restText.slice(0, start - cursor);
      var mid = text2;
      var tail = restText.slice(end - cursor);
      if (head.length > 0)
        items.push({ value: head, type: TOKEN_TYPES.string });
      items.push({ value: mid, type: TOKEN_TYPES.url });
      if (tail.length > 0)
        items.push({ value: tail, type: TOKEN_TYPES.string });
      cursor = end;
    });
    return items;
  }).flat();
  return results;
}
function splitTokensWithMarkdowns(tokens) {
  var prevTokens = tokens;
  var newTokens = [];
  prevTokens.forEach(function(token) {
    if (token.type === TOKEN_TYPES.mention || token.type === TOKEN_TYPES.markdown) {
      newTokens.push(token);
      return;
    }
    var rawStr = token.value;
    var matches = Array.from(rawStr.matchAll(MarkdownRegex));
    var allMatches = matches.map(function(value) {
      var _a3;
      var text2 = value[0];
      var start = (_a3 = value.index) !== null && _a3 !== void 0 ? _a3 : 0;
      var end = start + text2.length;
      return { text: text2, start, end, groups: value.filter(function(val) {
        return typeof val === "string";
      }) };
    });
    var restText = rawStr;
    var cursor = 0;
    allMatches.forEach(function(_a3) {
      var text2 = _a3.text, start = _a3.start, end = _a3.end, groups = _a3.groups;
      var left = {
        type: TOKEN_TYPES.undetermined,
        value: restText.slice(0, start - cursor)
      };
      newTokens.push(left);
      var markdownType;
      if (text2.startsWith("[")) {
        markdownType = "url";
      } else if (text2.startsWith("**")) {
        markdownType = "bold";
      }
      var mid = {
        type: TOKEN_TYPES.markdown,
        markdownType,
        value: text2,
        groups
      };
      newTokens.push(mid);
      restText = rawStr.slice(end);
      cursor = end;
    });
    if (restText) {
      var right = {
        type: TOKEN_TYPES.undetermined,
        value: restText
      };
      newTokens.push(right);
    }
  });
  return newTokens;
}
function combineNearbyStrings(tokens) {
  var results = tokens.reduce(function(acc, token) {
    var lastToken = acc[acc.length - 1];
    if ((lastToken === null || lastToken === void 0 ? void 0 : lastToken.type) === TOKEN_TYPES.string && token.type === TOKEN_TYPES.string) {
      lastToken.value = "".concat(lastToken.value).concat(token.value);
      return acc;
    }
    return __spreadArray(__spreadArray([], acc, true), [token], false);
  }, []);
  return results;
}
function tokenizeMessage(_a3) {
  var messageText = _a3.messageText, _b2 = _a3.mentionedUsers, mentionedUsers = _b2 === void 0 ? [] : _b2, _c = _a3.templatePrefix, templatePrefix = _c === void 0 ? USER_MENTION_PREFIX : _c, _d = _a3.includeMarkdown, includeMarkdown = _d === void 0 ? false : _d;
  var partialResult = [{
    type: TOKEN_TYPES.undetermined,
    value: messageText
  }];
  var partialWithMentions = identifyMentions({
    tokens: partialResult,
    mentionedUsers,
    templatePrefix
  });
  var partialsWithUrlsAndMentions = identifyUrlsAndStrings(includeMarkdown ? splitTokensWithMarkdowns(partialWithMentions) : partialWithMentions);
  var result = combineNearbyStrings(partialsWithUrlsAndMentions);
  return result;
}
function getChannelPreviewMessage(messageText) {
  var partialResult = [{
    type: TOKEN_TYPES.undetermined,
    value: messageText
  }];
  var tokens = splitTokensWithMarkdowns(partialResult);
  return markDownTokenResolver(tokens);
}
function markDownTokenResolver(tokens) {
  var result = tokens.map(function(token) {
    if (token.type === TOKEN_TYPES.markdown) {
      return markDownTokenResolver(tokenizeMarkdown({ messageText: token.groups[1] }));
    }
    return token.value;
  });
  return result.join("");
}
function tokenizeMarkdown(_a3) {
  var messageText = _a3.messageText;
  var partialResult = [{
    type: TOKEN_TYPES.undetermined,
    value: messageText
  }];
  var result = combineNearbyStrings(splitTokensWithMarkdowns(partialResult));
  return result;
}
function getWhiteSpacePreservedText(text2) {
  var NON_BREAKING_SPACE = " ";
  var lines = text2.split("\n");
  var processedLines = lines.map(function(line) {
    var _a3, _b2;
    var leadingWhitespace = ((_a3 = line.match(/^\s*/)) === null || _a3 === void 0 ? void 0 : _a3[0]) || "";
    var trailingWhitespace = ((_b2 = line.match(/\s*$/)) === null || _b2 === void 0 ? void 0 : _b2[0]) || "";
    var convertedLeadingWhitespace = leadingWhitespace.replace(/ /g, NON_BREAKING_SPACE);
    var convertedTrailingWhitespace = trailingWhitespace.replace(/ /g, NON_BREAKING_SPACE);
    return convertedLeadingWhitespace + line.trim() + convertedTrailingWhitespace;
  });
  var result = processedLines.join("\n");
  return result;
}

// node_modules/@sendbird/uikit-react/ui/MessageInput.js
var ChannelType;
(function(ChannelType2) {
  ChannelType2["BASE"] = "base";
  ChannelType2["GROUP"] = "group";
  ChannelType2["OPEN"] = "open";
})(ChannelType || (ChannelType = {}));
var checkIfFileUploadEnabled = function(_a3) {
  var channel = _a3.channel, config = _a3.config;
  var isEnabled = K2(channel === null || channel === void 0 ? void 0 : channel.channelType).with(ChannelType.GROUP, function() {
    var _a4;
    return (_a4 = config === null || config === void 0 ? void 0 : config.groupChannel) === null || _a4 === void 0 ? void 0 : _a4.enableDocument;
  }).with(ChannelType.OPEN, function() {
    var _a4;
    return (_a4 = config === null || config === void 0 ? void 0 : config.openChannel) === null || _a4 === void 0 ? void 0 : _a4.enableDocument;
  }).otherwise(function() {
    return true;
  });
  return isEnabled;
};
var TEXT_FIELD_ID = "sendbird-message-input-text-field";
var LINE_HEIGHT = 76;
var DEFAULT_CHAT_VIEW_HEIGHT = 600;
var noop3 = function() {
  return null;
};
var displayCaret = function(element, position) {
  var range2 = document.createRange();
  var sel = window.getSelection();
  range2.setStart(element.childNodes[0], position);
  range2.collapse(true);
  sel === null || sel === void 0 ? void 0 : sel.removeAllRanges();
  sel === null || sel === void 0 ? void 0 : sel.addRange(range2);
  element.focus();
};
var resetInput = function(ref) {
  if (ref && ref.current) {
    ref.current.innerHTML = "";
  }
};
var initialTargetStringInfo = {
  targetString: "",
  startNodeIndex: null,
  startOffsetIndex: null,
  endNodeIndex: null,
  endOffsetIndex: null
};
var MessageInput = import_react46.default.forwardRef(function(props, externalRef) {
  var _a3, _b2, _c, _d, _e3;
  var channel = props.channel, _f = props.className, className = _f === void 0 ? "" : _f, _g2 = props.messageFieldId, messageFieldId = _g2 === void 0 ? "" : _g2, _h = props.isEdit, isEdit = _h === void 0 ? false : _h, _j = props.isMobile, isMobile = _j === void 0 ? false : _j, _k = props.isMentionEnabled, isMentionEnabled = _k === void 0 ? false : _k, _l = props.isVoiceMessageEnabled, isVoiceMessageEnabled = _l === void 0 ? true : _l, _m = props.isSelectingMultipleFilesEnabled, isSelectingMultipleFilesEnabled = _m === void 0 ? false : _m, _o2 = props.disabled, disabled = _o2 === void 0 ? false : _o2, _p = props.message, message = _p === void 0 ? null : _p, _q = props.placeholder, placeholder = _q === void 0 ? "" : _q, _r2 = props.maxLength, maxLength = _r2 === void 0 ? 5e3 : _r2, _s4 = props.onFileUpload, onFileUpload = _s4 === void 0 ? noop3 : _s4, _t3 = props.onSendMessage, onSendMessage = _t3 === void 0 ? noop3 : _t3, _u = props.onUpdateMessage, onUpdateMessage = _u === void 0 ? noop3 : _u, _v = props.onCancelEdit, onCancelEdit = _v === void 0 ? noop3 : _v, _w = props.onStartTyping, onStartTyping = _w === void 0 ? noop3 : _w, _x = props.channelUrl, channelUrl = _x === void 0 ? "" : _x, _y = props.mentionSelectedUser, mentionSelectedUser = _y === void 0 ? null : _y, _z = props.onUserMentioned, onUserMentioned = _z === void 0 ? noop3 : _z, _0 = props.onMentionStringChange, onMentionStringChange = _0 === void 0 ? noop3 : _0, _1 = props.onMentionedUserIdsUpdated, onMentionedUserIdsUpdated = _1 === void 0 ? noop3 : _1, _2 = props.onVoiceMessageIconClick, onVoiceMessageIconClick = _2 === void 0 ? noop3 : _2, _3 = props.onKeyUp, onKeyUp = _3 === void 0 ? noop3 : _3, _4 = props.onKeyDown, onKeyDown = _4 === void 0 ? noop3 : _4, _5 = props.renderFileUploadIcon, renderFileUploadIcon = _5 === void 0 ? noop3 : _5, _6 = props.renderVoiceMessageIcon, renderVoiceMessageIcon = _6 === void 0 ? noop3 : _6, _7 = props.renderSendMessageIcon, renderSendMessageIcon = _7 === void 0 ? noop3 : _7, _8 = props.setMentionedUsers, setMentionedUsers = _8 === void 0 ? noop3 : _8, acceptableMimeTypes = props.acceptableMimeTypes;
  var internalRef = externalRef && "current" in externalRef ? externalRef : null;
  var ghostInputRef = (0, import_react46.useRef)(null);
  var textFieldId = messageFieldId || TEXT_FIELD_ID;
  var stringSet2 = useLocalization().stringSet;
  var _9 = useSendbirdStateContext(), config = _9.config, eventHandlers = _9.eventHandlers;
  var isFileUploadEnabled = checkIfFileUploadEnabled({
    channel,
    config
  });
  var fileInputRef = (0, import_react46.useRef)();
  var _10 = (0, import_react46.useState)(false), isInput = _10[0], setIsInput = _10[1];
  var _11 = (0, import_react46.useState)([]), mentionedUserIds = _11[0], setMentionedUserIds = _11[1];
  var _12 = (0, import_react46.useState)(__assign({}, initialTargetStringInfo)), targetStringInfo = _12[0], setTargetStringInfo = _12[1];
  var setHeight = (0, import_react46.useCallback)(function() {
    var elem = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current;
    if (!elem)
      return;
    try {
      var estimatedChatViewHeight = window.document.body.offsetHeight || DEFAULT_CHAT_VIEW_HEIGHT;
      var MAX_HEIGHT = estimatedChatViewHeight * 0.6;
      if (elem.scrollHeight >= LINE_HEIGHT) {
        if (MAX_HEIGHT < elem.scrollHeight) {
          elem.style.height = "auto";
          elem.style.height = "".concat(MAX_HEIGHT, "px");
        } else {
          elem.style.height = "";
        }
      }
    } catch (error) {
    }
  }, []);
  var initialValue = props === null || props === void 0 ? void 0 : props.value;
  (0, import_react46.useEffect)(function() {
    var textField = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current;
    try {
      if (textField && initialValue) {
        textField.innerHTML = initialValue;
        displayCaret(textField, initialValue === null || initialValue === void 0 ? void 0 : initialValue.length);
      }
    } catch (_a4) {
    }
    setMentionedUserIds([]);
    setIsInput((textField === null || textField === void 0 ? void 0 : textField.textContent) ? textField.textContent.trim().length > 0 : false);
    setHeight();
  }, [initialValue]);
  (0, import_react46.useEffect)(function() {
    if (!isEdit) {
      setIsInput(false);
      resetInput(internalRef);
    }
  }, [channelUrl]);
  (0, import_react46.useEffect)(function() {
    var _a4, _b3;
    if (isEdit && (message === null || message === void 0 ? void 0 : message.messageId)) {
      var textField = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current;
      if (isMentionEnabled && (message === null || message === void 0 ? void 0 : message.mentionedUsers) && message.mentionedUsers.length > 0 && (message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate) && message.mentionedMessageTemplate.length > 0) {
        var _c2 = message.mentionedUsers, mentionedUsers_1 = _c2 === void 0 ? [] : _c2;
        var tokens = tokenizeMessage({
          messageText: message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate,
          mentionedUsers: mentionedUsers_1,
          includeMarkdown: channel.isGroupChannel() && config.groupChannel.enableMarkdownForUserMessage
        });
        if (textField) {
          textField.innerHTML = tokens.map(function(token) {
            if (token.type === TOKEN_TYPES.mention) {
              var mentionedUser = mentionedUsers_1.find(function(user) {
                return user.userId === token.userId;
              });
              var nickname = "".concat(USER_MENTION_PREFIX).concat((mentionedUser === null || mentionedUser === void 0 ? void 0 : mentionedUser.nickname) || token.value || stringSet2.MENTION_NAME__NO_NAME);
              return renderToString({
                userId: token.userId,
                nickname
              });
            }
            return sanitizeString(token.value);
          }).join("");
        }
      } else {
        try {
          if (textField) {
            textField.innerHTML = (_a4 = sanitizeString(message === null || message === void 0 ? void 0 : message.message)) !== null && _a4 !== void 0 ? _a4 : "";
          }
        } catch (_d2) {
        }
        setMentionedUserIds([]);
      }
      setIsInput((textField === null || textField === void 0 ? void 0 : textField.textContent) ? ((_b3 = textField === null || textField === void 0 ? void 0 : textField.textContent) === null || _b3 === void 0 ? void 0 : _b3.trim().length) > 0 : false);
      setHeight();
    }
  }, [isEdit, message]);
  var useMentionedLabelDetection = (0, import_react46.useCallback)(function() {
    var _a4;
    var textField = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current;
    if (isMentionEnabled && textField) {
      var newMentionedUserIds = Array.from(textField.getElementsByClassName("sendbird-mention-user-label")).map(
        // @ts-ignore
        function(node) {
          var _a5;
          return (_a5 = node === null || node === void 0 ? void 0 : node.dataset) === null || _a5 === void 0 ? void 0 : _a5.userid;
        }
      );
      if (!arrayEqual(mentionedUserIds, newMentionedUserIds) || newMentionedUserIds.length === 0) {
        onMentionedUserIdsUpdated(newMentionedUserIds);
        setMentionedUserIds(newMentionedUserIds);
      }
    }
    setIsInput((textField === null || textField === void 0 ? void 0 : textField.textContent) ? ((_a4 = textField.textContent) === null || _a4 === void 0 ? void 0 : _a4.trim().length) > 0 : false);
  }, [targetStringInfo, isMentionEnabled]);
  (0, import_react46.useEffect)(function() {
    var _a4, _b3, _c2, _d2;
    if (isMentionEnabled && mentionSelectedUser) {
      var targetString = targetStringInfo.targetString, startNodeIndex = targetStringInfo.startNodeIndex, startOffsetIndex = targetStringInfo.startOffsetIndex, endNodeIndex = targetStringInfo.endNodeIndex, endOffsetIndex = targetStringInfo.endOffsetIndex;
      var textField_1 = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current;
      if (targetString && startNodeIndex !== null && startOffsetIndex !== null && endOffsetIndex !== null && endNodeIndex !== null && textField_1) {
        var childNodes = nodeListToArray(textField_1 === null || textField_1 === void 0 ? void 0 : textField_1.childNodes);
        var startNodeTextContent = (_b3 = (_a4 = childNodes[startNodeIndex]) === null || _a4 === void 0 ? void 0 : _a4.textContent) !== null && _b3 !== void 0 ? _b3 : "";
        var frontTextNode = document.createTextNode(startNodeTextContent.slice(0, startOffsetIndex));
        var endNodeTextContent = (_d2 = (_c2 = childNodes[endNodeIndex]) === null || _c2 === void 0 ? void 0 : _c2.textContent) !== null && _d2 !== void 0 ? _d2 : "";
        var backTextNode = endOffsetIndex && document.createTextNode(" ".concat(endNodeTextContent.slice(endOffsetIndex)));
        var mentionLabel = renderToString({
          userId: mentionSelectedUser === null || mentionSelectedUser === void 0 ? void 0 : mentionSelectedUser.userId,
          nickname: "".concat(USER_MENTION_TEMP_CHAR).concat((mentionSelectedUser === null || mentionSelectedUser === void 0 ? void 0 : mentionSelectedUser.nickname) || stringSet2.MENTION_NAME__NO_NAME)
        });
        var div = document.createElement("div");
        div.innerHTML = mentionLabel;
        var newNodes = __spreadArray(__spreadArray(__spreadArray([], childNodes.slice(0, startNodeIndex), true), [
          frontTextNode,
          div.childNodes[0],
          backTextNode
        ], false), childNodes.slice(endNodeIndex + 1), true);
        if (textField_1) {
          textField_1.innerHTML = "";
          newNodes.forEach(function(newNode) {
            if (newNode) {
              textField_1.appendChild(newNode);
            }
          });
        }
        onUserMentioned(mentionSelectedUser);
        if (window.getSelection || document.getSelection) {
          var selection = window.getSelection() || document.getSelection();
          selection === null || selection === void 0 ? void 0 : selection.removeAllRanges();
          var range2 = new Range();
          range2.selectNodeContents(textField_1);
          range2.setStart(textField_1.childNodes[startNodeIndex + 2], 1);
          range2.setEnd(textField_1.childNodes[startNodeIndex + 2], 1);
          range2.collapse(false);
          selection === null || selection === void 0 ? void 0 : selection.addRange(range2);
          textField_1.focus();
        }
        setTargetStringInfo(__assign({}, initialTargetStringInfo));
        setHeight();
        useMentionedLabelDetection();
      }
    }
  }, [mentionSelectedUser, isMentionEnabled]);
  var useMentionInputDetection = (0, import_react46.useCallback)(function() {
    var _a4, _b3;
    var selection = ((_a4 = window === null || window === void 0 ? void 0 : window.getSelection) === null || _a4 === void 0 ? void 0 : _a4.call(window)) || ((_b3 = document === null || document === void 0 ? void 0 : document.getSelection) === null || _b3 === void 0 ? void 0 : _b3.call(document));
    var textField = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current;
    if ((selection === null || selection === void 0 ? void 0 : selection.anchorNode) === textField) {
      onMentionStringChange("");
    }
    if (isMentionEnabled && textField && selection && selection.anchorNode === selection.focusNode && selection.anchorOffset === selection.focusOffset) {
      var textStack = "";
      var startNodeIndex = null;
      var startOffsetIndex = null;
      var _loop_1 = function(index2) {
        var currentNode = textField.childNodes[index2];
        if (currentNode.nodeType === NodeTypes.TextNode) {
          var textContent = function() {
            var _a5;
            if (currentNode === selection.anchorNode) {
              return (currentNode === null || currentNode === void 0 ? void 0 : currentNode.textContent) ? currentNode === null || currentNode === void 0 ? void 0 : currentNode.textContent.slice(0, selection.anchorOffset) : "";
            }
            return (_a5 = currentNode === null || currentNode === void 0 ? void 0 : currentNode.textContent) !== null && _a5 !== void 0 ? _a5 : "";
          }();
          if (textStack.length > 0) {
            textStack += textContent;
          } else {
            var charLastIndex = textContent.lastIndexOf(USER_MENTION_TEMP_CHAR);
            for (var i4 = charLastIndex - 1; i4 > -1; i4 -= 1) {
              if (textContent[i4] === USER_MENTION_TEMP_CHAR) {
                charLastIndex = i4;
              } else {
                break;
              }
            }
            if (charLastIndex > -1) {
              textStack = textContent;
              startNodeIndex = index2;
              startOffsetIndex = charLastIndex;
            }
          }
        } else {
          textStack = "";
          startNodeIndex = null;
          startOffsetIndex = null;
        }
        if (currentNode === selection.anchorNode) {
          var targetString = textStack && startOffsetIndex !== null ? textStack.slice(startOffsetIndex) : "";
          setTargetStringInfo({
            targetString,
            startNodeIndex,
            startOffsetIndex,
            endNodeIndex: index2,
            endOffsetIndex: selection.anchorOffset
          });
          onMentionStringChange(targetString);
          return { value: void 0 };
        }
      };
      for (var index = 0; index < textField.childNodes.length; index += 1) {
        var state_1 = _loop_1(index);
        if (typeof state_1 === "object")
          return state_1.value;
      }
    }
  }, [isMentionEnabled]);
  var sendMessage = function() {
    var _a4, _b3;
    try {
      var textField_2 = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current;
      if (!isEdit && (textField_2 === null || textField_2 === void 0 ? void 0 : textField_2.textContent)) {
        var _c2 = extractTextAndMentions(textField_2.childNodes), messageText = _c2.messageText, mentionTemplate = _c2.mentionTemplate;
        var params = { message: messageText, mentionTemplate };
        onSendMessage(params);
        resetInput(internalRef);
        if (isMobileIOS(navigator.userAgent)) {
          if (ghostInputRef.current)
            ghostInputRef.current.focus();
          requestAnimationFrame(function() {
            return textField_2.focus();
          });
        } else {
          textField_2.focus();
        }
        setIsInput(false);
        setHeight();
      }
    } catch (error) {
      (_b3 = (_a4 = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.message) === null || _a4 === void 0 ? void 0 : _a4.onSendMessageFailed) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, message, error);
    }
  };
  var isEditDisabled = !((_b2 = (_a3 = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current) === null || _a3 === void 0 ? void 0 : _a3.textContent) === null || _b2 === void 0 ? void 0 : _b2.trim());
  var editMessage = function() {
    var _a4, _b3;
    try {
      var textField = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current;
      var messageId = message === null || message === void 0 ? void 0 : message.messageId;
      if (isEdit && messageId && textField) {
        var _c2 = extractTextAndMentions(textField.childNodes), messageText = _c2.messageText, mentionTemplate = _c2.mentionTemplate;
        var params = { messageId, message: messageText, mentionTemplate };
        onUpdateMessage(params);
        resetInput(internalRef);
      }
    } catch (error) {
      (_b3 = (_a4 = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.message) === null || _a4 === void 0 ? void 0 : _a4.onUpdateMessageFailed) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, message, error);
    }
  };
  var onPaste = usePaste({
    ref: internalRef,
    setMentionedUsers,
    channel,
    setIsInput,
    setHeight
  });
  var uploadFile = function(event) {
    var _a4, _b3;
    var files = event.currentTarget.files;
    try {
      if (files) {
        onFileUpload(Array.from(files));
      }
    } catch (error) {
      (_b3 = (_a4 = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.message) === null || _a4 === void 0 ? void 0 : _a4.onFileUploadFailed) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, error);
    } finally {
      event.target.value = "";
    }
  };
  return import_react46.default.createElement(
    "form",
    { className: classnames.apply(void 0, __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], false), [
      isEdit && "sendbird-message-input__edit",
      disabled && "sendbird-message-input-form__disabled"
    ], false)) },
    import_react46.default.createElement(
      "div",
      { className: classnames("sendbird-message-input", disabled && "sendbird-message-input__disabled"), "data-testid": "sendbird-message-input" },
      isMobileIOS(navigator.userAgent) && import_react46.default.createElement("input", { id: "ghost-input-reset-ime-cjk", ref: ghostInputRef, style: { opacity: 0, padding: 0, margin: 0, height: 0, border: "none", position: "absolute", top: -9999 }, defaultValue: "_" }),
      import_react46.default.createElement("div", {
        id: "".concat(textFieldId).concat(isEdit ? message === null || message === void 0 ? void 0 : message.messageId : ""),
        className: "sendbird-message-input--textarea ".concat(textFieldId),
        contentEditable: !disabled,
        role: "textbox",
        "aria-label": "Text Input",
        ref: externalRef,
        // @ts-ignore
        disabled,
        maxLength,
        onKeyDown: function(e4) {
          var _a4, _b3, _c2, _d2;
          var preventEvent = onKeyDown(e4);
          if (preventEvent) {
            e4.preventDefault();
          } else {
            if (!e4.shiftKey && e4.key === MessageInputKeys.Enter && !isMobile && ((_a4 = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current) === null || _a4 === void 0 ? void 0 : _a4.textContent) && internalRef.current.textContent.trim().length > 0 && ((_b3 = e4 === null || e4 === void 0 ? void 0 : e4.nativeEvent) === null || _b3 === void 0 ? void 0 : _b3.isComposing) !== true) {
              e4.preventDefault();
              sendMessage();
            }
            if (e4.key === MessageInputKeys.Backspace && ((_d2 = (_c2 = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current) === null || _c2 === void 0 ? void 0 : _c2.childNodes) === null || _d2 === void 0 ? void 0 : _d2.length) === 2 && !internalRef.current.childNodes[0].textContent && internalRef.current.childNodes[1].nodeType === NodeTypes.ElementNode) {
              internalRef.current.removeChild(internalRef.current.childNodes[1]);
            }
          }
        },
        onKeyUp: function(e4) {
          var preventEvent = onKeyUp(e4);
          if (preventEvent) {
            e4.preventDefault();
          } else {
            useMentionInputDetection();
          }
        },
        onClick: function() {
          useMentionInputDetection();
        },
        onInput: function() {
          var _a4;
          setHeight();
          onStartTyping();
          setIsInput(((_a4 = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current) === null || _a4 === void 0 ? void 0 : _a4.textContent) ? internalRef.current.textContent.trim().length > 0 : false);
          useMentionedLabelDetection();
        },
        onPaste
      }),
      ((_e3 = (_d = (_c = internalRef === null || internalRef === void 0 ? void 0 : internalRef.current) === null || _c === void 0 ? void 0 : _c.textContent) === null || _d === void 0 ? void 0 : _d.length) !== null && _e3 !== void 0 ? _e3 : 0) === 0 && import_react46.default.createElement(Label, { className: "sendbird-message-input--placeholder", type: LabelTypography.BODY_1, color: disabled ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_3 }, placeholder || stringSet2.MESSAGE_INPUT__PLACE_HOLDER),
      !isEdit && isInput && import_react46.default.createElement(IconButton, { className: "sendbird-message-input--send", height: "32px", width: "32px", onClick: function() {
        return sendMessage();
      }, testID: "sendbird-message-input-send-button" }, (renderSendMessageIcon === null || renderSendMessageIcon === void 0 ? void 0 : renderSendMessageIcon()) || import_react46.default.createElement(Icon, { type: IconTypes.SEND, fillColor: disabled ? IconColors.ON_BACKGROUND_4 : IconColors.PRIMARY, width: "20px", height: "20px" })),
      !isEdit && !isInput && ((renderFileUploadIcon === null || renderFileUploadIcon === void 0 ? void 0 : renderFileUploadIcon()) || isFileUploadEnabled && import_react46.default.createElement(
        IconButton,
        { className: classnames("sendbird-message-input--attach", isVoiceMessageEnabled && "is-voice-message-enabled"), height: "32px", width: "32px", onClick: function() {
          var _a4, _b3;
          (_b3 = (_a4 = fileInputRef === null || fileInputRef === void 0 ? void 0 : fileInputRef.current) === null || _a4 === void 0 ? void 0 : _a4.click) === null || _b3 === void 0 ? void 0 : _b3.call(_a4);
        } },
        import_react46.default.createElement(Icon, { type: IconTypes.ATTACH, fillColor: disabled ? IconColors.ON_BACKGROUND_4 : IconColors.CONTENT_INVERSE, width: "20px", height: "20px" }),
        import_react46.default.createElement("input", {
          className: "sendbird-message-input--attach-input",
          type: "file",
          ref: fileInputRef,
          // It will affect to <Channel /> and <Thread />
          onChange: function(event) {
            return uploadFile(event);
          },
          accept: getMimeTypesUIKitAccepts(acceptableMimeTypes),
          multiple: isSelectingMultipleFilesEnabled && isChannelTypeSupportsMultipleFilesMessage(channel)
        })
      )),
      isVoiceMessageEnabled && !isEdit && !isInput && import_react46.default.createElement(IconButton, { className: "sendbird-message-input--voice-message", width: "32px", height: "32px", onClick: onVoiceMessageIconClick }, (renderVoiceMessageIcon === null || renderVoiceMessageIcon === void 0 ? void 0 : renderVoiceMessageIcon()) || import_react46.default.createElement(Icon, { type: IconTypes.AUDIO_ON_LINED, fillColor: disabled ? IconColors.ON_BACKGROUND_4 : IconColors.CONTENT_INVERSE, width: "20px", height: "20px" }))
    ),
    isEdit && import_react46.default.createElement(
      "div",
      { className: "sendbird-message-input--edit-action", "data-testid": "sendbird-message-input--edit-action" },
      import_react46.default.createElement(Button, { className: "sendbird-message-input--edit-action__cancel", type: ButtonTypes.SECONDARY, size: ButtonSizes.SMALL, onClick: onCancelEdit }, stringSet2.BUTTON__CANCEL),
      import_react46.default.createElement(Button, { className: "sendbird-message-input--edit-action__save", type: ButtonTypes.PRIMARY, size: ButtonSizes.SMALL, disabled: isEditDisabled, onClick: function() {
        return editMessage();
      } }, stringSet2.BUTTON__SAVE)
    )
  );
});

// node_modules/@sendbird/uikit-react/ui/MessageContent.js
var import_react92 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-BX_znRDF.js
var import_react47 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-BAXCq_Wt.js
function startOfDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setHours(0, 0, 0, 0);
  return date;
}
function isSameDay(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);
  var dateRightStartOfDay = startOfDay(dirtyDateRight);
  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
}

// node_modules/@sendbird/uikit-react/chunks/bundle-CmKxC8hb.js
function isToday(dirtyDate) {
  requiredArgs(1, arguments);
  return isSameDay(dirtyDate, Date.now());
}
function isSameYear(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getFullYear() === dateRight.getFullYear();
}
function isThisYear(dirtyDate) {
  requiredArgs(1, arguments);
  return isSameYear(dirtyDate, Date.now());
}
function addDays(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  if (isNaN(amount)) {
    return /* @__PURE__ */ new Date(NaN);
  }
  if (!amount) {
    return date;
  }
  date.setDate(date.getDate() + amount);
  return date;
}
function subDays(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addDays(dirtyDate, -amount);
}
function isYesterday(dirtyDate) {
  requiredArgs(1, arguments);
  return isSameDay(dirtyDate, subDays(Date.now(), 1));
}

// node_modules/@sendbird/uikit-react/chunks/bundle-BX_znRDF.js
var getChannelTitle2 = function(channel, currentUserId, stringSet2) {
  var _a3;
  if (stringSet2 === void 0) {
    stringSet2 = LabelStringSet;
  }
  if (!(channel === null || channel === void 0 ? void 0 : channel.name) && !(channel === null || channel === void 0 ? void 0 : channel.members)) {
    return stringSet2.NO_TITLE;
  }
  if ((channel === null || channel === void 0 ? void 0 : channel.name) && channel.name !== "Group Channel") {
    return channel.name;
  }
  if (((_a3 = channel === null || channel === void 0 ? void 0 : channel.members) === null || _a3 === void 0 ? void 0 : _a3.length) === 1) {
    return stringSet2.NO_MEMBERS;
  }
  return ((channel === null || channel === void 0 ? void 0 : channel.members) || []).filter(function(_a4) {
    var userId = _a4.userId;
    return userId !== currentUserId;
  }).map(function(_a4) {
    var nickname = _a4.nickname;
    return nickname || stringSet2.NO_NAME;
  }).join(", ");
};
var getLastMessageCreatedAt = function(_a3) {
  var _b2;
  var channel = _a3.channel, locale2 = _a3.locale, _c = _a3.stringSet, stringSet2 = _c === void 0 ? LabelStringSet : _c;
  var createdAt = (_b2 = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _b2 === void 0 ? void 0 : _b2.createdAt;
  var optionalParam = locale2 ? { locale: locale2 } : null;
  if (!createdAt) {
    return "";
  }
  if (isToday(createdAt)) {
    return format(createdAt, stringSet2.DATE_FORMAT__LAST_MESSAGE_CREATED_AT__TODAY, optionalParam);
  }
  if (isYesterday(createdAt)) {
    return stringSet2.MESSAGE_STATUS__YESTERDAY || "Yesterday";
  }
  if (isThisYear(createdAt)) {
    return format(createdAt, stringSet2.DATE_FORMAT__LAST_MESSAGE_CREATED_AT__THIS_YEAR, optionalParam);
  }
  return format(createdAt, stringSet2.DATE_FORMAT__LAST_MESSAGE_CREATED_AT__PREVIOUS_YEAR, optionalParam);
};
var getTotalMembers = function(channel) {
  return (channel === null || channel === void 0 ? void 0 : channel.memberCount) ? channel.memberCount : 0;
};
var getChannelPreviewFileDisplayString = function(mimeType, stringSet2) {
  var _a3, _b2, _c, _d, _e3, _f;
  if (stringSet2 === void 0) {
    stringSet2 = LabelStringSet;
  }
  if (isGif(mimeType)) {
    return (_a3 = stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_GIF) !== null && _a3 !== void 0 ? _a3 : "";
  }
  if (isImage(mimeType)) {
    return (_b2 = stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_PHOTO) !== null && _b2 !== void 0 ? _b2 : "";
  }
  if (isVideo(mimeType)) {
    return (_c = stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_VIDEO) !== null && _c !== void 0 ? _c : "";
  }
  if (isAudio(mimeType)) {
    return (_d = stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_AUDIO) !== null && _d !== void 0 ? _d : "";
  }
  if (isVoiceMessageMimeType(mimeType)) {
    return (_e3 = stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_VOICE_MESSAGE) !== null && _e3 !== void 0 ? _e3 : "";
  }
  return (_f = stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_GENERAL) !== null && _f !== void 0 ? _f : "";
};
var getPrettyLastMessage = function(message, stringSet2) {
  var _a3, _b2, _c, _d;
  if (message === void 0) {
    message = null;
  }
  if (stringSet2 === void 0) {
    stringSet2 = LabelStringSet;
  }
  if (!message)
    return "";
  if (isTemplateMessage(message)) {
    return stringSet2.CHANNEL_PREVIEW_LAST_MESSAGE_TEMPLATE_MESSAGE;
  }
  if (message.isFileMessage()) {
    return getChannelPreviewFileDisplayString(message.type, stringSet2);
  }
  if (message.isMultipleFilesMessage()) {
    var mimeType = (_b2 = (_a3 = message.fileInfoList) === null || _a3 === void 0 ? void 0 : _a3[0]) === null || _b2 === void 0 ? void 0 : _b2.mimeType;
    if (isImage(mimeType) || isGif(mimeType)) {
      return (_c = stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.CHANNEL_PREVIEW_LAST_MESSAGE_FILE_TYPE_PHOTO) !== null && _c !== void 0 ? _c : "";
    }
    return getChannelPreviewFileDisplayString(mimeType, stringSet2);
  }
  return (_d = message.message) !== null && _d !== void 0 ? _d : "";
};
var getLastMessageText = function(channel, stringSet2) {
  if (stringSet2 === void 0) {
    stringSet2 = LabelStringSet;
  }
  return (channel === null || channel === void 0 ? void 0 : channel.lastMessage) ? getPrettyLastMessage(channel === null || channel === void 0 ? void 0 : channel.lastMessage, stringSet2) : "";
};
var getChannelUnreadMessageCount = function(channel) {
  return (channel === null || channel === void 0 ? void 0 : channel.unreadMessageCount) ? channel.unreadMessageCount : 0;
};
var _a2;
var _b;
var iconType = (_a2 = {}, _a2[OutgoingMessageStates.SENT] = IconTypes.DONE, _a2[OutgoingMessageStates.DELIVERED] = IconTypes.DONE_ALL, _a2[OutgoingMessageStates.READ] = IconTypes.DONE_ALL, _a2[OutgoingMessageStates.FAILED] = IconTypes.ERROR, _a2[OutgoingMessageStates.PENDING] = void 0, _a2[OutgoingMessageStates.NONE] = void 0, _a2);
var iconColor = (_b = {}, _b[OutgoingMessageStates.SENT] = IconColors.SENT, _b[OutgoingMessageStates.DELIVERED] = IconColors.SENT, _b[OutgoingMessageStates.READ] = IconColors.READ, _b[OutgoingMessageStates.FAILED] = IconColors.ERROR, _b[OutgoingMessageStates.PENDING] = void 0, _b[OutgoingMessageStates.NONE] = void 0, _b);
function MessageStatus(_a3) {
  var _b2;
  var className = _a3.className, message = _a3.message, channel = _a3.channel, _c = _a3.isDateSeparatorConsidered, isDateSeparatorConsidered = _c === void 0 ? true : _c;
  var _d = useLocalization(), stringSet2 = _d.stringSet, dateLocale = _d.dateLocale;
  var status = getOutgoingMessageState(channel, message);
  var hideMessageStatusIcon = ((_b2 = channel === null || channel === void 0 ? void 0 : channel.isGroupChannel) === null || _b2 === void 0 ? void 0 : _b2.call(channel)) && ((channel.isSuper || channel.isPublic || channel.isBroadcast) && !(status === OutgoingMessageStates.PENDING || status === OutgoingMessageStates.FAILED));
  return import_react47.default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-message-status"
    ], false).join(" ") },
    status === OutgoingMessageStates.PENDING ? import_react47.default.createElement(
      Loader,
      { className: "sendbird-message-status__icon", testID: "sendbird-message-status-icon", width: "16px", height: "16px" },
      import_react47.default.createElement(Icon, { type: IconTypes.SPINNER, fillColor: IconColors.PRIMARY, width: "16px", height: "16px" })
    ) : import_react47.default.createElement(Icon, { className: classnames("sendbird-message-status__icon", hideMessageStatusIcon && "hide-icon", status !== OutgoingMessageStates.FAILED && "sendbird-message-status--sent"), testID: "sendbird-message-status-icon", type: iconType[status] || IconTypes.ERROR, fillColor: iconColor[status], width: "16px", height: "16px" }),
    isSentStatus(status) && import_react47.default.createElement(Label, { className: "sendbird-message-status__text", testID: "sendbird-message-status-text", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, isDateSeparatorConsidered ? format((message === null || message === void 0 ? void 0 : message.createdAt) || 0, stringSet2.DATE_FORMAT__MESSAGE_CREATED_AT, { locale: dateLocale }) : getLastMessageCreatedAt({ channel, locale: dateLocale, stringSet: stringSet2 }))
  );
}

// node_modules/@sendbird/uikit-react/chunks/bundle-CfaZQwKj.js
var import_react48 = __toESM(require_react(), 1);
var TriggerIcon = function(_a3) {
  var ref = _a3.ref, _b2 = _a3.onClick, onClick = _b2 === void 0 ? noop : _b2, _c = _a3.onBlur, onBlur = _c === void 0 ? noop : _c, _d = _a3.renderIcon, renderIcon = _d === void 0 ? function(props) {
    return import_react48.default.createElement(Icon, __assign({}, props));
  } : _d;
  return import_react48.default.createElement(IconButton, { ref, width: "32px", height: "32px", onClick, onBlur }, renderIcon({
    type: IconTypes.MORE,
    fillColor: IconColors.CONTENT_INVERSE,
    width: "24px",
    height: "24px"
  }));
};
var CopyMenuItem = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu;
  return import_react48.default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e4) {
    var _a4;
    if (isUserMessage(message))
      copyToClipboard(message.message);
    hideMenu();
    (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
  } }), (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : stringSet2.MESSAGE_MENU__COPY);
};
var ReplyMenuItem = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu, setQuoteMessage = _b2.setQuoteMessage;
  return import_react48.default.createElement(MenuItem$1, __assign({}, props, { disabled: message.parentMessageId > 0, onClick: function(e4) {
    var _a4;
    setQuoteMessage(message);
    hideMenu();
    (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
  } }), (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : stringSet2.MESSAGE_MENU__REPLY);
};
var ThreadMenuItem = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu, onReplyInThread = _b2.onReplyInThread;
  return import_react48.default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e4) {
    var _a4;
    onReplyInThread({ message });
    hideMenu();
    (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
  } }), (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : stringSet2.MESSAGE_MENU__THREAD);
};
var OpenInChannelMenuItem = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), hideMenu = _b2.hideMenu, onMoveToParentMessage = _b2.onMoveToParentMessage;
  return import_react48.default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e4) {
    var _a4;
    onMoveToParentMessage();
    hideMenu();
    (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
  } }), (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : stringSet2.MESSAGE_MENU__OPEN_IN_CHANNEL);
};
var EditMenuItem = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), hideMenu = _b2.hideMenu, showEdit = _b2.showEdit, isOnline = _b2.isOnline;
  return import_react48.default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e4) {
    var _a4;
    if (isOnline) {
      showEdit(true);
      hideMenu();
      (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
    }
  } }), (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : stringSet2.MESSAGE_MENU__EDIT);
};
var ResendMenuItem = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu, resendMessage = _b2.resendMessage, isOnline = _b2.isOnline;
  return import_react48.default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e4) {
    var _a4;
    if (isOnline) {
      resendMessage(message);
      hideMenu();
      (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
    }
  } }), (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : stringSet2.MESSAGE_MENU__RESEND);
};
var DeleteMenuItem = function(props) {
  var _a3, _b2, _c;
  var stringSet2 = useLocalization().stringSet;
  var _d = useMessageMenuContext(), message = _d.message, hideMenu = _d.hideMenu, deleteMessage = _d.deleteMessage, showRemove = _d.showRemove, isOnline = _d.isOnline, disableDeleteMessage = _d.disableDeleteMessage;
  return import_react48.default.createElement(MenuItem$1, __assign({}, props, { disabled: typeof disableDeleteMessage === "boolean" ? disableDeleteMessage : ((_b2 = (_a3 = message.threadInfo) === null || _a3 === void 0 ? void 0 : _a3.replyCount) !== null && _b2 !== void 0 ? _b2 : 0) > 0, onClick: function(e4) {
    var _a4;
    if (isFailedMessage(message)) {
      deleteMessage(message);
    } else if (isOnline) {
      showRemove(true);
      hideMenu();
      (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
    }
  } }), (_c = props.children) !== null && _c !== void 0 ? _c : stringSet2.MESSAGE_MENU__DELETE);
};
var isReplyTypeMessageEnabled = function(_a3) {
  var _b2;
  var channel = _a3.channel, message = _a3.message;
  if (isFailedMessage(message) || isPendingMessage(message)) {
    return false;
  }
  if (!((_b2 = channel === null || channel === void 0 ? void 0 : channel.isGroupChannel) === null || _b2 === void 0 ? void 0 : _b2.call(channel)) || (channel === null || channel === void 0 ? void 0 : channel.isEphemeral)) {
    return false;
  }
  var isBroadcast = channel === null || channel === void 0 ? void 0 : channel.isBroadcast;
  var isOperator3 = (channel === null || channel === void 0 ? void 0 : channel.myRole) === V.OPERATOR;
  if (isBroadcast)
    return isOperator3;
  return true;
};
var showMenuItemCopy = function(_a3) {
  var message = _a3.message;
  return isUserMessage(message);
};
var showMenuItemEdit = function(_a3) {
  var message = _a3.message, channel = _a3.channel, isByMe = _a3.isByMe;
  return !(channel === null || channel === void 0 ? void 0 : channel.isEphemeral) && isUserMessage(message) && isSentMessage(message) && isByMe;
};
var showMenuItemResend = function(_a3) {
  var message = _a3.message, isByMe = _a3.isByMe;
  return isFailedMessage(message) && (message === null || message === void 0 ? void 0 : message.isResendable) && isByMe;
};
var showMenuItemDelete = function(_a3) {
  var message = _a3.message, channel = _a3.channel, isByMe = _a3.isByMe;
  return !(channel === null || channel === void 0 ? void 0 : channel.isEphemeral) && !isPendingMessage(message) && isByMe;
};
var showMenuItemOpenInChannel = function(_a3) {
  var _b2 = _a3.onMoveToParentMessage, onMoveToParentMessage = _b2 === void 0 ? void 0 : _b2;
  return !!onMoveToParentMessage;
};
var showMenuItemReply = function(_a3) {
  var channel = _a3.channel, message = _a3.message, replyType = _a3.replyType;
  return isReplyTypeMessageEnabled({ channel, message }) && replyType === "QUOTE_REPLY";
};
var showMenuItemThread = function(_a3) {
  var channel = _a3.channel, message = _a3.message, replyType = _a3.replyType, onReplyInThread = _a3.onReplyInThread;
  return isReplyTypeMessageEnabled({ channel, message }) && replyType === "THREAD" && !(message === null || message === void 0 ? void 0 : message.parentMessageId) && typeof onReplyInThread === "function";
};
var MessageMenu = function(_a3) {
  var _b2;
  var className = _a3.className, message = _a3.message, channel = _a3.channel, isByMe = _a3.isByMe, replyType = _a3.replyType, _c = _a3.renderTrigger, renderTrigger = _c === void 0 ? TriggerIcon : _c, renderMenuItems = _a3.renderMenuItems, _d = _a3.disableDeleteMessage, disableDeleteMessage = _d === void 0 ? null : _d, _e3 = _a3.showEdit, showEdit = _e3 === void 0 ? noop : _e3, _f = _a3.showRemove, showRemove = _f === void 0 ? noop : _f, deleteMessage = _a3.deleteMessage, resendMessage = _a3.resendMessage, setQuoteMessage = _a3.setQuoteMessage, onReplyInThread = _a3.onReplyInThread, onMoveToParentMessage = _a3.onMoveToParentMessage;
  var config = useSendbirdStateContext().config;
  var isOnline = config.isOnline;
  var triggerRef = (0, import_react48.useRef)(null);
  var containerRef = (0, import_react48.useRef)(null);
  var _g2 = (0, import_react48.useState)(false), isMenuVisible = _g2[0], setMenuVisibility = _g2[1];
  var hideMenu = function() {
    return setMenuVisibility(false);
  };
  var showMenu = function() {
    return setMenuVisibility(true);
  };
  var toggleMenu = function() {
    return setMenuVisibility(function(visible) {
      return !visible;
    });
  };
  var params = {
    message,
    channel,
    isByMe,
    replyType,
    onReplyInThread,
    onMoveToParentMessage
  };
  return import_react48.default.createElement(
    "div",
    { className: classnames("sendbird-message-menu", className), ref: containerRef },
    import_react48.default.createElement(
      MessageMenuProvider,
      { value: {
        message,
        hideMenu,
        showMenu,
        toggleMenu,
        setQuoteMessage,
        onReplyInThread,
        onMoveToParentMessage,
        showEdit,
        showRemove,
        deleteMessage,
        resendMessage,
        isOnline,
        disableDeleteMessage,
        triggerRef,
        containerRef
      } },
      renderTrigger({ ref: triggerRef, onClick: toggleMenu }),
      isMenuVisible && import_react48.default.createElement(MenuItems, { id: getObservingId(message.messageId), parentRef: triggerRef, parentContainRef: containerRef, closeDropdown: hideMenu, openLeft: isByMe }, (_b2 = renderMenuItems === null || renderMenuItems === void 0 ? void 0 : renderMenuItems({
        items: {
          CopyMenuItem,
          ReplyMenuItem,
          ThreadMenuItem,
          OpenInChannelMenuItem,
          EditMenuItem,
          ResendMenuItem,
          DeleteMenuItem
        }
      })) !== null && _b2 !== void 0 ? _b2 : import_react48.default.createElement(
        import_react48.default.Fragment,
        null,
        showMenuItemCopy(params) && import_react48.default.createElement(CopyMenuItem, null),
        showMenuItemReply(params) && import_react48.default.createElement(ReplyMenuItem, null),
        showMenuItemThread(params) && import_react48.default.createElement(ThreadMenuItem, null),
        showMenuItemOpenInChannel(params) && import_react48.default.createElement(OpenInChannelMenuItem, null),
        showMenuItemEdit(params) && import_react48.default.createElement(EditMenuItem, null),
        showMenuItemResend(params) && import_react48.default.createElement(ResendMenuItem, null),
        showMenuItemDelete(params) && import_react48.default.createElement(DeleteMenuItem, null)
      ))
    )
  );
};

// node_modules/@sendbird/uikit-react/ui/MessageItemReactionMenu.js
var import_react51 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ui/ReactionButton.js
var import_react50 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-CruP9bVM.js
var import_react49 = __toESM(require_react(), 1);
var DEFAULT_DURATION = 300;
function preventDefault(e4) {
  if (!isTouchEvent(e4)) {
    return;
  }
  if (e4.touches.length < 2 && e4.preventDefault) {
    e4.preventDefault();
  }
}
function isTouchEvent(e4) {
  return e4 && "touches" in e4;
}
function useLongPress(_a3, _b2) {
  var onLongPress = _a3.onLongPress, onClick = _a3.onClick;
  var _c = _b2 === void 0 ? {} : _b2, _d = _c.delay, delay = _d === void 0 ? DEFAULT_DURATION : _d, _e3 = _c.shouldPreventDefault, shouldPreventDefault = _e3 === void 0 ? true : _e3, _f = _c.shouldStopPropagation, shouldStopPropagation = _f === void 0 ? false : _f;
  var isMobile = useMediaQueryContext().isMobile;
  var _g2 = (0, import_react49.useState)(false), longPressTriggered = _g2[0], setLongPressTriggered = _g2[1];
  var _h = (0, import_react49.useState)(false), dragTriggered = _h[0], setDragTriggered = _h[1];
  var timeout = (0, import_react49.useRef)();
  var target = (0, import_react49.useRef)();
  var start = (0, import_react49.useCallback)(function(e4) {
    e4.persist();
    var clonedEvent = __assign({}, e4);
    setDragTriggered(false);
    if (shouldStopPropagation) {
      e4.stopPropagation();
    }
    if (shouldPreventDefault && e4.target) {
      e4.target.addEventListener("touchend", preventDefault, {
        passive: false
      });
      target.current = e4.target;
    }
    timeout.current = setTimeout(function() {
      onLongPress(clonedEvent);
      setLongPressTriggered(true);
    }, delay);
  }, [onLongPress, delay, shouldPreventDefault, shouldStopPropagation, isMobile]);
  var clear = (0, import_react49.useCallback)(function(e4, shouldTriggerClick, onDrag) {
    if (shouldTriggerClick === void 0) {
      shouldTriggerClick = true;
    }
    if (onDrag === void 0) {
      onDrag = false;
    }
    if (onDrag) {
      setDragTriggered(true);
    } else {
      setDragTriggered(false);
    }
    if (timeout === null || timeout === void 0 ? void 0 : timeout.current) {
      clearTimeout(timeout.current);
    }
    if (shouldTriggerClick && !longPressTriggered && !dragTriggered) {
      onClick === null || onClick === void 0 ? void 0 : onClick(e4);
    }
    setLongPressTriggered(false);
    if (shouldPreventDefault && target.current) {
      target.current.removeEventListener("touchend", preventDefault);
    }
  }, [shouldPreventDefault, onClick, longPressTriggered, dragTriggered]);
  return {
    onMouseDown: function(e4) {
      return start(e4);
    },
    onMouseUp: function(e4) {
      return clear(e4);
    },
    onMouseLeave: function(e4) {
      return clear(e4, false);
    },
    onTouchStart: function(e4) {
      return start(e4);
    },
    // setDragTriggered as true on touchmove, so that next onTouchEnd is ignored
    // if we dont do it, onClick?.(e) will be triggred, see inside clear()
    onTouchMove: function(e4) {
      return clear(e4, false, true);
    },
    onTouchEnd: function(e4) {
      return clear(e4);
    }
  };
}

// node_modules/@sendbird/uikit-react/ui/ReactionButton.js
var ReactionButton = import_react50.default.forwardRef(function(props, ref) {
  var className = props.className, width = props.width, height = props.height, selected = props.selected, _a3 = props.dataSbId, dataSbId = _a3 === void 0 ? "" : _a3, testID = props.testID, onClick = props.onClick, children = props.children;
  var onClickHandler = useLongPress({
    onLongPress: noop,
    onClick
  }, {
    shouldPreventDefault: true,
    shouldStopPropagation: true
  });
  return import_react50.default.createElement(
    "div",
    __assign({ className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-reaction-button".concat(selected ? "--selected" : "")
    ], false).join(" "), ref, role: "button", style: { width, height } }, onClickHandler, { tabIndex: 0, "data-sb-id": testID !== null && testID !== void 0 ? testID : dataSbId, "data-testid": testID !== null && testID !== void 0 ? testID : dataSbId }),
    import_react50.default.createElement("div", { className: "sendbird-reaction-button__inner" }, children)
  );
});

// node_modules/@sendbird/uikit-react/ui/MessageItemReactionMenu.js
var import_react_dom7 = __toESM(require_react_dom(), 1);
function MessageEmojiMenu(_a3) {
  var className = _a3.className, message = _a3.message, userId = _a3.userId, _b2 = _a3.spaceFromTrigger, spaceFromTrigger = _b2 === void 0 ? { x: 0, y: 0 } : _b2, emojiContainer = _a3.emojiContainer, filterEmojiCategoryIds = _a3.filterEmojiCategoryIds, toggleReaction = _a3.toggleReaction;
  var triggerRef = (0, import_react51.useRef)(null);
  var containerRef = (0, import_react51.useRef)(null);
  var filteredEmojis = (0, import_react51.useMemo)(function() {
    return getEmojiListByCategoryIds(emojiContainer, filterEmojiCategoryIds === null || filterEmojiCategoryIds === void 0 ? void 0 : filterEmojiCategoryIds(message));
  }, [emojiContainer, filterEmojiCategoryIds]);
  if (isPendingMessage(message) || isFailedMessage(message)) {
    return null;
  }
  return import_react51.default.createElement(
    "div",
    { className: getClassName([className !== null && className !== void 0 ? className : "", "sendbird-message-item-reaction-menu"]), ref: containerRef },
    import_react51.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
      return import_react51.default.createElement(
        IconButton,
        { className: "sendbird-message-item-reaction-menu__trigger", ref: triggerRef, width: "32px", height: "32px", onClick: function() {
          toggleDropdown();
        } },
        import_react51.default.createElement(Icon, { className: "sendbird-message-item-reaction-menu__trigger__icon", testID: "sendbird-message-item-reaction-menu__trigger__icon", type: IconTypes.EMOJI_MORE, fillColor: IconColors.CONTENT_INVERSE, width: "24px", height: "24px" })
      );
    }, menuItems: function(closeDropdown) {
      if (filteredEmojis.length === 0)
        return null;
      return import_react51.default.createElement(EmojiListItems, { id: getObservingId(message.messageId), parentRef: triggerRef, parentContainRef: containerRef, closeDropdown, spaceFromTrigger }, filteredEmojis.map(function(emoji) {
        var _a4, _b3, _c;
        var isReacted = ((_c = (_b3 = (_a4 = message === null || message === void 0 ? void 0 : message.reactions) === null || _a4 === void 0 ? void 0 : _a4.find(function(reaction) {
          return reaction.key === emoji.key;
        })) === null || _b3 === void 0 ? void 0 : _b3.userIds) === null || _c === void 0 ? void 0 : _c.some(function(reactorId) {
          return reactorId === userId;
        })) || false;
        return import_react51.default.createElement(
          ReactionButton,
          { key: emoji.key, width: "36px", height: "36px", selected: isReacted, onClick: function() {
            closeDropdown();
            toggleReaction === null || toggleReaction === void 0 ? void 0 : toggleReaction(message, emoji.key, isReacted);
          }, testID: "ui_emoji_reactions_menu_".concat(emoji.key) },
          import_react51.default.createElement(ImageRenderer, { url: emoji.url, width: "28px", height: "28px", placeHolder: function(_a5) {
            var style = _a5.style;
            return import_react51.default.createElement(
              "div",
              { style },
              import_react51.default.createElement(Icon, { type: IconTypes.QUESTION, fillColor: IconColors.ON_BACKGROUND_3, width: "28px", height: "28px" })
            );
          } })
        );
      }));
    } })
  );
}

// node_modules/@sendbird/uikit-react/ui/EmojiReactions.js
var import_react61 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ui/ReactionBadge.js
var import_react52 = __toESM(require_react(), 1);
var ReactionBadge = import_react52.default.forwardRef(function(props, ref) {
  var _a3 = props.className, className = _a3 === void 0 ? "" : _a3, testID = props.testID, children = props.children, _b2 = props.count, count = _b2 === void 0 ? "" : _b2, _c = props.isAdd, isAdd = _c === void 0 ? false : _c, _d = props.selected, selected = _d === void 0 ? false : _d, _e3 = props.onClick, onClick = _e3 === void 0 ? function() {
  } : _e3;
  var getClassNameTail = function() {
    if (selected && !isAdd) {
      return "--selected";
    }
    if (isAdd) {
      return "--is-add";
    }
    return "";
  };
  return import_react52.default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-reaction-badge".concat(getClassNameTail())
    ], false).join(" "), "data-testid": testID, role: "button", ref, onClick, onKeyDown: onClick, onTouchEnd: onClick, tabIndex: 0 },
    import_react52.default.createElement(
      "div",
      { className: "sendbird-reaction-badge__inner" },
      import_react52.default.createElement("div", { className: "sendbird-reaction-badge__inner__icon" }, children),
      import_react52.default.createElement(Label, { className: children && count ? "sendbird-reaction-badge__inner__count" : "", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_1 }, count)
    )
  );
});

// node_modules/@sendbird/uikit-react/ui/BottomSheet.js
var import_react53 = __toESM(require_react(), 1);
var import_react_dom8 = __toESM(require_react_dom(), 1);
var BottomSheet = function(props) {
  var _a3, _b2, _c;
  var _d = props.className, className = _d === void 0 ? "" : _d, children = props.children, onBackdropClick = props.onBackdropClick;
  var logger = (_b2 = (_a3 = useSendbirdStateContext()) === null || _a3 === void 0 ? void 0 : _a3.config) === null || _b2 === void 0 ? void 0 : _b2.logger;
  var portalRoot = (0, import_react53.useRef)();
  portalRoot.current = document.getElementById(MODAL_ROOT);
  if (!portalRoot.current) {
    portalRoot.current = document.createElement("div");
    portalRoot.current.setAttribute("id", MODAL_ROOT);
    document.body.appendChild(portalRoot.current);
    (_c = logger === null || logger === void 0 ? void 0 : logger.warning) === null || _c === void 0 ? void 0 : _c.call(logger, "@sendbird/uikit-react/ui/BottomSheet | Should put a ModalRoot to use the BottomSheet.");
  }
  return (0, import_react_dom8.createPortal)(import_react53.default.createElement(
    "div",
    { className: "".concat(className, " sendbird-bottomsheet") },
    import_react53.default.createElement("div", { className: "sendbird-bottomsheet__content", role: "dialog", "aria-modal": "true", "aria-expanded": "true" }, children),
    import_react53.default.createElement("div", { className: "sendbird-bottomsheet__backdrop", onClick: function(e4) {
      e4 === null || e4 === void 0 ? void 0 : e4.stopPropagation();
      onBackdropClick === null || onBackdropClick === void 0 ? void 0 : onBackdropClick();
    } })
  ), portalRoot.current);
};

// node_modules/@sendbird/uikit-react/ui/UserListItem.js
var import_react57 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ui/MutedAvatarOverlay.js
var import_react54 = __toESM(require_react(), 1);
function MutedAvatarOverlay(props) {
  var _a3 = props.height, height = _a3 === void 0 ? 24 : _a3, _b2 = props.width, width = _b2 === void 0 ? 24 : _b2;
  return import_react54.default.createElement(
    "div",
    { className: "sendbird-muted-avatar", style: {
      height: "".concat(height, "px"),
      width: "".concat(width, "px")
    } },
    import_react54.default.createElement(
      "div",
      { className: "sendbird-muted-avatar__icon" },
      import_react54.default.createElement("div", { className: "sendbird-muted-avatar__bg", style: {
        height: "".concat(height, "px"),
        width: "".concat(width, "px")
      } }),
      import_react54.default.createElement(Icon, { type: IconTypes.MUTE, fillColor: IconColors.WHITE, width: "".concat(height - 8, "px"), height: "".concat(width - 8, "px") })
    )
  );
}

// node_modules/@sendbird/uikit-react/ui/Checkbox.js
var import_react55 = __toESM(require_react(), 1);
function Checkbox(_a3) {
  var id2 = _a3.id, _b2 = _a3.checked, checked = _b2 === void 0 ? false : _b2, disabled = _a3.disabled, onChange = _a3.onChange;
  var _c = (0, import_react55.useState)(checked), isChecked = _c[0], setIsCheck = _c[1];
  return import_react55.default.createElement(
    "label",
    { className: [
      "sendbird-checkbox",
      disabled ? "disabled" : ""
    ].join(" "), htmlFor: id2 },
    import_react55.default.createElement("input", { disabled, id: id2, type: "checkbox", checked: isChecked, onClick: function() {
      if (!disabled)
        setIsCheck(!isChecked);
    }, onChange }),
    import_react55.default.createElement("span", { className: [
      "sendbird-checkbox--checkmark",
      disabled ? "disabled" : ""
    ].join(" ") })
  );
}

// node_modules/@sendbird/uikit-react/ui/UserProfile.js
var import_react56 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/sendbirdSelectors.js
var getSdk = function(state) {
  var _a3 = state.stores, stores = _a3 === void 0 ? {} : _a3;
  var _b2 = stores.sdkStore, sdkStore = _b2 === void 0 ? {} : _b2;
  var sdk = sdkStore.sdk;
  return sdk;
};
var getPubSub = function(state) {
  var _a3 = state.config, config = _a3 === void 0 ? {} : _a3;
  var pubSub = config.pubSub;
  return pubSub;
};
var getConnect = function(state) {
  return function(userId, accessToken) {
    return new Promise(function(resolve, reject) {
      var sdk = getSdk(state);
      if (!sdk) {
        reject(new Error("Sdk not found"));
      }
      if (!((sdk === null || sdk === void 0 ? void 0 : sdk.connect) && typeof sdk.connect === "function")) {
        reject(new Error('Not found the function "connect'));
      }
      if (!accessToken) {
        sdk.connect(userId).then(function(res) {
          return resolve(res);
        }).catch(function(err) {
          return reject(err);
        });
      } else {
        sdk.connect(userId, accessToken).then(function(res) {
          return resolve(res);
        }).catch(function(err) {
          return reject(err);
        });
      }
    });
  };
};
var getDisconnect = function(state) {
  return function() {
    return new Promise(function(resolve, reject) {
      var sdk = getSdk(state);
      if (!sdk) {
        reject(new Error("Sdk not found"));
      }
      if (!(sdk.disconnect && typeof sdk.disconnect === "function")) {
        reject(new Error('Not found the function "disconnect'));
      }
      sdk.disconnect().then(function(res) {
        return resolve(res);
      }).catch(function(err) {
        return reject(err);
      });
    });
  };
};
var getUpdateUserInfo = function(state) {
  return function(nickname, profileUrl) {
    return new Promise(function(resolve, reject) {
      var sdk = getSdk(state);
      if (!sdk) {
        reject(new Error("Sdk not found"));
      }
      if (!(sdk.updateCurrentUserInfo && typeof sdk.updateCurrentUserInfo === "function")) {
        reject(new Error('Not found the function "updateCurrentUserInfo"'));
      }
      var userParams = { nickname };
      if (profileUrl) {
        userParams.profileUrl = profileUrl;
      }
      sdk.updateCurrentUserInfo(userParams).then(function(res) {
        return resolve(res);
      }).catch(function(err) {
        return reject(err);
      });
    });
  };
};
var getCreateGroupChannel = function(state) {
  return function(params) {
    return new Promise(function(resolve, reject) {
      var sdk = getSdk(state);
      var pubSub = getPubSub(state);
      if (!sdk) {
        reject(new Error("Sdk not found"));
      }
      if (!sdk.groupChannel) {
        reject(new Error("Not found GroupChannelModule"));
      }
      if (!(sdk.groupChannel.createChannel && typeof sdk.groupChannel.createChannel === "function")) {
        reject(new Error('Not found the function "createChannel"'));
      }
      sdk.groupChannel.createChannel(params).then(function(channel) {
        resolve(channel);
        pubSub.publish(pubSubTopics.CREATE_CHANNEL, { channel });
      }).catch(reject);
    });
  };
};
var getCreateOpenChannel = function(state) {
  return function(params) {
    return new Promise(function(resolve, reject) {
      var sdk = getSdk(state);
      if (!sdk) {
        reject(new Error("Sdk not found"));
      }
      if (!sdk.openChannel) {
        reject(new Error("Not found OpenChannelModule"));
      }
      if (!(sdk.openChannel.createChannel && typeof sdk.openChannel.createChannel === "function")) {
        reject(new Error('Not found the function "createChannel"'));
      }
      sdk.openChannel.createChannel(params).then(function(channel) {
        resolve(channel);
      }).catch(reject);
    });
  };
};
var getGetGroupChannel = function(state) {
  return function(channelUrl) {
    return new Promise(function(resolve, reject) {
      var sdk = getSdk(state);
      if (!sdk) {
        reject(new Error("Sdk not found"));
      }
      if (!sdk.groupChannel) {
        reject(new Error("Not found GroupChannelModule"));
      }
      if (!(sdk.groupChannel.getChannel && typeof sdk.groupChannel.getChannel === "function")) {
        reject(new Error('Not found the function "getChannel"'));
      }
      sdk.groupChannel.getChannel(channelUrl).then(function(channel) {
        resolve(channel);
      }).catch(reject);
    });
  };
};
var getGetOpenChannel = function(state) {
  return function(channelUrl) {
    return new Promise(function(resolve, reject) {
      var sdk = getSdk(state);
      if (!sdk) {
        reject(new Error("Sdk not found"));
      }
      if (!sdk.openChannel) {
        reject(new Error("Not found OpenChannelModule"));
      }
      if (!(sdk.openChannel.getChannel && typeof sdk.openChannel.getChannel === "function")) {
        reject(new Error('Not found the function "getChannel"'));
      }
      sdk.openChannel.getChannel(channelUrl).then(function(channel) {
        resolve(channel);
      }).catch(reject);
    });
  };
};
var getLeaveGroupChannel = function(state) {
  return function(channelUrl) {
    return new Promise(function(resolve, reject) {
      var _a3;
      (_a3 = getGetGroupChannel(state)) === null || _a3 === void 0 ? void 0 : _a3(channelUrl).then(function(channel) {
        channel.leave().then(function() {
          resolve();
        }).catch(reject);
      }).catch(reject);
    });
  };
};
var getEnterOpenChannel = function(state) {
  return function(channelUrl) {
    return new Promise(function(resolve, reject) {
      var _a3;
      (_a3 = getGetOpenChannel(state)) === null || _a3 === void 0 ? void 0 : _a3(channelUrl).then(function(channel) {
        channel.enter().then(function() {
          resolve(channel);
        }).catch(reject);
      }).catch(reject);
    });
  };
};
var getExitOpenChannel = function(state) {
  return function(channelUrl) {
    return new Promise(function(resolve, reject) {
      var _a3;
      (_a3 = getGetOpenChannel(state)) === null || _a3 === void 0 ? void 0 : _a3(channelUrl).then(function(channel) {
        channel.exit().then(function() {
          resolve(channel);
        }).catch(reject);
      }).catch(reject);
    });
  };
};
var getFreezeChannel = function() {
  return function(channel) {
    return new Promise(function(resolve, reject) {
      if (!(channel.freeze && typeof (channel === null || channel === void 0 ? void 0 : channel.freeze) === "function")) {
        reject(new Error('Not found the function "freeze"'));
      }
      channel.freeze().then(function() {
        resolve();
      }).catch(reject);
    });
  };
};
var getUnfreezeChannel = function() {
  return function(channel) {
    return new Promise(function(resolve, reject) {
      if (!(channel.unfreeze && typeof (channel === null || channel === void 0 ? void 0 : channel.unfreeze) === "function")) {
        reject(new Error('Not found the function "unfreeze"'));
      }
      channel.unfreeze().then(function() {
        resolve();
      }).catch(reject);
    });
  };
};
var UikitMessageHandler = (
  /** @class */
  function() {
    function UikitMessageHandler2() {
      this._onPending = noop;
      this._onFailed = noop;
      this._onSucceeded = noop;
    }
    UikitMessageHandler2.prototype.triggerPending = function(message) {
      this._onPending(message);
    };
    UikitMessageHandler2.prototype.triggerFailed = function(error, message) {
      this._onFailed(error, (message === null || message === void 0 ? void 0 : message.isResendable) ? message : null);
    };
    UikitMessageHandler2.prototype.triggerSucceeded = function(message) {
      this._onSucceeded(message);
    };
    UikitMessageHandler2.prototype.onPending = function(handler) {
      if (typeof handler === "function") {
        this._onPending = handler;
      }
      return this;
    };
    UikitMessageHandler2.prototype.onFailed = function(handler) {
      if (typeof handler === "function") {
        this._onFailed = handler;
      }
      return this;
    };
    UikitMessageHandler2.prototype.onSucceeded = function(handler) {
      if (typeof handler === "function") {
        this._onSucceeded = handler;
      }
      return this;
    };
    return UikitMessageHandler2;
  }()
);
var getSendUserMessage = function(state, publishingModules) {
  if (publishingModules === void 0) {
    publishingModules = [];
  }
  return function(channel, params) {
    var handler = new UikitMessageHandler();
    var pubSub = getPubSub(state);
    channel.sendUserMessage(params).onFailed(function(error, message) {
      pubSub.publish(pubSubTopics.SEND_MESSAGE_FAILED, { error, message, channel, publishingModules });
      handler.triggerFailed(error, message);
    }).onPending(function(message) {
      pubSub.publish(pubSubTopics.SEND_MESSAGE_START, { message, channel, publishingModules });
      handler.triggerPending(message);
    }).onSucceeded(function(message) {
      pubSub.publish(pubSubTopics.SEND_USER_MESSAGE, { message, channel, publishingModules });
      handler.triggerSucceeded(message);
    });
    return handler;
  };
};
var getSendFileMessage = function(state, publishingModules) {
  if (publishingModules === void 0) {
    publishingModules = [];
  }
  return function(channel, params) {
    var handler = new UikitMessageHandler();
    var pubSub = getPubSub(state);
    channel.sendFileMessage(params).onFailed(function(error, message) {
      pubSub.publish(pubSubTopics.SEND_MESSAGE_FAILED, { error, message, channel, publishingModules });
      handler.triggerFailed(error, message);
    }).onPending(function(message) {
      pubSub.publish(pubSubTopics.SEND_MESSAGE_START, { message, channel, publishingModules });
      handler.triggerPending(message);
    }).onSucceeded(function(message) {
      pubSub.publish(pubSubTopics.SEND_FILE_MESSAGE, { message, channel, publishingModules });
      handler.triggerSucceeded(message);
    });
    return handler;
  };
};
var getUpdateUserMessage = function(state, publishingModules) {
  if (publishingModules === void 0) {
    publishingModules = [];
  }
  return function(channel, messageId, params) {
    return new Promise(function(resolve, reject) {
      var pubSub = getPubSub(state);
      channel.updateUserMessage(messageId, params).then(function(message) {
        pubSub.publish(pubSubTopics.UPDATE_USER_MESSAGE, { message, channel, fromSelector: true, publishingModules });
        resolve(message);
      }).catch(reject);
    });
  };
};
var getDeleteMessage = function(state) {
  return function(channel, message) {
    return new Promise(function(resolve, reject) {
      var pubSub = getPubSub(state);
      var messageId = message.messageId;
      channel.deleteMessage(message).then(function() {
        pubSub.publish(pubSubTopics.DELETE_MESSAGE, { messageId, channel });
        resolve(message);
      }).catch(reject);
    });
  };
};
var getResendUserMessage = function(state, publishingModules) {
  if (publishingModules === void 0) {
    publishingModules = [];
  }
  return function(channel, failedMessage) {
    return new Promise(function(resolve, reject) {
      var pubSub = getPubSub(state);
      channel.resendUserMessage(failedMessage).then(function(message) {
        pubSub.publish(pubSubTopics.SEND_USER_MESSAGE, { message, channel, publishingModules });
        resolve(message);
      }).catch(reject);
    });
  };
};
var getResendFileMessage = function(state, publishingModules) {
  if (publishingModules === void 0) {
    publishingModules = [];
  }
  return function(channel, failedMessage, blob) {
    return new Promise(function(resolve, reject) {
      var pubSub = getPubSub(state);
      channel.resendFileMessage(failedMessage, blob).then(function(message) {
        pubSub.publish(pubSubTopics.SEND_FILE_MESSAGE, { message, channel, publishingModules });
        resolve(message);
      }).catch(reject);
    });
  };
};
var sendbirdSelectors = {
  getSdk,
  getPubSub,
  getConnect,
  getDisconnect,
  getUpdateUserInfo,
  getCreateGroupChannel,
  getCreateOpenChannel,
  getGetGroupChannel,
  getGetOpenChannel,
  getLeaveGroupChannel,
  getEnterOpenChannel,
  getExitOpenChannel,
  getFreezeChannel,
  getUnfreezeChannel,
  getSendUserMessage,
  getSendFileMessage,
  getUpdateUserMessage,
  getDeleteMessage,
  getResendUserMessage,
  getResendFileMessage
};

// node_modules/@sendbird/uikit-react/ui/UserProfile.js
var import_react_dom9 = __toESM(require_react_dom(), 1);
function UserProfile(_a3) {
  var _b2, _c;
  var user = _a3.user, currentUserId = _a3.currentUserId, _d = _a3.disableMessaging, disableMessaging = _d === void 0 ? false : _d, onSuccess2 = _a3.onSuccess;
  var store = useSendbirdStateContext();
  var createChannel = getCreateGroupChannel(store);
  var logger = (_b2 = store === null || store === void 0 ? void 0 : store.config) === null || _b2 === void 0 ? void 0 : _b2.logger;
  var stringSet2 = (0, import_react56.useContext)(LocalizationContext).stringSet;
  var currentUserId_ = currentUserId || ((_c = store === null || store === void 0 ? void 0 : store.config) === null || _c === void 0 ? void 0 : _c.userId);
  var onStartDirectMessage = useUserProfileContext().onStartDirectMessage;
  return import_react56.default.createElement(
    "div",
    { className: "sendbird__user-profile" },
    import_react56.default.createElement(
      "section",
      { className: "sendbird__user-profile-avatar" },
      import_react56.default.createElement(Avatar$1, { height: "80px", width: "80px", src: user === null || user === void 0 ? void 0 : user.profileUrl })
    ),
    import_react56.default.createElement(
      "section",
      { className: "sendbird__user-profile-name" },
      import_react56.default.createElement(Label, { type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, (user === null || user === void 0 ? void 0 : user.nickname) || stringSet2.NO_NAME)
    ),
    (user === null || user === void 0 ? void 0 : user.userId) !== currentUserId_ && !disableMessaging && import_react56.default.createElement(
      "section",
      { className: "sendbird__user-profile-message" },
      import_react56.default.createElement(Button, { type: ButtonTypes.SECONDARY, onClick: function() {
        var params = {
          isDistinct: false,
          invitedUserIds: (user === null || user === void 0 ? void 0 : user.userId) ? [user === null || user === void 0 ? void 0 : user.userId] : [],
          operatorUserIds: [currentUserId_]
        };
        onSuccess2 === null || onSuccess2 === void 0 ? void 0 : onSuccess2();
        createChannel(params).then(function(groupChannel) {
          logger.info("UserProfile, channel create", groupChannel);
          onStartDirectMessage === null || onStartDirectMessage === void 0 ? void 0 : onStartDirectMessage(groupChannel);
        });
      } }, stringSet2.USER_PROFILE__MESSAGE)
    ),
    import_react56.default.createElement("div", { className: "sendbird__user-profile-separator" }),
    import_react56.default.createElement(
      "section",
      { className: "sendbird__user-profile-userId" },
      import_react56.default.createElement(Label, { className: "sendbird__user-profile-userId--label", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, stringSet2.USER_PROFILE__USER_ID),
      import_react56.default.createElement(Label, { className: "sendbird__user-profile-userId--value", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_1 }, user === null || user === void 0 ? void 0 : user.userId)
    )
  );
}

// node_modules/@sendbird/uikit-react/ui/UserListItem.js
var import_react_dom10 = __toESM(require_react_dom(), 1);
function UserListItem(_a3) {
  var user = _a3.user, channel = _a3.channel, _b2 = _a3.className, className = _b2 === void 0 ? void 0 : _b2, checked = _a3.checked, checkBox = _a3.checkBox, isOperator3 = _a3.isOperator, disabled = _a3.disabled, disableMessaging = _a3.disableMessaging, action = _a3.action, onChange = _a3.onChange, _c = _a3.avatarSize, avatarSize = _c === void 0 ? "40px" : _c, onClick = _a3.onClick, onUserAvatarClick = _a3.onUserAvatarClick, renderListItemMenu = _a3.renderListItemMenu, _d = _a3.size, size = _d === void 0 ? "normal" : _d;
  var operator = isOperator3 !== null && isOperator3 !== void 0 ? isOperator3 : (user === null || user === void 0 ? void 0 : user.role) === "operator";
  var uniqueKey = user.userId;
  var actionRef = (0, import_react57.useRef)(null);
  var parentRef = (0, import_react57.useRef)(null);
  var avatarRef = (0, import_react57.useRef)(null);
  var _e3 = useUserProfileContext(), disableUserProfile = _e3.disableUserProfile, renderUserProfile = _e3.renderUserProfile;
  var stringSet2 = useLocalization().stringSet;
  var config = useSendbirdStateContext().config;
  var currentUser = config.userId;
  var itemClassName = size === "small" ? "sendbird-user-list-item--small" : "sendbird-user-list-item";
  var avatarClassName = size === "small" ? "sendbird-user-list-item--small__avatar" : "sendbird-user-list-item__avatar";
  var titleClassName = size === "small" ? "sendbird-user-list-item--small__title" : "sendbird-user-list-item__title";
  var subtitleClassName = size === "small" ? "sendbird-user-list-item--small__subtitle" : "sendbird-user-list-item__subtitle";
  var checkboxClassName = size === "small" ? "sendbird-user-list-item--small__checkbox" : "sendbird-user-list-item__checkbox";
  var actionClassName = size === "small" ? "sendbird-user-list-item--small__action" : "sendbird-user-list-item__action";
  var operatorClassName = size === "small" ? "sendbird-user-list-item--small__operator" : "sendbird-user-list-item__operator";
  return import_react57.default.createElement(
    "div",
    { className: classnames.apply(void 0, __spreadArray([itemClassName], Array.isArray(className) ? className : [className], false)), ref: parentRef },
    import_react57.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
      return import_react57.default.createElement(
        import_react57.default.Fragment,
        null,
        import_react57.default.createElement(Avatar$1, { className: avatarClassName, ref: avatarRef, src: (user === null || user === void 0 ? void 0 : user.profileUrl) || (user === null || user === void 0 ? void 0 : user.plainProfileUrl) || "", width: avatarSize, height: avatarSize, onClick: function() {
          var _a4;
          if (!disableUserProfile) {
            toggleDropdown();
            (_a4 = onUserAvatarClick !== null && onUserAvatarClick !== void 0 ? onUserAvatarClick : onClick) === null || _a4 === void 0 ? void 0 : _a4();
          }
        } }),
        (user === null || user === void 0 ? void 0 : user.isMuted) && import_react57.default.createElement(MutedAvatarOverlay, { height: pxToNumber(avatarSize), width: pxToNumber(avatarSize) })
      );
    }, menuItems: function(closeDropdown) {
      return renderUserProfile ? renderUserProfile({
        user,
        currentUserId: currentUser !== null && currentUser !== void 0 ? currentUser : "",
        close: closeDropdown,
        avatarRef
      }) : import_react57.default.createElement(
        MenuItems,
        { openLeft: true, parentRef: avatarRef, parentContainRef: avatarRef, closeDropdown, style: { paddingTop: "0px", paddingBottom: "0px" } },
        import_react57.default.createElement(UserProfile, { disableMessaging, user, currentUserId: currentUser, onSuccess: closeDropdown })
      );
    } }),
    import_react57.default.createElement(
      Label,
      { className: titleClassName, type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 },
      user.nickname || stringSet2.NO_NAME,
      currentUser === user.userId && stringSet2.CHANNEL_SETTING__MEMBERS__YOU
    ),
    !user.nickname && import_react57.default.createElement(Label, { className: subtitleClassName, type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, user.userId),
    checkBox && import_react57.default.createElement(
      "label",
      { className: checkboxClassName, htmlFor: uniqueKey },
      import_react57.default.createElement(Checkbox, { id: uniqueKey, checked, disabled, onChange: function(event) {
        return onChange === null || onChange === void 0 ? void 0 : onChange(event);
      } })
    ),
    operator && import_react57.default.createElement(Label, { className: classnames(operatorClassName, checkBox && "checkbox"), type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_2 }, stringSet2.LABEL__OPERATOR),
    !checkBox && !renderListItemMenu && action && import_react57.default.createElement("div", { className: actionClassName, ref: actionRef }, action({ actionRef, parentRef })),
    !checkBox && renderListItemMenu && import_react57.default.createElement("div", { className: actionClassName, ref: actionRef }, renderListItemMenu({ channel, user }))
  );
}

// node_modules/@sendbird/uikit-react/ui/Tooltip.js
var import_react58 = __toESM(require_react(), 1);
function Tooltip(_a3) {
  var _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, _c = _a3.children, children = _c === void 0 ? "" : _c;
  return import_react58.default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-tooltip"
    ], false).join(" ") },
    import_react58.default.createElement(Label, { className: "sendbird-tooltip__text", type: LabelTypography.CAPTION_2, color: LabelColors.ONCONTENT_1 }, children)
  );
}

// node_modules/@sendbird/uikit-react/ui/TooltipWrapper.js
var import_react59 = __toESM(require_react(), 1);
var SPACE_FROM_TRIGGER = 8;
function TooltipWrapper(_a3) {
  var _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, children = _a3.children, hoverTooltip = _a3.hoverTooltip;
  var _c = (0, import_react59.useState)(false), showHoverTooltip = _c[0], setShowHoverTooltip = _c[1];
  var childrenRef = (0, import_react59.useRef)();
  return import_react59.default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-tooltip-wrapper"
    ], false).join(" "), onMouseOver: function() {
      setShowHoverTooltip(true);
    }, onFocus: function() {
      setShowHoverTooltip(true);
    }, onMouseOut: function() {
      setShowHoverTooltip(false);
    }, onBlur: function() {
      setShowHoverTooltip(false);
    } },
    import_react59.default.createElement("div", { className: "sendbird-tooltip-wrapper__children", ref: childrenRef }, children),
    showHoverTooltip && import_react59.default.createElement(
      "div",
      { className: "sendbird-tooltip-wrapper__hover-tooltip", style: { bottom: "calc(100% + ".concat(SPACE_FROM_TRIGGER, "px)") } },
      import_react59.default.createElement(
        "div",
        { className: "sendbird-tooltip-wrapper__hover-tooltip__inner" },
        import_react59.default.createElement("div", { className: "sendbird-tooltip-wrapper__hover-tooltip__inner__tooltip-container", style: { left: childrenRef.current ? "calc(".concat(childrenRef.current.offsetWidth / 2, "px - 50%)") : void 0 } }, hoverTooltip)
      )
    )
  );
}

// node_modules/@sendbird/uikit-react/Message/context.js
var import_react60 = __toESM(require_react(), 1);
var defaultValue = {
  message: {},
  isByMe: false
};
var MessageContext = import_react60.default.createContext(defaultValue);
var MessageProvider = function(props) {
  var children = props.children, message = props.message, _a3 = props.isByMe, isByMe = _a3 === void 0 ? false : _a3;
  return import_react60.default.createElement(MessageContext.Provider, { value: {
    message,
    isByMe
  } }, children);
};
var useMessageContext = function() {
  var value = import_react60.default.useContext(MessageContext);
  if (value === void 0) {
    throw new Error("useMessageContext must be used within a MessageProvider");
  }
  return value;
};

// node_modules/@sendbird/uikit-react/ui/EmojiReactions.js
var import_react_dom11 = __toESM(require_react_dom(), 1);
var ReactedMembersBottomSheet = function(_a3) {
  var _b2, _c, _d;
  var message = _a3.message, channel = _a3.channel, _e3 = _a3.emojiKey, emojiKey = _e3 === void 0 ? "" : _e3, hideMenu = _a3.hideMenu, emojiContainer = _a3.emojiContainer, onPressUserProfileHandler = _a3.onPressUserProfileHandler;
  var _f = channel.members, members = _f === void 0 ? [] : _f;
  var _g2 = (0, import_react61.useState)(emojiKey), selectedEmoji = _g2[0], setSelectedEmoji = _g2[1];
  function onPressUserProfileCallBack() {
    if (onPressUserProfileHandler && message) {
      var sender = message === null || message === void 0 ? void 0 : message.sender;
      onPressUserProfileHandler(sender);
    }
  }
  return import_react61.default.createElement(
    BottomSheet,
    { onBackdropClick: hideMenu },
    import_react61.default.createElement(
      "div",
      { className: "sendbird-message__bottomsheet" },
      import_react61.default.createElement("div", { className: "sendbird-message__bottomsheet__reacted-members" }, (_b2 = message.reactions) === null || _b2 === void 0 ? void 0 : _b2.map(function(reaction) {
        var emojiUrl = getEmojiUrl(emojiContainer, reaction.key);
        return import_react61.default.createElement(
          "div",
          { key: reaction.key, className: classnames("sendbird-message__bottomsheet__reacted-members__item", selectedEmoji === reaction.key && "sendbird-message__bottomsheet__reacted-members__item__selected"), onClick: function() {
            setSelectedEmoji(reaction.key);
          } },
          import_react61.default.createElement(ImageRenderer, { url: emojiUrl, width: "28px", height: "28px", placeHolder: function(_a4) {
            var style = _a4.style;
            return import_react61.default.createElement(
              "div",
              { style },
              import_react61.default.createElement(Icon, { type: IconTypes.QUESTION, fillColor: IconColors.ON_BACKGROUND_3, width: "28px", height: "28px" })
            );
          } }),
          import_react61.default.createElement(Label, { type: LabelTypography.BUTTON_2, color: selectedEmoji === reaction.key ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3 }, reaction.userIds.length)
        );
      })),
      import_react61.default.createElement(
        "div",
        { className: "sendbird-message__bottomsheet__reactor-list" },
        // making a member list who reacted to the message with the `selectedEmoji`
        ((_d = (_c = message.reactions) === null || _c === void 0 ? void 0 : _c.find(function(reaction) {
          return reaction.key === selectedEmoji;
        })) === null || _d === void 0 ? void 0 : _d.userIds.map(function(userId) {
          return members.find(function(member) {
            return member.userId === userId;
          });
        }).filter(function(member) {
          return member !== void 0;
        })).map(function(member) {
          return import_react61.default.createElement(UserListItem, { key: member.userId, className: "sendbird-message__bottomsheet__reactor-list__item", user: member, avatarSize: "36px", onUserAvatarClick: onPressUserProfileCallBack });
        })
      )
    )
  );
};
function ReactionItem(_a3) {
  var _b2;
  var reaction = _a3.reaction, memberNicknamesMap = _a3.memberNicknamesMap, setEmojiKey = _a3.setEmojiKey, toggleReaction = _a3.toggleReaction, emojisMap = _a3.emojisMap, channel = _a3.channel, message = _a3.message, isFiltered = _a3.isFiltered;
  var openModal = useGlobalModalContext().openModal;
  var store = useSendbirdStateContext();
  var isMobile = useMediaQueryContext().isMobile;
  var messageStore = useMessageContext();
  var stringSet2 = (0, import_react61.useContext)(LocalizationContext).stringSet;
  var userId = store.config.userId;
  var reactedByMe = isReactedBy(userId, reaction);
  var showHoverTooltip = reaction.userIds.length > 0 && ((channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && !channel.isSuper);
  var handleOnClick = function() {
    if (isFiltered && !reactedByMe) {
      openModal({
        modalProps: {
          titleText: "Add reaction failed",
          hideFooter: true,
          isCloseOnClickOutside: true
        },
        childElement: function(_a4) {
          var closeModal = _a4.closeModal;
          return import_react61.default.createElement(ModalFooter, { type: ButtonTypes.PRIMARY, submitText: stringSet2.BUTTON__OK, hideCancelButton: true, onCancel: closeModal, onSubmit: closeModal });
        }
      });
      return;
    }
    setEmojiKey("");
    toggleReaction === null || toggleReaction === void 0 ? void 0 : toggleReaction(message !== null && message !== void 0 ? message : messageStore === null || messageStore === void 0 ? void 0 : messageStore.message, reaction.key, reactedByMe);
  };
  var longPress = useLongPress({
    onLongPress: function() {
      setEmojiKey(reaction.key);
    },
    onClick: handleOnClick
  }, {
    shouldPreventDefault: true,
    shouldStopPropagation: true
  });
  return import_react61.default.createElement(
    TooltipWrapper,
    { className: "sendbird-emoji-reactions__reaction-badge", hoverTooltip: showHoverTooltip ? import_react61.default.createElement(Tooltip, null, getEmojiTooltipString(reaction, userId, memberNicknamesMap, stringSet2)) : import_react61.default.createElement(import_react61.default.Fragment, null) },
    import_react61.default.createElement(
      "div",
      __assign({}, isMobile ? longPress : { onClick: handleOnClick }),
      import_react61.default.createElement(
        ReactionBadge,
        { count: reaction.userIds.length, selected: reactedByMe },
        import_react61.default.createElement(ImageRenderer, { circle: true, url: ((_b2 = emojisMap.get(reaction === null || reaction === void 0 ? void 0 : reaction.key)) === null || _b2 === void 0 ? void 0 : _b2.url) || "", width: "20px", height: "20px", defaultComponent: import_react61.default.createElement(Icon, { width: "20px", height: "20px", type: IconTypes.QUESTION }) })
      )
    )
  );
}
var AddReactionBadgeItem = function(_a3) {
  var onClick = _a3.onClick;
  var onlyClick = useLongPress({
    onLongPress: function() {
    },
    onClick
  }, {
    shouldPreventDefault: true,
    shouldStopPropagation: true
  });
  return import_react61.default.createElement(
    "div",
    __assign({ className: "sendbird-emoji-reactions__add-reaction-badge", "data-testid": "sendbird-emoji-reactions__add-reaction-badge" }, onlyClick),
    import_react61.default.createElement(
      ReactionBadge,
      { isAdd: true },
      import_react61.default.createElement(Icon, { type: IconTypes.EMOJI_MORE, fillColor: IconColors.ON_BACKGROUND_3, width: "20px", height: "20px" })
    )
  );
};
var MobileEmojisBottomSheet = function(_a3) {
  var userId = _a3.userId, message = _a3.message, emojiContainer = _a3.emojiContainer, hideMenu = _a3.hideMenu, toggleReaction = _a3.toggleReaction;
  var emojiAllList = (0, import_react61.useMemo)(function() {
    return getEmojiListAll(emojiContainer);
  }, [emojiContainer]);
  return import_react61.default.createElement(
    BottomSheet,
    { onBackdropClick: hideMenu },
    import_react61.default.createElement("div", { className: "sendbird-message__bottomsheet sendbird-message__emojis-bottomsheet" }, emojiAllList.map(function(emoji) {
      var _a4, _b2, _c, _d;
      var isReacted = (_d = (_c = (_b2 = (_a4 = message === null || message === void 0 ? void 0 : message.reactions) === null || _a4 === void 0 ? void 0 : _a4.find(function(reaction) {
        return reaction.key === emoji.key;
      })) === null || _b2 === void 0 ? void 0 : _b2.userIds) === null || _c === void 0 ? void 0 : _c.some(function(reactorId) {
        return reactorId === userId;
      })) !== null && _d !== void 0 ? _d : false;
      return import_react61.default.createElement(
        ReactionButton,
        { key: emoji.key, width: "44px", height: "44px", selected: isReacted, onClick: function(e4) {
          e4 === null || e4 === void 0 ? void 0 : e4.stopPropagation();
          toggleReaction === null || toggleReaction === void 0 ? void 0 : toggleReaction(message, emoji.key, isReacted);
          hideMenu();
        }, testID: "ui_mobile_emoji_reactions_menu_".concat(emoji.key) },
        import_react61.default.createElement(ImageRenderer, { url: emoji.url, width: "38px", height: "38px", placeHolder: function(_a5) {
          var style = _a5.style;
          return import_react61.default.createElement(
            "div",
            { style },
            import_react61.default.createElement(Icon, { type: IconTypes.QUESTION, fillColor: IconColors.ON_BACKGROUND_3, width: "28px", height: "28px" })
          );
        } })
      );
    }))
  );
};
var EmojiReactions = function(_a3) {
  var _b2, _c, _d, _e3, _f;
  var _g2 = _a3.className, className = _g2 === void 0 ? "" : _g2, userId = _a3.userId, message = _a3.message, channel = _a3.channel, emojiContainer = _a3.emojiContainer, memberNicknamesMap = _a3.memberNicknamesMap, _h = _a3.spaceFromTrigger, spaceFromTrigger = _h === void 0 ? { x: 0, y: 0 } : _h, _j = _a3.isByMe, isByMe = _j === void 0 ? false : _j, toggleReaction = _a3.toggleReaction, onPressUserProfile = _a3.onPressUserProfile, filterEmojiCategoryIds = _a3.filterEmojiCategoryIds;
  var showTheReactedMembers = false;
  try {
    var config = useSendbirdStateContext().config;
    showTheReactedMembers = channel ? getIsReactionEnabled({
      channel,
      config
    }) : false;
  } catch (err) {
  }
  var isMobile = useMediaQueryContext().isMobile;
  var addReactionRef = (0, import_react61.useRef)(null);
  var _k = (0, import_react61.useState)(false), showEmojiList = _k[0], setShowEmojiList = _k[1];
  var _l = (0, import_react61.useState)(""), selectedEmojiKey = _l[0], setSelectedEmojiKey = _l[1];
  var emojisMap = getEmojiMapAll(emojiContainer);
  var filteredEmojis = (0, import_react61.useMemo)(function() {
    return getEmojiListByCategoryIds(emojiContainer, filterEmojiCategoryIds === null || filterEmojiCategoryIds === void 0 ? void 0 : filterEmojiCategoryIds(message));
  }, [emojiContainer, filterEmojiCategoryIds]);
  var showAddReactionBadge = ((_c = (_b2 = message.reactions) === null || _b2 === void 0 ? void 0 : _b2.length) !== null && _c !== void 0 ? _c : 0) < emojisMap.size;
  return import_react61.default.createElement(
    "div",
    { className: getClassName([
      className,
      "sendbird-emoji-reactions",
      isByMe ? "outgoing" : "incoming"
    ]) },
    ((_e3 = (_d = message.reactions) === null || _d === void 0 ? void 0 : _d.length) !== null && _e3 !== void 0 ? _e3 : 0) > 0 && ((_f = message.reactions) === null || _f === void 0 ? void 0 : _f.map(function(reaction) {
      return import_react61.default.createElement(ReactionItem, { key: reaction === null || reaction === void 0 ? void 0 : reaction.key, reaction, memberNicknamesMap, setEmojiKey: setSelectedEmojiKey, toggleReaction, emojisMap, channel, message, isFiltered: getEmojiListByCategoryIds(emojiContainer, filterEmojiCategoryIds === null || filterEmojiCategoryIds === void 0 ? void 0 : filterEmojiCategoryIds(message)).every(function(elem) {
        return elem.key !== (reaction === null || reaction === void 0 ? void 0 : reaction.key);
      }) });
    })),
    !isMobile && showAddReactionBadge && import_react61.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
      return import_react61.default.createElement(
        ReactionBadge,
        { className: "sendbird-emoji-reactions__add-reaction-badge", testID: "sendbird-emoji-reactions__add-reaction-badge", ref: addReactionRef, isAdd: true, onClick: function(e4) {
          var _a4;
          toggleDropdown();
          (_a4 = e4 === null || e4 === void 0 ? void 0 : e4.stopPropagation) === null || _a4 === void 0 ? void 0 : _a4.call(e4);
        } },
        import_react61.default.createElement(Icon, { type: IconTypes.EMOJI_MORE, fillColor: IconColors.ON_BACKGROUND_3, width: "20px", height: "20px" })
      );
    }, menuItems: function(closeDropdown) {
      if (filteredEmojis.length === 0)
        return null;
      return import_react61.default.createElement(EmojiListItems, { parentRef: addReactionRef, parentContainRef: addReactionRef, closeDropdown, spaceFromTrigger }, getEmojiListByCategoryIds(emojiContainer, filterEmojiCategoryIds === null || filterEmojiCategoryIds === void 0 ? void 0 : filterEmojiCategoryIds(message)).map(function(emoji) {
        var _a4, _b3, _c2;
        var isReacted = ((_c2 = (_b3 = (_a4 = message === null || message === void 0 ? void 0 : message.reactions) === null || _a4 === void 0 ? void 0 : _a4.find(function(reaction) {
          return reaction.key === emoji.key;
        })) === null || _b3 === void 0 ? void 0 : _b3.userIds) === null || _c2 === void 0 ? void 0 : _c2.some(function(reactorId) {
          return reactorId === userId;
        })) || false;
        return import_react61.default.createElement(
          ReactionButton,
          { key: emoji.key, width: "36px", height: "36px", selected: isReacted, onClick: function(e4) {
            closeDropdown();
            toggleReaction === null || toggleReaction === void 0 ? void 0 : toggleReaction(message, emoji.key, isReacted);
            e4 === null || e4 === void 0 ? void 0 : e4.stopPropagation();
          }, testID: "ui_emoji_reactions_menu_".concat(emoji.key) },
          import_react61.default.createElement(ImageRenderer, { url: (emoji === null || emoji === void 0 ? void 0 : emoji.url) || "", width: "28px", height: "28px", placeHolder: function(_a5) {
            var style = _a5.style;
            return import_react61.default.createElement(
              "div",
              { style },
              import_react61.default.createElement(Icon, { type: IconTypes.QUESTION, fillColor: IconColors.ON_BACKGROUND_3, width: "28px", height: "28px" })
            );
          } })
        );
      }));
    } }),
    isMobile && showAddReactionBadge && import_react61.default.createElement(AddReactionBadgeItem, { onClick: function() {
      setShowEmojiList(true);
    } }),
    isMobile && showEmojiList && import_react61.default.createElement(MobileEmojisBottomSheet, { userId, message, emojiContainer, hideMenu: function() {
      setShowEmojiList(false);
    }, toggleReaction }),
    isMobile && selectedEmojiKey && channel !== null && showTheReactedMembers && import_react61.default.createElement(ReactedMembersBottomSheet, { message, channel, emojiKey: selectedEmojiKey, hideMenu: function() {
      setSelectedEmojiKey("");
    }, emojiContainer, onPressUserProfileHandler: onPressUserProfile })
  );
};

// node_modules/@sendbird/uikit-react/ui/AdminMessage.js
var import_react62 = __toESM(require_react(), 1);
function AdminMessage(_a3) {
  var _b2;
  var _c = _a3.className, className = _c === void 0 ? "" : _c, message = _a3.message;
  if (!((message === null || message === void 0 ? void 0 : message.isAdminMessage) || (message === null || message === void 0 ? void 0 : message.messageType)) || !((_b2 = message === null || message === void 0 ? void 0 : message.isAdminMessage) === null || _b2 === void 0 ? void 0 : _b2.call(message)) || (message === null || message === void 0 ? void 0 : message.messageType) !== "admin") {
    return null;
  }
  return import_react62.default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-admin-message"
    ], false).join(" ") },
    import_react62.default.createElement(Label, { className: "sendbird-admin-message__text", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, message === null || message === void 0 ? void 0 : message.message)
  );
}

// node_modules/@sendbird/uikit-react/ui/QuoteMessage.js
var import_react63 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-oZLTNsQY.js
function getMessageFirstFileType(message) {
  return K2(message).when(isFileMessage, function() {
    var _a3;
    return (_a3 = message === null || message === void 0 ? void 0 : message.type) !== null && _a3 !== void 0 ? _a3 : "";
  }).when(isMultipleFilesMessage, function() {
    var _a3, _b2;
    return (_b2 = (_a3 = getFirstFileInfo(message)) === null || _a3 === void 0 ? void 0 : _a3.mimeType) !== null && _b2 !== void 0 ? _b2 : "";
  }).otherwise(function() {
    return "";
  });
}
function getFirstFileInfo(message) {
  var fileInfoList = message.fileInfoList;
  return fileInfoList.length > 0 ? fileInfoList[0] : null;
}
function getMessageFirstFileName(message) {
  return K2(message).when(isFileMessage, function() {
    var _a3;
    return (_a3 = message === null || message === void 0 ? void 0 : message.name) !== null && _a3 !== void 0 ? _a3 : "";
  }).when(isMultipleFilesMessage, function() {
    var _a3, _b2;
    return (_b2 = (_a3 = getFirstFileInfo(message)) === null || _a3 === void 0 ? void 0 : _a3.fileName) !== null && _b2 !== void 0 ? _b2 : "";
  }).otherwise(function() {
    return "";
  });
}
function getMessageFirstFileUrl(message) {
  return K2(message).when(isFileMessage, function() {
    var _a3;
    return (_a3 = message === null || message === void 0 ? void 0 : message.url) !== null && _a3 !== void 0 ? _a3 : "";
  }).when(isMultipleFilesMessage, function() {
    var _a3, _b2;
    return (_b2 = (_a3 = getFirstFileInfo(message)) === null || _a3 === void 0 ? void 0 : _a3.url) !== null && _b2 !== void 0 ? _b2 : "";
  }).otherwise(function() {
    return "";
  });
}
function getMessageFirstFileThumbnails(message) {
  return K2(message).when(isFileMessage, function() {
    return message.thumbnails;
  }).when(isMultipleFilesMessage, function() {
    var _a3, _b2;
    return (_b2 = (_a3 = getFirstFileInfo(message)) === null || _a3 === void 0 ? void 0 : _a3.thumbnails) !== null && _b2 !== void 0 ? _b2 : [];
  }).otherwise(function() {
    return [];
  });
}
function getMessageFirstFileThumbnailUrl(message) {
  var thumbnails = getMessageFirstFileThumbnails(message);
  return thumbnails && thumbnails.length > 0 ? thumbnails[0].url : "";
}

// node_modules/@sendbird/uikit-react/ui/QuoteMessage.js
function QuoteMessage(_a3) {
  var _b2;
  var _c, _d, _e3, _f, _g2, _h;
  var message = _a3.message, _j = _a3.userId, userId = _j === void 0 ? "" : _j, _k = _a3.isByMe, isByMe = _k === void 0 ? false : _k, _l = _a3.className, className = _l === void 0 ? "" : _l, _m = _a3.isUnavailable, isUnavailable = _m === void 0 ? false : _m, onClick = _a3.onClick;
  var stringSet2 = (0, import_react63.useContext)(LocalizationContext).stringSet;
  var parentMessage = message.parentMessage;
  var parentMessageSender = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender;
  var parentMessageSenderNickname = userId === (parentMessageSender === null || parentMessageSender === void 0 ? void 0 : parentMessageSender.userId) ? stringSet2.QUOTED_MESSAGE__CURRENT_USER : parentMessageSender === null || parentMessageSender === void 0 ? void 0 : parentMessageSender.nickname;
  var parentMessageUrl = getMessageFirstFileUrl(parentMessage);
  var parentMessageType = getMessageFirstFileType(parentMessage);
  var currentMessageSenderNickname = userId === ((_c = message === null || message === void 0 ? void 0 : message.sender) === null || _c === void 0 ? void 0 : _c.userId) ? stringSet2.QUOTED_MESSAGE__CURRENT_USER : (_d = message === null || message === void 0 ? void 0 : message.sender) === null || _d === void 0 ? void 0 : _d.nickname;
  var _o2 = (0, import_react63.useState)(false), isThumbnailLoaded = _o2[0], setThumbnailLoaded = _o2[1];
  var uikitFileTypes = getUIKitFileTypes();
  var splitFileName = (_f = (_e3 = getMessageFirstFileName(parentMessage)) === null || _e3 === void 0 ? void 0 : _e3.split("/")) !== null && _f !== void 0 ? _f : parentMessageUrl.split("/");
  return import_react63.default.createElement(
    "div",
    { className: getClassName([className, "sendbird-quote-message", isByMe ? "outgoing" : "incoming", isUnavailable ? "unavailable" : ""]), key: parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.messageId, onClick: function() {
      if (!isUnavailable && onClick) {
        onClick();
      }
    }, onTouchEnd: function() {
      if (!isUnavailable && onClick) {
        onClick();
      }
    } },
    import_react63.default.createElement(
      "div",
      { className: "sendbird-quote-message__replied-to" },
      import_react63.default.createElement(Icon, { className: "sendbird-quote-message__replied-to__icon", type: IconTypes.REPLY, fillColor: IconColors.ON_BACKGROUND_3, width: "12px", height: "12px" }),
      import_react63.default.createElement(
        Label,
        { className: "sendbird-quote-message__replied-to__text", testID: "sendbird-quote-message__replied-to__text", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_3 },
        import_react63.default.createElement("span", { className: "sendbird-quote-message__replied-to__text__nickname" }, currentMessageSenderNickname),
        import_react63.default.createElement("span", { className: "sendbird-quote-message__replied-to__text__text" }, stringSet2.QUOTED_MESSAGE__REPLIED_TO),
        import_react63.default.createElement("span", { className: "sendbird-quote-message__replied-to__text__nickname" }, parentMessageSenderNickname)
      )
    ),
    import_react63.default.createElement(
      "div",
      { className: "sendbird-quote-message__replied-message" },
      isUnavailable && import_react63.default.createElement(
        "div",
        { className: "sendbird-quote-message__replied-message__text-message" },
        import_react63.default.createElement(Label, { className: "sendbird-quote-message__replied-message__text-message__word", testID: "sendbird-quote-message__replied-message__text-message__word", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_1 }, stringSet2.QUOTED_MESSAGE__UNAVAILABLE)
      ),
      isUserMessage(parentMessage) && ((_g2 = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.message) === null || _g2 === void 0 ? void 0 : _g2.length) > 0 && !isUnavailable && import_react63.default.createElement(
        "div",
        { className: "sendbird-quote-message__replied-message__text-message" },
        import_react63.default.createElement(Label, { className: "sendbird-quote-message__replied-message__text-message__word", testID: "sendbird-quote-message__replied-message__text-message__word", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_1 }, parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.message)
      ),
      isVoiceMessage(parentMessage) && parentMessageUrl && !isUnavailable && import_react63.default.createElement(
        "div",
        { className: "sendbird-quote-message__replied-message__text-message" },
        import_react63.default.createElement(Label, { className: "sendbird-quote-message__replied-message__text-message__word", testID: "sendbird-quote-message__replied-message__text-message__word", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_1 }, stringSet2.VOICE_MESSAGE)
      ),
      (isThumbnailMessage(parentMessage) || isMultipleFilesMessage(parentMessage)) && parentMessageUrl && !isUnavailable && import_react63.default.createElement(
        "div",
        { className: "sendbird-quote-message__replied-message__thumbnail-message" },
        import_react63.default.createElement(ImageRenderer, { className: "sendbird-quote-message__replied-message__thumbnail-message__image", url: parentMessageUrl, alt: parentMessageType, width: "144px", height: "108px", onLoad: function() {
          return setThumbnailLoaded(true);
        }, defaultComponent: import_react63.default.createElement(
          "div",
          { className: "sendbird-quote-message__replied-message__thumbnail-message__placeholder" },
          import_react63.default.createElement(
            "div",
            { className: "sendbird-quote-message__replied-message__thumbnail-message__placeholder__icon" },
            import_react63.default.createElement(Icon, { type: isVideo(parentMessageType) ? IconTypes.PLAY : IconTypes.PHOTO, fillColor: IconColors.ON_BACKGROUND_2, width: "22px", height: "22px" })
          )
        ) }),
        isVideo(parentMessageType) && !(((_h = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.thumbnails) === null || _h === void 0 ? void 0 : _h.length) > 0) && import_react63.default.createElement(
          import_react63.default.Fragment,
          null,
          import_react63.default.createElement(
            "video",
            { className: "sendbird-quote-message__replied-message__thumbnail-message__video" },
            import_react63.default.createElement("source", { src: parentMessageUrl, type: parentMessageType })
          ),
          import_react63.default.createElement(
            "div",
            { className: "sendbird-quote-message__replied-message__thumbnail-message__cover" },
            import_react63.default.createElement(
              "div",
              { className: "sendbird-quote-message__replied-message__thumbnail-message__cover__icon" },
              import_react63.default.createElement(Icon, { type: IconTypes.PLAY, fillColor: IconColors.ON_BACKGROUND_2, width: "14px", height: "14px" })
            )
          )
        ),
        isThumbnailLoaded && isGif(parentMessageType) && import_react63.default.createElement(
          "div",
          { className: "sendbird-quote-message__replied-message__thumbnail-message__cover" },
          import_react63.default.createElement(
            "div",
            { className: "sendbird-quote-message__replied-message__thumbnail-message__cover__icon" },
            import_react63.default.createElement(Icon, { type: IconTypes.GIF, fillColor: IconColors.THUMBNAIL_ICON, width: "14px", height: "14px" })
          )
        )
      ),
      getUIKitMessageType(parentMessage) === UIKitMessageTypes.FILE && parentMessageUrl && !isUnavailable && import_react63.default.createElement(
        "div",
        { className: "sendbird-quote-message__replied-message__file-message" },
        import_react63.default.createElement(Icon, { className: "sendbird-quote-message__replied-message__file-message__type-icon", type: (_b2 = {}, _b2[uikitFileTypes.IMAGE] = IconTypes.PHOTO, _b2[uikitFileTypes.VIDEO] = IconTypes.PLAY, _b2[uikitFileTypes.AUDIO] = IconTypes.FILE_AUDIO, _b2[uikitFileTypes.GIF] = IconTypes.GIF, _b2[uikitFileTypes.OTHERS] = IconTypes.FILE_DOCUMENT, _b2)[getUIKitFileType(parentMessageType)], fillColor: IconColors.ON_BACKGROUND_3, width: "16px", height: "16px" }),
        import_react63.default.createElement(Label, { className: "sendbird-quote-message__replied-message__file-message__file-name", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_3 }, truncateString(splitFileName[splitFileName.length - 1]))
      )
    )
  );
}

// node_modules/@sendbird/uikit-react/ui/MobileMenu.js
var import_react64 = __toESM(require_react(), 1);
var import_react_dom12 = __toESM(require_react_dom(), 1);
var CopyMenuItem$1 = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu;
  return import_react64.default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e4) {
    var _a4;
    if (isUserMessage(message))
      copyToClipboard(message.message);
    hideMenu();
    (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
  } }), (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : import_react64.default.createElement(
    import_react64.default.Fragment,
    null,
    import_react64.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__COPY),
    import_react64.default.createElement(Icon, { type: IconTypes.COPY, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
  ));
};
var ReplyMenuItem$1 = function(props) {
  var _a3, _b2, _c;
  var stringSet2 = useLocalization().stringSet;
  var _d = useMessageMenuContext(), message = _d.message, hideMenu = _d.hideMenu, setQuoteMessage = _d.setQuoteMessage;
  return import_react64.default.createElement(MenuItem$1, __assign({}, props, { disabled: message.parentMessageId > 0, onClick: function(e4) {
    var _a4;
    setQuoteMessage(message);
    hideMenu();
    (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
  } }), (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : import_react64.default.createElement(
    import_react64.default.Fragment,
    null,
    import_react64.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: ((_b2 = message.parentMessageId) !== null && _b2 !== void 0 ? _b2 : 0) > 0 ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__REPLY),
    import_react64.default.createElement(Icon, { type: IconTypes.REPLY, fillColor: ((_c = message.parentMessageId) !== null && _c !== void 0 ? _c : 0) > 0 ? IconColors.ON_BACKGROUND_4 : IconColors.PRIMARY, width: "24px", height: "24px" })
  ));
};
var ThreadMenuItem$1 = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu, onReplyInThread = _b2.onReplyInThread;
  return import_react64.default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e4) {
    var _a4;
    onReplyInThread({ message });
    hideMenu();
    (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
  } }), (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : import_react64.default.createElement(
    import_react64.default.Fragment,
    null,
    import_react64.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__THREAD),
    import_react64.default.createElement(Icon, { type: IconTypes.THREAD, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
  ));
};
var EditMenuItem$1 = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), hideMenu = _b2.hideMenu, showEdit = _b2.showEdit, isOnline = _b2.isOnline;
  return import_react64.default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e4) {
    var _a4;
    if (isOnline) {
      showEdit(true);
      hideMenu();
      (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
    }
  } }), (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : import_react64.default.createElement(
    import_react64.default.Fragment,
    null,
    import_react64.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__EDIT),
    import_react64.default.createElement(Icon, { type: IconTypes.EDIT, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
  ));
};
var ResendMenuItem$1 = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu, resendMessage = _b2.resendMessage, isOnline = _b2.isOnline;
  return import_react64.default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e4) {
    var _a4;
    if (isOnline) {
      resendMessage(message);
      hideMenu();
      (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
    }
  } }), (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : import_react64.default.createElement(
    import_react64.default.Fragment,
    null,
    import_react64.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__RESEND),
    import_react64.default.createElement(Icon, { type: IconTypes.REFRESH, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
  ));
};
var DeleteMenuItem$1 = function(props) {
  var _a3, _b2, _c;
  var stringSet2 = useLocalization().stringSet;
  var _d = useMessageMenuContext(), message = _d.message, hideMenu = _d.hideMenu, deleteMessage = _d.deleteMessage, showRemove = _d.showRemove, isOnline = _d.isOnline, disableDeleteMessage = _d.disableDeleteMessage;
  return import_react64.default.createElement(MenuItem$1, __assign({}, props, { disabled: typeof disableDeleteMessage === "boolean" ? disableDeleteMessage : ((_b2 = (_a3 = message.threadInfo) === null || _a3 === void 0 ? void 0 : _a3.replyCount) !== null && _b2 !== void 0 ? _b2 : 0) > 0, onClick: function(e4) {
    var _a4;
    if (isFailedMessage(message)) {
      deleteMessage(message);
    } else if (isOnline) {
      showRemove(true);
      hideMenu();
      (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
    }
  } }), (_c = props.children) !== null && _c !== void 0 ? _c : import_react64.default.createElement(
    import_react64.default.Fragment,
    null,
    import_react64.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: disableDeleteMessage ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__DELETE),
    import_react64.default.createElement(Icon, { type: IconTypes.DELETE, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
  ));
};
var DownloadMenuItem$1 = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), hideMenu = _b2.hideMenu, message = _b2.message, onDownloadClick = _b2.onDownloadClick;
  var url = message.url;
  return import_react64.default.createElement(MenuItem$1, __assign({}, props, { onClick: function() {
    hideMenu();
  } }), (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : import_react64.default.createElement(
    "a",
    { className: "sendbird-message__contextmenu--hyperlink", rel: "noopener noreferrer", href: url, target: "_blank", onClick: onDownloadClick },
    import_react64.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__SAVE),
    import_react64.default.createElement(Icon, { type: IconTypes.DOWNLOAD, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
  ));
};
var MobileContextMenu = function(props) {
  var _a3, _b2, _c, _d;
  var channel = props.channel, message = props.message, replyType = props.replyType, userId = props.userId, resendMessage = props.resendMessage, showEdit = props.showEdit, showRemove = props.showRemove, deleteMenuState = props.deleteMenuState, deleteMessage = props.deleteMessage, setQuoteMessage = props.setQuoteMessage, parentRef = props.parentRef, onReplyInThread = props.onReplyInThread, _e3 = props.isOpenedFromThread, isOpenedFromThread = _e3 === void 0 ? false : _e3, _f = props.onDownloadClick, onDownloadClick = _f === void 0 ? null : _f, renderMenuItems = props.renderMenuItems, hideMobileMenu = props.hideMenu;
  var isByMe = ((_a3 = message === null || message === void 0 ? void 0 : message.sender) === null || _a3 === void 0 ? void 0 : _a3.userId) === userId;
  var config = useSendbirdStateContext().config;
  var isOnline = config.isOnline;
  var showMenuItemCopy2 = isUserMessage(message);
  var showMenuItemEdit2 = isUserMessage(message) && isSentMessage(message) && isByMe;
  var showMenuItemResend2 = isFailedMessage(message) && (message === null || message === void 0 ? void 0 : message.isResendable) && isByMe;
  var showMenuItemDelete2 = !isPendingMessage(message) && isByMe;
  var showMenuItemDeleteByState = isByMe && (deleteMenuState === void 0 || deleteMenuState !== "HIDE");
  var showMenuItemDeleteFinal = showMenuItemDeleteByState && showMenuItemDelete2;
  var showMenuItemDownload = !isPendingMessage(message) && isFileMessage(message) && !(isVoiceMessage(message) && (channel === null || channel === void 0 ? void 0 : channel.isSuper) || (channel === null || channel === void 0 ? void 0 : channel.isBroadcast));
  var showMenuItemReply2 = replyType === "QUOTE_REPLY" && !isFailedMessage(message) && !isPendingMessage(message) && (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel());
  var showMenuItemThread2 = replyType === "THREAD" && !isOpenedFromThread && !isFailedMessage(message) && !isPendingMessage(message) && !isThreadMessage(message) && (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel());
  var disableDeleteMessage = deleteMenuState !== void 0 && deleteMenuState === "DISABLE" || ((_c = (_b2 = message === null || message === void 0 ? void 0 : message.threadInfo) === null || _b2 === void 0 ? void 0 : _b2.replyCount) !== null && _c !== void 0 ? _c : 0) > 0;
  var contextValue = {
    message,
    hideMenu: hideMobileMenu,
    setQuoteMessage,
    onReplyInThread,
    onMoveToParentMessage: noop,
    showEdit,
    showRemove,
    deleteMessage,
    resendMessage,
    isOnline,
    disableDeleteMessage,
    triggerRef: parentRef,
    containerRef: parentRef,
    onDownloadClick
  };
  return import_react64.default.createElement(
    MessageMenuProvider,
    { value: contextValue },
    import_react64.default.createElement(MenuItems, { className: "sendbird-message__mobile-context-menu", parentRef, parentContainRef: parentRef, closeDropdown: hideMobileMenu }, (_d = renderMenuItems === null || renderMenuItems === void 0 ? void 0 : renderMenuItems({
      items: {
        CopyMenuItem: CopyMenuItem$1,
        ReplyMenuItem: ReplyMenuItem$1,
        ThreadMenuItem: ThreadMenuItem$1,
        EditMenuItem: EditMenuItem$1,
        ResendMenuItem: ResendMenuItem$1,
        DeleteMenuItem: DeleteMenuItem$1
      }
    })) !== null && _d !== void 0 ? _d : import_react64.default.createElement(
      import_react64.default.Fragment,
      null,
      showMenuItemCopy2 && import_react64.default.createElement(CopyMenuItem$1, null),
      showMenuItemReply2 && import_react64.default.createElement(ReplyMenuItem$1, null),
      showMenuItemThread2 && import_react64.default.createElement(ThreadMenuItem$1, null),
      showMenuItemEdit2 && import_react64.default.createElement(EditMenuItem$1, null),
      showMenuItemResend2 && import_react64.default.createElement(ResendMenuItem$1, null),
      showMenuItemDeleteFinal && import_react64.default.createElement(DeleteMenuItem$1, null),
      showMenuItemDownload && import_react64.default.createElement(DownloadMenuItem$1, null)
    ))
  );
};
var CopyMenuItem2 = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu;
  return import_react64.default.createElement(BottomSheetMenuItem, __assign({}, props, { onClick: function(e4) {
    var _a4;
    if (isUserMessage(message))
      copyToClipboard(message.message);
    hideMenu();
    (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
  } }), (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : import_react64.default.createElement(
    import_react64.default.Fragment,
    null,
    import_react64.default.createElement(Icon, { type: IconTypes.COPY, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" }),
    import_react64.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__COPY)
  ));
};
var EditMenuItem2 = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), hideMenu = _b2.hideMenu, showEdit = _b2.showEdit, isOnline = _b2.isOnline;
  return import_react64.default.createElement(BottomSheetMenuItem, __assign({}, props, { onClick: function(e4) {
    var _a4;
    if (isOnline) {
      showEdit(true);
      hideMenu();
      (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
    }
  } }), (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : import_react64.default.createElement(
    import_react64.default.Fragment,
    null,
    import_react64.default.createElement(Icon, { type: IconTypes.EDIT, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" }),
    import_react64.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__EDIT)
  ));
};
var ResendMenuItem2 = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu, resendMessage = _b2.resendMessage, isOnline = _b2.isOnline;
  return import_react64.default.createElement(BottomSheetMenuItem, __assign({}, props, { onClick: function(e4) {
    var _a4;
    if (isOnline) {
      resendMessage(message);
      hideMenu();
      (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
    }
  } }), (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : import_react64.default.createElement(
    import_react64.default.Fragment,
    null,
    import_react64.default.createElement(Icon, { type: IconTypes.REFRESH, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" }),
    import_react64.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__RESEND)
  ));
};
var ReplyMenuItem2 = function(props) {
  var _a3, _b2, _c;
  var stringSet2 = useLocalization().stringSet;
  var _d = useMessageMenuContext(), message = _d.message, hideMenu = _d.hideMenu, setQuoteMessage = _d.setQuoteMessage;
  return import_react64.default.createElement(BottomSheetMenuItem, __assign({}, props, { disabled: message.parentMessageId > 0, onClick: function(e4) {
    var _a4;
    setQuoteMessage(message);
    hideMenu();
    (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
  } }), (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : import_react64.default.createElement(
    import_react64.default.Fragment,
    null,
    import_react64.default.createElement(Icon, { type: IconTypes.REPLY, fillColor: ((_b2 = message.parentMessageId) !== null && _b2 !== void 0 ? _b2 : 0) > 0 ? IconColors.ON_BACKGROUND_3 : IconColors.PRIMARY, width: "24px", height: "24px" }),
    import_react64.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: ((_c = message.parentMessageId) !== null && _c !== void 0 ? _c : 0) > 0 ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__REPLY)
  ));
};
var ThreadMenuItem2 = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), message = _b2.message, hideMenu = _b2.hideMenu, onReplyInThread = _b2.onReplyInThread;
  return import_react64.default.createElement(BottomSheetMenuItem, __assign({}, props, { onClick: function(e4) {
    var _a4;
    onReplyInThread({ message });
    hideMenu();
    (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
  } }), (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : import_react64.default.createElement(
    import_react64.default.Fragment,
    null,
    import_react64.default.createElement(Icon, { type: IconTypes.THREAD, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" }),
    import_react64.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__THREAD)
  ));
};
var DeleteMenuItem2 = function(props) {
  var _a3, _b2, _c;
  var stringSet2 = useLocalization().stringSet;
  var _d = useMessageMenuContext(), message = _d.message, hideMenu = _d.hideMenu, deleteMessage = _d.deleteMessage, showRemove = _d.showRemove, isOnline = _d.isOnline, disableDeleteMessage = _d.disableDeleteMessage;
  return import_react64.default.createElement(BottomSheetMenuItem, __assign({}, props, { disabled: typeof disableDeleteMessage === "boolean" ? disableDeleteMessage : ((_b2 = (_a3 = message.threadInfo) === null || _a3 === void 0 ? void 0 : _a3.replyCount) !== null && _b2 !== void 0 ? _b2 : 0) > 0, onClick: function(e4) {
    var _a4;
    if (isFailedMessage(message)) {
      deleteMessage(message);
    } else if (isOnline) {
      showRemove(true);
      hideMenu();
      (_a4 = props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
    }
  } }), (_c = props.children) !== null && _c !== void 0 ? _c : import_react64.default.createElement(
    import_react64.default.Fragment,
    null,
    import_react64.default.createElement(Icon, { type: IconTypes.DELETE, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" }),
    import_react64.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: disableDeleteMessage ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__DELETE)
  ));
};
var DownloadMenuItem = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useMessageMenuContext(), hideMenu = _b2.hideMenu, message = _b2.message, onDownloadClick = _b2.onDownloadClick;
  var url = message.url;
  return import_react64.default.createElement(BottomSheetMenuItem, { onClick: function() {
    return hideMenu();
  } }, (_a3 = props.children) !== null && _a3 !== void 0 ? _a3 : import_react64.default.createElement(
    "a",
    { className: "sendbird-message__bottomsheet--hyperlink", rel: "noopener noreferrer", href: url, target: "_blank", onClick: onDownloadClick },
    import_react64.default.createElement(Icon, { type: IconTypes.DOWNLOAD, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" }),
    import_react64.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MESSAGE_MENU__SAVE)
  ));
};
var EMOJI_SIZE = 38;
var MobileBottomSheet = function(props) {
  var _a3, _b2, _c, _d;
  var hideMenu = props.hideMenu, channel = props.channel, emojiContainer = props.emojiContainer, message = props.message, replyType = props.replyType, userId = props.userId, resendMessage = props.resendMessage, deleteMessage = props.deleteMessage, toggleReaction = props.toggleReaction, _e3 = props.isReactionEnabled, isReactionEnabled = _e3 === void 0 ? false : _e3, showEdit = props.showEdit, showRemove = props.showRemove, deleteMenuState = props.deleteMenuState, setQuoteMessage = props.setQuoteMessage, onReplyInThread = props.onReplyInThread, _f = props.isOpenedFromThread, isOpenedFromThread = _f === void 0 ? false : _f, onDownloadClick = props.onDownloadClick, renderMenuItems = props.renderMenuItems;
  var isByMe = ((_a3 = message === null || message === void 0 ? void 0 : message.sender) === null || _a3 === void 0 ? void 0 : _a3.userId) === userId;
  var config = useSendbirdStateContext().config;
  var isOnline = config.isOnline;
  var showMenuItemCopy2 = isUserMessage(message);
  var showMenuItemEdit2 = isUserMessage(message) && isSentMessage(message) && isByMe;
  var showMenuItemResend2 = isOnline && isFailedMessage(message) && (message === null || message === void 0 ? void 0 : message.isResendable) && isByMe;
  var showMenuItemDelete2 = !isPendingMessage(message) && isByMe;
  var showMenuItemDeleteByState = isByMe && (deleteMenuState === void 0 || deleteMenuState !== "HIDE");
  var showMenuItemDeleteFinal = showMenuItemDeleteByState && showMenuItemDelete2;
  var disableDelete = deleteMenuState !== void 0 && deleteMenuState === "DISABLE" || ((_c = (_b2 = message === null || message === void 0 ? void 0 : message.threadInfo) === null || _b2 === void 0 ? void 0 : _b2.replyCount) !== null && _c !== void 0 ? _c : 0) > 0;
  var showMenuItemDownload = isSentMessage(message) && isFileMessage(message) && !isVoiceMessage(message);
  var showReaction = !isFailedMessage(message) && !isPendingMessage(message) && isReactionEnabled;
  var showMenuItemReply2 = replyType === "QUOTE_REPLY" && !isFailedMessage(message) && !isPendingMessage(message) && ((channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && !(channel === null || channel === void 0 ? void 0 : channel.isBroadcast));
  var showMenuItemThread2 = replyType === "THREAD" && !isOpenedFromThread && !isFailedMessage(message) && !isPendingMessage(message) && !isThreadMessage(message) && ((channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && !(channel === null || channel === void 0 ? void 0 : channel.isBroadcast));
  var maxEmojisPerRow = Math.floor(window.innerWidth / EMOJI_SIZE) - 1;
  var _g2 = (0, import_react64.useState)(false), showEmojisOnly = _g2[0], setShowEmojisOnly = _g2[1];
  var emojis = emojiContainer && getEmojiListAll(emojiContainer);
  var visibleEmojis = showEmojisOnly ? emojis : emojis === null || emojis === void 0 ? void 0 : emojis.slice(0, maxEmojisPerRow);
  var canShowMoreEmojis = emojis && emojis.length > maxEmojisPerRow;
  var contextValue = {
    message,
    hideMenu,
    setQuoteMessage,
    onReplyInThread,
    onMoveToParentMessage: function() {
    },
    showEdit,
    showRemove,
    deleteMessage,
    resendMessage,
    isOnline,
    disableDeleteMessage: disableDelete,
    triggerRef: null,
    containerRef: null,
    onDownloadClick
  };
  return import_react64.default.createElement(
    MessageMenuProvider,
    { value: contextValue },
    import_react64.default.createElement(
      BottomSheet,
      { onBackdropClick: hideMenu },
      import_react64.default.createElement(
        "div",
        { className: "sendbird-message__bottomsheet" },
        showReaction && import_react64.default.createElement(
          "div",
          { className: "sendbird-message__bottomsheet-reactions" },
          import_react64.default.createElement(
            "ul",
            { className: "sendbird-message__bottomsheet-reaction-bar" },
            import_react64.default.createElement(
              "div",
              { className: classnames("sendbird-message__bottomsheet-reaction-bar__row", showEmojisOnly && "sendbird-message__bottomsheet-reaction-bar__all") },
              visibleEmojis.map(function(emoji) {
                var _a4, _b3, _c2;
                var isReacted = (_c2 = (_b3 = (_a4 = message === null || message === void 0 ? void 0 : message.reactions) === null || _a4 === void 0 ? void 0 : _a4.filter(function(reaction) {
                  return reaction.key === emoji.key;
                })[0]) === null || _b3 === void 0 ? void 0 : _b3.userIds) === null || _c2 === void 0 ? void 0 : _c2.some(function(reactorId) {
                  return reactorId === userId;
                });
                return import_react64.default.createElement(
                  ReactionButton,
                  { key: emoji.key, width: "".concat(EMOJI_SIZE, "px"), height: "".concat(EMOJI_SIZE, "px"), selected: isReacted, onClick: function() {
                    hideMenu();
                    toggleReaction === null || toggleReaction === void 0 ? void 0 : toggleReaction(message, emoji.key, isReacted);
                  }, testID: "ui_mobile_emoji_reactions_menu_".concat(emoji.key) },
                  import_react64.default.createElement(ImageRenderer, { url: (emoji === null || emoji === void 0 ? void 0 : emoji.url) || "", width: "28px", height: "28px", placeHolder: function(_a5) {
                    var style = _a5.style;
                    return import_react64.default.createElement(
                      "div",
                      { style },
                      import_react64.default.createElement(Icon, { type: IconTypes.QUESTION, fillColor: IconColors.ON_BACKGROUND_3, width: "28px", height: "28px" })
                    );
                  } })
                );
              }),
              canShowMoreEmojis && !showEmojisOnly && import_react64.default.createElement(
                ReactionButton,
                { key: "emoji_more", width: "38px", height: "38px", onClick: function() {
                  return setShowEmojisOnly(true);
                }, testID: "ui_mobile_emoji_reactions_menu_emojiadd" },
                import_react64.default.createElement(ImageRenderer, { url: "", width: "28px", height: "28px", placeHolder: function(_a4) {
                  var style = _a4.style;
                  return import_react64.default.createElement(
                    "div",
                    { style },
                    import_react64.default.createElement(Icon, { type: IconTypes.EMOJI_MORE, fillColor: IconColors.ON_BACKGROUND_3, width: "28px", height: "28px" })
                  );
                } })
              )
            )
          )
        ),
        !showEmojisOnly && import_react64.default.createElement("div", { className: "sendbird-message__bottomsheet--actions" }, (_d = renderMenuItems === null || renderMenuItems === void 0 ? void 0 : renderMenuItems({
          items: {
            CopyMenuItem: CopyMenuItem2,
            EditMenuItem: EditMenuItem2,
            ResendMenuItem: ResendMenuItem2,
            ReplyMenuItem: ReplyMenuItem2,
            ThreadMenuItem: ThreadMenuItem2,
            DeleteMenuItem: DeleteMenuItem2
          }
        })) !== null && _d !== void 0 ? _d : import_react64.default.createElement(
          import_react64.default.Fragment,
          null,
          showMenuItemCopy2 && import_react64.default.createElement(CopyMenuItem2, null),
          showMenuItemEdit2 && import_react64.default.createElement(EditMenuItem2, null),
          showMenuItemResend2 && import_react64.default.createElement(ResendMenuItem2, null),
          showMenuItemReply2 && import_react64.default.createElement(ReplyMenuItem2, null),
          showMenuItemThread2 && import_react64.default.createElement(ThreadMenuItem2, null),
          showMenuItemDeleteFinal && import_react64.default.createElement(DeleteMenuItem2, null),
          showMenuItemDownload && import_react64.default.createElement(DownloadMenuItem, null)
        ))
      )
    )
  );
};
var MobileMenu = function(props) {
  return import_react64.default.createElement(import_react64.default.Fragment, null, (props === null || props === void 0 ? void 0 : props.isReactionEnabled) ? import_react64.default.createElement(MobileBottomSheet, __assign({}, props)) : import_react64.default.createElement(MobileContextMenu, __assign({}, props)));
};

// node_modules/@sendbird/uikit-react/ui/ThreadReplies.js
var import_react65 = __toESM(require_react(), 1);
function ThreadReplies(_a3, ref) {
  var _b2;
  var className = _a3.className, threadInfo = _a3.threadInfo, onClick = _a3.onClick;
  var _c = threadInfo.mostRepliedUsers, mostRepliedUsers = _c === void 0 ? [] : _c, replyCount = threadInfo.replyCount;
  var stringSet2 = useLocalization().stringSet;
  return import_react65.default.createElement(
    "div",
    { className: "sendbird-ui-thread-replies ".concat(className), role: "button", onClick: function(e4) {
      onClick === null || onClick === void 0 ? void 0 : onClick(e4);
      e4 === null || e4 === void 0 ? void 0 : e4.stopPropagation();
    }, onKeyDown: function(e4) {
      onClick === null || onClick === void 0 ? void 0 : onClick(e4);
      e4 === null || e4 === void 0 ? void 0 : e4.stopPropagation();
    }, ref },
    import_react65.default.createElement(
      "div",
      { className: "sendbird-ui-thread-replies__user-profiles" },
      mostRepliedUsers.slice(0, 4).map(function(user) {
        return import_react65.default.createElement(Avatar$1, { key: user.userId, className: "sendbird-ui-thread-replies__user-profiles__avatar", src: user === null || user === void 0 ? void 0 : user.profileUrl, alt: "user profile", width: "20px", height: "20px" });
      }),
      (mostRepliedUsers === null || mostRepliedUsers === void 0 ? void 0 : mostRepliedUsers.length) >= 5 && import_react65.default.createElement(
        "div",
        { className: "sendbird-ui-thread-replies__user-profiles__avatar" },
        import_react65.default.createElement(Avatar$1, { className: "sendbird-ui-thread-replies__user-profiles__avatar__image", src: (_b2 = mostRepliedUsers === null || mostRepliedUsers === void 0 ? void 0 : mostRepliedUsers[4]) === null || _b2 === void 0 ? void 0 : _b2.profileUrl, alt: "user profile", width: "20px", height: "20px" }),
        import_react65.default.createElement("div", { className: "sendbird-ui-thread-replies__user-profiles__avatar__cover" }),
        import_react65.default.createElement(
          "div",
          { className: "sendbird-ui-thread-replies__user-profiles__avatar__plus" },
          import_react65.default.createElement(Icon, { type: IconTypes.PLUS, fillColor: IconColors.WHITE, width: "16px", height: "16px" })
        )
      )
    ),
    import_react65.default.createElement(Label, { className: "sendbird-ui-thread-replies__reply-counts", type: LabelTypography.CAPTION_2, color: LabelColors.PRIMARY }, replyCount === 1 ? "".concat(replyCount, " ").concat(stringSet2.CHANNEL__THREAD_REPLY) : "".concat(replyCount > 99 ? stringSet2.CHANNEL__THREAD_OVER_MAX : replyCount, " ").concat(stringSet2.CHANNEL__THREAD_REPLIES)),
    import_react65.default.createElement(Icon, { className: "sendbird-ui-thread-replies__icon", type: IconTypes.CHEVRON_RIGHT, fillColor: IconColors.PRIMARY, width: "16px", height: "16px" })
  );
}
var ThreadReplies$1 = import_react65.default.forwardRef(ThreadReplies);

// node_modules/@sendbird/uikit-react/chunks/bundle-KDJ0EkHX.js
var import_react86 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ui/OGMessageItemBody.js
var import_react69 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-DjfGQ-DS.js
var import_react68 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ui/MentionLabel.js
var import_react66 = __toESM(require_react(), 1);
var import_react_dom13 = __toESM(require_react_dom(), 1);
function MentionLabel(props) {
  var _a3, _b2, _c;
  var mentionTemplate = props.mentionTemplate, mentionedUserId = props.mentionedUserId, mentionedUserNickname = props.mentionedUserNickname, isByMe = props.isByMe;
  var mentionRef = (0, import_react66.useRef)();
  var sendbirdState = useSendbirdStateContext();
  var userId = (_a3 = sendbirdState === null || sendbirdState === void 0 ? void 0 : sendbirdState.config) === null || _a3 === void 0 ? void 0 : _a3.userId;
  var sdk = (_c = (_b2 = sendbirdState === null || sendbirdState === void 0 ? void 0 : sendbirdState.stores) === null || _b2 === void 0 ? void 0 : _b2.sdkStore) === null || _c === void 0 ? void 0 : _c.sdk;
  var amIBeingMentioned = userId === mentionedUserId;
  var _d = (0, import_react66.useState)(), user = _d[0], setUser = _d[1];
  var fetchUser = (0, import_react66.useCallback)(function(toggleDropdown) {
    if (user || !(sdk === null || sdk === void 0 ? void 0 : sdk.createApplicationUserListQuery)) {
      toggleDropdown();
      return;
    }
    var query = sdk === null || sdk === void 0 ? void 0 : sdk.createApplicationUserListQuery({
      userIdsFilter: [mentionedUserId]
    });
    query.next().then(function(members) {
      if ((members === null || members === void 0 ? void 0 : members.length) > 0) {
        setUser(members[0]);
      }
      toggleDropdown();
    });
  }, [sdk, mentionedUserId]);
  return import_react66.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
    return import_react66.default.createElement(
      "a",
      { className: classnames("sendbird-word__mention", amIBeingMentioned && "sendbird-word__mention--me"), onClick: function() {
        return fetchUser(toggleDropdown);
      }, ref: mentionRef, "data-userid": mentionedUserId, "data-nickname": mentionedUserNickname, "data-sb-mention": true },
      import_react66.default.createElement(Label, { type: LabelTypography.CAPTION_1, color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1 }, "".concat(mentionTemplate).concat(mentionedUserNickname))
    );
  }, menuItems: function(closeDropdown) {
    return import_react66.default.createElement(
      MenuItems,
      {
        /**
        * parentRef: For catching location(x, y) of MenuItems
        * parentContainRef: For toggling more options(menus & reactions)
        */
        parentRef: mentionRef,
        parentContainRef: mentionRef,
        closeDropdown,
        style: { paddingTop: "0px", paddingBottom: "0px" }
      },
      import_react66.default.createElement(UserProfile, { user, onSuccess: closeDropdown, currentUserId: userId })
    );
  } });
}

// node_modules/@sendbird/uikit-react/ui/LinkLabel.js
var import_react67 = __toESM(require_react(), 1);
var http = /https?:\/\//;
function LinkLabel(_a3) {
  var _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, src = _a3.src, type = _a3.type, color = _a3.color, children = _a3.children;
  var url = http.test(src) ? src : "http://".concat(src);
  return import_react67.default.createElement(
    "a",
    {
      className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
        "sendbird-link-label",
        changeColorToClassName(color)
      ], false).join(" "),
      href: url,
      target: "_blank",
      rel: "noopener noreferrer",
      // for mobile
      onTouchEnd: function(e4) {
        e4.preventDefault();
        e4.nativeEvent.stopImmediatePropagation();
        openURL(url);
      }
    },
    import_react67.default.createElement(Label, { className: "sendbird-link-label__label", testID: "sendbird-link-label__label", type, color }, children)
  );
}

// node_modules/@sendbird/uikit-react/chunks/bundle-DjfGQ-DS.js
function keyGenerator(createdAt, messageUpdatedAt, index) {
  return "sb-msg_".concat(createdAt, "_").concat(messageUpdatedAt, "_").concat(index);
}
function asSafeURL(url) {
  var safeURL = decodeURIComponent(url);
  try {
    var protocol_1 = new URL(safeURL).protocol;
    if (["https:", "http:"].some(function(it3) {
      return it3 === protocol_1.toLowerCase();
    })) {
      return safeURL;
    } else {
      return "#";
    }
  } catch (error) {
    if (!safeURL.startsWith("http://") && !safeURL.startsWith("https://")) {
      safeURL = "https://" + safeURL;
    }
  }
  return safeURL;
}
function TextFragment(_a3) {
  var tokens = _a3.tokens;
  var messageStore = useMessageContext();
  var message = messageStore === null || messageStore === void 0 ? void 0 : messageStore.message;
  var isByMe = messageStore === null || messageStore === void 0 ? void 0 : messageStore.isByMe;
  var updatedAt = message.updatedAt, createdAt = message.createdAt;
  return import_react68.default.createElement(import_react68.default.Fragment, null, tokens === null || tokens === void 0 ? void 0 : tokens.map(function(token, idx) {
    var key = keyGenerator(createdAt, updatedAt, idx);
    return K2(token.type).with(TOKEN_TYPES.markdown, function() {
      var markdownToken = token;
      var groups = markdownToken.groups;
      return import_react68.default.createElement("span", { className: "sendbird-word", key, "data-testid": "sendbird-ui-word" }, K2(markdownToken.markdownType).with("bold", function() {
        return import_react68.default.createElement(
          "span",
          { style: { fontWeight: "bold" } },
          import_react68.default.createElement(TextFragment, { tokens: tokenizeMarkdown({ messageText: groups[1] }) })
        );
      }).with("url", function() {
        return import_react68.default.createElement(
          "a",
          { className: isByMe ? "sendbird-label--color-oncontent-1" : "sendbird-label--color-onbackground-1", href: asSafeURL(groups[2]) },
          import_react68.default.createElement(TextFragment, { tokens: tokenizeMarkdown({ messageText: groups[1] }) })
        );
      }).otherwise(function() {
        return import_react68.default.createElement(import_react68.default.Fragment, null);
      }));
    }).with(TOKEN_TYPES.mention, function() {
      return import_react68.default.createElement(
        "span",
        { className: "sendbird-word", key, "data-testid": "sendbird-ui-word" },
        import_react68.default.createElement(MentionLabel, {
          mentionTemplate: USER_MENTION_PREFIX,
          // @ts-ignore
          mentionedUserId: token.userId,
          mentionedUserNickname: token.value,
          isByMe
        })
      );
    }).with(TOKEN_TYPES.url, function() {
      return import_react68.default.createElement(
        "span",
        { className: "sendbird-word", key, "data-testid": "sendbird-ui-word" },
        import_react68.default.createElement(LinkLabel, { src: token.value, type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1 }, token.value)
      );
    }).otherwise(function() {
      return import_react68.default.createElement(import_react68.default.Fragment, { key }, getWhiteSpacePreservedText(token.value));
    });
  }));
}

// node_modules/@sendbird/uikit-react/ui/OGMessageItemBody.js
var import_react_dom14 = __toESM(require_react_dom(), 1);
function OGMessageItemBody(_a3) {
  var _b2, _c, _d, _e3;
  var className = _a3.className, message = _a3.message, _f = _a3.isByMe, isByMe = _f === void 0 ? false : _f, _g2 = _a3.mouseHover, mouseHover = _g2 === void 0 ? false : _g2, _h = _a3.isMentionEnabled, isMentionEnabled = _h === void 0 ? false : _h, _j = _a3.isReactionEnabled, isReactionEnabled = _j === void 0 ? false : _j, _k = _a3.isMarkdownEnabled, isMarkdownEnabled = _k === void 0 ? false : _k, _l = _a3.onMessageHeightChange, onMessageHeightChange = _l === void 0 ? function() {
  } : _l;
  var stringSet2 = (0, import_react69.useContext)(LocalizationContext).stringSet;
  var isMessageMentioned = isMentionEnabled && ((_b2 = message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate) === null || _b2 === void 0 ? void 0 : _b2.length) > 0 && (message === null || message === void 0 ? void 0 : message.mentionedUsers) && ((_c = message === null || message === void 0 ? void 0 : message.mentionedUsers) === null || _c === void 0 ? void 0 : _c.length) > 0;
  var tokens = (0, import_react69.useMemo)(function() {
    var _a4;
    if (isMessageMentioned) {
      return tokenizeMessage({
        mentionedUsers: (_a4 = message === null || message === void 0 ? void 0 : message.mentionedUsers) !== null && _a4 !== void 0 ? _a4 : void 0,
        messageText: message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate,
        includeMarkdown: isMarkdownEnabled
      });
    }
    return tokenizeMessage({
      messageText: message === null || message === void 0 ? void 0 : message.message,
      includeMarkdown: isMarkdownEnabled
    });
  }, [message === null || message === void 0 ? void 0 : message.updatedAt, message === null || message === void 0 ? void 0 : message.message]);
  var openOpenGraphURL = function() {
    var _a4;
    return openURL((_a4 = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _a4 === void 0 ? void 0 : _a4.url);
  };
  return import_react69.default.createElement(
    "div",
    { className: getClassName([
      className !== null && className !== void 0 ? className : "",
      "sendbird-og-message-item-body",
      isByMe ? "outgoing" : "incoming",
      mouseHover ? "mouse-hover" : "",
      isReactionEnabled && ((_d = message === null || message === void 0 ? void 0 : message.reactions) === null || _d === void 0 ? void 0 : _d.length) > 0 ? "reactions" : ""
    ]) },
    import_react69.default.createElement(
      Label,
      { type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1 },
      import_react69.default.createElement(
        "div",
        { className: OG_MESSAGE_BODY_CLASSNAME },
        import_react69.default.createElement(TextFragment, { tokens }),
        isEditedMessage(message) && import_react69.default.createElement(Label, { className: "sendbird-og-message-item-body__text-bubble__message", type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2 }, " ".concat(stringSet2.MESSAGE_EDITED, " "))
      )
    ),
    ((_e3 = message.ogMetaData) === null || _e3 === void 0 ? void 0 : _e3.defaultImage) && import_react69.default.createElement(OGImageSection, { onClick: openOpenGraphURL, ogImage: message.ogMetaData.defaultImage, onMessageHeightChange }),
    message.ogMetaData && import_react69.default.createElement(OGDescriptionSection, { onClick: openOpenGraphURL, ogMetaData: message.ogMetaData, onMessageHeightChange }),
    import_react69.default.createElement("div", { className: "sendbird-og-message-item-body__cover" })
  );
}
var OGImageSection = function(props) {
  var onClick = props.onClick, ogImage = props.ogImage, onMessageHeightChange = props.onMessageHeightChange;
  var imageRef = (0, import_react69.useRef)(null);
  var isMobile = useMediaQueryContext().isMobile;
  return import_react69.default.createElement(
    "div",
    { ref: imageRef, className: classnames("sendbird-og-message-item-body__og-thumbnail", !ogImage.url && "sendbird-og-message-item-body__og-thumbnail__empty"), onClick: function() {
      return onClick();
    } },
    import_react69.default.createElement(ImageRenderer, { className: "sendbird-og-message-item-body__og-thumbnail__image", url: ogImage.url || "", alt: ogImage.alt || "", width: "100%", height: isMobile ? "136px" : "240px", onLoad: onMessageHeightChange, onError: function() {
      var _a3, _b2;
      try {
        (_b2 = (_a3 = imageRef === null || imageRef === void 0 ? void 0 : imageRef.current) === null || _a3 === void 0 ? void 0 : _a3.classList) === null || _b2 === void 0 ? void 0 : _b2.add("sendbird-og-message-item-body__og-thumbnail__empty");
      } catch (error) {
      }
    }, defaultComponent: import_react69.default.createElement(
      "div",
      { className: "sendbird-og-message-item-body__og-thumbnail__place-holder" },
      import_react69.default.createElement(Icon, { className: "sendbird-og-message-item-body__og-thumbnail__place-holder__icon", type: IconTypes.THUMBNAIL_NONE, width: "56px", height: "56px" })
    ) })
  );
};
var OGDescriptionSection = function(props) {
  var onClick = props.onClick, ogMetaData = props.ogMetaData, onMessageHeightChange = props.onMessageHeightChange;
  (0, import_react69.useEffect)(function() {
    onMessageHeightChange();
  }, [ogMetaData.title, ogMetaData.description, ogMetaData.url]);
  return import_react69.default.createElement(
    "div",
    { className: "sendbird-og-message-item-body__description", onClick: function() {
      return onClick();
    } },
    ogMetaData.title && import_react69.default.createElement(Label, { className: "sendbird-og-message-item-body__description__title", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_1 }, ogMetaData.title),
    ogMetaData.description && import_react69.default.createElement(Label, { className: "sendbird-og-message-item-body__description__description", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_1 }, ogMetaData.description),
    ogMetaData.url && import_react69.default.createElement(Label, { className: "sendbird-og-message-item-body__description__url", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, ogMetaData.url)
  );
};

// node_modules/@sendbird/uikit-react/ui/TextMessageItemBody.js
var import_react70 = __toESM(require_react(), 1);
var import_react_dom15 = __toESM(require_react_dom(), 1);
function TextMessageItemBody(_a3) {
  var _b2;
  var _c = _a3.className, className = _c === void 0 ? "" : _c, message = _a3.message, _d = _a3.isByMe, isByMe = _d === void 0 ? false : _d, _e3 = _a3.mouseHover, mouseHover = _e3 === void 0 ? false : _e3, _f = _a3.isMentionEnabled, isMentionEnabled = _f === void 0 ? false : _f, _g2 = _a3.isReactionEnabled, isReactionEnabled = _g2 === void 0 ? false : _g2, _h = _a3.isMarkdownEnabled, isMarkdownEnabled = _h === void 0 ? false : _h;
  var stringSet2 = (0, import_react70.useContext)(LocalizationContext).stringSet;
  var isMessageMentioned = isMentionEnabled && (message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate) && message.mentionedMessageTemplate.length > 0 && (message === null || message === void 0 ? void 0 : message.mentionedUsers) && message.mentionedUsers.length > 0;
  var tokens = (0, import_react70.useMemo)(function() {
    var _a4;
    if (isMessageMentioned) {
      return tokenizeMessage({
        mentionedUsers: (_a4 = message === null || message === void 0 ? void 0 : message.mentionedUsers) !== null && _a4 !== void 0 ? _a4 : void 0,
        messageText: message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate,
        includeMarkdown: isMarkdownEnabled
      });
    }
    return tokenizeMessage({
      messageText: message === null || message === void 0 ? void 0 : message.message,
      includeMarkdown: isMarkdownEnabled
    });
  }, [message === null || message === void 0 ? void 0 : message.updatedAt, message === null || message === void 0 ? void 0 : message.message]);
  return import_react70.default.createElement(
    Label,
    { type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1 },
    import_react70.default.createElement(
      "div",
      { className: getClassName([
        className,
        TEXT_MESSAGE_BODY_CLASSNAME,
        isByMe ? "outgoing" : "incoming",
        mouseHover ? "mouse-hover" : "",
        isReactionEnabled && ((_b2 = message === null || message === void 0 ? void 0 : message.reactions) === null || _b2 === void 0 ? void 0 : _b2.length) > 0 ? "reactions" : ""
      ]) },
      import_react70.default.createElement(TextFragment, { tokens }),
      isEditedMessage(message) && import_react70.default.createElement(Label, { className: "sendbird-text-message-item-body__message edited", type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2 }, " ".concat(stringSet2.MESSAGE_EDITED, " "))
    )
  );
}

// node_modules/@sendbird/uikit-react/ui/FileMessageItemBody.js
var import_react71 = __toESM(require_react(), 1);
function FileMessageItemBody(_a3) {
  var _this = this;
  var _b2, _c, _d;
  var _e3 = _a3.className, className = _e3 === void 0 ? "" : _e3, message = _a3.message, _f = _a3.isByMe, isByMe = _f === void 0 ? false : _f, _g2 = _a3.mouseHover, mouseHover = _g2 === void 0 ? false : _g2, _h = _a3.isReactionEnabled, isReactionEnabled = _h === void 0 ? false : _h, truncateLimit = _a3.truncateLimit, onBeforeDownloadFileMessage = _a3.onBeforeDownloadFileMessage;
  var logger = null;
  try {
    logger = (_c = (_b2 = useSendbirdStateContext()) === null || _b2 === void 0 ? void 0 : _b2.config) === null || _c === void 0 ? void 0 : _c.logger;
  } catch (err) {
  }
  var isMobile = useMediaQueryContext().isMobile;
  var truncateMaxNum = truncateLimit !== null && truncateLimit !== void 0 ? truncateLimit : isMobile ? 20 : void 0;
  var downloadFileWithUrl = function() {
    return openURL(message === null || message === void 0 ? void 0 : message.url);
  };
  var handleOnClickTextButton = onBeforeDownloadFileMessage ? function() {
    return __awaiter(_this, void 0, void 0, function() {
      var allowDownload, err_1;
      var _a4, _b3;
      return __generator(this, function(_c2) {
        switch (_c2.label) {
          case 0:
            _c2.trys.push([0, 2, , 3]);
            return [4, onBeforeDownloadFileMessage({ message })];
          case 1:
            allowDownload = _c2.sent();
            if (allowDownload) {
              downloadFileWithUrl();
            } else {
              (_a4 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "FileMessageItemBody: Not allowed to download.");
            }
            return [3, 3];
          case 2:
            err_1 = _c2.sent();
            (_b3 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _b3 === void 0 ? void 0 : _b3.call(logger, "FileMessageItemBody: Error occurred while determining download continuation:", err_1);
            return [3, 3];
          case 3:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  } : downloadFileWithUrl;
  return import_react71.default.createElement(
    "div",
    { className: getClassName([
      className,
      "sendbird-file-message-item-body",
      isByMe ? "outgoing" : "incoming",
      mouseHover ? "mouse-hover" : "",
      isReactionEnabled && ((_d = message === null || message === void 0 ? void 0 : message.reactions) === null || _d === void 0 ? void 0 : _d.length) > 0 ? "reactions" : ""
    ]) },
    import_react71.default.createElement(
      "div",
      { className: "sendbird-file-message-item-body__file-icon" },
      import_react71.default.createElement(Icon, { className: "sendbird-file-message-item-body__file-icon__icon", type: {
        IMAGE: IconTypes.PHOTO,
        VIDEO: IconTypes.PLAY,
        AUDIO: IconTypes.FILE_AUDIO,
        GIF: IconTypes.GIF,
        OTHERS: IconTypes.FILE_DOCUMENT
      }[getUIKitFileType(message === null || message === void 0 ? void 0 : message.type)], fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
    ),
    import_react71.default.createElement(
      TextButton,
      { className: "sendbird-file-message-item-body__file-name", onClick: handleOnClickTextButton, color: isByMe ? Colors3.ONCONTENT_1 : Colors3.ONBACKGROUND_1 },
      import_react71.default.createElement(Label, { className: "sendbird-file-message-item-body__file-name__text", testID: "sendbird-file-message-item-body__file-name__text", type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1 }, truncateString((message === null || message === void 0 ? void 0 : message.name) || (message === null || message === void 0 ? void 0 : message.url), truncateMaxNum))
    )
  );
}

// node_modules/@sendbird/uikit-react/chunks/bundle-BFQnMRhA.js
var import_react74 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ui/FileViewer.js
var import_react73 = __toESM(require_react(), 1);
var import_react_dom16 = __toESM(require_react_dom(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-vS1u8K1w.js
var import_react72 = __toESM(require_react(), 1);
function useKeyDown(ref, keyDownCallbackMap) {
  (0, import_react72.useLayoutEffect)(function() {
    var _a3;
    (_a3 = ref.current) === null || _a3 === void 0 ? void 0 : _a3.focus();
  }, [ref.current]);
  var onKeyDown = usePreservedCallback(function(event) {
    var callback = keyDownCallbackMap[event.key];
    callback === null || callback === void 0 ? void 0 : callback(event);
    event.stopPropagation();
  });
  return onKeyDown;
}

// node_modules/@sendbird/uikit-react/ui/FileViewer.js
var ViewerTypes = {
  SINGLE: "SINGLE",
  MULTI: "MULTI"
};
function mapFileViewerComponentProps(_a3) {
  var props = _a3.props;
  if (props.viewerType === ViewerTypes.MULTI) {
    var _b2 = props, fileInfoList = _b2.fileInfoList, currentIndex = _b2.currentIndex;
    return fileInfoList[currentIndex];
  }
  var fileInfo = props;
  return {
    name: fileInfo.name,
    type: fileInfo.type,
    url: fileInfo.url
  };
}
function DeleteButton(props) {
  if (props.viewerType !== ViewerTypes.MULTI) {
    var onDelete_1 = props.onDelete, isByMe = props.isByMe, disableDelete_1 = props.disableDelete, className = props.className;
    return isByMe ? import_react73.default.createElement(
      "div",
      { className: "sendbird-fileviewer__header__right__actions__delete ".concat(className) },
      import_react73.default.createElement(Icon, { className: disableDelete_1 ? "disabled" : "", type: IconTypes.DELETE, fillColor: disableDelete_1 ? IconColors.GRAY : IconColors.ON_BACKGROUND_1, height: "24px", width: "24px", onClick: function(e4) {
        if (!disableDelete_1) {
          onDelete_1 === null || onDelete_1 === void 0 ? void 0 : onDelete_1(e4);
        }
      } })
    ) : import_react73.default.createElement(import_react73.default.Fragment, null);
  }
  return import_react73.default.createElement(import_react73.default.Fragment, null);
}
function Slider(props) {
  if (props.viewerType === ViewerTypes.MULTI) {
    var onClickLeft_1 = props.onClickLeft, onClickRight_1 = props.onClickRight;
    return import_react73.default.createElement(
      "div",
      { className: "sendbird-file-viewer-slider" },
      import_react73.default.createElement(
        "div",
        { className: "sendbird-file-viewer-arrow--left" },
        import_react73.default.createElement(Icon, { type: IconTypes.SLIDE_LEFT, fillColor: IconColors.ON_BACKGROUND_1, height: SLIDER_BUTTON_ICON_SIDE_LENGTH, width: SLIDER_BUTTON_ICON_SIDE_LENGTH, onClick: function(e4) {
          onClickLeft_1 === null || onClickLeft_1 === void 0 ? void 0 : onClickLeft_1();
          e4.stopPropagation();
        } })
      ),
      import_react73.default.createElement(
        "div",
        { className: "sendbird-file-viewer-arrow--right" },
        import_react73.default.createElement(Icon, { type: IconTypes.SLIDE_LEFT, fillColor: IconColors.ON_BACKGROUND_1, height: SLIDER_BUTTON_ICON_SIDE_LENGTH, width: SLIDER_BUTTON_ICON_SIDE_LENGTH, onClick: function(e4) {
          e4.stopPropagation();
          onClickRight_1 === null || onClickRight_1 === void 0 ? void 0 : onClickRight_1();
        } })
      )
    );
  }
  return import_react73.default.createElement(import_react73.default.Fragment, null);
}
var FileViewerComponent = function(props) {
  var profileUrl = props.profileUrl, nickname = props.nickname, onClose = props.onClose, onDownloadClick = props.onDownloadClick;
  var _a3 = props, onClickLeft = _a3.onClickLeft, onClickRight = _a3.onClickRight;
  var ref = (0, import_react73.useRef)(null);
  var onKeyDown = useKeyDown(ref, {
    Escape: function(e4) {
      return onClose === null || onClose === void 0 ? void 0 : onClose(e4);
    },
    ArrowLeft: function() {
      return onClickLeft === null || onClickLeft === void 0 ? void 0 : onClickLeft();
    },
    ArrowRight: function() {
      return onClickRight === null || onClickRight === void 0 ? void 0 : onClickRight();
    }
  });
  var _b2 = mapFileViewerComponentProps({ props }), name = _b2.name, type = _b2.type, url = _b2.url;
  var stringSet2 = (0, import_react73.useContext)(LocalizationContext).stringSet;
  return import_react73.default.createElement(
    Modal,
    { onClose },
    import_react73.default.createElement(
      "div",
      {
        className: "sendbird-fileviewer",
        "data-testid": "sendbird-fileviewer",
        onKeyDown,
        // to focus
        tabIndex: 1,
        ref
      },
      import_react73.default.createElement(
        "div",
        { className: "sendbird-fileviewer__header" },
        import_react73.default.createElement(
          "div",
          { className: "sendbird-fileviewer__header__left" },
          import_react73.default.createElement(
            "div",
            { className: "sendbird-fileviewer__header__left__avatar" },
            import_react73.default.createElement(Avatar$1, { height: "32px", width: "32px", src: profileUrl })
          ),
          import_react73.default.createElement(
            "div",
            { className: "sendbird-fileviewer__header__left__text-container" },
            import_react73.default.createElement(Label, { className: "sendbird-fileviewer__header__left__filename", type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, name),
            import_react73.default.createElement(Label, { className: "sendbird-fileviewer__header__left__sender-name", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, nickname)
          )
        ),
        import_react73.default.createElement(
          "div",
          { className: "sendbird-fileviewer__header__right" },
          isSupportedFileView(type) && import_react73.default.createElement(
            "div",
            { className: "sendbird-fileviewer__header__right__actions" },
            import_react73.default.createElement(
              "a",
              { className: "sendbird-fileviewer__header__right__actions__download", rel: "noopener noreferrer", href: url, target: "_blank", onClick: onDownloadClick },
              import_react73.default.createElement(Icon, { type: IconTypes.DOWNLOAD, fillColor: IconColors.ON_BACKGROUND_1, height: "24px", width: "24px" })
            ),
            import_react73.default.createElement(DeleteButton, __assign({ className: "sendbird-fileviewer__header__right__actions__delete" }, props))
          ),
          import_react73.default.createElement(
            "div",
            { className: "sendbird-fileviewer__header__right__actions__close" },
            import_react73.default.createElement(Icon, { type: IconTypes.CLOSE, fillColor: IconColors.ON_BACKGROUND_1, height: "24px", width: "24px", onClick: function(e4) {
              return onClose === null || onClose === void 0 ? void 0 : onClose(e4);
            } })
          )
        )
      ),
      import_react73.default.createElement(
        "div",
        { className: "sendbird-fileviewer__content" },
        isVideo(type) && import_react73.default.createElement(
          "video",
          { controls: true, className: "sendbird-fileviewer__content__video" },
          import_react73.default.createElement("source", { src: url, type })
        ),
        isImage(type) && import_react73.default.createElement("img", { src: url, alt: name, className: props.viewerType === ViewerTypes.MULTI ? "sendbird-fileviewer__content__img__multi" : "sendbird-fileviewer__content__img" }),
        !isSupportedFileView(type) && import_react73.default.createElement(
          "div",
          { className: "sendbird-fileviewer__content__unsupported" },
          import_react73.default.createElement(Label, { type: LabelTypography.H_1, color: LabelColors.ONBACKGROUND_1 }, (stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.UI__FILE_VIEWER__UNSUPPORT) || "Unsupported message")
        ),
        import_react73.default.createElement(Slider, __assign({}, props))
      )
    )
  );
};
function FileViewer(_a3) {
  var _b2, _c, _d;
  var message = _a3.message, _e3 = _a3.statefulFileInfoList, statefulFileInfoList = _e3 === void 0 ? [] : _e3, onClose = _a3.onClose, _f = _a3.isByMe, isByMe = _f === void 0 ? false : _f, onDelete = _a3.onDelete, currentIndex = _a3.currentIndex, onClickLeft = _a3.onClickLeft, onClickRight = _a3.onClickRight, onDownloadClick = _a3.onDownloadClick;
  if (isMultipleFilesMessage(message)) {
    var castedMessage = message;
    return import_react73.default.createElement(FileViewerComponent, { profileUrl: castedMessage.sender.profileUrl, nickname: castedMessage.sender.nickname, viewerType: ViewerTypes.MULTI, fileInfoList: statefulFileInfoList.filter(function(fileInfo) {
      return fileInfo.url;
    }).map(function(fileInfo) {
      return {
        name: fileInfo.fileName || "",
        type: fileInfo.mimeType || "",
        url: fileInfo.url || ""
      };
    }), currentIndex: currentIndex || 0, onClickLeft: onClickLeft || noop, onClickRight: onClickRight || noop, onClose, onDownloadClick });
  } else if (isFileMessage(message)) {
    var castedMessage = message;
    return (0, import_react_dom16.createPortal)(import_react73.default.createElement(FileViewerComponent, { profileUrl: (_b2 = castedMessage.sender) === null || _b2 === void 0 ? void 0 : _b2.profileUrl, nickname: (_c = castedMessage.sender) === null || _c === void 0 ? void 0 : _c.nickname, name: castedMessage.name, type: castedMessage.type, url: castedMessage === null || castedMessage === void 0 ? void 0 : castedMessage.url, isByMe, disableDelete: (((_d = castedMessage.threadInfo) === null || _d === void 0 ? void 0 : _d.replyCount) || 0) > 0, onClose, onDelete: onDelete || noop, onDownloadClick }), document.getElementById(MODAL_ROOT));
  }
  return import_react73.default.createElement(import_react73.default.Fragment, null);
}

// node_modules/@sendbird/uikit-react/chunks/bundle-BFQnMRhA.js
function ImageGrid(_a3) {
  var _b2;
  var children = _a3.children, className = _a3.className, message = _a3.message, isReactionEnabled = _a3.isReactionEnabled;
  return import_react74.default.createElement(
    "div",
    { className: "sendbird-image-grid-wrap" },
    import_react74.default.createElement("div", { className: getClassName([
      className !== null && className !== void 0 ? className : "",
      "sendbird-image-grid",
      isReactionEnabled && ((_b2 = message === null || message === void 0 ? void 0 : message.reactions) === null || _b2 === void 0 ? void 0 : _b2.length) > 0 ? "reactions" : ""
    ]) }, children)
  );
}
var GRID_WIDTH_CHAT_WEB = 400;
var GRID_SIDE_PADDING = 8;
var GRID_GAP = 4;
var TIMESTAMP_WIDTH_AND_ITS_SIDE_MARGIN = 54;
var PROFILE_IMAGE_WIDTH = 40;
var CHAT_MOBILE_SIDE_PADDING = 48;
var THREAD_PARENT_WIDTH = 320;
var THREAD_PARENT_SIDE_PADDING = 28;
var THREAD_PARENT_GRID_MARGIN_LEFT = 12;
var THREAD_CHILD_WIDTH = 200;
var THREAD_CHILD_SIDE_PADDING = 8;
var THREAD_CHILD_MOBILE_SIDE_PADDING = 32;
var THREAD_CHILD_MOBILE_TIMESTAMP_WIDTH_AND_ITS_SIDE_MARGIN = 60;
var MULTIPLE_FILES_IMAGE_SIDE_LENGTH = {
  CHAT_WEB: "calc(".concat(GRID_WIDTH_CHAT_WEB / 2, "px - ").concat((GRID_SIDE_PADDING + GRID_GAP) / 2, "px)"),
  CHAT_MOBILE: "calc(50vw - ".concat((CHAT_MOBILE_SIDE_PADDING + PROFILE_IMAGE_WIDTH + TIMESTAMP_WIDTH_AND_ITS_SIDE_MARGIN + GRID_SIDE_PADDING + GRID_GAP) / 2, "px)"),
  THREAD_PARENT_WEB: "calc(".concat((THREAD_PARENT_WIDTH - (THREAD_PARENT_SIDE_PADDING + PROFILE_IMAGE_WIDTH + THREAD_PARENT_GRID_MARGIN_LEFT + GRID_GAP)) / 2, "px)"),
  THREAD_PARENT_MOBILE: "calc(50vw - ".concat((THREAD_PARENT_SIDE_PADDING + PROFILE_IMAGE_WIDTH + THREAD_PARENT_GRID_MARGIN_LEFT + GRID_GAP) / 2, "px)"),
  THREAD_CHILD_WEB: "calc(".concat((THREAD_CHILD_WIDTH - THREAD_CHILD_SIDE_PADDING - GRID_GAP) / 2, "px)"),
  THREAD_CHILD_MOBILE: "calc(50vw - ".concat((THREAD_CHILD_MOBILE_SIDE_PADDING + PROFILE_IMAGE_WIDTH + THREAD_CHILD_MOBILE_TIMESTAMP_WIDTH_AND_ITS_SIDE_MARGIN + GRID_SIDE_PADDING + GRID_GAP) / 2, "px)")
};
var MULTIPLE_FILES_IMAGE_BORDER_RADIUS = {
  CHAT_WEB: "6px",
  CHAT_MOBILE: "6px",
  THREAD_PARENT_WEB: "6px",
  THREAD_PARENT_MOBILE: "6px",
  THREAD_CHILD_WEB: "6px",
  THREAD_CHILD_MOBILE: "6px"
};
var MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH = "34px";
var ThreadMessageKind = {
  PARENT: "parent",
  CHILD: "child"
};
function MultipleFilesMessageItemBody(_a3) {
  var _this = this;
  var _b2, _c;
  var className = _a3.className, message = _a3.message, _d = _a3.isReactionEnabled, isReactionEnabled = _d === void 0 ? false : _d, threadMessageKindKey = _a3.threadMessageKindKey, _e3 = _a3.statefulFileInfoList, statefulFileInfoList = _e3 === void 0 ? [] : _e3, _f = _a3.onBeforeDownloadFileMessage, onBeforeDownloadFileMessage = _f === void 0 ? null : _f;
  var logger = (_c = (_b2 = useSendbirdStateContext === null || useSendbirdStateContext === void 0 ? void 0 : useSendbirdStateContext()) === null || _b2 === void 0 ? void 0 : _b2.config) === null || _c === void 0 ? void 0 : _c.logger;
  var _g2 = (0, import_react74.useState)(-1), currentFileViewerIndex = _g2[0], setCurrentFileViewerIndex = _g2[1];
  function onClose() {
    setCurrentFileViewerIndex(-1);
  }
  function onClickLeft() {
    setCurrentFileViewerIndex(currentFileViewerIndex === 0 ? statefulFileInfoList.length - 1 : currentFileViewerIndex - 1);
  }
  function onClickRight() {
    setCurrentFileViewerIndex(currentFileViewerIndex === statefulFileInfoList.length - 1 ? 0 : currentFileViewerIndex + 1);
  }
  return threadMessageKindKey ? import_react74.default.createElement(
    import_react74.default.Fragment,
    null,
    currentFileViewerIndex > -1 && import_react74.default.createElement(FileViewer, { message, statefulFileInfoList, currentIndex: currentFileViewerIndex, onClickLeft, onClickRight, onClose, onDownloadClick: function(e4) {
      return __awaiter(_this, void 0, void 0, function() {
        var allowDownload, err_1;
        var _a4, _b3;
        return __generator(this, function(_c2) {
          switch (_c2.label) {
            case 0:
              if (!onBeforeDownloadFileMessage)
                return [
                  2
                  /*return*/
                ];
              _c2.label = 1;
            case 1:
              _c2.trys.push([1, 3, , 4]);
              return [4, onBeforeDownloadFileMessage({ message, index: currentFileViewerIndex })];
            case 2:
              allowDownload = _c2.sent();
              if (!allowDownload) {
                e4.preventDefault();
                (_a4 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "MultipleFilesMessageItemBody: Not allowed to download.");
              }
              return [3, 4];
            case 3:
              err_1 = _c2.sent();
              (_b3 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _b3 === void 0 ? void 0 : _b3.call(logger, "MultipleFilesMessageItemBody: Error occurred while determining download continuation:", err_1);
              return [3, 4];
            case 4:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    } }),
    import_react74.default.createElement(ImageGrid, { className, message, isReactionEnabled }, statefulFileInfoList.map(function(fileInfo, index) {
      var _a4, _b3, _c2, _d2;
      return import_react74.default.createElement(
        "div",
        { className: "sendbird-multiple-files-image-renderer-wrapper", onClick: message.sendingStatus === W.SUCCEEDED ? function() {
          return setCurrentFileViewerIndex(index);
        } : void 0, key: "sendbird-multiple-files-image-renderer-".concat(index, "-").concat(fileInfo.url) },
        import_react74.default.createElement(ImageRenderer, { url: (_d2 = (_c2 = (_b3 = (_a4 = fileInfo.thumbnails) === null || _a4 === void 0 ? void 0 : _a4[0]) === null || _b3 === void 0 ? void 0 : _b3.url) !== null && _c2 !== void 0 ? _c2 : fileInfo.url) !== null && _d2 !== void 0 ? _d2 : "", fixedSize: false, width: MULTIPLE_FILES_IMAGE_SIDE_LENGTH[threadMessageKindKey], maxSideLength: MULTIPLE_FILES_IMAGE_SIDE_LENGTH.CHAT_WEB, height: MULTIPLE_FILES_IMAGE_SIDE_LENGTH[threadMessageKindKey], borderRadius: getBorderRadiusForMultipleImageRenderer(MULTIPLE_FILES_IMAGE_BORDER_RADIUS[threadMessageKindKey], index, statefulFileInfoList.length), shadeOnHover: true, isUploaded: !!fileInfo.isUploaded, placeHolder: function(_a5) {
          var style = _a5.style;
          if (fileInfo.mimeType && isGif(fileInfo.mimeType))
            return import_react74.default.createElement(ImagePlaceholder.GIF, { style });
          return import_react74.default.createElement(ImagePlaceholder.Default, { style });
        }, defaultComponent: import_react74.default.createElement(ImagePlaceholder.LoadError, null) })
      );
    }))
  ) : import_react74.default.createElement(import_react74.default.Fragment, null);
}
var ImagePlaceholder = {
  Default: function(_a3) {
    var style = _a3.style;
    return import_react74.default.createElement(
      "div",
      { className: "sendbird-multiple-files-image-renderer__thumbnail__placeholder", style },
      import_react74.default.createElement(Icon, { type: IconTypes.PHOTO, fillColor: IconColors.ON_BACKGROUND_2, width: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH, height: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH })
    );
  },
  GIF: function(_a3) {
    var style = _a3.style;
    return import_react74.default.createElement(
      "div",
      { className: "sendbird-multiple-files-image-renderer__thumbnail__placeholder", style },
      import_react74.default.createElement(
        "div",
        { className: "sendbird-multiple-files-image-renderer__thumbnail__placeholder__icon" },
        import_react74.default.createElement(Icon, { type: IconTypes.GIF, fillColor: IconColors.THUMBNAIL_ICON, width: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH, height: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH })
      )
    );
  },
  LoadError: function() {
    return import_react74.default.createElement(
      "div",
      { className: "sendbird-multiple-files-image-renderer__thumbnail__placeholder" },
      import_react74.default.createElement(Icon, { type: IconTypes.THUMBNAIL_NONE, fillColor: IconColors.ON_BACKGROUND_2, width: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH, height: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH })
    );
  }
};
function useThreadMessageKindKeySelector(_a3) {
  var threadMessageKind = _a3.threadMessageKind, isMobile = _a3.isMobile;
  var threadMessageKindKey = (0, import_react74.useMemo)(function() {
    return K2(threadMessageKind).with(ThreadMessageKind.PARENT, function() {
      return isMobile ? "THREAD_PARENT_MOBILE" : "THREAD_PARENT_WEB";
    }).with(ThreadMessageKind.CHILD, function() {
      return isMobile ? "THREAD_CHILD_MOBILE" : "THREAD_CHILD_WEB";
    }).otherwise(function() {
      return isMobile ? "CHAT_MOBILE" : "CHAT_WEB";
    });
  }, [isMobile, threadMessageKind]);
  return threadMessageKindKey;
}
var useFileInfoListWithUploaded = function(message) {
  var _a3, _b2;
  var blobHandler = (0, import_react74.useRef)(/* @__PURE__ */ new Map());
  var getObjectURL = function(index, blob) {
    if (!blobHandler.current.has(index) && blob)
      blobHandler.current.set(index, URL.createObjectURL(blob));
    return blobHandler.current.get(index);
  };
  var revokeURLs = function() {
    if (blobHandler.current.size > 0) {
      blobHandler.current.forEach(function(url) {
        return URL.revokeObjectURL(url);
      });
      blobHandler.current.clear();
    }
  };
  (0, import_react74.useEffect)(function() {
    return function() {
      return revokeURLs();
    };
  }, []);
  if (!message || !message.isMultipleFilesMessage || !message.isMultipleFilesMessage()) {
    return [];
  } else if (message.sendingStatus === W.SUCCEEDED) {
    revokeURLs();
    return message.fileInfoList.map(function(it3) {
      var _a4, _b3;
      return __assign(__assign({}, it3), { url: it3.url, isUploaded: true, mimeType: (_a4 = it3.mimeType) !== null && _a4 !== void 0 ? _a4 : void 0, fileName: (_b3 = it3.fileName) !== null && _b3 !== void 0 ? _b3 : void 0 });
    });
  } else {
    return (_b2 = (_a3 = message === null || message === void 0 ? void 0 : message.messageParams) === null || _a3 === void 0 ? void 0 : _a3.fileInfoList.map(function(it3, index) {
      var _a4, _b3;
      return __assign(__assign({}, it3), { url: (_b3 = (_a4 = getObjectURL(index)) !== null && _a4 !== void 0 ? _a4 : it3.fileUrl) !== null && _b3 !== void 0 ? _b3 : it3.file instanceof Blob ? getObjectURL(index, it3.file) : void 0, isUploaded: !it3.file && typeof it3.fileUrl === "string" && it3.fileUrl.length > 0 });
    })) !== null && _b2 !== void 0 ? _b2 : [];
  }
};

// node_modules/@sendbird/uikit-react/ui/VoiceMessageItemBody.js
var import_react78 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ui/ProgressBar.js
var import_react75 = __toESM(require_react(), 1);
var ProgressBarColorTypes = {
  PRIMARY: "progress-bar-color--primary",
  GRAY: "progress-bar-color--gray"
};
var ProgressBar = function(_a3) {
  var _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, _c = _a3.disabled, disabled = _c === void 0 ? false : _c, maxSize = _a3.maxSize, _d = _a3.currentSize, currentSize = _d === void 0 ? 0 : _d, _e3 = _a3.colorType, colorType = _e3 === void 0 ? ProgressBarColorTypes.PRIMARY : _e3;
  var width = (0, import_react75.useMemo)(function() {
    return "".concat(currentSize / maxSize * 100, "%");
  }, [currentSize, maxSize]);
  return import_react75.default.createElement(
    "div",
    { className: classnames("sendbird-progress-bar", className, colorType, disabled && "progress-bar--disabled") },
    import_react75.default.createElement("div", { className: "sendbird-progress-bar__fill", style: { width } })
  );
};

// node_modules/@sendbird/uikit-react/VoicePlayer/useVoicePlayer.js
var import_react76 = __toESM(require_react(), 1);
var import_react_dom17 = __toESM(require_react_dom(), 1);
var useVoicePlayer = function(_a3) {
  var _b2;
  var _c = _a3.key, key = _c === void 0 ? "" : _c, _d = _a3.channelUrl, channelUrl = _d === void 0 ? "" : _d, audioFile = _a3.audioFile, _e3 = _a3.audioFileUrl, audioFileUrl = _e3 === void 0 ? "" : _e3, _f = _a3.audioFileMimeType, audioFileMimeType = _f === void 0 ? VOICE_MESSAGE_MIME_TYPE : _f;
  var groupKey = generateGroupKey(channelUrl, key);
  var _g2 = useVoicePlayerContext(), play = _g2.play, pause = _g2.pause, stop = _g2.stop, voicePlayerStore = _g2.voicePlayerStore;
  var isRecordable = useVoiceRecorderContext().isRecordable;
  var currentAudioUnit = ((_b2 = voicePlayerStore === null || voicePlayerStore === void 0 ? void 0 : voicePlayerStore.audioStorage) === null || _b2 === void 0 ? void 0 : _b2[groupKey]) || AudioUnitDefaultValue();
  var playVoicePlayer = function() {
    if (!isRecordable) {
      play === null || play === void 0 ? void 0 : play({
        groupKey,
        audioFile,
        audioFileUrl,
        audioFileMimeType
      });
    }
  };
  var pauseVoicePlayer = function() {
    pause === null || pause === void 0 ? void 0 : pause(groupKey);
  };
  var stopVoicePlayer = function(text2) {
    if (text2 === void 0) {
      text2 = "";
    }
    stop === null || stop === void 0 ? void 0 : stop(text2);
  };
  (0, import_react76.useEffect)(function() {
    return function() {
      var _a4;
      if (audioFile || audioFileUrl) {
        var voiceAudioPlayerElement = document.getElementById(VOICE_PLAYER_AUDIO_ID);
        (_a4 = voiceAudioPlayerElement === null || voiceAudioPlayerElement === void 0 ? void 0 : voiceAudioPlayerElement.pause) === null || _a4 === void 0 ? void 0 : _a4.call(voiceAudioPlayerElement);
      }
    };
  }, []);
  return {
    play: playVoicePlayer,
    pause: pauseVoicePlayer,
    stop: stopVoicePlayer,
    /**
     * The reason why we multiply this by *1000 is,
     * The unit of playbackTime and duration should be millisecond
     */
    playbackTime: ((currentAudioUnit === null || currentAudioUnit === void 0 ? void 0 : currentAudioUnit.playbackTime) || 0) * 1e3,
    duration: ((currentAudioUnit === null || currentAudioUnit === void 0 ? void 0 : currentAudioUnit.duration) || 0) * 1e3,
    playingStatus: currentAudioUnit.playingStatus
  };
};

// node_modules/@sendbird/uikit-react/ui/PlaybackTime.js
var import_react77 = __toESM(require_react(), 1);
var PlaybackTime = function(_a3) {
  var className = _a3.className, _b2 = _a3.time, time = _b2 === void 0 ? 0 : _b2, _c = _a3.labelType, labelType = _c === void 0 ? LabelTypography.CAPTION_2 : _c, _d = _a3.labelColor, labelColor = _d === void 0 ? LabelColors.ONCONTENT_1 : _d;
  var naturalTime = time < 0 ? 0 : time;
  var hour = Math.floor(naturalTime / 36e5);
  var min2 = Math.floor(naturalTime % 36e5 / 6e4);
  var sec = Math.floor(naturalTime % 36e5 % 6e4 / 1e3);
  return import_react77.default.createElement(
    "div",
    { className: "sendbird-ui-play-time ".concat(className) },
    import_react77.default.createElement(Label, { type: labelType, color: labelColor }, "".concat(hour ? hour + ":" : "").concat(min2 < 10 ? "0" : "").concat(min2 ? min2 : "0", ":").concat(sec < 10 ? "0" : "").concat(sec))
  );
};

// node_modules/@sendbird/uikit-react/ui/VoiceMessageItemBody.js
var import_react_dom18 = __toESM(require_react_dom(), 1);
var VoiceMessageItemBody = function(_a3) {
  var _b2;
  var className = _a3.className, message = _a3.message, channelUrl = _a3.channelUrl, _c = _a3.isByMe, isByMe = _c === void 0 ? false : _c, _d = _a3.isReactionEnabled, isReactionEnabled = _d === void 0 ? false : _d;
  var _e3 = (0, import_react78.useState)(false), usingReaction = _e3[0], setUsingReaction = _e3[1];
  var _f = useVoicePlayer({
    channelUrl,
    key: "".concat(message === null || message === void 0 ? void 0 : message.messageId),
    audioFileUrl: message === null || message === void 0 ? void 0 : message.url,
    audioFileMimeType: message === null || message === void 0 ? void 0 : message.type
  }), play = _f.play, pause = _f.pause, _g2 = _f.playbackTime, playbackTime = _g2 === void 0 ? 0 : _g2, duration = _f.duration, _h = _f.playingStatus, playingStatus = _h === void 0 ? VOICE_PLAYER_STATUS.IDLE : _h;
  (0, import_react78.useEffect)(function() {
    var _a4;
    if (isReactionEnabled && ((_a4 = message === null || message === void 0 ? void 0 : message.reactions) === null || _a4 === void 0 ? void 0 : _a4.length) > 0) {
      setUsingReaction(true);
    } else {
      setUsingReaction(false);
    }
  }, [isReactionEnabled, (_b2 = message === null || message === void 0 ? void 0 : message.reactions) === null || _b2 === void 0 ? void 0 : _b2.length]);
  var progressBarMaxSize = (0, import_react78.useMemo)(function() {
    var _a4;
    var DEFAULT_MAX_SIZE = 1;
    if (message === null || message === void 0 ? void 0 : message.metaArrays) {
      var duration_1 = (_a4 = message === null || message === void 0 ? void 0 : message.metaArrays.find(function(metaArray) {
        return metaArray.key === "KEY_VOICE_MESSAGE_DURATION";
      })) === null || _a4 === void 0 ? void 0 : _a4.value[0];
      return duration_1 ? parseInt(duration_1) : DEFAULT_MAX_SIZE;
    }
    return DEFAULT_MAX_SIZE;
  }, [message === null || message === void 0 ? void 0 : message.metaArrays]);
  return import_react78.default.createElement(
    "div",
    { className: classnames("sendbird-voice-message-item-body", className, usingReaction && "is-reactions-contained") },
    import_react78.default.createElement(ProgressBar, { className: "sendbird-voice-message-item-body__progress-bar", maxSize: duration || progressBarMaxSize, currentSize: playbackTime, colorType: isByMe ? ProgressBarColorTypes.PRIMARY : ProgressBarColorTypes.GRAY }),
    import_react78.default.createElement(
      "div",
      { className: "sendbird-voice-message-item-body__status-button" },
      (playingStatus === VOICE_PLAYER_STATUS.IDLE || playingStatus === VOICE_PLAYER_STATUS.PAUSED) && import_react78.default.createElement(
        "div",
        { className: "sendbird-voice-message-item-body__status-button__button", onClick: play },
        import_react78.default.createElement(Icon, { width: "18px", height: "18px", type: IconTypes.PLAY, fillColor: IconColors.PRIMARY })
      ),
      playingStatus === VOICE_PLAYER_STATUS.PREPARING && import_react78.default.createElement(
        Loader,
        { width: "22.2px", height: "22.2px" },
        import_react78.default.createElement(Icon, { width: "22.2px", height: "22.2px", type: IconTypes.SPINNER, fillColor: IconColors.PRIMARY_2 })
      ),
      playingStatus === VOICE_PLAYER_STATUS.PLAYING && import_react78.default.createElement(
        "div",
        { className: "sendbird-voice-message-item-body__status-button__button", onClick: function() {
          pause();
        } },
        import_react78.default.createElement(
          "div",
          { className: "sendbird-voice-message-item-body__status-button__button__pause" },
          import_react78.default.createElement("div", { className: "sendbird-voice-message-item-body__status-button__button__pause__inner" }),
          import_react78.default.createElement("div", { className: "sendbird-voice-message-item-body__status-button__button__pause__inner" })
        )
      )
    ),
    import_react78.default.createElement(PlaybackTime, { className: "sendbird-voice-message-item-body__playback-time", time: progressBarMaxSize - playbackTime, labelType: LabelTypography.BODY_1, labelColor: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1 })
  );
};

// node_modules/@sendbird/uikit-react/ui/ThumbnailMessageItemBody.js
var import_react79 = __toESM(require_react(), 1);
function ThumbnailMessageItemBody(_a3) {
  var _b2, _c;
  var _d = _a3.className, className = _d === void 0 ? "" : _d, message = _a3.message, _e3 = _a3.isByMe, isByMe = _e3 === void 0 ? false : _e3, _f = _a3.mouseHover, mouseHover = _f === void 0 ? false : _f, _g2 = _a3.isReactionEnabled, isReactionEnabled = _g2 === void 0 ? false : _g2, _h = _a3.showFileViewer, showFileViewer = _h === void 0 ? noop : _h, _j = _a3.style, style = _j === void 0 ? {} : _j;
  var thumbnailUrl = getMessageFirstFileThumbnailUrl(message);
  var _k = (0, import_react79.useState)(false), imageRendered = _k[0], setImageRendered = _k[1];
  var onClickHandler = useLongPress({
    onLongPress: noop,
    onClick: function() {
      if (isSentMessage(message)) {
        showFileViewer === null || showFileViewer === void 0 ? void 0 : showFileViewer(true);
      }
    }
  });
  return import_react79.default.createElement(
    "div",
    __assign({ className: getClassName([
      className,
      "sendbird-thumbnail-message-item-body",
      isByMe ? "outgoing" : "incoming",
      mouseHover ? "mouse-hover" : "",
      isReactionEnabled && ((_c = (_b2 = message.reactions) === null || _b2 === void 0 ? void 0 : _b2.length) !== null && _c !== void 0 ? _c : 0) > 0 ? "reactions" : ""
    ]) }, onClickHandler),
    import_react79.default.createElement(ImageRenderer, { className: "sendbird-thumbnail-message-item-body__thumbnail", url: thumbnailUrl || getMessageFirstFileUrl(message), alt: getMessageFirstFileType(message), width: (style === null || style === void 0 ? void 0 : style.width) || "360px", height: (style === null || style === void 0 ? void 0 : style.height) || "270px", onLoad: function() {
      setImageRendered(true);
    }, placeHolder: function(_a4) {
      var style2 = _a4.style;
      return import_react79.default.createElement("div", { className: "sendbird-thumbnail-message-item-body__placeholder", style: style2 });
    } }),
    isVideoMessage(message) && !thumbnailUrl && !imageRendered && import_react79.default.createElement(
      "video",
      { className: "sendbird-thumbnail-message-item-body__video" },
      import_react79.default.createElement("source", { src: getMessageFirstFileUrl(message), type: getMessageFirstFileType(message) })
    ),
    import_react79.default.createElement("div", { className: "sendbird-thumbnail-message-item-body__image-cover" }),
    (isVideoMessage(message) || isGifMessage(message)) && import_react79.default.createElement(
      "div",
      { className: "sendbird-thumbnail-message-item-body__icon-wrapper" },
      import_react79.default.createElement(
        "div",
        { className: "sendbird-thumbnail-message-item-body__icon-wrapper__icon" },
        import_react79.default.createElement(Icon, { type: isVideoMessage(message) ? IconTypes.PLAY : IconTypes.GIF, fillColor: IconColors.THUMBNAIL_ICON, width: "34px", height: "34px" })
      )
    )
  );
}

// node_modules/@sendbird/uikit-react/ui/UnknownMessageItemBody.js
var import_react80 = __toESM(require_react(), 1);
function UnknownMessageItemBody(_a3) {
  var _b2;
  var className = _a3.className, message = _a3.message, _c = _a3.isByMe, isByMe = _c === void 0 ? false : _c, _d = _a3.mouseHover, mouseHover = _d === void 0 ? false : _d, _e3 = _a3.isReactionEnabled, isReactionEnabled = _e3 === void 0 ? false : _e3;
  var stringSet2 = (0, import_react80.useContext)(LocalizationContext).stringSet;
  return import_react80.default.createElement(
    "div",
    { className: getClassName([
      className !== null && className !== void 0 ? className : "",
      "sendbird-unknown-message-item-body",
      isByMe ? "outgoing" : "incoming",
      mouseHover ? "mouse-hover" : "",
      isReactionEnabled && ((_b2 = message === null || message === void 0 ? void 0 : message.reactions) === null || _b2 === void 0 ? void 0 : _b2.length) > 0 ? "reactions" : ""
    ]) },
    import_react80.default.createElement(Label, { className: "sendbird-unknown-message-item-body__header", type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1 }, stringSet2.UNKNOWN__UNKNOWN_MESSAGE_TYPE),
    import_react80.default.createElement(Label, { className: "sendbird-unknown-message-item-body__description", type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2 }, stringSet2.UNKNOWN__CANNOT_READ_MESSAGE)
  );
}

// node_modules/@sendbird/uikit-react/ui/TemplateMessageItemBody.js
var import_react84 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-KNrNIKZQ.js
var import_react81 = __toESM(require_react(), 1);
var ComponentType;
(function(ComponentType2) {
  ComponentType2["Box"] = "box";
  ComponentType2["Text"] = "text";
  ComponentType2["Image"] = "image";
  ComponentType2["TextButton"] = "textButton";
  ComponentType2["ImageButton"] = "imageButton";
  ComponentType2["Carousel"] = "carouselView";
})(ComponentType || (ComponentType = {}));
var outSingle$1 = (key, obj) => {
  if (typeof obj[key] !== "string")
    return {};
  return { [key]: argbToRgba(obj[key]) };
};
function argbToRgba(string) {
  if (!string.startsWith("#")) {
    return string;
  }
  if (string.length === 9) {
    return `#${string.slice(3)}${string[1]}${string[2]}`;
  }
  if (string.length === 5) {
    return `#${string.slice(2)}${string[1]}`;
  }
  return string;
}
var outViewStyle$1 = (viewStyle) => {
  if (!viewStyle)
    return {};
  return {
    viewStyle: Object.assign(Object.assign(Object.assign({}, viewStyle), outSingle$1("backgroundColor", viewStyle)), outSingle$1("borderColor", viewStyle))
  };
};
var outTextStyle$1 = (textStyle) => {
  if (!textStyle)
    return {};
  return {
    textStyle: Object.assign(Object.assign({}, textStyle), outSingle$1("color", textStyle))
  };
};
var outImageStyle = (imageStyle) => {
  if (!imageStyle)
    return {};
  return {
    imageStyle: Object.assign(Object.assign({}, imageStyle), outSingle$1("tintColor", imageStyle))
  };
};
var colorTransform = {
  run(prop) {
    if (prop.type === ComponentType.Text || prop.type === ComponentType.TextButton) {
      return Object.assign(Object.assign(Object.assign({}, prop), outViewStyle$1(prop.viewStyle)), outTextStyle$1(prop.textStyle));
    }
    if (prop.type === ComponentType.ImageButton || prop.type === ComponentType.Image) {
      return Object.assign(Object.assign(Object.assign({}, prop), outViewStyle$1(prop.viewStyle)), outImageStyle(prop.imageStyle));
    }
    return Object.assign(Object.assign({}, prop), outViewStyle$1(prop.viewStyle));
  }
};
var isNumber = (val) => {
  if (typeof val === "string") {
    return !Number.isNaN(Number(val));
  }
  return typeof val === "number" && !Number.isNaN(val);
};
var outSingle = (key, obj) => {
  if (obj[key] === void 0 || obj[key] === null)
    return {};
  return isNumber(obj[key]) ? { [key]: Number(obj[key]) } : {};
};
var outSpacing = (key, spacing) => {
  if (!spacing)
    return {};
  return {
    [key]: {
      left: isNumber(spacing.left) ? Number(spacing.left) : spacing.left,
      right: isNumber(spacing.right) ? Number(spacing.right) : spacing.right,
      top: isNumber(spacing.top) ? Number(spacing.top) : spacing.top,
      bottom: isNumber(spacing.bottom) ? Number(spacing.bottom) : spacing.bottom
    }
  };
};
var outSize = (key, size) => {
  if (!size)
    return {};
  return {
    [key]: {
      type: size.type,
      value: isNumber(size.value) ? Number(size.value) : size.value
    }
  };
};
var outMetadata = (metaData) => {
  if (!metaData)
    return {};
  return {
    metaData: {
      pixelWidth: isNumber(metaData.pixelWidth) ? Number(metaData.pixelWidth) : metaData.pixelWidth,
      pixelHeight: isNumber(metaData.pixelHeight) ? Number(metaData.pixelHeight) : metaData.pixelHeight
    }
  };
};
var outViewStyle = (viewStyle) => {
  if (!viewStyle)
    return {};
  return {
    viewStyle: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, viewStyle), outSingle("borderWidth", viewStyle)), outSingle("radius", viewStyle)), outSpacing("margin", viewStyle.margin)), outSpacing("padding", viewStyle.padding))
  };
};
var outTextStyle = (textStyle) => {
  if (!textStyle)
    return {};
  return {
    textStyle: Object.assign(Object.assign(Object.assign({}, textStyle), outSingle("size", textStyle)), outSingle("weight", textStyle))
  };
};
var outCarouselStyle = (carouselstyle) => {
  if (!carouselstyle)
    return {};
  return {
    carouselStyle: Object.assign(Object.assign({}, carouselstyle), outSingle("spacing", carouselstyle))
  };
};
var outViewProps = (view) => {
  return Object.assign(Object.assign(Object.assign({}, outSize("width", view.width)), outSize("height", view.height)), outViewStyle(view.viewStyle));
};
var outTextProps = (text2) => {
  return Object.assign(Object.assign(Object.assign({}, outViewProps(text2)), outTextStyle(text2.textStyle)), outSingle("maxTextLines", text2));
};
var outImageProps = (image) => {
  return Object.assign(Object.assign({}, outViewProps(image)), outMetadata(image.metaData));
};
var outCarouselProps = (carousel) => {
  return Object.assign(Object.assign(Object.assign({}, outViewProps(carousel)), outCarouselStyle(carousel.carouselStyle)), {
    // Convert only top-level items to find has fill width values.
    items: carousel.items.map((item) => Object.assign(Object.assign({}, item), { body: Object.assign(Object.assign({}, item.body), { items: item.body.items.map((it3) => numberTransform.run(it3)) }) }))
  });
};
var numberTransform = {
  run(prop) {
    if (prop.type === ComponentType.Text || prop.type === ComponentType.TextButton) {
      return Object.assign(Object.assign({}, prop), outTextProps(prop));
    }
    if (prop.type === ComponentType.ImageButton || prop.type === ComponentType.Image) {
      return Object.assign(Object.assign({}, prop), outImageProps(prop));
    }
    if (prop.type === ComponentType.Carousel) {
      return Object.assign(Object.assign({}, prop), outCarouselProps(prop));
    }
    return Object.assign(Object.assign({}, prop), outViewProps(prop));
  }
};
var MAPPER = () => void 0;
var createParser = (params) => {
  var _a3;
  const defaultMapper = (params === null || params === void 0 ? void 0 : params.defaultMapper) || MAPPER;
  const mapper = {
    defaultMapper,
    mapBoxProps: (params === null || params === void 0 ? void 0 : params.mapBoxProps) || defaultMapper,
    mapTextProps: (params === null || params === void 0 ? void 0 : params.mapTextProps) || defaultMapper,
    mapImageProps: (params === null || params === void 0 ? void 0 : params.mapImageProps) || defaultMapper,
    mapTextButtonProps: (params === null || params === void 0 ? void 0 : params.mapTextButtonProps) || defaultMapper,
    mapImageButtonProps: (params === null || params === void 0 ? void 0 : params.mapImageButtonProps) || defaultMapper,
    mapCarouselProps: (params === null || params === void 0 ? void 0 : params.mapCarouselProps) || defaultMapper
  };
  const transforms = [colorTransform, numberTransform, ...(_a3 = params === null || params === void 0 ? void 0 : params.transforms) !== null && _a3 !== void 0 ? _a3 : []];
  const transformDirty = /* @__PURE__ */ new Set();
  return {
    setTransforms(newTransforms) {
      transforms.length = 0;
      transforms.push(...newTransforms);
      transformDirty.clear();
    },
    addTransforms(newTransforms) {
      transforms.push(...newTransforms);
    },
    parse(rawItem, options) {
      const item = transforms.reduce((it3, transform) => transform.run(it3), rawItem);
      switch (item.type) {
        case ComponentType.Box: {
          return { transformed: item, properties: mapper.mapBoxProps(item, options) };
        }
        case ComponentType.Text: {
          return { transformed: item, properties: mapper.mapTextProps(item, options) };
        }
        case ComponentType.Image: {
          return { transformed: item, properties: mapper.mapImageProps(item, options) };
        }
        case ComponentType.TextButton: {
          return { transformed: item, properties: mapper.mapTextButtonProps(item, options) };
        }
        case ComponentType.ImageButton: {
          return { transformed: item, properties: mapper.mapImageButtonProps(item, options) };
        }
        case ComponentType.Carousel: {
          return { transformed: item, properties: mapper.mapCarouselProps(item, options) };
        }
        default:
          return { transformed: item, properties: void 0 };
      }
    }
  };
};
var FRAGMENT = ({ children }) => import_react81.default.createElement(import_react81.default.Fragment, null, children);
function createRenderer(params) {
  var _a3, _b2, _c, _d, _e3, _f;
  return {
    box: ((_a3 = params === null || params === void 0 ? void 0 : params.views) === null || _a3 === void 0 ? void 0 : _a3.box) || FRAGMENT,
    text: ((_b2 = params === null || params === void 0 ? void 0 : params.views) === null || _b2 === void 0 ? void 0 : _b2.text) || FRAGMENT,
    image: ((_c = params === null || params === void 0 ? void 0 : params.views) === null || _c === void 0 ? void 0 : _c.image) || FRAGMENT,
    imageButton: ((_d = params === null || params === void 0 ? void 0 : params.views) === null || _d === void 0 ? void 0 : _d.imageButton) || FRAGMENT,
    textButton: ((_e3 = params === null || params === void 0 ? void 0 : params.views) === null || _e3 === void 0 ? void 0 : _e3.textButton) || FRAGMENT,
    carouselView: ((_f = params === null || params === void 0 ? void 0 : params.views) === null || _f === void 0 ? void 0 : _f.carouselView) || FRAGMENT
  };
}
var __rest$5 = function(s6, e4) {
  var t7 = {};
  for (var p4 in s6) if (Object.prototype.hasOwnProperty.call(s6, p4) && e4.indexOf(p4) < 0)
    t7[p4] = s6[p4];
  if (s6 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i4 = 0, p4 = Object.getOwnPropertySymbols(s6); i4 < p4.length; i4++) {
      if (e4.indexOf(p4[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s6, p4[i4]))
        t7[p4[i4]] = s6[p4[i4]];
    }
  return t7;
};
var SizeContext = (0, import_react81.createContext)({
  sizes: {},
  updateSize: () => {
  }
});
var SizeContextProvider = ({ children }) => {
  const [sizes, setSizes] = (0, import_react81.useState)({});
  const updateSize = (0, import_react81.useCallback)((_a3) => {
    var { id: id2 } = _a3, rest = __rest$5(_a3, ["id"]);
    if (id2) {
      setSizes((prevSizes) => Object.assign(Object.assign({}, prevSizes), { [id2]: rest }));
    }
  }, []);
  return import_react81.default.createElement(SizeContext.Provider, { value: { sizes, updateSize } }, children);
};
var useSizeContext = () => (0, import_react81.useContext)(SizeContext);
var Layout;
(function(Layout2) {
  Layout2["Row"] = "row";
  Layout2["Column"] = "column";
})(Layout || (Layout = {}));
var AlignValue;
(function(AlignValue2) {
  AlignValue2["Center"] = "center";
  AlignValue2["Left"] = "left";
  AlignValue2["Right"] = "right";
  AlignValue2["Top"] = "top";
  AlignValue2["Bottom"] = "bottom";
})(AlignValue || (AlignValue = {}));
var FlexSizeSpecValue;
(function(FlexSizeSpecValue2) {
  FlexSizeSpecValue2[FlexSizeSpecValue2["FillParent"] = 0] = "FillParent";
  FlexSizeSpecValue2[FlexSizeSpecValue2["WrapContent"] = 1] = "WrapContent";
})(FlexSizeSpecValue || (FlexSizeSpecValue = {}));
var FontWeight;
(function(FontWeight2) {
  FontWeight2["Normal"] = "normal";
  FontWeight2["Bold"] = "bold";
})(FontWeight || (FontWeight = {}));
var MediaContentMode;
(function(MediaContentMode2) {
  MediaContentMode2["AspectFit"] = "aspectFit";
  MediaContentMode2["AspectFill"] = "aspectFill";
  MediaContentMode2["ScalesToFill"] = "scalesToFill";
})(MediaContentMode || (MediaContentMode = {}));
var SUPPORTED_TEMPLATE_VERSIONS = [
  1,
  2
  // Composite templates: Carousel
];
var alignInFlex = (align) => {
  switch (align) {
    case AlignValue.Right:
    case AlignValue.Bottom:
      return "flex-end";
    case AlignValue.Center:
      return "center";
    case AlignValue.Left:
    case AlignValue.Top:
    default:
      return "flex-start";
  }
};
var isTemplateVersionSupported = (templateVersion) => {
  if (!templateVersion)
    return true;
  return SUPPORTED_TEMPLATE_VERSIONS.includes(Number(templateVersion));
};
var memoize = (fn4) => {
  const cache = /* @__PURE__ */ new Map();
  const cached = function(val) {
    return cache.has(val) ? cache.get(val) : cache.set(val, fn4.call(this, val)) && cache.get(val);
  };
  cached.cache = cache;
  return cached;
};
var setTemplateItemId = memoize((data) => {
  const addIdRecursively = (item, id2) => {
    if ("items" in item && (item === null || item === void 0 ? void 0 : item.items) != null) {
      item.items.forEach((subItem, subIdx) => {
        const subId = `${id2}-${subIdx}`;
        subItem.id = subId;
        addIdRecursively(subItem, subId);
      });
    }
  };
  data.forEach((item, idx) => {
    const id2 = `${idx}`;
    item.id = id2;
    addIdRecursively(item, id2);
  });
  return data;
});
var defaultProperties = {
  rootLayout: Layout.Column,
  view: {
    size: {
      width: { type: "flex", value: FlexSizeSpecValue.FillParent },
      height: { type: "flex", value: FlexSizeSpecValue.WrapContent }
    }
  },
  box: {
    layout: Layout.Row,
    align: { vertical: AlignValue.Top, horizontal: AlignValue.Left }
  },
  textButton: {
    maxTextLines: 1
  },
  carousel: {
    style: {
      spacing: 10,
      maxChildWidth: 240
    }
  }
};
var createMessageTemplate = (opts) => {
  const Container = opts.Container || import_react81.default.Fragment;
  const UnknownMessage = opts.UnknownMessage || (() => null);
  const parser2 = opts.parser || createParser();
  const renderer2 = opts.renderer || createRenderer();
  const MessageTemplateBase = ({ templateItems, templateVersion, parentLayout = defaultProperties.box.layout, depth = 0 }) => {
    if (!isTemplateVersionSupported(templateVersion)) {
      throw new Error(`Cannot parse template item due to unsupported template version: ${templateVersion}, ${SUPPORTED_TEMPLATE_VERSIONS}`);
    }
    return import_react81.default.createElement(import_react81.default.Fragment, null, templateItems.map((rawItem, index, siblings) => {
      const result = parser2.parse(rawItem, { parentLayout, depth, elemIdx: index, siblings });
      const item = result.transformed;
      const rendererProps = {
        key: index,
        siblings,
        parentLayout,
        parsedProperties: result.properties
      };
      switch (item.type) {
        case ComponentType.Carousel: {
          if (!Array.isArray(item.items) || item.items.length === 0) {
            throw new Error("Cannot parse template item as Carousel if carousel has no items.");
          }
          return import_react81.default.createElement(renderer2.carouselView, Object.assign({}, item, rendererProps), item.items.map((template, index2) => import_react81.default.createElement(MessageTemplateBase, { key: index2, templateItems: template.body.items || [], depth: depth + 1, templateVersion: template.version })));
        }
        case ComponentType.Box: {
          return import_react81.default.createElement(
            renderer2.box,
            Object.assign({}, item, rendererProps),
            import_react81.default.createElement(MessageTemplateBase, { templateItems: item.items || [], parentLayout: item.layout, depth: depth + 1, templateVersion })
          );
        }
        case ComponentType.Text: {
          return import_react81.default.createElement(renderer2.text, Object.assign({}, item, rendererProps));
        }
        case ComponentType.Image: {
          return import_react81.default.createElement(renderer2.image, Object.assign({}, item, rendererProps));
        }
        case ComponentType.TextButton: {
          return import_react81.default.createElement(renderer2.textButton, Object.assign({}, item, rendererProps));
        }
        case ComponentType.ImageButton: {
          return import_react81.default.createElement(renderer2.imageButton, Object.assign({}, item, rendererProps));
        }
        default: {
          return import_react81.default.createElement(UnknownMessage, { item });
        }
      }
    }));
  };
  return {
    MessageTemplate: ({ templateVersion, templateItems, parentLayout = defaultProperties.rootLayout }) => {
      const items = setTemplateItemId(templateItems);
      return import_react81.default.createElement(
        SizeContextProvider,
        null,
        import_react81.default.createElement(
          Container,
          null,
          import_react81.default.createElement(MessageTemplateBase, { isRoot: true, parentLayout, templateItems: items, templateVersion })
        )
      );
    },
    MessageTemplateBase
  };
};
var ActionType;
(function(ActionType2) {
  ActionType2["Web"] = "web";
  ActionType2["Custom"] = "custom";
  ActionType2["UIKit"] = "uikit";
})(ActionType || (ActionType = {}));
({
  version: 1,
  body: {
    items: [
      {
        type: ComponentType.Image,
        action: { type: ActionType.Web, data: "https://docs.sendbird.com" },
        height: { type: "fixed", value: 236 },
        viewStyle: {
          padding: {
            left: 4,
            right: 4,
            top: 4,
            bottom: 4
          }
        },
        imageUrl: "https://cdn.pixabay.com/photo/2022/10/12/10/45/bird-7516219_1280.jpg",
        imageStyle: { contentMode: MediaContentMode.AspectFill }
      },
      {
        type: ComponentType.Box,
        layout: Layout.Column,
        width: { type: "flex", value: FlexSizeSpecValue.FillParent },
        height: { type: "fixed", value: 200 },
        items: [
          {
            type: ComponentType.Box,
            width: { type: "flex", value: FlexSizeSpecValue.FillParent },
            height: { type: "flex", value: FlexSizeSpecValue.FillParent },
            viewStyle: { backgroundColor: "#fa6464" }
          },
          {
            type: ComponentType.Box,
            layout: Layout.Column,
            width: { type: "flex", value: FlexSizeSpecValue.FillParent },
            height: { type: "flex", value: FlexSizeSpecValue.WrapContent },
            viewStyle: { backgroundColor: "#ffaf5c" },
            items: [
              {
                type: ComponentType.Text,
                text: "Message",
                align: { horizontal: AlignValue.Center, vertical: AlignValue.Center },
                width: { type: "flex", value: FlexSizeSpecValue.FillParent },
                height: { type: "fixed", value: 50 }
              },
              {
                type: ComponentType.Image,
                action: { type: ActionType.Web, data: "https://docs.sendbird.com" },
                width: { type: "flex", value: FlexSizeSpecValue.FillParent },
                height: { type: "fixed", value: 50 },
                imageUrl: "https://cdn.pixabay.com/photo/2022/10/12/10/45/bird-7516219_1280.jpg",
                imageStyle: { contentMode: MediaContentMode.AspectFill }
              }
            ]
          },
          {
            type: ComponentType.Box,
            width: { type: "flex", value: FlexSizeSpecValue.FillParent },
            height: { type: "fixed", value: 20 },
            viewStyle: { backgroundColor: "#ffe450" }
          },
          {
            type: ComponentType.Box,
            width: { type: "flex", value: FlexSizeSpecValue.FillParent },
            height: { type: "flex", value: FlexSizeSpecValue.FillParent },
            viewStyle: { backgroundColor: "#329a1b" }
          }
        ]
      },
      {
        type: ComponentType.Box,
        viewStyle: { padding: { top: 12, bottom: 12, left: 12, right: 12 } },
        layout: Layout.Column,
        items: [
          {
            type: ComponentType.Box,
            align: { horizontal: AlignValue.Left, vertical: AlignValue.Center },
            layout: Layout.Row,
            viewStyle: {
              borderWidth: 1,
              borderColor: "#72723f"
            },
            width: { type: "flex", value: FlexSizeSpecValue.FillParent },
            height: { type: "fixed", value: 150 },
            items: [
              {
                type: ComponentType.Text,
                width: { type: "flex", value: FlexSizeSpecValue.FillParent },
                height: { type: "fixed", value: 50 },
                text: "Sample1 text",
                maxTextLines: 1,
                align: { vertical: AlignValue.Center, horizontal: AlignValue.Left },
                viewStyle: {
                  backgroundColor: "#cc4400"
                },
                textStyle: {
                  size: 16,
                  color: "#f8f8f8",
                  weight: FontWeight.Bold
                }
              },
              {
                type: ComponentType.ImageButton,
                action: { type: ActionType.UIKit, data: "uikit://delete" },
                width: { type: "fixed", value: 20 },
                height: { type: "fixed", value: 20 },
                imageUrl: "https://file-ap-1.sendbird.com/5b5379aa73fd460da22ffaf9a61d0d7f.png",
                imageStyle: { contentMode: MediaContentMode.AspectFit }
              }
            ]
          },
          {
            type: ComponentType.Text,
            viewStyle: { padding: { top: 6, bottom: 12, left: 0, right: 0 } },
            text: "Esse eu esse duis ipsum et dolor eu ut sit amet consectetur cillum velit officia. Ex adipisicing elit quis ea sit. Occaecat in eu aliqua nulla magna id ut excepteur minim.",
            maxTextLines: 2,
            textStyle: { size: 14, color: "#e10000" },
            width: { type: "fixed", value: 200 },
            height: { type: "fixed", value: 50 }
          },
          {
            type: ComponentType.TextButton,
            action: { type: ActionType.Web, data: "https://www.daum.net" },
            text: "Button 3",
            textStyle: { size: 14, color: "#742ddd", weight: FontWeight.Bold }
          }
        ]
      }
    ]
  }
});
({
  "version": 1,
  "body": {
    "items": [
      {
        "type": ComponentType.Image,
        "action": { "type": ActionType.Web, "data": "https://www.naver.com/" },
        "height": { "type": "fixed", "value": 136 },
        "imageUrl": "https://cdn.pixabay.com/photo/2022/10/12/10/45/bird-7516219_1280.jpg",
        "imageStyle": { "contentMode": MediaContentMode.AspectFill }
      },
      {
        "type": ComponentType.Box,
        "viewStyle": { "padding": { "top": 12, "bottom": 12, "left": 12, "right": 12 }, backgroundColor: "#cccccc" },
        "layout": Layout.Column,
        width: { type: "flex", value: FlexSizeSpecValue.FillParent },
        "items": [
          {
            "type": ComponentType.Box,
            width: { type: "flex", value: FlexSizeSpecValue.FillParent },
            "layout": Layout.Row,
            "items": [
              {
                "type": ComponentType.TextButton,
                "action": { "type": ActionType.Web, "data": "https://www.daum.net" },
                width: { type: "fixed", value: 150 },
                "viewStyle": { "margin": { "top": 0, "bottom": 0, "left": 0, "right": 4 } },
                "text": "Button 2",
                "textStyle": { "size": 14, "weight": FontWeight.Bold }
              },
              {
                "type": ComponentType.TextButton,
                "action": { "type": ActionType.Web, "data": "https://www.daum.net" },
                width: { type: "flex", value: FlexSizeSpecValue.FillParent },
                "viewStyle": { "margin": { "top": 0, "bottom": 0, "left": 4, "right": 0 } },
                "text": "Button 3",
                "textStyle": { "size": 14, "weight": FontWeight.Bold }
              }
            ]
          },
          {
            "type": ComponentType.Box,
            width: { type: "flex", value: FlexSizeSpecValue.FillParent },
            "layout": Layout.Row,
            "items": [
              {
                "type": ComponentType.Text,
                "text": "Sample2 text",
                "width": { "type": "flex", "value": FlexSizeSpecValue.FillParent },
                "maxTextLines": 1,
                "textStyle": { "size": 16, "weight": FontWeight.Bold }
              },
              {
                "type": ComponentType.ImageButton,
                "action": { "type": ActionType.UIKit, "data": "uikit://delete" },
                "width": { "type": "fixed", "value": 20 },
                "height": { "type": "fixed", "value": 20 },
                "imageUrl": "https://file-ap-1.sendbird.com/5b5379aa73fd460da22ffaf9a61d0d7f.png",
                "imageStyle": { "contentMode": MediaContentMode.AspectFit }
              }
            ]
          },
          {
            "type": ComponentType.Text,
            "viewStyle": { "padding": { "top": 6, "bottom": 12, "left": 0, "right": 0 } },
            "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aui",
            "textStyle": { "size": 14 }
          }
        ]
      }
    ]
  }
});
({
  "version": 1,
  "body": {
    "items": [
      {
        "type": ComponentType.Box,
        "viewStyle": { "backgroundColor": "#ffffff", "borderWidth": 1, "borderColor": "#eeeeee", "radius": 16 },
        "layout": Layout.Column,
        "items": [
          {
            "type": ComponentType.Image,
            "height": { "type": "fixed", "value": 200 },
            "imageUrl": "https://img.freepik.com/free-vector/cartoon-happy-hours-background_52683-81243.jpg?w=2000&t=st=1666689198~exp=1666689798~hmac=23109d44ba03deee7aee069cbeebfcb48fa27f85e53c1cafc5d5d7345f1a2041",
            "imageStyle": { "contentMode": MediaContentMode.AspectFill }
          },
          {
            "type": ComponentType.Box,
            "viewStyle": { "padding": { "top": 15, "bottom": 15, "left": 15, "right": 15 } },
            "layout": Layout.Column,
            "items": [
              {
                "type": ComponentType.Text,
                "text": "Don't miss these deals today",
                "maxTextLines": 1,
                "textStyle": { "size": 20, "color": "#e10000", "weight": FontWeight.Bold }
              },
              {
                "type": ComponentType.Text,
                "viewStyle": { "margin": { "top": 5, "bottom": 0, "left": 0, "right": 0 } },
                "text": "Pay with Maya and get cashback!",
                "maxTextLines": 1,
                "textStyle": { "size": 14, "color": "#e10000" }
              },
              {
                "type": ComponentType.Box,
                "align": { "horizontal": AlignValue.Left, "vertical": AlignValue.Center },
                "viewStyle": { "margin": { "top": 10, "bottom": 0, "left": 0, "right": 0 } },
                "layout": Layout.Row,
                "items": [
                  {
                    "type": ComponentType.Image,
                    "width": { "type": "fixed", "value": 50 },
                    "height": { "type": "fixed", "value": 50 },
                    "viewStyle": {
                      "backgroundColor": "#ffffff",
                      "borderWidth": 1,
                      "borderColor": "#eeeeee",
                      "radius": 25
                    },
                    "imageUrl": "https://yt3.ggpht.com/ytc/AMLnZu8Kg89ymE7qt5bsS9vMqi9h2aHiN6m9ID-IgxR6-Q=s900-c-k-c0x00ffffff-no-rj",
                    "imageStyle": { "contentMode": MediaContentMode.AspectFill }
                  },
                  {
                    "type": ComponentType.Box,
                    "align": { "horizontal": AlignValue.Left, "vertical": AlignValue.Center },
                    "viewStyle": { "margin": { "top": 0, "bottom": 0, "left": 15, "right": 0 } },
                    "layout": Layout.Column,
                    "items": [
                      {
                        "type": ComponentType.Text,
                        "text": "Meralco",
                        "maxTextLines": 1,
                        "textStyle": { "size": 16, "color": "#e10000", "weight": FontWeight.Bold }
                      },
                      {
                        "type": ComponentType.Text,
                        "viewStyle": { "margin": { "top": 3, "bottom": 0, "left": 0, "right": 0 } },
                        "text": "30% cashback, P300 min spend",
                        "maxTextLines": 1,
                        "textStyle": { "size": 12, "color": "#610000", "weight": FontWeight.Bold }
                      }
                    ]
                  }
                ]
              },
              {
                "type": ComponentType.Box,
                "align": { "horizontal": AlignValue.Left, "vertical": AlignValue.Center },
                "viewStyle": { "margin": { "top": 10, "bottom": 0, "left": 0, "right": 0 } },
                "layout": Layout.Row,
                "items": [
                  {
                    "type": ComponentType.Image,
                    "width": { "type": "fixed", "value": 50 },
                    "height": { "type": "fixed", "value": 50 },
                    "viewStyle": {
                      "backgroundColor": "#ffffff",
                      "borderWidth": 1,
                      "borderColor": "#eeeeee",
                      "radius": 25
                    },
                    "imageUrl": "https://1000logos.net/wp-content/uploads/2021/12/Globe-Telecom-logo.png",
                    "imageStyle": { "contentMode": MediaContentMode.AspectFill, tintColor: "#a49a9a" }
                  },
                  {
                    "type": ComponentType.Box,
                    "align": { "horizontal": AlignValue.Left, "vertical": AlignValue.Center },
                    "viewStyle": { "margin": { "top": 0, "bottom": 0, "left": 15, "right": 0 } },
                    "layout": Layout.Column,
                    "items": [
                      {
                        "type": ComponentType.Text,
                        "text": "Globe",
                        "maxTextLines": 1,
                        "textStyle": { "size": 16, "color": "#e10000", "weight": FontWeight.Bold }
                      },
                      {
                        "type": ComponentType.Text,
                        "viewStyle": { "margin": { "top": 3, "bottom": 0, "left": 0, "right": 0 } },
                        "text": "30% cashback, P300 min spend",
                        "maxTextLines": 1,
                        "textStyle": { "size": 12, "color": "#610000", "weight": FontWeight.Bold }
                      }
                    ]
                  }
                ]
              },
              {
                "type": ComponentType.Box,
                "align": { "horizontal": AlignValue.Left, "vertical": AlignValue.Center },
                "viewStyle": { "margin": { "top": 10, "bottom": 0, "left": 0, "right": 0 } },
                "layout": Layout.Row,
                "items": [
                  {
                    "type": ComponentType.Image,
                    "width": { "type": "fixed", "value": 50 },
                    "height": { "type": "fixed", "value": 50 },
                    "viewStyle": {
                      "backgroundColor": "#ffffff",
                      "borderWidth": 1,
                      "borderColor": "#eeeeee",
                      "radius": 25
                    },
                    "imageUrl": "https://upload.wikimedia.org/wikipedia/commons/thumb/4/41/Cignal.svg/640px-Cignal.svg.png",
                    "imageStyle": { "contentMode": MediaContentMode.AspectFill }
                  },
                  {
                    "type": ComponentType.Box,
                    "align": { "horizontal": AlignValue.Left, "vertical": AlignValue.Center },
                    "viewStyle": { "margin": { "top": 0, "bottom": 0, "left": 15, "right": 0 } },
                    "layout": Layout.Column,
                    "items": [
                      {
                        "type": ComponentType.Text,
                        "text": "Cignal",
                        "maxTextLines": 1,
                        "textStyle": { "size": 16, "color": "#e10000", "weight": FontWeight.Bold }
                      },
                      {
                        "type": ComponentType.Text,
                        "viewStyle": { "margin": { "top": 3, "bottom": 0, "left": 0, "right": 0 } },
                        "text": "30% cashback, P300 min spend",
                        "maxTextLines": 1,
                        "textStyle": { "size": 12, "color": "#610000", "weight": FontWeight.Bold }
                      }
                    ]
                  }
                ]
              },
              {
                "type": ComponentType.Box,
                "align": { "horizontal": AlignValue.Left, "vertical": AlignValue.Center },
                "viewStyle": { "margin": { "top": 10, "bottom": 0, "left": 0, "right": 0 } },
                "layout": Layout.Row,
                "items": [
                  {
                    "type": ComponentType.TextButton,
                    "action": { "type": ActionType.Web, "data": "https://www.daum.net" },
                    "viewStyle": {
                      "backgroundColor": "#e0e0e0",
                      "radius": 16,
                      "margin": { "top": 0, "bottom": 0, "left": 0, "right": 4 },
                      "padding": { "top": 12, "bottom": 12, "left": 12, "right": 12 }
                    },
                    "text": "Learn more",
                    "textStyle": { "size": 15, "color": "#e10000", "weight": FontWeight.Bold }
                  },
                  {
                    "type": ComponentType.TextButton,
                    "action": { "type": ActionType.Web, "data": "https://www.daum.net" },
                    "viewStyle": {
                      "backgroundColor": "#e10000",
                      "radius": 16,
                      "margin": { "top": 0, "bottom": 0, "left": 4, "right": 0 },
                      "padding": { "top": 12, "bottom": 12, "left": 12, "right": 12 }
                    },
                    "text": "Pay now",
                    "textStyle": { "size": 15, "color": "#ffffff", "weight": FontWeight.Bold }
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
});
({
  "version": 1,
  "body": {
    "items": [
      {
        "type": ComponentType.Box,
        "layout": Layout.Column,
        "items": [
          {
            "type": ComponentType.Image,
            "imageUrl": "https://static.sendbird.com/sample/profiles/profile_40_512px.png",
            "metaData": {
              "pixelWidth": 512,
              "pixelHeight": 512
            },
            "imageStyle": {
              "tintColor": "#44ff1188"
            },
            viewStyle: {
              "padding": {
                "top": 12,
                "right": 12,
                "bottom": 12,
                "left": 12
              }
            }
          },
          {
            "type": ComponentType.Box,
            "viewStyle": {
              "padding": {
                "top": 12,
                "right": 12,
                "bottom": 12,
                "left": 12
              }
            },
            "layout": Layout.Column,
            "items": [
              {
                "type": ComponentType.Box,
                "layout": Layout.Row,
                "items": [
                  {
                    "type": ComponentType.Box,
                    "layout": Layout.Column,
                    "items": [
                      {
                        "type": ComponentType.Text,
                        "text": "hi",
                        "maxTextLines": 3,
                        "viewStyle": {
                          "padding": {
                            "top": 0,
                            "bottom": 6,
                            "left": 0,
                            "right": 0
                          }
                        },
                        "textStyle": {
                          "size": 16,
                          "weight": FontWeight.Bold
                        }
                      },
                      {
                        "type": ComponentType.Text,
                        "text": "bye",
                        "maxTextLines": 10,
                        "textStyle": {
                          "size": 14
                        }
                      }
                    ]
                  },
                  {
                    "type": ComponentType.ImageButton,
                    "action": {
                      "type": ActionType.UIKit,
                      "data": "sendbirduikit://delete"
                    },
                    "width": {
                      "type": "fixed",
                      "value": 20
                    },
                    "height": {
                      "type": "fixed",
                      "value": 20
                    },
                    "metaData": {
                      "pixelWidth": 60,
                      "pixelHeight": 60
                    },
                    "imageUrl": "https://dxstmhyqfqr1o.cloudfront.net/sendbird-message-builder/icon-more.png",
                    "imageStyle": {
                      "tintColor": "#ff8d5a"
                    }
                  }
                ]
              },
              {
                "type": ComponentType.Box,
                "layout": Layout.Column,
                "items": [
                  {
                    "type": ComponentType.Box,
                    "viewStyle": {
                      "margin": {
                        "top": 16,
                        "bottom": 0,
                        "left": 0,
                        "right": 0
                      }
                    },
                    "align": {
                      "horizontal": AlignValue.Left,
                      "vertical": AlignValue.Center
                    },
                    "layout": Layout.Row,
                    "items": [
                      {
                        "type": ComponentType.Image,
                        "imageUrl": "https://ca.slack-edge.com/T0ADCTNEL-ULE240VNV-83fd5776e78e-512",
                        "width": {
                          "type": "fixed",
                          "value": 40
                        },
                        "height": {
                          "type": "fixed",
                          "value": 40
                        },
                        "metaData": {
                          "pixelWidth": 512,
                          "pixelHeight": 512
                        },
                        "viewStyle": {
                          "backgroundColor": "#BDBDBD",
                          "radius": 20
                        },
                        "imageStyle": {
                          "contentMode": MediaContentMode.AspectFill
                        }
                      },
                      {
                        "type": ComponentType.Box,
                        "viewStyle": {
                          "margin": {
                            "top": 0,
                            "bottom": 0,
                            "left": 12,
                            "right": 0
                          }
                        },
                        "layout": Layout.Column,
                        "items": [
                          {
                            "type": ComponentType.Text,
                            "text": "Chongbu",
                            "maxTextLines": 1,
                            "textStyle": {
                              "size": 16,
                              "weight": FontWeight.Bold
                            }
                          },
                          {
                            "type": ComponentType.Text,
                            "viewStyle": {
                              "margin": {
                                "top": 4,
                                "bottom": 0,
                                "left": 0,
                                "right": 0
                              }
                            },
                            "text": " ",
                            "maxTextLines": 1,
                            "textStyle": {
                              "size": 14
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": ComponentType.Box,
                    "viewStyle": {
                      "margin": {
                        "top": 16,
                        "bottom": 0,
                        "left": 0,
                        "right": 0
                      }
                    },
                    "align": {
                      "horizontal": AlignValue.Left,
                      "vertical": AlignValue.Center
                    },
                    "layout": Layout.Row,
                    "items": [
                      {
                        "type": ComponentType.Image,
                        "imageUrl": "https://ca.slack-edge.com/T0ADCTNEL-U02LA25KY8J-d41a3e8c7554-512",
                        "width": {
                          "type": "fixed",
                          "value": 40
                        },
                        "height": {
                          "type": "fixed",
                          "value": 40
                        },
                        "metaData": {
                          "pixelWidth": 512,
                          "pixelHeight": 512
                        },
                        "viewStyle": {
                          "backgroundColor": "#BDBDBD",
                          "radius": 20
                        },
                        "imageStyle": {
                          "contentMode": MediaContentMode.AspectFill
                        }
                      },
                      {
                        "type": ComponentType.Box,
                        "viewStyle": {
                          "margin": {
                            "top": 0,
                            "bottom": 0,
                            "left": 12,
                            "right": 0
                          }
                        },
                        "layout": Layout.Column,
                        "items": [
                          {
                            "type": ComponentType.Text,
                            "text": "Amanda",
                            "maxTextLines": 1,
                            "textStyle": {
                              "size": 16,
                              "weight": FontWeight.Bold
                            }
                          },
                          {
                            "type": ComponentType.Text,
                            "viewStyle": {
                              "margin": {
                                "top": 4,
                                "bottom": 0,
                                "left": 0,
                                "right": 0
                              }
                            },
                            "text": "This is title message",
                            "maxTextLines": 1,
                            "textStyle": {
                              "size": 14
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
});
({
  "version": "1",
  "body": {
    "items": [
      {
        "type": "box",
        "layout": "column",
        height: { type: "fixed", value: 600 },
        "items": [
          {
            "type": "box",
            "layout": "column",
            "viewStyle": { "radius": "8", "padding": { "top": "12", "bottom": "12", "left": "12", "right": "12" } },
            "items": [
              {
                "type": "text",
                "text": "Title text",
                "textStyle": { "color": "#E0000000", "size": "16", "weight": "bold" },
                "maxTextLines": "5",
                "viewStyle": {},
                "action": { "data": "www.naver.com" }
              },
              {
                "type": "text",
                "viewStyle": { "margin": { "top": "8", "right": "0", "bottom": "0", "left": "0" } },
                "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aui",
                "textStyle": { "color": "#E0000000", "size": "14", "weight": "normal" },
                "maxTextLines": "5",
                "action": { "data": "https://www.naver.com" }
              },
              {
                "type": "box",
                "layout": "row",
                "viewStyle": { "margin": { "top": "12", "right": "0", "bottom": "0", "left": "0" } },
                "items": [
                  {
                    "type": "textButton",
                    "viewStyle": {
                      "backgroundColor": "#E0E0E0",
                      "padding": { "top": "10", "bottom": "10", "left": "20", "right": "20" }
                    },
                    "text": "Button 1",
                    "textStyle": { "color": "#742DDD", "size": "14", "weight": "bold" },
                    "maxTextLines": "5",
                    "action": { "data": "www.naver.com" }
                  },
                  {
                    "type": "textButton",
                    "viewStyle": {
                      "backgroundColor": "#E0E0E0",
                      "padding": { "top": "10", "bottom": "10", "left": "20", "right": "20" },
                      "margin": { "left": "8", "right": "0", "top": "0", "bottom": "0" }
                    },
                    "text": "Button 2",
                    "textStyle": { "color": "#742DDD", "size": "14", "weight": "bold" },
                    "maxTextLines": "5",
                    "action": { "data": "https://www.naver.com" }
                  }
                ]
              }
            ],
            "action": { "data": "https://www.naver.com" }
          },
          {
            "type": "image",
            "viewStyle": {},
            "width": { "type": "flex", "value": FlexSizeSpecValue.FillParent },
            "height": { "type": "flex", "value": FlexSizeSpecValue.FillParent },
            "imageStyle": { "contentMode": "aspectFill" },
            "imageUrl": "https://file-preprod.sendbird.com/d03c08bb3f9041a88c1207b6bbf15ab8.png",
            "metaData": { "pixelWidth": "1062", "pixelHeight": "1070" }
          },
          {
            "type": "textButton",
            "viewStyle": {
              "backgroundColor": "#E0E0E0",
              "padding": { "top": "10", "bottom": "10", "left": "20", "right": "20" }
            },
            "width": { "type": "flex", "value": FlexSizeSpecValue.FillParent },
            "height": { "type": "flex", "value": FlexSizeSpecValue.FillParent },
            "text": "Button",
            "textStyle": { "color": "#742DDD", "size": "16", "weight": "normal" },
            "maxTextLines": "5",
            "action": { "data": "www.naver.com" }
          },
          {
            "type": "imageButton",
            "viewStyle": {},
            "width": { "type": "flex", "value": FlexSizeSpecValue.FillParent },
            "height": { "type": "flex", "value": FlexSizeSpecValue.FillParent },
            "imageUrl": "https://file-preprod.sendbird.com/38fdf5c1056f42b89a44b38155cc4b49.jpg",
            "imageStyle": { "contentMode": "aspectFill" },
            "metaData": { "pixelWidth": "1080", "pixelHeight": "2640" },
            "action": { "data": "www.naver.com" }
          }
        ],
        "viewStyle": {}
      }
    ]
  }
});
({
  "version": 1,
  "body": {
    "items": [
      {
        "elementId": "root",
        "type": "box",
        "layout": "column",
        "width": {
          "type": "flex",
          "value": FlexSizeSpecValue.FillParent
        },
        "height": {
          "type": "flex",
          "value": FlexSizeSpecValue.WrapContent
        },
        "items": [
          {
            "type": "text",
            "viewStyle": {
              "backgroundColor": "#a0c0ffff",
              "margin": {
                "top": 16,
                "bottom": 16,
                "left": 16,
                "right": 16
              },
              "padding": {
                "top": 16,
                "bottom": 16,
                "left": 16,
                "right": 16
              }
            },
            "text": "Wrap Wrap Wrap Wrap Wrap Wrap Wrap Wrap Wrap Wrap ",
            "textStyle": {
              "size": 14,
              "color": "#222121e0",
              "weight": "normal"
            },
            "maxTextLines": 5,
            "width": {
              "type": "flex",
              "value": FlexSizeSpecValue.FillParent
            },
            "height": {
              "type": "flex",
              "value": 1
            },
            "align": {
              "horizontal": "left",
              "vertical": "top"
            },
            "elementId": "c0e15878-4984-408d-abaa-4b495c2e3872"
          },
          {
            "type": "imageButton",
            "viewStyle": {
              margin: {
                left: 24,
                right: 12
              }
            },
            "width": { "type": "flex", "value": FlexSizeSpecValue.FillParent },
            "height": { "type": "fixed", "value": 250 },
            "imageUrl": "https://cdn.pixabay.com/photo/2022/10/12/10/45/bird-7516219_1280.jpg",
            "imageStyle": { "contentMode": "aspectFill" },
            "metaData": { "pixelWidth": "1080", "pixelHeight": "2640" },
            "action": { "data": "www.naver.com" }
          }
        ]
      }
    ]
  }
});
var SWIPE_THRESHOLD = 24;
function useCarousel({ spacing, childrenLength, paddingInlineStart, paddingInlineEnd }) {
  const paddingStart = paddingInlineStart;
  const paddingEnd = paddingInlineEnd;
  const carouselRef = (0, import_react81.useRef)(null);
  const childrenRefs = (0, import_react81.useRef)(Array.from({ length: childrenLength }, () => import_react81.default.createRef()));
  const isDragging = (0, import_react81.useRef)(false);
  const isScrolling = (0, import_react81.useRef)(false);
  const animationFrame = (0, import_react81.useRef)(null);
  const drag = (0, import_react81.useRef)({
    sx: null,
    sy: null,
    offset: 0,
    translateX: 0,
    currentIndex: 0
  });
  const [childWidths, setChildWidths] = (0, import_react81.useState)(() => childrenRefs.current.map(() => 0));
  const itemPositions = (0, import_react81.useMemo)(() => {
    let currentPosition = paddingStart;
    return childWidths.map((width, i4) => {
      const start = currentPosition - (i4 > 0 ? spacing : 0);
      const end = start - width;
      currentPosition = end;
      return { start, end };
    });
  }, [childWidths, spacing, paddingStart]);
  const totalContentWidth = (0, import_react81.useMemo)(() => {
    const totalItemWidth = childWidths.reduce((acc, width) => acc + width, 0);
    const totalSpacing = spacing * (childrenLength - 1);
    return totalItemWidth + totalSpacing;
  }, [childWidths, spacing, childrenLength]);
  (0, import_react81.useLayoutEffect)(() => {
    setChildWidths(childrenRefs.current.map((ref) => {
      var _a3, _b2;
      return (_b2 = (_a3 = ref.current) === null || _a3 === void 0 ? void 0 : _a3.clientWidth) !== null && _b2 !== void 0 ? _b2 : 0;
    }));
  }, [childrenLength]);
  (0, import_react81.useLayoutEffect)(() => {
    if (itemPositions.length > 0) {
      drag.current.translateX = itemPositions[0].start;
      animate();
    }
  }, [itemPositions]);
  const dragStart = () => {
    if (!carouselRef.current)
      return;
    isDragging.current = true;
    carouselRef.current.style.cursor = "grabbing";
    carouselRef.current.style.transition = "none";
    animationFrame.current = requestAnimationFrame(animate);
  };
  const dragStop = () => {
    if (!carouselRef.current)
      return;
    isDragging.current = false;
    carouselRef.current.style.cursor = "grab";
    carouselRef.current.style.transition = "transform 0.5s ease";
    if (animationFrame.current) {
      cancelAnimationFrame(animationFrame.current);
      animationFrame.current = null;
    }
  };
  const dragRelease = () => {
    const { offset, currentIndex } = drag.current;
    const thresholdExceeded = Math.abs(offset) >= SWIPE_THRESHOLD;
    const swipeToNext = offset < 0 && currentIndex < childrenLength - 1;
    const swipeToPrev = offset > 0 && currentIndex > 0;
    let newIndex = currentIndex;
    if (thresholdExceeded && swipeToNext) {
      newIndex = currentIndex + 1;
    } else if (thresholdExceeded && swipeToPrev) {
      newIndex = currentIndex - 1;
    }
    function clampTranslateX(translateX) {
      var _a3, _b2;
      const containerWidth = (_b2 = (_a3 = carouselRef.current) === null || _a3 === void 0 ? void 0 : _a3.clientWidth) !== null && _b2 !== void 0 ? _b2 : 0;
      const start = paddingStart;
      const end = Math.min(0, containerWidth - totalContentWidth) - paddingEnd;
      return Math.min(start, Math.max(end, translateX));
    }
    drag.current.currentIndex = newIndex;
    drag.current.translateX = clampTranslateX(itemPositions[newIndex].start);
    drag.current.offset = 0;
  };
  const scrollStart = () => {
    isScrolling.current = true;
  };
  const scrollStop = () => {
    isScrolling.current = false;
  };
  const animate = () => {
    if (carouselRef.current) {
      carouselRef.current.style.transform = `translateX(${drag.current.translateX + drag.current.offset}px)`;
    }
    if (animationFrame.current) {
      animationFrame.current = requestAnimationFrame(animate);
    }
  };
  const blockScroll = () => {
    if (carouselRef.current) {
      carouselRef.current.style.touchAction = "pan-x";
    }
  };
  const unblockScroll = () => {
    if (carouselRef.current) {
      carouselRef.current.style.touchAction = "pan-y";
    }
  };
  const onMouseDown = (event) => {
    dragStart();
    scrollStop();
    drag.current.sx = event.clientX;
    drag.current.sy = event.clientY;
    drag.current.offset = 0;
    animationFrame.current = requestAnimationFrame(animate);
  };
  const onMouseMove = (event) => {
    if (!isDragging.current || drag.current.sx === null)
      return;
    drag.current.offset = event.clientX - drag.current.sx;
  };
  const onMouseUp = () => {
    if (!isDragging.current)
      return;
    scrollStop();
    dragRelease();
    dragStop();
  };
  const onMouseLeave = () => {
    if (!isDragging.current)
      return;
    scrollStop();
    dragRelease();
    dragStop();
  };
  const onTouchStart = (event) => {
    scrollStop();
    dragStop();
    const touch = event.touches[0];
    drag.current.sx = touch.clientX;
    drag.current.sy = touch.clientY;
    drag.current.offset = 0;
    animationFrame.current = requestAnimationFrame(animate);
  };
  const onTouchMove = (event) => {
    if (drag.current.sx === null || drag.current.sy === null || isScrolling.current)
      return;
    const { clientX, clientY } = event.touches[0];
    const { sx, sy } = drag.current;
    if (isDragging.current) {
      drag.current.offset = clientX - sx;
      return;
    }
    const isVerticalScroll = Math.abs(clientY - sy) > Math.abs(clientX - sx);
    if (isVerticalScroll) {
      scrollStart();
    } else {
      drag.current.offset = clientX - sx;
      blockScroll();
      dragStart();
    }
  };
  const onTouchEnd = () => {
    unblockScroll();
    scrollStop();
    dragRelease();
    dragStop();
  };
  return {
    carouselRef,
    childrenRefs,
    handlers: {
      onMouseDown,
      onMouseMove,
      onMouseUp,
      onMouseLeave,
      onTouchStart,
      onTouchMove,
      onTouchEnd
    }
  };
}
var __rest$4 = function(s6, e4) {
  var t7 = {};
  for (var p4 in s6) if (Object.prototype.hasOwnProperty.call(s6, p4) && e4.indexOf(p4) < 0)
    t7[p4] = s6[p4];
  if (s6 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i4 = 0, p4 = Object.getOwnPropertySymbols(s6); i4 < p4.length; i4++) {
      if (e4.indexOf(p4[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s6, p4[i4]))
        t7[p4[i4]] = s6[p4[i4]];
    }
  return t7;
};
var Carousel = ({ children, style, spacing = defaultProperties.carousel.style.spacing, maxChildWidth = defaultProperties.carousel.style.maxChildWidth }) => {
  const _a3 = style !== null && style !== void 0 ? style : {}, { paddingInlineStart = 0, paddingInlineEnd = 0 } = _a3, restStyle = __rest$4(_a3, ["paddingInlineStart", "paddingInlineEnd"]);
  const { carouselRef, childrenRefs, handlers } = useCarousel({
    spacing,
    childrenLength: children.length,
    paddingInlineStart: Number(paddingInlineStart),
    paddingInlineEnd: Number(paddingInlineEnd)
  });
  return import_react81.default.createElement("div", Object.assign({}, handlers, { ref: carouselRef, className: "sb-message-template__carousel", style: Object.assign(Object.assign({}, restStyle), { gap: spacing, width: "100%", overflow: "visible" }) }), children.map((item, index) => import_react81.default.createElement(CarouselChild, { ref: childrenRefs.current[index], key: index, maxChildWidth }, item)));
};
var CarouselChild = import_react81.default.forwardRef(function CarouselChild2({ maxChildWidth, children }, ref) {
  const maxWidth = shouldSetMaxChildWidth(children.props, maxChildWidth) ? maxChildWidth : "fit-content";
  return import_react81.default.createElement("div", { ref, style: { maxWidth, width: "100%", flexShrink: 0, overflow: "hidden", userSelect: "none" } }, children);
});
function shouldSetMaxChildWidth(props, maxChildWidth) {
  return !!props.templateItems.find((it3) => {
    var _a3, _b2, _c, _d;
    const hasFillWidth = ((_a3 = it3.width) === null || _a3 === void 0 ? void 0 : _a3.type) === "flex" && ((_b2 = it3.width) === null || _b2 === void 0 ? void 0 : _b2.value) === FlexSizeSpecValue.FillParent;
    const overMaxChildWidth = ((_c = it3.width) === null || _c === void 0 ? void 0 : _c.type) === "fixed" && ((_d = it3.width) === null || _d === void 0 ? void 0 : _d.value) >= maxChildWidth;
    return hasFillWidth || overMaxChildWidth;
  });
}
function isWrappedText(view) {
  var _a3;
  return view.type === ComponentType.Text && ((_a3 = view.width) === null || _a3 === void 0 ? void 0 : _a3.value) == FlexSizeSpecValue.WrapContent;
}
var isSizeCompatibleWithOption = ({ size, option }) => {
  if (option === "wrap") {
    return size.type === "flex" && size.value == FlexSizeSpecValue.WrapContent;
  }
  if (option === "fill") {
    return size.type === "flex" && size.value == FlexSizeSpecValue.FillParent;
  }
  return size.type === "fixed";
};
var isGif2 = (url) => {
  var _a3;
  if (typeof url !== "string")
    return false;
  const extension = (_a3 = url.split(".").pop()) === null || _a3 === void 0 ? void 0 : _a3.toLowerCase();
  return extension === "gif";
};
var __rest$3 = function(s6, e4) {
  var t7 = {};
  for (var p4 in s6) if (Object.prototype.hasOwnProperty.call(s6, p4) && e4.indexOf(p4) < 0)
    t7[p4] = s6[p4];
  if (s6 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i4 = 0, p4 = Object.getOwnPropertySymbols(s6); i4 < p4.length; i4++) {
      if (e4.indexOf(p4[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s6, p4[i4]))
        t7[p4[i4]] = s6[p4[i4]];
    }
  return t7;
};
var CanvasReactMessageTemplateImage = (props) => {
  const { imageSize, canvasRef, canvasProps } = useCanvasMessageTemplateImage(props);
  return import_react81.default.createElement("canvas", Object.assign({}, canvasProps, { ref: canvasRef, width: imageSize === null || imageSize === void 0 ? void 0 : imageSize.width, height: imageSize === null || imageSize === void 0 ? void 0 : imageSize.height, onError: props.onError }));
};
var useCanvasMessageTemplateImage = (_a3) => {
  var { metaData, tintColor } = _a3, props = __rest$3(_a3, ["metaData", "tintColor"]);
  const canvasRef = (0, import_react81.useRef)(null);
  const [fallbackImageSize, setFallbackImageSize] = (0, import_react81.useState)();
  const imageSize = (0, import_react81.useMemo)(() => {
    if ((metaData === null || metaData === void 0 ? void 0 : metaData.pixelHeight) && (metaData === null || metaData === void 0 ? void 0 : metaData.pixelWidth)) {
      return { width: metaData.pixelWidth, height: metaData.pixelHeight };
    }
    return fallbackImageSize;
  }, [fallbackImageSize, metaData === null || metaData === void 0 ? void 0 : metaData.pixelHeight, metaData === null || metaData === void 0 ? void 0 : metaData.pixelWidth]);
  (0, import_react81.useEffect)(() => {
    if (imageSize == null) {
      console.log("Canvas_ReactMessageTemplateImage: no metaData, render fit to container");
      if (canvasRef.current) {
        canvasRef.current.style.width = "100%";
        canvasRef.current.style.height = "100%";
        const containerSize = canvasRef.current.getBoundingClientRect();
        setFallbackImageSize(containerSize);
      }
    }
  }, [imageSize]);
  (0, import_react81.useEffect)(() => {
    if (props.src) {
      const img = new Image();
      const onImageLoad = () => {
        if (canvasRef.current && tintColor && imageSize) {
          const ctx = canvasRef.current.getContext("2d");
          if (ctx) {
            const { width: imageWidth, height: imageHeight } = imageSize;
            ctx.clearRect(0, 0, imageWidth, imageHeight);
            ctx.beginPath();
            ctx.globalCompositeOperation = "source-over";
            ctx.fillStyle = "#000";
            ctx.drawImage(img, 0, 0, imageWidth, imageHeight);
            ctx.globalCompositeOperation = "source-atop";
            ctx.fillStyle = tintColor;
            ctx.fillRect(0, 0, imageWidth, imageHeight);
          }
        }
      };
      const onImageError = (event) => {
        var _a4;
        (_a4 = props.onError) === null || _a4 === void 0 ? void 0 : _a4.call(props, event);
      };
      img.addEventListener("load", onImageLoad);
      img.addEventListener("error", onImageError);
      img.src = props.src;
      return () => {
        img.removeEventListener("load", onImageLoad);
        img.removeEventListener("error", onImageError);
      };
    }
    return;
  }, [props.src, imageSize, tintColor]);
  return {
    canvasRef,
    canvasProps: props,
    imageSize
  };
};
var ImgReactMessageTemplateImage = (props) => {
  return import_react81.default.createElement("img", Object.assign({}, props, { onError: props.onError, referrerPolicy: "no-referrer" }));
};
var PlaceholderReactMessageTemplateImage = (props) => {
  return import_react81.default.createElement("div", { style: Object.assign(Object.assign({}, props.style), { backgroundColor: "transparent" }) });
};
var __rest$2 = function(s6, e4) {
  var t7 = {};
  for (var p4 in s6) if (Object.prototype.hasOwnProperty.call(s6, p4) && e4.indexOf(p4) < 0)
    t7[p4] = s6[p4];
  if (s6 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i4 = 0, p4 = Object.getOwnPropertySymbols(s6); i4 < p4.length; i4++) {
      if (e4.indexOf(p4[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s6, p4[i4]))
        t7[p4[i4]] = s6[p4[i4]];
    }
  return t7;
};
var ReactMessageTemplateImage = (_a3) => {
  var { tintColor, metaData } = _a3, props = __rest$2(_a3, ["tintColor", "metaData"]);
  const { hasError, onError: onError2 } = useImageLoadError(props.src);
  if (props.onError)
    console.warn("`onError` is intercepted and not executed in the ReactMessageTemplateImage.");
  if (hasError) {
    return import_react81.default.createElement(PlaceholderReactMessageTemplateImage, Object.assign({}, props));
  } else if (tintColor && !isGif2(props.src)) {
    return import_react81.default.createElement(CanvasReactMessageTemplateImage, Object.assign({}, props, { onError: onError2, tintColor, metaData }));
  } else {
    return import_react81.default.createElement(ImgReactMessageTemplateImage, Object.assign({}, props, { onError: onError2 }));
  }
};
var useImageLoadError = (source) => {
  const [hasError, setHasError] = (0, import_react81.useState)(false);
  (0, import_react81.useEffect)(() => setHasError(false), [source]);
  return {
    hasError,
    onError: (0, import_react81.useCallback)(() => setHasError(true), [])
  };
};
function getDefaultStyles(overrides) {
  return Object.assign({ display: "flex", overflow: "hidden", boxSizing: "border-box" }, overrides);
}
function setViewProps(styles, props, options) {
  setViewSize(styles, props, options);
  setViewStyle(styles, props);
}
function setBorderStyle(styles, borderWidth, borderColor, radius) {
  if (borderWidth) {
    styles["--border-width"] = `${borderWidth}px`;
    styles["--border-color"] = borderColor || "transparent";
  }
  if (radius) {
    styles["borderRadius"] = radius;
    styles["--border-radius"] = `${radius}px`;
  }
}
function setViewStyle(styles, props) {
  var _a3, _b2, _c, _d, _e3, _f, _g2, _h;
  const { viewStyle } = props;
  styles["marginBlockStart"] = (_a3 = viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.margin) === null || _a3 === void 0 ? void 0 : _a3.top;
  styles["marginBlockEnd"] = (_b2 = viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.margin) === null || _b2 === void 0 ? void 0 : _b2.bottom;
  styles["marginInlineStart"] = (_c = viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.margin) === null || _c === void 0 ? void 0 : _c.left;
  styles["marginInlineEnd"] = (_d = viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.margin) === null || _d === void 0 ? void 0 : _d.right;
  const marginHorizontal = ((_f = (_e3 = viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.margin) === null || _e3 === void 0 ? void 0 : _e3.left) !== null && _f !== void 0 ? _f : 0) + ((_h = (_g2 = viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.margin) === null || _g2 === void 0 ? void 0 : _g2.right) !== null && _h !== void 0 ? _h : 0);
  if (marginHorizontal > 0 && styles.width === "100%")
    styles.width = `calc(100% - ${marginHorizontal}px)`;
  if (viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.backgroundColor)
    styles["backgroundColor"] = viewStyle.backgroundColor;
  if (viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.backgroundImageUrl) {
    styles["backgroundImage"] = `url(${JSON.stringify(viewStyle.backgroundImageUrl)})`;
    styles["backgroundSize"] = "100% 100%";
    styles["backgroundPosition"] = "center";
  }
  setBorderStyle(styles, viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.borderWidth, viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.borderColor, viewStyle === null || viewStyle === void 0 ? void 0 : viewStyle.radius);
}
function getViewSizeStyle(width, height, parentLayout) {
  const style = {};
  if (width.type === "flex" && width.value == FlexSizeSpecValue.FillParent) {
    style["width"] = "100%";
    if (parentLayout === Layout.Row) {
      style["flex"] = 1;
    }
  } else if (width.type === "fixed" && width.value >= 0) {
    style["width"] = width.value;
  }
  if (height.type === "flex" && height.value == FlexSizeSpecValue.FillParent) {
    style["height"] = "100%";
    if (parentLayout === Layout.Column) {
      style["flex"] = 1;
    }
  } else if (height.type === "fixed" && height.value >= 0) {
    style["height"] = height.value;
  }
  return style;
}
function setViewSize(styles, props, options) {
  var _a3, _b2;
  const { width: defaultWidth, height: defaultHeight } = defaultProperties.view.size;
  const { parentLayout } = options;
  const sizeStyle = getViewSizeStyle((_a3 = props.width) !== null && _a3 !== void 0 ? _a3 : defaultWidth, (_b2 = props.height) !== null && _b2 !== void 0 ? _b2 : defaultHeight, parentLayout);
  Object.assign(styles, sizeStyle);
}
function setAlign(styles, layout = defaultProperties.box.layout, align = defaultProperties.box.align) {
  if (layout === Layout.Row) {
    styles["flexDirection"] = "row";
    styles["alignItems"] = alignInFlex(align.vertical);
    styles["justifyContent"] = alignInFlex(align.horizontal);
  }
  if (layout === Layout.Column) {
    styles["flexDirection"] = "column";
    styles["alignItems"] = alignInFlex(align.horizontal);
    styles["justifyContent"] = alignInFlex(align.vertical);
  }
}
function setTextAlign(styles, align = defaultProperties.box.align.horizontal) {
  styles.textAlign = align;
}
function setImageStyle(styles, imageStyle) {
  const { contentMode = MediaContentMode.AspectFit } = imageStyle || {};
  if (contentMode) {
    switch (contentMode) {
      case MediaContentMode.AspectFill:
        styles["objectFit"] = "cover";
        break;
      case MediaContentMode.AspectFit:
        styles["objectFit"] = "contain";
        break;
      case MediaContentMode.ScalesToFill:
        styles["objectFit"] = "fill";
        break;
    }
  }
}
function setImageAspectRatio(styles, props) {
  var _a3, _b2, _c, _d;
  const imageMetaData = props === null || props === void 0 ? void 0 : props.metaData;
  if (!(imageMetaData === null || imageMetaData === void 0 ? void 0 : imageMetaData.pixelHeight) || !(imageMetaData === null || imageMetaData === void 0 ? void 0 : imageMetaData.pixelWidth)) {
    return;
  }
  if (((_a3 = props === null || props === void 0 ? void 0 : props.width) === null || _a3 === void 0 ? void 0 : _a3.type) === "fixed" || ((_b2 = props === null || props === void 0 ? void 0 : props.height) === null || _b2 === void 0 ? void 0 : _b2.type) === "fixed") {
    return;
  }
  styles["aspectRatio"] = `${(_c = props === null || props === void 0 ? void 0 : props.metaData) === null || _c === void 0 ? void 0 : _c.pixelWidth} / ${(_d = props === null || props === void 0 ? void 0 : props.metaData) === null || _d === void 0 ? void 0 : _d.pixelHeight}`;
}
function webkitLineClampStyles(numberOfLines) {
  return {
    WebkitLineClamp: numberOfLines,
    WebkitBoxOrient: "vertical",
    display: "-webkit-box",
    overflow: "hidden",
    overflowWrap: "anywhere",
    flex: 1
  };
}
function setTextStyle(styles, props, options) {
  const { textStyle, width } = props;
  const { size, color, weight } = textStyle || {};
  if (size)
    styles["fontSize"] = size;
  if (color)
    styles["color"] = color;
  if (weight)
    styles["fontWeight"] = weight;
  if ((width === null || width === void 0 ? void 0 : width.type) === "flex" && (width === null || width === void 0 ? void 0 : width.value) == FlexSizeSpecValue.WrapContent) {
    styles["width"] = "fit-content";
    styles["maxWidth"] = "100%";
  }
  if (props.type === ComponentType.Text) {
    const { siblings, elemIdx } = options;
    if (siblings != null && siblings.length >= 2 && siblings.every(isWrappedText)) {
      styles.flexShrink = siblings.length - 1 === elemIdx ? 1 : 0;
    }
  }
}
var MessageContext2 = import_react81.default.createContext(null);
var MessageProvider2 = (props) => {
  const { message, handleWebAction, handleCustomAction, handlePredefinedAction, children } = props;
  const value = import_react81.default.useMemo(() => ({
    message,
    handleWebAction,
    handleCustomAction,
    handlePredefinedAction
  }), [message === null || message === void 0 ? void 0 : message.updatedAt]);
  return import_react81.default.createElement(MessageContext2.Provider, { value }, children);
};
var useMessageContext2 = () => {
  const context = import_react81.default.useContext(MessageContext2);
  if (!context) {
    throw new Error("useMessageContext must be used within a MessageProvider");
  }
  return context;
};
function usePreservedCallback2(callback) {
  const callbackRef = (0, import_react81.useRef)(callback);
  (0, import_react81.useEffect)(() => {
    callbackRef.current = callback;
  }, [callback]);
  return (0, import_react81.useCallback)((...args) => {
    return callbackRef.current(...args);
  }, [callbackRef]);
}
function useRefEffect(callback, deps) {
  const preservedCallback = usePreservedCallback2(callback);
  const disposeRef = (0, import_react81.useRef)(noop4);
  const effect = (0, import_react81.useCallback)((element) => {
    disposeRef.current();
    disposeRef.current = noop4;
    if (element != null) {
      const cleanup = callback(element);
      if (typeof cleanup === "function") {
        disposeRef.current = cleanup;
      }
    }
  }, [preservedCallback, ...deps]);
  return effect;
}
function noop4() {
}
function useResizeObserver(onResize) {
  const resizeCallback = usePreservedCallback2(onResize);
  const ref = useRefEffect((elem) => {
    const observer = new ResizeObserver((entries2) => {
      if (entries2[0] != null) {
        resizeCallback(entries2[0]);
      }
    });
    observer.observe(elem);
    return () => {
      observer.unobserve(elem);
    };
  }, [resizeCallback]);
  return ref;
}
function useElementSize() {
  const [width, setWidth] = (0, import_react81.useState)(-1);
  const [height, setHeight] = (0, import_react81.useState)(-1);
  const [contentWidth, setContentWidth] = (0, import_react81.useState)(-1);
  const [contentHeight, setContentHeight] = (0, import_react81.useState)(-1);
  const [paddingWidth, setPaddingWidth] = (0, import_react81.useState)(-1);
  const [paddingHeight, setPaddingHeight] = (0, import_react81.useState)(-1);
  const ref = useResizeObserver((entry) => {
    const { width: contentWidth2, height: contentHeight2 } = entry.contentRect;
    const target = entry.target;
    const { width: width2, height: height2 } = target.getBoundingClientRect();
    setWidth(width2);
    setHeight(height2);
    setContentWidth(contentWidth2);
    setContentHeight(contentHeight2);
    setPaddingWidth(width2 - contentWidth2);
    setPaddingHeight(height2 - contentHeight2);
  });
  return { ref, width, height, contentWidth, contentHeight, paddingWidth, paddingHeight };
}
var __rest$1 = function(s6, e4) {
  var t7 = {};
  for (var p4 in s6) if (Object.prototype.hasOwnProperty.call(s6, p4) && e4.indexOf(p4) < 0)
    t7[p4] = s6[p4];
  if (s6 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i4 = 0, p4 = Object.getOwnPropertySymbols(s6); i4 < p4.length; i4++) {
      if (e4.indexOf(p4[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s6, p4[i4]))
        t7[p4[i4]] = s6[p4[i4]];
    }
  return t7;
};
function isViewCompatibleWithSizeOption({ width = defaultProperties.view.size.width, height = defaultProperties.view.size.height, parentLayout = defaultProperties.box.layout, option }) {
  if (parentLayout === Layout.Row) {
    return isSizeCompatibleWithOption({
      size: width,
      option
    });
  }
  return isSizeCompatibleWithOption({
    size: height,
    option
  });
}
function useRecalculateWidth(params) {
  const { style, props } = params;
  const _a3 = useElementSize(), { ref: elemRef } = _a3, size = __rest$1(_a3, ["ref"]);
  const { updateSize, sizes } = useSizeContext();
  const { id: id2, siblings, parentLayout } = props;
  const { width, height, paddingWidth, paddingHeight, contentWidth, contentHeight } = size;
  (0, import_react81.useEffect)(() => {
    updateSize({
      id: props.id,
      width,
      height,
      paddingWidth,
      paddingHeight,
      contentWidth,
      contentHeight
    });
  }, [props.id, width, height, paddingWidth, paddingHeight, contentWidth, contentHeight, updateSize]);
  const currentStyle = (0, import_react81.useMemo)(() => {
    const sumViewSize = (acc = 0, view) => {
      var _a4, _b2, _c, _d;
      if (parentLayout === Layout.Row) {
        return acc + ((_b2 = (_a4 = sizes[view.id]) === null || _a4 === void 0 ? void 0 : _a4.contentWidth) !== null && _b2 !== void 0 ? _b2 : 0);
      }
      return acc + ((_d = (_c = sizes[view.id]) === null || _c === void 0 ? void 0 : _c.contentHeight) !== null && _d !== void 0 ? _d : 0);
    };
    const hasFillOption = isViewCompatibleWithSizeOption({
      width: props.width,
      height: props.height,
      parentLayout,
      option: "fill"
    });
    if (hasFillOption) {
      const wrapSiblingsSize = siblings.filter(({ width: width2, height: height2 }) => !isViewCompatibleWithSizeOption({
        width: width2,
        height: height2,
        parentLayout,
        option: "fill"
      })).reduce(sumViewSize, 0);
      const fillSiblingCount = siblings.filter(({ width: width2, height: height2 }) => isViewCompatibleWithSizeOption({
        width: width2,
        height: height2,
        parentLayout,
        option: "fill"
      })).length;
      const maxSizeOption = (() => {
        if (parentLayout === Layout.Row) {
          return {
            maxWidth: `calc((100% - ${wrapSiblingsSize}px) / ${fillSiblingCount})`
          };
        }
        return {
          maxHeight: `calc((100% - ${wrapSiblingsSize}px) / ${fillSiblingCount})`
        };
      })();
      return Object.assign(Object.assign(Object.assign({}, style), maxSizeOption), width == 0 && { height: 0 });
    } else {
      const currentElemIdx = siblings.findIndex((sibling) => sibling.id === id2);
      const forwardSiblingsSize = siblings.slice(0, currentElemIdx).filter(({ width: width2, height: height2 }) => isViewCompatibleWithSizeOption({
        width: width2,
        height: height2,
        parentLayout,
        option: "wrap"
      })).reduce(sumViewSize, 0);
      return Object.assign(Object.assign(Object.assign({}, style), width === 0 && { height: 0 }), parentLayout === Layout.Row ? {
        maxWidth: `calc(100% - ${forwardSiblingsSize}px)`
      } : {
        maxHeight: `calc(100% - ${forwardSiblingsSize}px)`
      });
    }
  }, [props.width, props.height, parentLayout, sizes, siblings, style, width, id2]);
  return { recalculatedStyle: currentStyle, elemRef };
}
var __rest4 = function(s6, e4) {
  var t7 = {};
  for (var p4 in s6) if (Object.prototype.hasOwnProperty.call(s6, p4) && e4.indexOf(p4) < 0)
    t7[p4] = s6[p4];
  if (s6 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i4 = 0, p4 = Object.getOwnPropertySymbols(s6); i4 < p4.length; i4++) {
      if (e4.indexOf(p4[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s6, p4[i4]))
        t7[p4[i4]] = s6[p4[i4]];
    }
  return t7;
};
var hasValidUrlProtocol = (url = "") => ["http://", "https://", "ftp://"].some((protocol) => url.startsWith(protocol));
var returnUrl = (url = "") => {
  if (hasValidUrlProtocol(url)) {
    return url;
  }
  return `https://${url}`;
};
var ActionHandler = ({ children, props, className, style }) => {
  var _a3, _b2, _c, _d, _e3, _f, _g2, _h, _j;
  const { recalculatedStyle, elemRef } = useRecalculateWidth({ style, props });
  const { message, handleWebAction, handleCustomAction, handlePredefinedAction } = useMessageContext2();
  const borderClass = ((_a3 = props.viewStyle) === null || _a3 === void 0 ? void 0 : _a3.borderWidth) ? "sb-message-template__border" : "";
  const paddingStyles = {
    paddingBlockStart: (_c = (_b2 = props.viewStyle) === null || _b2 === void 0 ? void 0 : _b2.padding) === null || _c === void 0 ? void 0 : _c.top,
    paddingBlockEnd: (_e3 = (_d = props.viewStyle) === null || _d === void 0 ? void 0 : _d.padding) === null || _e3 === void 0 ? void 0 : _e3.bottom,
    paddingInlineStart: (_g2 = (_f = props.viewStyle) === null || _f === void 0 ? void 0 : _f.padding) === null || _g2 === void 0 ? void 0 : _g2.left,
    paddingInlineEnd: (_j = (_h = props.viewStyle) === null || _h === void 0 ? void 0 : _h.padding) === null || _j === void 0 ? void 0 : _j.right
  };
  const onClick = (e4) => {
    var _a4, _b3, _c2, _d2, _e4, _f2, _g3;
    if (((_a4 = props.action) === null || _a4 === void 0 ? void 0 : _a4.type) === "web") {
      if (handleWebAction) {
        handleWebAction(e4, props.action, message);
      } else {
        (_c2 = window === null || window === void 0 ? void 0 : window.open(returnUrl((_b3 = props === null || props === void 0 ? void 0 : props.action) === null || _b3 === void 0 ? void 0 : _b3.data), "_blank", "noopener noreferrer")) === null || _c2 === void 0 ? void 0 : _c2.focus();
      }
    } else if (((_d2 = props.action) === null || _d2 === void 0 ? void 0 : _d2.type) === "custom") {
      if (handleCustomAction) {
        handleCustomAction(e4, props.action, message);
      } else {
        (_f2 = window === null || window === void 0 ? void 0 : window.open(returnUrl((_e4 = props === null || props === void 0 ? void 0 : props.action) === null || _e4 === void 0 ? void 0 : _e4.data), "_blank", "noopener noreferrer")) === null || _f2 === void 0 ? void 0 : _f2.focus();
      }
    } else if (((_g3 = props.action) === null || _g3 === void 0 ? void 0 : _g3.type) === "uikit") {
      handlePredefinedAction === null || handlePredefinedAction === void 0 ? void 0 : handlePredefinedAction(e4, props.action, message);
    }
  };
  if (props.type === ComponentType.TextButton) {
    return import_react81.default.createElement("button", { className: clx(className, borderClass), "data-sb-template-id": props.elementId, style: Object.assign(Object.assign({}, style), paddingStyles), onClick }, children);
  }
  const { display, flexDirection, justifyContent, alignItems, objectFit } = recalculatedStyle, wrapperStyles = __rest4(recalculatedStyle, ["display", "flexDirection", "justifyContent", "alignItems", "objectFit"]);
  return import_react81.default.createElement(
    "div",
    { ref: elemRef, className: clx(className, borderClass, props.action && "sb-message-template__action"), "data-sb-template-id": props.elementId, style: wrapperStyles, onClick },
    import_react81.default.createElement("div", { style: Object.assign({
      display,
      flexDirection,
      justifyContent,
      alignItems,
      objectFit,
      width: "100%",
      height: "100%"
    }, paddingStyles) }, children)
  );
};
function clx(...names) {
  return names.filter((it3) => !!it3).join(" ");
}
function isFixedOrFill(view) {
  var _a3, _b2, _c, _d;
  const heightType = (_a3 = view === null || view === void 0 ? void 0 : view.height) === null || _a3 === void 0 ? void 0 : _a3.type;
  const widthType = (_b2 = view === null || view === void 0 ? void 0 : view.width) === null || _b2 === void 0 ? void 0 : _b2.type;
  const isFixedDiamension = heightType === "fixed" || widthType === "fixed";
  const isFill = heightType === "flex" && ((_c = view === null || view === void 0 ? void 0 : view.height) === null || _c === void 0 ? void 0 : _c.value) === FlexSizeSpecValue.FillParent || widthType === "flex" && ((_d = view === null || view === void 0 ? void 0 : view.width) === null || _d === void 0 ? void 0 : _d.value) === FlexSizeSpecValue.FillParent;
  return isFixedDiamension || isFill;
}
function convertNewlinesToBr(text2) {
  return text2.split("\n").map((line, index) => import_react81.default.createElement(
    import_react81.default.Fragment,
    { key: index },
    line,
    import_react81.default.createElement("br", null)
  ));
}
function renderText(view) {
  const { text: text2, maxTextLines } = view;
  const isToBeWrapped = isFixedOrFill(view);
  const hasMaxLines = typeof maxTextLines === "number" && maxTextLines > 0;
  const convertedText = convertNewlinesToBr(text2);
  if (hasMaxLines || isToBeWrapped) {
    const wrapperStyling = Object.assign(Object.assign({}, (hasMaxLines || isToBeWrapped) && { maxWidth: "100%" }), isToBeWrapped && { maxHeight: "100%", overflow: "hidden" });
    return import_react81.default.createElement("div", { style: wrapperStyling }, hasMaxLines ? import_react81.default.createElement("div", { style: webkitLineClampStyles(maxTextLines) }, convertedText) : convertedText);
  }
  return hasMaxLines ? import_react81.default.createElement("div", { style: webkitLineClampStyles(maxTextLines) }, convertedText) : convertedText;
}
var renderer = createRenderer({
  views: {
    box(props) {
      return import_react81.default.createElement(ActionHandler, { className: "sb-message-template__box", elementId: props.elementId, style: props.parsedProperties, props }, props.children);
    },
    text(props) {
      return import_react81.default.createElement(ActionHandler, { className: "sb-message-template__text", elementId: props.elementId, style: props.parsedProperties, props }, renderText(props));
    },
    image(props) {
      var _a3;
      return import_react81.default.createElement(
        ActionHandler,
        { className: "sb-message-template__image-container", elementId: props.elementId, style: props.parsedProperties, props },
        import_react81.default.createElement(ReactMessageTemplateImage, { className: "sb-message-template__image", alt: "image", src: props.imageUrl, style: { width: "100%", height: "100%", aspectRatio: "inherit", objectFit: "inherit" }, tintColor: (_a3 = props.imageStyle) === null || _a3 === void 0 ? void 0 : _a3.tintColor, metaData: props.metaData })
      );
    },
    textButton(props) {
      return import_react81.default.createElement(ActionHandler, { className: "sb-message-template__text-button", elementId: props.elementId, style: props.parsedProperties, props }, renderText(Object.assign({ maxTextLines: defaultProperties.textButton.maxTextLines }, props)));
    },
    imageButton(props) {
      var _a3;
      return import_react81.default.createElement(
        ActionHandler,
        { className: "sb-message-template__image-container sb-message-template__image-button", elementId: props.elementId, style: props.parsedProperties, props },
        import_react81.default.createElement(ReactMessageTemplateImage, { className: "sb-message-template__image", alt: "image-button", src: props.imageUrl, style: { width: "100%", height: "100%", aspectRatio: "inherit", objectFit: "inherit" }, tintColor: (_a3 = props.imageStyle) === null || _a3 === void 0 ? void 0 : _a3.tintColor, metaData: props.metaData })
      );
    },
    carouselView(props) {
      var _a3, _b2;
      return import_react81.default.createElement(Carousel, { maxChildWidth: (_a3 = props.carouselStyle) === null || _a3 === void 0 ? void 0 : _a3.maxChildWidth, spacing: (_b2 = props.carouselStyle) === null || _b2 === void 0 ? void 0 : _b2.spacing, style: props.parsedProperties }, props.children);
    }
  }
});
var parser = createParser({
  mapBoxProps(props, options) {
    const styles = getDefaultStyles();
    setViewProps(styles, props, options);
    setAlign(styles, props.layout, props.align);
    return styles;
  },
  mapTextProps(props, options) {
    var _a3;
    const styles = getDefaultStyles({ whiteSpace: "pre-line", wordBreak: "break-word" });
    setViewProps(styles, props, options);
    setTextStyle(styles, props, options);
    setAlign(styles, Layout.Row, props.align);
    setTextAlign(styles, (_a3 = props.align) === null || _a3 === void 0 ? void 0 : _a3.horizontal);
    return styles;
  },
  mapImageProps(props, options) {
    const styles = getDefaultStyles();
    setViewProps(styles, props, options);
    setImageStyle(styles, props.imageStyle);
    setImageAspectRatio(styles, props);
    return styles;
  },
  mapTextButtonProps(props, options) {
    const styles = getDefaultStyles({ whiteSpace: "pre-line", alignItems: "center", justifyContent: "center" });
    setViewProps(styles, props, options);
    setTextStyle(styles, props, options);
    return styles;
  },
  mapImageButtonProps(props, options) {
    const styles = getDefaultStyles();
    setViewProps(styles, props, options);
    setImageStyle(styles, props.imageStyle);
    setImageAspectRatio(styles, props);
    return styles;
  },
  mapCarouselProps(props, options) {
    var _a3, _b2, _c, _d, _e3, _f, _g2, _h;
    const styles = getDefaultStyles();
    setViewProps(styles, props, options);
    styles["paddingBlockStart"] = (_b2 = (_a3 = props.viewStyle) === null || _a3 === void 0 ? void 0 : _a3.padding) === null || _b2 === void 0 ? void 0 : _b2.top;
    styles["paddingBlockEnd"] = (_d = (_c = props.viewStyle) === null || _c === void 0 ? void 0 : _c.padding) === null || _d === void 0 ? void 0 : _d.bottom;
    styles["paddingInlineStart"] = (_f = (_e3 = props.viewStyle) === null || _e3 === void 0 ? void 0 : _e3.padding) === null || _f === void 0 ? void 0 : _f.left;
    styles["paddingInlineEnd"] = (_h = (_g2 = props.viewStyle) === null || _g2 === void 0 ? void 0 : _g2.padding) === null || _h === void 0 ? void 0 : _h.right;
    return styles;
  }
});
createMessageTemplate({
  renderer,
  parser,
  Container: ({ children, className }) => {
    return import_react81.default.createElement("div", { className: `sb-message-template__parent ${className}`, style: {
      display: "flex",
      flexDirection: "column",
      maxWidth: 400,
      marginBlockEnd: 24
    } }, children);
  }
});
var CustomTemplate = createMessageTemplate({
  parser,
  renderer,
  Container: function(_a3) {
    var children = _a3.children, className = _a3.className;
    return import_react81.default.createElement("div", { className: [
      "sb-message-template__parent ".concat(className),
      "sendbird-message-template__root"
    ].join(" ") }, children);
  }
}).MessageTemplate;
function MessageTemplate(_a3) {
  var templateItems = _a3.templateItems, templateVersion = _a3.templateVersion;
  return import_react81.default.createElement(CustomTemplate, { templateItems, templateVersion });
}

// node_modules/@sendbird/uikit-react/ui/FallbackTemplateMessageItemBody.tsx.js
var import_react82 = __toESM(require_react(), 1);
function FallbackTemplateMessageItemBody(_a3) {
  var className = _a3.className, message = _a3.message, isByMe = _a3.isByMe;
  var stringSet2 = (0, import_react82.useContext)(LocalizationContext).stringSet;
  var text2 = message["message"];
  return import_react82.default.createElement("div", { className: getClassName([
    className !== null && className !== void 0 ? className : "",
    isByMe ? "outgoing" : "incoming",
    "sendbird-template-message-item-body__fallback_message"
  ]) }, text2 ? import_react82.default.createElement(
    import_react82.default.Fragment,
    null,
    import_react82.default.createElement(Label, { type: LabelTypography.BODY_1, color: LabelColors.ONCONTENT_INVERSE_1 }, text2)
  ) : import_react82.default.createElement(
    import_react82.default.Fragment,
    null,
    import_react82.default.createElement(Label, { className: "sendbird-template-message-item-body__fallback_message__header", type: LabelTypography.BODY_1, color: LabelColors.ONCONTENT_INVERSE_1 }, stringSet2.UNKNOWN__TEMPLATE_ERROR),
    import_react82.default.createElement(Label, { className: "sendbird-template-message-item-body__fallback_message__description", type: LabelTypography.BODY_1, color: LabelColors.ONCONTENT_INVERSE_3 }, stringSet2.UNKNOWN__CANNOT_READ_TEMPLATE)
  ));
}

// node_modules/@sendbird/uikit-react/ui/LoadingTemplateMessageItemBody.tsx.js
var import_react83 = __toESM(require_react(), 1);
var TEMPLATE_LOADING_SPINNER_SIZE = "40px";
function LoadingTemplateMessageItemBody(_a3) {
  var className = _a3.className, isByMe = _a3.isByMe;
  return import_react83.default.createElement(
    "div",
    { className: classnames(className, isByMe ? "outgoing" : "incoming", "sendbird-template-loading-message-item-body") },
    import_react83.default.createElement(
      Loader,
      { className: "sendbird-message-status__icon", testID: "sendbird-message-status-icon", width: TEMPLATE_LOADING_SPINNER_SIZE, height: TEMPLATE_LOADING_SPINNER_SIZE },
      import_react83.default.createElement(Icon, { type: IconTypes.SPINNER, fillColor: IconColors.CONTENT_INVERSE_3, width: TEMPLATE_LOADING_SPINNER_SIZE, height: TEMPLATE_LOADING_SPINNER_SIZE })
    )
  );
}

// node_modules/@sendbird/uikit-react/ui/TemplateMessageItemBody.js
var MessageTemplateWrapper = function(_a3) {
  var message = _a3.message, templateVersion = _a3.templateVersion, templateItems = _a3.templateItems;
  return import_react84.default.createElement(
    MessageProvider2,
    { message },
    import_react84.default.createElement(MessageTemplate, { templateVersion, templateItems })
  );
};
var splitColorVariables = function(colorVariables) {
  var light = {};
  var dark = {};
  for (var key in colorVariables) {
    if (Object.prototype.hasOwnProperty.call(colorVariables, key)) {
      var value = colorVariables[key];
      if (typeof value === "object" && value !== null) {
        var _a3 = splitColorVariables(value), nestedLight = _a3[0], nestedDark = _a3[1];
        light[key] = nestedLight;
        dark[key] = nestedDark;
      } else if (typeof value === "string") {
        var _b2 = value.split(","), lightColor = _b2[0], darkColor = _b2[1];
        light[key] = lightColor;
        dark[key] = darkColor || lightColor;
      } else {
        light[key] = value;
        dark[key] = value;
      }
    }
  }
  return [light, dark];
};
function selectColorVariablesByTheme(_a3) {
  var colorVariables = _a3.colorVariables, theme = _a3.theme;
  var _b2 = splitColorVariables(colorVariables), light = _b2[0], dark = _b2[1];
  return theme === "light" ? light : dark;
}
var MessageTemplateErrorBoundary = (
  /** @class */
  function(_super) {
    __extends(MessageTemplateErrorBoundary2, _super);
    function MessageTemplateErrorBoundary2(props) {
      var _this = _super.call(this, props) || this;
      _this.state = { hasError: false };
      return _this;
    }
    MessageTemplateErrorBoundary2.getDerivedStateFromError = function() {
      return { hasError: true };
    };
    MessageTemplateErrorBoundary2.prototype.componentDidCatch = function(error, errorInfo) {
      var _a3;
      (_a3 = this.props.logger) === null || _a3 === void 0 ? void 0 : _a3.error("Error caught by ErrorBoundary: ", error, errorInfo);
    };
    MessageTemplateErrorBoundary2.prototype.render = function() {
      if (this.state.hasError) {
        return this.props.fallbackMessage;
      }
      return this.props.children;
    };
    return MessageTemplateErrorBoundary2;
  }(import_react84.Component)
);
var flattenObjectHelper = function(currentObject, flattenObject2, parentKeyPath) {
  if (parentKeyPath === void 0) {
    parentKeyPath = "";
  }
  for (var _i2 = 0, _a3 = Object.entries(currentObject); _i2 < _a3.length; _i2++) {
    var _b2 = _a3[_i2], key = _b2[0], value = _b2[1];
    var currentKeyPath = parentKeyPath ? "".concat(parentKeyPath, ".").concat(key) : key;
    if (value && typeof value === "object") {
      flattenObjectHelper(value, flattenObject2, currentKeyPath);
    } else {
      flattenObject2[currentKeyPath] = value;
    }
  }
};
function flattenObject(object) {
  var result = {};
  flattenObjectHelper(object, result);
  return result;
}
var TEMPLATE_FETCH_RETRY_BUFFER_TIME_IN_MILLIES = 500;
var replaceVariablesInTemplateString = function(_a3) {
  var template = _a3.template, _b2 = _a3.templateData, templateData = _b2 === void 0 ? {} : _b2, colorVariables = _a3.colorVariables, theme = _a3.theme;
  var selectedThemeColorVariables = {};
  if (colorVariables && theme) {
    selectedThemeColorVariables = selectColorVariablesByTheme({
      colorVariables,
      theme
    });
  }
  var source = __assign(__assign({}, templateData), selectedThemeColorVariables);
  var flattenedSource = flattenObject(source);
  var replaced = template;
  Object.entries(flattenedSource).forEach(function(_a4) {
    var key = _a4[0], val = _a4[1];
    var pattern = "\\{".concat(key, "\\}");
    var regex2 = new RegExp(pattern, "g");
    replaced = replaced.replace(regex2, val);
  });
  return replaced;
};
function TemplateMessageItemBody(_a3) {
  var _b2;
  var _c = _a3.className, className = _c === void 0 ? "" : _c, message = _a3.message, _d = _a3.isByMe, isByMe = _d === void 0 ? false : _d, _e3 = _a3.theme, theme = _e3 === void 0 ? "light" : _e3;
  var templateData = (_b2 = message.extendedMessagePayload) === null || _b2 === void 0 ? void 0 : _b2[MESSAGE_TEMPLATE_KEY];
  var getFailedBody = function() {
    return import_react84.default.createElement(FallbackTemplateMessageItemBody, { className, message, isByMe });
  };
  if (!(templateData === null || templateData === void 0 ? void 0 : templateData.key)) {
    return getFailedBody();
  }
  var templateKey = templateData.key;
  var globalState = useSendbirdStateContext();
  if (!globalState) {
    return getFailedBody();
  }
  var logger = globalState.config.logger;
  var _f = globalState.utils, getCachedTemplate = _f.getCachedTemplate, updateMessageTemplatesInfo = _f.updateMessageTemplatesInfo;
  var waitingTemplateKeysMap = globalState.stores.appInfoStore.waitingTemplateKeysMap;
  var waitingTemplateKeysMapString = Object.entries(waitingTemplateKeysMap).map(function(_a4) {
    var key = _a4[0], value = _a4[1];
    return [key, value.requestedAt, value.erroredMessageIds.join(",")].join("-");
  }).join("_");
  var _g2 = (0, import_react84.useState)(getFilledMessageTemplateItems()), renderData = _g2[0], setRenderData = _g2[1];
  function findSubstrings(input, matchString) {
    var indices = [];
    var startIndex = 0;
    while ((startIndex = input.indexOf(matchString, startIndex)) !== -1) {
      indices.push({ start: startIndex, end: startIndex + matchString.length });
      startIndex += matchString.length;
    }
    return indices;
  }
  function replaceAtIndices(input, indices, replacement) {
    var result = "";
    var lastIndex = 0;
    indices.forEach(function(_a4) {
      var start = _a4.start, end = _a4.end;
      result += input.slice(lastIndex, start) + replacement;
      lastIndex = end;
    });
    result += input.slice(lastIndex);
    return result;
  }
  function replaceReservationKeys(templateString, reservationKey, replacement) {
    var indices = findSubstrings(templateString, reservationKey);
    return replaceAtIndices(templateString, indices, replacement);
  }
  function getFilledRootTemplate(rootTemplate) {
    var rootTemplateString = replaceVariablesInTemplateString({
      template: rootTemplate.uiTemplate,
      templateData: templateData.variables,
      colorVariables: rootTemplate.colorVariables,
      theme
    });
    if (templateData.view_variables) {
      var reservationKeyToItems_1 = {};
      Object.entries(templateData.view_variables).forEach(function(_a4) {
        var reservationKey = _a4[0], simpleTemplateDataList = _a4[1];
        var filledSimpleTemplates = [];
        simpleTemplateDataList.forEach(function(simpleTemplateData) {
          var simpleTemplateKey = simpleTemplateData === null || simpleTemplateData === void 0 ? void 0 : simpleTemplateData.key;
          if (simpleTemplateKey) {
            var cachedTemplate = getCachedTemplate(simpleTemplateKey);
            if (!cachedTemplate) {
              logger.error("TemplateMessageItemBody | simple template is expected to be cached: ", simpleTemplateKey);
            }
            var items = replaceVariablesInTemplateString({
              template: cachedTemplate.uiTemplate,
              templateData: simpleTemplateData.variables,
              colorVariables: cachedTemplate.colorVariables,
              theme
            });
            filledSimpleTemplates.push({
              version: cachedTemplate.version,
              body: {
                items: JSON.parse(items)
              }
            });
            reservationKeyToItems_1[reservationKey] = JSON.stringify(filledSimpleTemplates);
          }
        });
      });
      Object.entries(reservationKeyToItems_1).forEach(function(_a4) {
        var reservationKey = _a4[0], filledSimpleTemplates = _a4[1];
        rootTemplateString = replaceReservationKeys(rootTemplateString, '"@{'.concat(reservationKey, '}"'), filledSimpleTemplates);
      });
    }
    return JSON.parse(rootTemplateString);
  }
  function getFilledMessageTemplateItems() {
    var result = {
      filledMessageTemplateItemsList: [],
      isErrored: false
    };
    var nonCachedTemplateKeys = [];
    var cachedTemplate = getCachedTemplate(templateKey);
    if (!cachedTemplate) {
      nonCachedTemplateKeys.push(templateKey);
    }
    if (templateData === null || templateData === void 0 ? void 0 : templateData.view_variables) {
      try {
        Object.entries(templateData.view_variables).forEach(function(_a4) {
          var _2 = _a4[0], simpleTemplateDataList = _a4[1];
          simpleTemplateDataList.forEach(function(simpleTemplateData) {
            var simpleTemplateKey = simpleTemplateData === null || simpleTemplateData === void 0 ? void 0 : simpleTemplateData.key;
            if (simpleTemplateKey && !getCachedTemplate(simpleTemplateKey) && !nonCachedTemplateKeys.includes(simpleTemplateKey)) {
              nonCachedTemplateKeys.push(simpleTemplateKey);
            }
          });
        });
      } catch (e4) {
        logger.error("TemplateMessageItemBody | received view_variables is malformed: ", templateData);
        result.isErrored = true;
        return result;
      }
    }
    try {
      if (nonCachedTemplateKeys.length > 0) {
        tryFetchTemplateByKey(nonCachedTemplateKeys);
      } else if (cachedTemplate) {
        var items = getFilledRootTemplate(cachedTemplate);
        result.filledMessageTemplateItemsList.push({
          version: cachedTemplate.version,
          items
        });
      }
    } catch (e4) {
      logger.error("TemplateMessageItemBody | fetching non-cached templates by given template keys failed: ", e4);
      result.isErrored = true;
    }
    return result;
  }
  (0, import_react84.useEffect)(function() {
    if (!renderData.isErrored && renderData.filledMessageTemplateItemsList.length === 0) {
      var newRenderData = getFilledMessageTemplateItems();
      setRenderData(newRenderData);
    }
  }, [templateData.key, waitingTemplateKeysMapString]);
  function tryFetchTemplateByKey(templateKeys) {
    if (templateKeys.length > 0) {
      var waitingTemplateKeyDataList_1 = [];
      templateKeys.forEach(function(templateKey2) {
        var waitingTemplateKeyData = waitingTemplateKeysMap[templateKey2];
        waitingTemplateKeyDataList_1.push([templateKey2, waitingTemplateKeyData]);
      });
      var requestedAt_1 = Date.now();
      var keysToUpdate_1 = [];
      waitingTemplateKeyDataList_1.forEach(function(_a4) {
        var templateKey2 = _a4[0], waitingTemplateKeyData = _a4[1];
        if (!waitingTemplateKeyData || waitingTemplateKeyData.erroredMessageIds.indexOf(message.messageId) === -1 && requestedAt_1 > waitingTemplateKeyData.requestedAt + TEMPLATE_FETCH_RETRY_BUFFER_TIME_IN_MILLIES) {
          keysToUpdate_1.push(templateKey2);
        } else if (waitingTemplateKeyData.erroredMessageIds.indexOf(message.messageId) > -1) {
          throw new Error("TemplateMessageItemBody | fetching template key ".concat(templateKey2, " for messageId: ").concat(message.messageId, " has failed."));
        }
      });
      if (keysToUpdate_1.length > 0) {
        updateMessageTemplatesInfo(keysToUpdate_1, message.messageId, requestedAt_1);
      }
    }
  }
  if (renderData.isErrored) {
    return getFailedBody();
  }
  if (renderData.filledMessageTemplateItemsList.length === 0) {
    return import_react84.default.createElement(LoadingTemplateMessageItemBody, { className, isByMe });
  }
  return import_react84.default.createElement(
    "div",
    { className: getClassName([
      className,
      isByMe ? "outgoing" : "incoming",
      "sendbird-template-message-item-body"
    ]) },
    import_react84.default.createElement(MessageTemplateErrorBoundary, { fallbackMessage: import_react84.default.createElement(FallbackTemplateMessageItemBody, { className, message, isByMe }), logger }, renderData.filledMessageTemplateItemsList.map(function(filledMessageTemplateItem, i4) {
      var _a4;
      return import_react84.default.createElement(MessageTemplateWrapper, { key: i4, message, templateVersion: (_a4 = filledMessageTemplateItem.version) !== null && _a4 !== void 0 ? _a4 : 0, templateItems: filledMessageTemplateItem.items });
    }))
  );
}

// node_modules/@sendbird/uikit-react/ui/MessageFeedbackFailedModal.js
var import_react85 = __toESM(require_react(), 1);
var import_react_dom19 = __toESM(require_react_dom(), 1);
function MessageFeedbackFailedModal(props) {
  var text2 = props.text, onCancel = props.onCancel;
  var stringSet2 = (0, import_react85.useContext)(LocalizationContext).stringSet;
  var modalRef = (0, import_react85.useRef)(null);
  var onKeyDown = useKeyDown(modalRef, {
    Enter: function() {
      return onCancel === null || onCancel === void 0 ? void 0 : onCancel();
    },
    Escape: function() {
      return onCancel === null || onCancel === void 0 ? void 0 : onCancel();
    }
  });
  return import_react85.default.createElement(
    "div",
    { onKeyDown },
    import_react85.default.createElement(Modal, { contentClassName: "sendbird-message-feedback-modal-content__mobile", type: ButtonTypes.PRIMARY, onSubmit: onCancel, onClose: onCancel, submitText: stringSet2.BUTTON__OK, renderHeader: function() {
      return import_react85.default.createElement(
        "div",
        { className: "sendbird-modal__header" },
        import_react85.default.createElement(Label, { type: LabelTypography.H_1, color: LabelColors.ONBACKGROUND_1, className: "sendbird-message-feedback-modal-header" }, text2)
      );
    }, customFooter: import_react85.default.createElement(
      "div",
      { className: "sendbird-message-feedback-modal-footer__root_failed" },
      import_react85.default.createElement(
        Button,
        { onClick: onCancel },
        import_react85.default.createElement(Label, { type: LabelTypography.BUTTON_3, color: LabelColors.ONCONTENT_1 }, stringSet2.BUTTON__OK)
      )
    ) })
  );
}

// node_modules/@sendbird/uikit-react/chunks/bundle-KDJ0EkHX.js
function MessageProfile(_a3) {
  var _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, isByMe = _a3.isByMe, displayThreadReplies = _a3.displayThreadReplies, bottom = _a3.bottom, message = _a3.message, channel = _a3.channel, userId = _a3.userId, _c = _a3.chainBottom, chainBottom = _c === void 0 ? false : _c;
  var avatarRef = (0, import_react86.useRef)(null);
  var _d = useUserProfileContext(), disableUserProfile = _d.disableUserProfile, renderUserProfile = _d.renderUserProfile;
  if (isByMe || chainBottom || !isSendableMessage2(message)) {
    return null;
  }
  return import_react86.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
    var _a4, _b3;
    return import_react86.default.createElement(Avatar$1, {
      className: classnames(className, displayThreadReplies && "use-thread-replies"),
      src: ((_b3 = (_a4 = channel === null || channel === void 0 ? void 0 : channel.members) === null || _a4 === void 0 ? void 0 : _a4.find(function(member) {
        return (member === null || member === void 0 ? void 0 : member.userId) === message.sender.userId;
      })) === null || _b3 === void 0 ? void 0 : _b3.profileUrl) || message.sender.profileUrl || "",
      // TODO: Divide getting profileUrl logic to utils
      ref: avatarRef,
      width: "28px",
      height: "28px",
      bottom,
      onClick: function() {
        if (!disableUserProfile)
          toggleDropdown();
      }
    });
  }, menuItems: function(closeDropdown) {
    return renderUserProfile ? renderUserProfile({
      user: message.sender,
      close: closeDropdown,
      currentUserId: userId,
      avatarRef
    }) : import_react86.default.createElement(
      MenuItems,
      {
        /**
         * parentRef: For catching location(x, y) of MenuItems
         * parentContainRef: For toggling more options(menus & reactions)
        */
        parentRef: avatarRef,
        parentContainRef: avatarRef,
        closeDropdown,
        style: { paddingTop: "0px", paddingBottom: "0px" }
      },
      import_react86.default.createElement(UserProfile, { user: message.sender, onSuccess: closeDropdown })
    );
  } });
}
var InputLabel = function(_a3) {
  var children = _a3.children;
  return import_react86.default.createElement(Label, { className: "sendbird-form-message__input__label", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, children);
};
var FormInput = function(props) {
  var name = props.name, required = props.required, errorMessage = props.errorMessage, isValid3 = props.isValid, values = props.values, isInvalidated = props.isInvalidated, isSubmitTried = props.isSubmitTried, style = props.style, onFocused = props.onFocused, onChange = props.onChange, placeHolder = props.placeHolder, isSubmitted = props.isSubmitted;
  var layout = style.layout, _a3 = style.options, options = _a3 === void 0 ? [] : _a3, resultCount = style.resultCount;
  var _b2 = resultCount !== null && resultCount !== void 0 ? resultCount : {}, _c = _b2.min, min2 = _c === void 0 ? 1 : _c, _d = _b2.max, max2 = _d === void 0 ? 1 : _d;
  var chipDataList = getInitialChipDataList();
  var stringSet2 = (0, import_react86.useContext)(LocalizationContext).stringSet;
  var handleFocus = function() {
    onFocused === null || onFocused === void 0 ? void 0 : onFocused(true);
  };
  var handleBlur = function() {
    onFocused === null || onFocused === void 0 ? void 0 : onFocused(false);
  };
  function getInitialChipDataList() {
    if (isSubmitted) {
      return options.map(function(option) {
        return {
          state: values.includes(option) ? "submittedSelected" : "submittedDefault",
          option
        };
      });
    } else {
      return options.map(function(option) {
        return {
          state: values.includes(option) ? "selected" : "default",
          option
        };
      });
    }
  }
  var onChipClick = function(index) {
    if (isSubmitted)
      return;
    var newDraftedValues;
    if (min2 === 1 && max2 === 1) {
      newDraftedValues = chipDataList[index].state === "selected" ? [] : [chipDataList[index].option];
    } else {
      newDraftedValues = chipDataList.reduce(function(acc, chipData, i4) {
        if (i4 === index) {
          if (chipData.state === "default" && values.length < max2) {
            acc.push(chipData.option);
          }
        } else if (chipData.state === "selected") {
          acc.push(chipData.option);
        }
        return acc;
      }, []);
    }
    onChange(newDraftedValues);
  };
  return import_react86.default.createElement(
    "div",
    { className: "sendbird-form-message__input__root" },
    import_react86.default.createElement(
      InputLabel,
      null,
      import_react86.default.createElement(
        "div",
        { className: "sendbird-form-message__input__title-container" },
        name,
        " ",
        !required && import_react86.default.createElement("span", { className: "sendbird-form-message__input__title-optional" }, "(optional)")
      )
    ),
    import_react86.default.createElement(
      "div",
      { className: "sendbird-input_for_form" },
      function() {
        switch (layout) {
          case "chip": {
            return import_react86.default.createElement("div", { className: "sendbird-form-message__input__chip-container" }, chipDataList.map(function(chipData, index) {
              return import_react86.default.createElement(
                "div",
                { className: "sendbird-form-message__input__chip ".concat(chipData.state), key: index, onClick: function() {
                  return onChipClick(index);
                } },
                import_react86.default.createElement("div", { className: "sendbird-form-message__input__chip-text" }, chipData.option),
                isSubmitted && chipData.state === "submittedSelected" && import_react86.default.createElement(Icon, { className: "sendbird-form-message__submitted-check-icon-chip", type: IconTypes.DONE, fillColor: IconColors.SECONDARY_2, width: "20px", height: "20px" })
              );
            }));
          }
          case "textarea": {
            var currentValue = values.length > 0 ? values[0] : "";
            return import_react86.default.createElement("div", { className: "sendbird-form-message__input__container" }, isSubmitted ? import_react86.default.createElement(
              "div",
              { className: "sendbird-form-message__submitted-input-box textarea" },
              import_react86.default.createElement("div", { className: "sendbird-form-message__submitted-input-box-text" }, currentValue),
              isValid3 && import_react86.default.createElement(
                "div",
                { className: "sendbird-form-message__submitted-check-icon-container" },
                import_react86.default.createElement(Icon, { type: IconTypes.DONE, fillColor: IconColors.SECONDARY_2, width: "20px", height: "20px" })
              ),
              !currentValue && import_react86.default.createElement(Label, { className: "sendbird-input__placeholder", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_3 }, stringSet2.FORM_ITEM_OPTIONAL_EMPTY)
            ) : import_react86.default.createElement(
              import_react86.default.Fragment,
              null,
              import_react86.default.createElement("textarea", { className: classnames("sendbird-input__input", !!errorMessage && "error", "sendbird-form-message__input__textarea"), required, disabled: isSubmitted, value: currentValue, onFocus: handleFocus, onBlur: handleBlur, onChange: function(event) {
                var value = event.target.value;
                onChange(value ? [value] : []);
              } }),
              placeHolder && !currentValue && import_react86.default.createElement(Label, { className: "sendbird-input__placeholder textarea", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_3 }, placeHolder)
            ));
          }
          case "text":
          case "number":
          case "phone":
          case "email": {
            var currentValue = values.length > 0 ? values[0] : "";
            return import_react86.default.createElement("div", { className: "sendbird-form-message__input__container" }, isSubmitted ? import_react86.default.createElement(
              "div",
              { className: "sendbird-form-message__submitted-input-box" },
              import_react86.default.createElement("div", { className: "sendbird-form-message__submitted-input-box-text" }, currentValue),
              isValid3 && import_react86.default.createElement(
                "div",
                { className: "sendbird-form-message__submitted-check-icon-container" },
                import_react86.default.createElement(Icon, { type: IconTypes.DONE, fillColor: IconColors.SECONDARY_2, width: "20px", height: "20px" })
              ),
              !currentValue && import_react86.default.createElement(Label, { className: "sendbird-input__placeholder", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_3 }, stringSet2.FORM_ITEM_OPTIONAL_EMPTY)
            ) : import_react86.default.createElement(
              import_react86.default.Fragment,
              null,
              import_react86.default.createElement("input", { type: layout === "number" ? "text" : layout, inputMode: layout === "number" ? "numeric" : "text", className: "sendbird-input__input ".concat(errorMessage ? "error" : ""), name, required, disabled: isSubmitted, value: currentValue, onFocus: handleFocus, onBlur: handleBlur, onChange: function(event) {
                var value = event.target.value;
                onChange(value ? [value] : []);
              } }),
              placeHolder && !currentValue && import_react86.default.createElement(Label, { className: "sendbird-input__placeholder", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_3 }, placeHolder)
            ));
          }
          default: {
            return import_react86.default.createElement(import_react86.default.Fragment, null);
          }
        }
      }(),
      errorMessage && (isSubmitTried || isInvalidated) && import_react86.default.createElement(Label, { className: "sendbird-form-message__error-label", type: LabelTypography.CAPTION_3 }, errorMessage)
    )
  );
};
var FallbackUserMessage = function(_a3) {
  var isByMe = _a3.isByMe, text2 = _a3.text;
  return import_react86.default.createElement(
    "div",
    { className: getClassName([
      "sendbird-unknown-message-item-body",
      isByMe ? "outgoing" : "incoming"
    ]) },
    import_react86.default.createElement(Label, { className: "sendbird-unknown-message-item-body__description", type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_3 : LabelColors.ONBACKGROUND_3 }, text2)
  );
};
function FormMessageItemBody(props) {
  var _this = this;
  var message = props.message, form = props.form, isByMe = props.isByMe;
  var items = form.items, formId = form.id;
  var stringSet2 = (0, import_react86.useContext)(LocalizationContext).stringSet;
  var config = useSendbirdStateContext().config;
  var logger = config.logger;
  var _a3 = (0, import_react86.useState)(false), submitFailed = _a3[0], setSubmitFailed = _a3[1];
  var _b2 = (0, import_react86.useState)(false), isSubmitTried = _b2[0], setIsSubmitTried = _b2[1];
  var _c = (0, import_react86.useState)(function() {
    var initialFormValues = [];
    items.forEach(function(_a4) {
      var required = _a4.required, style = _a4.style;
      var layout = style.layout, _b3 = style.defaultOptions, defaultOptions3 = _b3 === void 0 ? [] : _b3;
      initialFormValues.push({
        draftValues: layout === "chip" ? defaultOptions3 : [],
        required,
        errorMessage: null,
        isInvalidated: false
      });
    });
    return initialFormValues;
  }), formValues = _c[0], setFormValues = _c[1];
  var isSubmitted = form.isSubmitted;
  var hasError = formValues.some(function(_a4) {
    var errorMessage = _a4.errorMessage;
    return !!errorMessage;
  });
  var hasInvalidated = formValues.some(function(_a4) {
    var isInvalidated = _a4.isInvalidated;
    return isInvalidated;
  });
  var isButtonDisabled = hasError && (isSubmitTried || hasInvalidated) || isSubmitted;
  var handleSubmit = (0, import_react86.useCallback)(function() {
    return __awaiter(_this, void 0, void 0, function() {
      var hasError_1, isMissingRequired, error_1;
      return __generator(this, function(_a4) {
        switch (_a4.label) {
          case 0:
            setIsSubmitTried(true);
            _a4.label = 1;
          case 1:
            _a4.trys.push([1, 3, , 4]);
            hasError_1 = formValues.some(function(_a5) {
              var errorMessage = _a5.errorMessage;
              return errorMessage;
            });
            if (hasError_1) {
              return [
                2
                /*return*/
              ];
            }
            isMissingRequired = formValues.some(function(formValue) {
              return formValue.required && (!formValue.draftValues || formValue.draftValues.length === 0);
            });
            if (isMissingRequired) {
              setFormValues(function(oldFormValues) {
                return oldFormValues.map(function(formValue) {
                  if (formValue.required && formValue.draftValues.length === 0) {
                    return __assign(__assign({}, formValue), { errorMessage: stringSet2.FORM_ITEM_REQUIRED });
                  }
                  return formValue;
                });
              });
              return [
                2
                /*return*/
              ];
            }
            formValues.forEach(function(formValue, index) {
              items[index].draftValues = formValue.draftValues;
            });
            return [4, message.submitMessageForm()];
          case 2:
            _a4.sent();
            return [3, 4];
          case 3:
            error_1 = _a4.sent();
            setSubmitFailed(true);
            logger === null || logger === void 0 ? void 0 : logger.error(error_1);
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [formValues, message.messageId, message.submitMessageForm, formId]);
  if (!isFormVersionCompatible(form.version)) {
    return import_react86.default.createElement(FallbackUserMessage, { isByMe, text: stringSet2.FORM_VERSION_ERROR });
  }
  return import_react86.default.createElement(
    "div",
    { className: getClassName([
      "".concat(TEXT_MESSAGE_BODY_CLASSNAME, " disable-hover"),
      "sendbird-form-message__root",
      "incoming"
    ]) },
    items.map(function(item, index) {
      var _a4;
      var name = item.name, placeholder = item.placeholder, id2 = item.id, required = item.required, style = item.style;
      var _b3 = formValues[index], _c2 = _b3.draftValues, draftValues = _c2 === void 0 ? [] : _c2, errorMessage = _b3.errorMessage;
      return import_react86.default.createElement(FormInput, { key: id2, style, placeHolder: placeholder, values: (_a4 = item.submittedValues) !== null && _a4 !== void 0 ? _a4 : draftValues, isInvalidated: formValues[index].isInvalidated, isSubmitTried, errorMessage, isValid: isSubmitted, isSubmitted, name, required, onFocused: function(isFocus) {
        if (errorMessage && !isFocus && !formValues[index].isInvalidated) {
          setFormValues(function(_a5) {
            var newInputs = _a5.slice(0);
            newInputs[index] = __assign(__assign({}, newInputs[index]), { isInvalidated: true });
            return newInputs;
          });
        } else if (!errorMessage) {
          setFormValues(function(_a5) {
            var newInputs = _a5.slice(0);
            newInputs[index] = __assign(__assign({}, newInputs[index]), { isInvalidated: false });
            return newInputs;
          });
        }
      }, onChange: function(values) {
        setFormValues(function(_a5) {
          var newInputs = _a5.slice(0);
          newInputs[index] = __assign(__assign({}, newInputs[index]), { draftValues: values, errorMessage: function() {
            if (!item.isValid(values)) {
              return stringSet2.FORM_ITEM_INVALID;
            }
            if (required && values.length === 0) {
              return stringSet2.FORM_ITEM_REQUIRED;
            }
            return null;
          }() });
          return newInputs;
        });
      } });
    }),
    import_react86.default.createElement(Button, { className: "sendbird-form-message__submit-button", onClick: handleSubmit, disabled: isButtonDisabled, labelType: LabelTypography.BUTTON_2, labelColor: LabelColors.ONCONTENT_1 }, isSubmitted ? "Submitted successfully" : "Submit"),
    submitFailed && import_react86.default.createElement(MessageFeedbackFailedModal, { text: "Submit failed.", onCancel: function() {
      setSubmitFailed(false);
    } })
  );
}
var MESSAGE_ITEM_BODY_CLASSNAME = "sendbird-message-content__middle__message-item-body";
var MessageBody = function(props) {
  var _a3;
  var _b2 = props.className, className = _b2 === void 0 ? MESSAGE_ITEM_BODY_CLASSNAME : _b2, message = props.message, channel = props.channel, showFileViewer = props.showFileViewer, onMessageHeightChange = props.onMessageHeightChange, onBeforeDownloadFileMessage = props.onBeforeDownloadFileMessage, mouseHover = props.mouseHover, isMobile = props.isMobile, config = props.config, isReactionEnabledInChannel = props.isReactionEnabledInChannel, isByMe = props.isByMe;
  var customSubcomponentsProps = (_a3 = props["customSubcomponentsProps"]) !== null && _a3 !== void 0 ? _a3 : {};
  var threadMessageKindKey = useThreadMessageKindKeySelector({
    isMobile
  });
  var statefulFileInfoList = useFileInfoListWithUploaded(message);
  var messageTypes = getUIKitMessageTypes();
  var isOgMessageEnabledInGroupChannel = (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && config.groupChannel.enableOgtag;
  var isFormMessageEnabledInGroupChannel = (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && config.groupChannel.enableFormTypeMessage;
  var renderUnknownMessageItemBody = function() {
    return import_react86.default.createElement(UnknownMessageItemBody, { className, message, isByMe, mouseHover, isReactionEnabled: isReactionEnabledInChannel });
  };
  return K2(message).when(function(message2) {
    return isFormMessageEnabledInGroupChannel && isFormMessage(message2);
  }, function() {
    return import_react86.default.createElement(FormMessageItemBody, { isByMe, message, form: message.messageForm });
  }).when(isTemplateMessage, function() {
    var _a4, _b3;
    var templatePayload = message.extendedMessagePayload[MESSAGE_TEMPLATE_KEY];
    if (!isValidTemplateMessageType(templatePayload)) {
      (_b3 = (_a4 = config.logger) === null || _a4 === void 0 ? void 0 : _a4.error) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, "TemplateMessageItemBody: invalid type value in message.extendedMessagePayload.message_template.", templatePayload);
      return renderUnknownMessageItemBody();
    }
    return import_react86.default.createElement(TemplateMessageItemBody, { className, message, isByMe, theme: config === null || config === void 0 ? void 0 : config.theme });
  }).when(function(message2) {
    return isOgMessageEnabledInGroupChannel && isSendableMessage2(message2) && isOGMessage(message2);
  }, function() {
    var _a4;
    return import_react86.default.createElement(OGMessageItemBody, { className, message, isByMe, mouseHover, isMentionEnabled: (_a4 = config.groupChannel.enableMention) !== null && _a4 !== void 0 ? _a4 : false, isReactionEnabled: isReactionEnabledInChannel, onMessageHeightChange, isMarkdownEnabled: config.groupChannel.enableMarkdownForUserMessage });
  }).when(isTextMessage, function() {
    var _a4;
    return import_react86.default.createElement(TextMessageItemBody, { className, message, isByMe, mouseHover, isMentionEnabled: (_a4 = config.groupChannel.enableMention) !== null && _a4 !== void 0 ? _a4 : false, isReactionEnabled: isReactionEnabledInChannel, isMarkdownEnabled: config.groupChannel.enableMarkdownForUserMessage });
  }).when(function(message2) {
    return getUIKitMessageType(message2) === messageTypes.FILE;
  }, function() {
    return import_react86.default.createElement(FileMessageItemBody, { className, message, isByMe, mouseHover, isReactionEnabled: isReactionEnabledInChannel, onBeforeDownloadFileMessage });
  }).when(isMultipleFilesMessage, function() {
    var _a4;
    return import_react86.default.createElement(MultipleFilesMessageItemBody, __assign({ className, message, isByMe, mouseHover, isReactionEnabled: isReactionEnabledInChannel, threadMessageKindKey, statefulFileInfoList, onBeforeDownloadFileMessage }, (_a4 = customSubcomponentsProps["MultipleFilesMessageItemBody"]) !== null && _a4 !== void 0 ? _a4 : {}));
  }).when(isVoiceMessage, function() {
    var _a4;
    return import_react86.default.createElement(VoiceMessageItemBody, { className, message, channelUrl: (_a4 = channel === null || channel === void 0 ? void 0 : channel.url) !== null && _a4 !== void 0 ? _a4 : "", isByMe, isReactionEnabled: isReactionEnabledInChannel });
  }).when(isThumbnailMessage, function() {
    var _a4;
    return import_react86.default.createElement(ThumbnailMessageItemBody, __assign({ className, message, isByMe, mouseHover, isReactionEnabled: isReactionEnabledInChannel, showFileViewer, style: isMobile ? { width: "100%" } : {} }, (_a4 = customSubcomponentsProps["ThumbnailMessageItemBody"]) !== null && _a4 !== void 0 ? _a4 : {}));
  }).otherwise(function() {
    return renderUnknownMessageItemBody();
  });
};
var MessageHeader = function(props) {
  var _a3, _b2;
  var channel = props.channel, message = props.message;
  return import_react86.default.createElement(
    Label,
    { className: "sendbird-message-content__middle__sender-name", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 },
    /**
     * To use the latest member profile information, message.sender might be outdated
     */
    ((_b2 = (_a3 = channel === null || channel === void 0 ? void 0 : channel.members) === null || _a3 === void 0 ? void 0 : _a3.find(function(member) {
      var _a4;
      return (member === null || member === void 0 ? void 0 : member.userId) === ((_a4 = message === null || message === void 0 ? void 0 : message.sender) === null || _a4 === void 0 ? void 0 : _a4.userId);
    })) === null || _b2 === void 0 ? void 0 : _b2.nickname) || getSenderName(message)
    // TODO: Divide getting profileUrl logic to utils
  );
};

// node_modules/@sendbird/uikit-react/ui/FeedbackIconButton.js
var import_react87 = __toESM(require_react(), 1);
var FeedbackIconButton = import_react87.default.forwardRef(function(props, ref) {
  var children = props.children, isSelected = props.isSelected, _a3 = props.onClick, onClick = _a3 === void 0 ? function() {
  } : _a3, _b2 = props.disabled, disabled = _b2 === void 0 ? false : _b2;
  return import_react87.default.createElement(
    "button",
    { className: [
      "sendbird-iconbutton__feedback",
      isSelected ? "sendbird-iconbutton__feedback__pressed" : "",
      disabled ? "sendbird-iconbutton__feedback__disabled" : ""
    ].join(" "), ref, type: "button", onClick: function(e4) {
      onClick === null || onClick === void 0 ? void 0 : onClick(e4);
    }, disabled },
    import_react87.default.createElement("span", { className: [
      "sendbird-iconbutton__feedback__inner",
      isSelected ? "sendbird-iconbutton__feedback__inner__pressed" : "",
      disabled ? "sendbird-iconbutton__feedback__inner__disabled" : ""
    ].join(" ") }, children)
  );
});

// node_modules/@sendbird/uikit-react/ui/MobileFeedbackMenu.js
var import_react88 = __toESM(require_react(), 1);
var import_react_dom20 = __toESM(require_react_dom(), 1);
function MobileFeedbackMenu(props) {
  var hideMenu = props.hideMenu, onEditFeedback = props.onEditFeedback, onRemoveFeedback = props.onRemoveFeedback;
  var stringSet2 = useLocalization().stringSet;
  return import_react88.default.createElement(
    BottomSheet,
    { onBackdropClick: hideMenu },
    import_react88.default.createElement(
      "div",
      { className: "sendbird-message__bottomsheet--feedback-options-menu" },
      import_react88.default.createElement(
        "div",
        { className: "sendbird-message__bottomsheet--feedback-option", onClick: function() {
          hideMenu();
          onEditFeedback();
        } },
        import_react88.default.createElement(Label, { type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.EDIT_COMMENT)
      ),
      import_react88.default.createElement(
        "div",
        { className: "sendbird-message__bottomsheet--feedback-option", onClick: function() {
          hideMenu();
          onRemoveFeedback();
        } },
        import_react88.default.createElement(Label, { type: LabelTypography.BODY_1, color: LabelColors.ERROR }, stringSet2.REMOVE_FEEDBACK)
      )
    )
  );
}

// node_modules/@sendbird/uikit-react/ui/MessageFeedbackModal.js
var import_react90 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ui/Input.js
var import_react89 = __toESM(require_react(), 1);
var InputLabel2 = function(_a3) {
  var children = _a3.children;
  return import_react89.default.createElement(Label, { className: "sendbird-input-label", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_1 }, children);
};
var Input = import_react89.default.forwardRef(function(props, ref) {
  var name = props.name, required = props.required, disabled = props.disabled, value = props.value, placeHolder = props.placeHolder, _a3 = props.autoFocus, autoFocus = _a3 === void 0 ? false : _a3;
  var _b2 = (0, import_react89.useState)(value), inputValue = _b2[0], setInputValue = _b2[1];
  return import_react89.default.createElement(
    "div",
    { className: "sendbird-input" },
    import_react89.default.createElement("input", { className: "sendbird-input__input", ref, name, required, disabled, value: inputValue, onChange: function(e4) {
      setInputValue(e4.target.value);
    }, autoFocus }),
    placeHolder && !inputValue && import_react89.default.createElement(Label, { className: "sendbird-input__placeholder", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_3 }, placeHolder)
  );
});

// node_modules/@sendbird/uikit-react/ui/MessageFeedbackModal.js
var import_react_dom21 = __toESM(require_react_dom(), 1);
function MessageFeedbackModal(props) {
  var _a3, _b2;
  var selectedFeedback = props.selectedFeedback, message = props.message, onClose = props.onClose, onSubmit = props.onSubmit, onUpdate = props.onUpdate, onRemove = props.onRemove;
  var stringSet2 = (0, import_react90.useContext)(LocalizationContext).stringSet;
  var isMobile = useMediaQueryContext().isMobile;
  var isEdit = (message === null || message === void 0 ? void 0 : message.myFeedback) && selectedFeedback === message.myFeedback.rating;
  var hasComment = (_a3 = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _a3 === void 0 ? void 0 : _a3.comment;
  var onSubmitWrapper = function() {
    var _a4, _b3, _c;
    if (!selectedFeedback)
      return;
    var comment = (_b3 = (_a4 = inputRef.current) === null || _a4 === void 0 ? void 0 : _a4.value) !== null && _b3 !== void 0 ? _b3 : "";
    if (isEdit) {
      if (comment !== ((_c = message.myFeedback) === null || _c === void 0 ? void 0 : _c.comment)) {
        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(selectedFeedback, comment);
      } else {
        onClose === null || onClose === void 0 ? void 0 : onClose();
      }
    } else if (!message.myFeedback) {
      onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit(selectedFeedback, comment);
    }
  };
  var modalRef = (0, import_react90.useRef)();
  var inputRef = (0, import_react90.useRef)();
  var onKeyDown = useKeyDown(modalRef, {
    Enter: function() {
      return onSubmitWrapper();
    },
    Escape: function() {
      return onClose === null || onClose === void 0 ? void 0 : onClose();
    }
  });
  return import_react90.default.createElement(
    "div",
    { onKeyDown },
    import_react90.default.createElement(
      Modal,
      { contentClassName: "sendbird-message-feedback-modal-content__mobile", type: ButtonTypes.PRIMARY, onCancel: onClose, onSubmit: function() {
        onSubmitWrapper();
      }, submitText: stringSet2.BUTTON__SUBMIT, renderHeader: function() {
        return import_react90.default.createElement(
          "div",
          { className: "sendbird-modal__header" },
          import_react90.default.createElement(Label, { type: LabelTypography.H_1, color: LabelColors.ONBACKGROUND_1, className: "sendbird-message-feedback-modal-header" }, stringSet2.FEEDBACK_MODAL_TITLE)
        );
      }, customFooter: import_react90.default.createElement(
        "div",
        { className: "sendbird-message-feedback-modal-footer__root" },
        !isMobile && (message === null || message === void 0 ? void 0 : message.myFeedback) && selectedFeedback === message.myFeedback.rating ? import_react90.default.createElement(Button, { type: ButtonTypes.WARNING, onClick: onRemove, labelType: LabelTypography.BUTTON_3 }, stringSet2.BUTTON__REMOVE_FEEDBACK) : import_react90.default.createElement("div", null),
        import_react90.default.createElement(
          "div",
          { className: "sendbird-message-feedback-modal-footer__right-content" },
          import_react90.default.createElement(
            Button,
            { type: ButtonTypes.SECONDARY, onClick: onClose },
            import_react90.default.createElement(Label, { type: LabelTypography.BUTTON_3, color: LabelColors.ONBACKGROUND_1 }, stringSet2.BUTTON__CANCEL)
          ),
          import_react90.default.createElement(
            Button,
            { onClick: function() {
              return onSubmitWrapper();
            } },
            import_react90.default.createElement(Label, { type: LabelTypography.BUTTON_3, color: LabelColors.ONCONTENT_1 }, hasComment ? stringSet2.BUTTON__SAVE : stringSet2.BUTTON__SUBMIT)
          )
        )
      ) },
      import_react90.default.createElement(
        "div",
        { className: "sendbird-message-feedback-modal-body__root" },
        import_react90.default.createElement(Input, { name: "sendbird-message-feedback-modal-body__root", ref: inputRef, value: isEdit ? (_b2 = message.myFeedback) === null || _b2 === void 0 ? void 0 : _b2.comment : void 0, placeHolder: stringSet2.FEEDBACK_CONTENT_PLACEHOLDER, autoFocus: true })
      )
    )
  );
}

// node_modules/@sendbird/uikit-react/chunks/bundle-D634UqaM.js
var import_react91 = __toESM(require_react(), 1);
function useElementObserver(selector, targetElement) {
  var _a3 = (0, import_react91.useState)(false), isElementMounted = _a3[0], setIsElementMounted = _a3[1];
  (0, import_react91.useEffect)(function() {
    var targetElements = Array.isArray(targetElement) ? targetElement : [targetElement];
    var updateElementState = function() {
      var _a4;
      var elements = targetElements === null || targetElements === void 0 ? void 0 : targetElements.map(function(target) {
        return target === null || target === void 0 ? void 0 : target.querySelector(selector);
      });
      setIsElementMounted((_a4 = elements === null || elements === void 0 ? void 0 : elements.some(function(element) {
        return !!element;
      })) !== null && _a4 !== void 0 ? _a4 : false);
    };
    updateElementState();
    var observerCallback = function(mutations) {
      mutations.forEach(function(mutation) {
        if (mutation.addedNodes.length || mutation.removedNodes.length) {
          Array.from(mutation.addedNodes).forEach(function(node) {
            if (node.nodeType === Node.ELEMENT_NODE && node.matches(selector)) {
              setIsElementMounted(true);
            }
          });
          Array.from(mutation.removedNodes).forEach(function(node) {
            if (node.nodeType === Node.ELEMENT_NODE && node.matches(selector)) {
              setIsElementMounted(false);
            }
          });
        }
      });
    };
    var observer = new MutationObserver(observerCallback);
    var observerOptions = {
      childList: true,
      // Observe addition and removal of child nodes
      subtree: true
      // Observe the entire subtree
    };
    targetElements === null || targetElements === void 0 ? void 0 : targetElements.forEach(function(target) {
      if (target)
        observer.observe(target, observerOptions);
    });
    return function() {
      observer.disconnect();
    };
  }, [selector, targetElement]);
  return isElementMounted;
}

// node_modules/@sendbird/uikit-react/ui/MessageContent.js
var import_react_dom22 = __toESM(require_react_dom(), 1);
var SbFeedbackStatus;
(function(SbFeedbackStatus2) {
  SbFeedbackStatus2["NOT_APPLICABLE"] = "NOT_APPLICABLE";
  SbFeedbackStatus2["NO_FEEDBACK"] = "NO_FEEDBACK";
  SbFeedbackStatus2["SUBMITTED"] = "SUBMITTED";
})(SbFeedbackStatus || (SbFeedbackStatus = {}));
function MessageContentForTemplateMessage(props) {
  var _a3, _b2, _c;
  var channel = props.channel, message = props.message, showFileViewer = props.showFileViewer, onMessageHeightChange = props.onMessageHeightChange, onBeforeDownloadFileMessage = props.onBeforeDownloadFileMessage, renderSenderProfile = props.renderSenderProfile, renderMessageHeader = props.renderMessageHeader, renderMessageBody = props.renderMessageBody, isByMe = props.isByMe, displayThreadReplies = props.displayThreadReplies, mouseHover = props.mouseHover, isMobile = props.isMobile, isReactionEnabledInChannel = props.isReactionEnabledInChannel, hoveredMenuClassName = props.hoveredMenuClassName, templateType = props.templateType, useReplying = props.useReplying;
  var config = useSendbirdStateContext().config;
  var dateLocale = useLocalization().dateLocale;
  var uiContainerTypeClassName = (_a3 = uiContainerType[templateType]) !== null && _a3 !== void 0 ? _a3 : "";
  var senderProfile = renderSenderProfile(__assign(__assign({}, props), { chainBottom: false, className: "", isByMe, displayThreadReplies }));
  var messageHeader = renderMessageHeader(props);
  var messageBody = renderMessageBody({
    message,
    channel,
    showFileViewer,
    onMessageHeightChange,
    mouseHover,
    isMobile,
    config,
    isReactionEnabledInChannel,
    isByMe,
    onBeforeDownloadFileMessage
  });
  var timeStamp = import_react92.default.createElement(Label, { className: classnames("sendbird-message-content__middle__body-container__created-at", "right", hoveredMenuClassName, uiContainerTypeClassName), type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, format((message === null || message === void 0 ? void 0 : message.createdAt) || 0, "p", {
    locale: dateLocale
  }));
  var templateData = (_b2 = message.extendedMessagePayload) === null || _b2 === void 0 ? void 0 : _b2[MESSAGE_TEMPLATE_KEY];
  var _d = (_c = templateData === null || templateData === void 0 ? void 0 : templateData.container_options) !== null && _c !== void 0 ? _c : {}, _e3 = _d.profile, profile = _e3 === void 0 ? true : _e3, _f = _d.time, time = _f === void 0 ? true : _f, _g2 = _d.nickname, nickname = _g2 === void 0 ? true : _g2;
  var hasContainerHeader = profile || nickname;
  return import_react92.default.createElement(
    "div",
    { className: "sendbird-message-content__sendbird-ui-container-type__default__root" },
    !isByMe && hasContainerHeader && !useReplying && import_react92.default.createElement(
      "div",
      { className: "sendbird-message-content__sendbird-ui-container-type__default__header-container" },
      import_react92.default.createElement("div", { className: "sendbird-message-content__sendbird-ui-container-type__default__header-container__left__profile" }, profile && senderProfile),
      nickname && messageHeader
    ),
    messageBody,
    !isByMe && time && import_react92.default.createElement("div", { className: "sendbird-message-content__sendbird-ui-container-type__default__bottom" }, timeStamp)
  );
}
function MessageContent(props) {
  var _this = this;
  var _a3, _b2, _c, _d, _e3, _f, _g2, _h, _j, _k, _l, _m, _o2;
  var className = props.className, userId = props.userId, channel = props.channel, message = props.message, _p = props.disabled, disabled = _p === void 0 ? false : _p, _q = props.chainTop, chainTop = _q === void 0 ? false : _q, _r2 = props.chainBottom, chainBottom = _r2 === void 0 ? false : _r2, _s4 = props.isReactionEnabled, isReactionEnabled = _s4 === void 0 ? false : _s4, _t3 = props.disableQuoteMessage, disableQuoteMessage = _t3 === void 0 ? false : _t3, replyType = props.replyType, threadReplySelectType = props.threadReplySelectType, nicknamesMap = props.nicknamesMap, emojiContainer = props.emojiContainer, scrollToMessage = props.scrollToMessage, showEdit = props.showEdit, showRemove = props.showRemove, showFileViewer = props.showFileViewer, resendMessage = props.resendMessage, deleteMessage = props.deleteMessage, toggleReaction = props.toggleReaction, setQuoteMessage = props.setQuoteMessage, onReplyInThread = props.onReplyInThread, onQuoteMessageClick = props.onQuoteMessageClick, onMessageHeightChange = props.onMessageHeightChange, onBeforeDownloadFileMessage = props.onBeforeDownloadFileMessage, filterEmojiCategoryIds = props.filterEmojiCategoryIds;
  var _u = deleteNullish(props), _v = _u.renderSenderProfile, renderSenderProfile = _v === void 0 ? function(props2) {
    return import_react92.default.createElement(MessageProfile, __assign({}, props2));
  } : _v, _w = _u.renderMessageBody, renderMessageBody = _w === void 0 ? function(props2) {
    return import_react92.default.createElement(MessageBody, __assign({}, props2));
  } : _w, _x = _u.renderMessageHeader, renderMessageHeader = _x === void 0 ? function(props2) {
    return import_react92.default.createElement(MessageHeader, __assign({}, props2));
  } : _x, _y = _u.renderMessageMenu, renderMessageMenu = _y === void 0 ? function(props2) {
    return import_react92.default.createElement(MessageMenu, __assign({}, props2));
  } : _y, _z = _u.renderEmojiMenu, renderEmojiMenu = _z === void 0 ? function(props2) {
    return import_react92.default.createElement(MessageEmojiMenu, __assign({}, props2));
  } : _z, _0 = _u.renderEmojiReactions, renderEmojiReactions = _0 === void 0 ? function(props2) {
    return import_react92.default.createElement(EmojiReactions, __assign({}, props2));
  } : _0, _1 = _u.renderMobileMenuOnLongPress, renderMobileMenuOnLongPress = _1 === void 0 ? function(props2) {
    return import_react92.default.createElement(MobileMenu, __assign({}, props2));
  } : _1;
  var _2 = useLocalization(), dateLocale = _2.dateLocale, stringSet2 = _2.stringSet;
  var _3 = useSendbirdStateContext(), config = _3.config, eventHandlers = _3.eventHandlers;
  var logger = config.logger;
  var onPressUserProfileHandler = (_a3 = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.reaction) === null || _a3 === void 0 ? void 0 : _a3.onPressUserProfile;
  var contentRef = (0, import_react92.useRef)();
  var threadRepliesRef = (0, import_react92.useRef)();
  var feedbackButtonsRef = (0, import_react92.useRef)();
  var isMobile = useMediaQueryContext().isMobile;
  var _4 = (0, import_react92.useState)(false), showMenu = _4[0], setShowMenu = _4[1];
  var _5 = (0, import_react92.useState)(false), mouseHover = _5[0], setMouseHover = _5[1];
  var isMenuMounted = useElementObserver("#".concat(getObservingId(message.messageId), ".").concat(MENU_OBSERVING_CLASS_NAME), [
    document.getElementById(MENU_ROOT_ID),
    document.getElementById(EMOJI_MENU_ROOT_ID)
  ]);
  var _6 = (0, import_react92.useState)(false), showFeedbackOptionsMenu = _6[0], setShowFeedbackOptionsMenu = _6[1];
  var _7 = (0, import_react92.useState)(false), showFeedbackModal = _7[0], setShowFeedbackModal = _7[1];
  var _8 = (0, import_react92.useState)(""), feedbackFailedText = _8[0], setFeedbackFailedText = _8[1];
  var isByMe = userId === ((_b2 = message === null || message === void 0 ? void 0 : message.sender) === null || _b2 === void 0 ? void 0 : _b2.userId) || (message === null || message === void 0 ? void 0 : message.sendingStatus) === "pending" || (message === null || message === void 0 ? void 0 : message.sendingStatus) === "failed";
  var isByMeClassName = isByMe ? "outgoing" : "incoming";
  var chainTopClassName = chainTop ? "chain-top" : "";
  var isReactionEnabledInChannel = isReactionEnabled && !(channel === null || channel === void 0 ? void 0 : channel.isEphemeral);
  var isReactionEnabledClassName = isReactionEnabledInChannel ? "use-reactions" : "";
  var hoveredMenuClassName = isMenuMounted ? "sendbird-mouse-hover" : "";
  var useReplying = !!((replyType === "QUOTE_REPLY" || replyType === "THREAD") && (message === null || message === void 0 ? void 0 : message.parentMessageId) && (message === null || message === void 0 ? void 0 : message.parentMessage) && !disableQuoteMessage);
  var useReplyingClassName = useReplying ? "use-quote" : "";
  var displayThreadReplies = ((_c = message === null || message === void 0 ? void 0 : message.threadInfo) === null || _c === void 0 ? void 0 : _c.replyCount) && message.threadInfo.replyCount > 0 && replyType === "THREAD";
  var isFeedbackMessage = !isByMe && !!(message === null || message === void 0 ? void 0 : message.myFeedbackStatus) && message.myFeedbackStatus !== SbFeedbackStatus.NOT_APPLICABLE;
  var isFeedbackEnabled = !!((_d = config === null || config === void 0 ? void 0 : config.groupChannel) === null || _d === void 0 ? void 0 : _d.enableFeedback) && isFeedbackMessage;
  var hasFeedback = (_e3 = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _e3 === void 0 ? void 0 : _e3.rating;
  var isNotSpecialMessage = !(isTemplateMessage(message) || isFormMessage(message));
  var showLongPressMenu = isNotSpecialMessage && isMobile;
  var showOutgoingMenu = isNotSpecialMessage && isByMe && !isMobile;
  var showThreadReplies = isNotSpecialMessage && displayThreadReplies;
  var showRightContent = isNotSpecialMessage && !isByMe && !isMobile;
  var getTotalBottom = function() {
    var sum = 2;
    if (threadRepliesRef.current) {
      sum += 4 + threadRepliesRef.current.clientHeight;
    }
    if (feedbackButtonsRef.current) {
      sum += 4 + feedbackButtonsRef.current.clientHeight;
    }
    return sum;
  };
  var totalBottom = (0, import_react92.useMemo)(function() {
    return getTotalBottom();
  }, []);
  var onCloseFeedbackForm = function() {
    setShowFeedbackModal(false);
  };
  var openFeedbackFormOrMenu = function(hasFeedback2) {
    if (hasFeedback2 === void 0) {
      hasFeedback2 = false;
    }
    if (isMobile && hasFeedback2) {
      setShowFeedbackOptionsMenu(true);
    } else {
      setShowFeedbackModal(true);
    }
  };
  var longPress = useLongPress({
    onLongPress: function() {
      if (showLongPressMenu) {
        setShowMenu(true);
      }
    },
    onClick: noop
  }, {
    delay: 300,
    shouldPreventDefault: false
  });
  if (isAdminMessage(message)) {
    return import_react92.default.createElement(AdminMessage, { message });
  }
  if (isTemplateMessage(message)) {
    var templatePayload = message.extendedMessagePayload[MESSAGE_TEMPLATE_KEY];
    if (isValidTemplateMessageType(templatePayload)) {
      return import_react92.default.createElement(MessageContentForTemplateMessage, __assign({}, props, { renderSenderProfile, renderMessageHeader, renderMessageBody, isByMe, displayThreadReplies, mouseHover, isMobile, isReactionEnabledInChannel, hoveredMenuClassName, templateType: templatePayload["type"], useReplying }));
    }
  }
  return import_react92.default.createElement(
    "div",
    { className: getClassName([
      className !== null && className !== void 0 ? className : "",
      "sendbird-message-content",
      isByMeClassName
    ]), onMouseOver: function() {
      return setMouseHover(true);
    }, onMouseLeave: function() {
      return setMouseHover(false);
    } },
    import_react92.default.createElement(
      "div",
      { className: classnames("sendbird-message-content__left", isReactionEnabledClassName, isByMeClassName, useReplyingClassName), "data-testid": "sendbird-message-content__left" },
      renderSenderProfile(__assign(__assign({}, props), { className: "sendbird-message-content__left__avatar", isByMe, displayThreadReplies, bottom: totalBottom > 0 ? totalBottom + "px" : "" })),
      showOutgoingMenu && import_react92.default.createElement(
        "div",
        { className: classnames("sendbird-message-content-menu", isReactionEnabledClassName, hoveredMenuClassName, isByMeClassName) },
        renderMessageMenu({
          channel,
          message,
          isByMe,
          replyType,
          showEdit,
          showRemove,
          resendMessage,
          setQuoteMessage,
          onReplyInThread: function(_a4) {
            var _b3, _c2;
            var message2 = _a4.message;
            if (threadReplySelectType === ThreadReplySelectType.THREAD) {
              onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({ message: message2 });
            } else if (threadReplySelectType === ThreadReplySelectType.PARENT) {
              scrollToMessage === null || scrollToMessage === void 0 ? void 0 : scrollToMessage((_c2 = (_b3 = message2.parentMessage) === null || _b3 === void 0 ? void 0 : _b3.createdAt) !== null && _c2 !== void 0 ? _c2 : 0, message2.parentMessageId);
            }
          },
          deleteMessage
        }),
        isReactionEnabledInChannel && renderEmojiMenu({
          message,
          userId,
          emojiContainer,
          toggleReaction,
          filterEmojiCategoryIds
        })
      )
    ),
    import_react92.default.createElement(
      "div",
      __assign({ className: classnames("sendbird-message-content__middle"), "data-testid": "sendbird-message-content__middle" }, isMobile ? __assign({}, longPress) : {}, { ref: contentRef }),
      !isByMe && !chainTop && !useReplying && renderMessageHeader(props),
      useReplying ? import_react92.default.createElement(
        "div",
        { className: classnames("sendbird-message-content__middle__quote-message", isByMe ? "outgoing" : "incoming", useReplyingClassName), "data-testid": "sendbird-message-content__middle__quote-message" },
        import_react92.default.createElement(QuoteMessage, { className: "sendbird-message-content__middle__quote-message__quote", message, userId, isByMe, isUnavailable: ((_f = channel === null || channel === void 0 ? void 0 : channel.messageOffsetTimestamp) !== null && _f !== void 0 ? _f : 0) > ((_h = (_g2 = message.parentMessage) === null || _g2 === void 0 ? void 0 : _g2.createdAt) !== null && _h !== void 0 ? _h : 0), onClick: function() {
          var _a4;
          if (replyType === "THREAD" && threadReplySelectType === ThreadReplySelectType.THREAD) {
            onQuoteMessageClick === null || onQuoteMessageClick === void 0 ? void 0 : onQuoteMessageClick({ message });
          }
          if ((replyType === "QUOTE_REPLY" || replyType === "THREAD" && threadReplySelectType === ThreadReplySelectType.PARENT) && ((_a4 = message === null || message === void 0 ? void 0 : message.parentMessage) === null || _a4 === void 0 ? void 0 : _a4.createdAt) && (message === null || message === void 0 ? void 0 : message.parentMessageId)) {
            scrollToMessage === null || scrollToMessage === void 0 ? void 0 : scrollToMessage(message.parentMessage.createdAt, message.parentMessageId);
          }
        } })
      ) : null,
      import_react92.default.createElement(
        "div",
        { className: classnames("sendbird-message-content__middle__body-container") },
        isByMe && !chainBottom && import_react92.default.createElement(
          "div",
          { className: classnames("sendbird-message-content__middle__body-container__created-at", "left", hoveredMenuClassName) },
          import_react92.default.createElement(
            "div",
            { className: "sendbird-message-content__middle__body-container__created-at__component-container" },
            import_react92.default.createElement(MessageStatus, { message, channel })
          )
        ),
        renderMessageBody({
          message,
          channel,
          showFileViewer,
          onMessageHeightChange,
          mouseHover,
          isMobile,
          config,
          isReactionEnabledInChannel,
          isByMe,
          onBeforeDownloadFileMessage
        }),
        isReactionEnabledInChannel && ((_j = message === null || message === void 0 ? void 0 : message.reactions) === null || _j === void 0 ? void 0 : _j.length) > 0 && import_react92.default.createElement("div", { className: classnames("sendbird-message-content-reactions", isMultipleFilesMessage(message) ? "image-grid" : isByMe && !isThumbnailMessage(message) && !isOGMessage(message) && "primary", mouseHover && "mouse-hover") }, renderEmojiReactions({
          userId,
          message,
          channel,
          isByMe,
          // @ts-ignore
          emojiContainer: emojiContainer !== null && emojiContainer !== void 0 ? emojiContainer : new mt2({}),
          memberNicknamesMap: nicknamesMap !== null && nicknamesMap !== void 0 ? nicknamesMap : /* @__PURE__ */ new Map(),
          toggleReaction,
          onPressUserProfile: onPressUserProfileHandler,
          filterEmojiCategoryIds
        })),
        !isByMe && !chainBottom && import_react92.default.createElement(Label, { className: classnames("sendbird-message-content__middle__body-container__created-at", "right", hoveredMenuClassName), type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, format((message === null || message === void 0 ? void 0 : message.createdAt) || 0, stringSet2.DATE_FORMAT__MESSAGE_CREATED_AT, {
          locale: dateLocale
        }))
      ),
      showThreadReplies && (message === null || message === void 0 ? void 0 : message.threadInfo) && import_react92.default.createElement(ThreadReplies$1, { className: "sendbird-message-content__middle__thread-replies", threadInfo: message === null || message === void 0 ? void 0 : message.threadInfo, onClick: function() {
        return onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({ message });
      }, ref: threadRepliesRef }),
      isFeedbackEnabled && import_react92.default.createElement(
        "div",
        { className: "sendbird-message-content__middle__body-container__feedback-buttons-container", ref: feedbackButtonsRef },
        import_react92.default.createElement(
          FeedbackIconButton,
          { isSelected: ((_k = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _k === void 0 ? void 0 : _k.rating) === xe2.GOOD, onClick: function() {
            return __awaiter(_this, void 0, void 0, function() {
              var error_1;
              var _a4, _b3;
              return __generator(this, function(_c2) {
                switch (_c2.label) {
                  case 0:
                    if (!!hasFeedback) return [3, 5];
                    _c2.label = 1;
                  case 1:
                    _c2.trys.push([1, 3, , 4]);
                    return [4, message.submitFeedback({
                      rating: xe2.GOOD
                    })];
                  case 2:
                    _c2.sent();
                    openFeedbackFormOrMenu();
                    return [3, 4];
                  case 3:
                    error_1 = _c2.sent();
                    (_b3 = (_a4 = config === null || config === void 0 ? void 0 : config.logger) === null || _a4 === void 0 ? void 0 : _a4.error) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, "Channel: Submit feedback failed.", error_1);
                    setFeedbackFailedText(stringSet2.FEEDBACK_FAILED_SUBMIT);
                    return [3, 4];
                  case 4:
                    return [3, 6];
                  case 5:
                    openFeedbackFormOrMenu(true);
                    _c2.label = 6;
                  case 6:
                    return [
                      2
                      /*return*/
                    ];
                }
              });
            });
          }, disabled: !!(message === null || message === void 0 ? void 0 : message.myFeedback) && message.myFeedback.rating !== xe2.GOOD },
          import_react92.default.createElement(Icon, { type: IconTypes.FEEDBACK_LIKE, width: "24px", height: "24px" })
        ),
        import_react92.default.createElement(
          FeedbackIconButton,
          { isSelected: ((_l = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _l === void 0 ? void 0 : _l.rating) === xe2.BAD, onClick: function() {
            return __awaiter(_this, void 0, void 0, function() {
              var error_2;
              var _a4, _b3;
              return __generator(this, function(_c2) {
                switch (_c2.label) {
                  case 0:
                    if (!!hasFeedback) return [3, 5];
                    _c2.label = 1;
                  case 1:
                    _c2.trys.push([1, 3, , 4]);
                    return [4, message.submitFeedback({
                      rating: xe2.BAD
                    })];
                  case 2:
                    _c2.sent();
                    openFeedbackFormOrMenu();
                    return [3, 4];
                  case 3:
                    error_2 = _c2.sent();
                    (_b3 = (_a4 = config === null || config === void 0 ? void 0 : config.logger) === null || _a4 === void 0 ? void 0 : _a4.error) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, "Channel: Submit feedback failed.", error_2);
                    setFeedbackFailedText(stringSet2.FEEDBACK_FAILED_SUBMIT);
                    return [3, 4];
                  case 4:
                    return [3, 6];
                  case 5:
                    openFeedbackFormOrMenu(true);
                    _c2.label = 6;
                  case 6:
                    return [
                      2
                      /*return*/
                    ];
                }
              });
            });
          }, disabled: !!(message === null || message === void 0 ? void 0 : message.myFeedback) && message.myFeedback.rating !== xe2.BAD },
          import_react92.default.createElement(Icon, { type: IconTypes.FEEDBACK_DISLIKE, width: "24px", height: "24px" })
        )
      )
    ),
    showRightContent && import_react92.default.createElement(
      "div",
      { className: classnames("sendbird-message-content__right", chainTopClassName, isReactionEnabledClassName, useReplyingClassName), "data-testid": "sendbird-message-content__right" },
      import_react92.default.createElement(
        "div",
        { className: classnames("sendbird-message-content-menu", chainTopClassName, hoveredMenuClassName, isByMeClassName) },
        isReactionEnabledInChannel && renderEmojiMenu({
          className: "sendbird-message-content-menu__reaction-menu",
          message,
          userId,
          emojiContainer,
          toggleReaction,
          filterEmojiCategoryIds
        }),
        renderMessageMenu({
          className: "sendbird-message-content-menu__normal-menu",
          channel,
          message,
          isByMe,
          replyType,
          showRemove,
          resendMessage,
          setQuoteMessage,
          onReplyInThread: function(_a4) {
            var _b3, _c2;
            var message2 = _a4.message;
            if (threadReplySelectType === ThreadReplySelectType.THREAD) {
              onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({ message: message2 });
            } else if (threadReplySelectType === ThreadReplySelectType.PARENT) {
              scrollToMessage === null || scrollToMessage === void 0 ? void 0 : scrollToMessage((_c2 = (_b3 = message2.parentMessage) === null || _b3 === void 0 ? void 0 : _b3.createdAt) !== null && _c2 !== void 0 ? _c2 : 0, message2.parentMessageId);
            }
          },
          deleteMessage
        })
      )
    ),
    showMenu && isSendableMessage2(message) && channel && renderMobileMenuOnLongPress({
      parentRef: contentRef,
      channel,
      hideMenu: function() {
        setShowMenu(false);
      },
      message,
      isReactionEnabled: isReactionEnabledInChannel,
      isByMe,
      userId,
      replyType,
      disabled,
      showRemove,
      emojiContainer,
      resendMessage,
      deleteMessage,
      setQuoteMessage,
      toggleReaction,
      showEdit,
      onReplyInThread: function(_a4) {
        var _b3;
        var message2 = _a4.message;
        if (threadReplySelectType === ThreadReplySelectType.THREAD) {
          onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({ message: message2 });
        } else if (threadReplySelectType === ThreadReplySelectType.PARENT) {
          scrollToMessage === null || scrollToMessage === void 0 ? void 0 : scrollToMessage(((_b3 = message2 === null || message2 === void 0 ? void 0 : message2.parentMessage) === null || _b3 === void 0 ? void 0 : _b3.createdAt) || 0, (message2 === null || message2 === void 0 ? void 0 : message2.parentMessageId) || 0);
        }
      },
      onDownloadClick: function(e4) {
        return __awaiter(_this, void 0, void 0, function() {
          var allowDownload, err_1;
          var _a4, _b3;
          return __generator(this, function(_c2) {
            switch (_c2.label) {
              case 0:
                if (!onBeforeDownloadFileMessage) {
                  return [
                    2
                    /*return*/
                  ];
                }
                _c2.label = 1;
              case 1:
                _c2.trys.push([1, 3, , 4]);
                return [4, onBeforeDownloadFileMessage({ message })];
              case 2:
                allowDownload = _c2.sent();
                if (!allowDownload) {
                  e4.preventDefault();
                  (_a4 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "MessageContent: Not allowed to download.");
                }
                return [3, 4];
              case 3:
                err_1 = _c2.sent();
                (_b3 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _b3 === void 0 ? void 0 : _b3.call(logger, "MessageContent: Error occurred while determining download continuation:", err_1);
                return [3, 4];
              case 4:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }
    }),
    ((_m = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _m === void 0 ? void 0 : _m.rating) && showFeedbackOptionsMenu && import_react92.default.createElement(MobileFeedbackMenu, { hideMenu: function() {
      setShowFeedbackOptionsMenu(false);
    }, onEditFeedback: function() {
      setShowFeedbackOptionsMenu(false);
      setShowFeedbackModal(true);
    }, onRemoveFeedback: function() {
      return __awaiter(_this, void 0, void 0, function() {
        var error_3;
        var _a4, _b3;
        return __generator(this, function(_c2) {
          switch (_c2.label) {
            case 0:
              _c2.trys.push([0, 3, , 4]);
              if (!(message.myFeedback !== null)) return [3, 2];
              return [4, message.deleteFeedback(message.myFeedback.id)];
            case 1:
              _c2.sent();
              _c2.label = 2;
            case 2:
              return [3, 4];
            case 3:
              error_3 = _c2.sent();
              (_b3 = (_a4 = config === null || config === void 0 ? void 0 : config.logger) === null || _a4 === void 0 ? void 0 : _a4.error) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, "Channel: Delete feedback failed.", error_3);
              setFeedbackFailedText(stringSet2.FEEDBACK_FAILED_DELETE);
              return [3, 4];
            case 4:
              setShowFeedbackOptionsMenu(false);
              return [
                2
                /*return*/
              ];
          }
        });
      });
    } }),
    ((_o2 = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _o2 === void 0 ? void 0 : _o2.rating) && showFeedbackModal && import_react92.default.createElement(MessageFeedbackModal, { selectedFeedback: message.myFeedback.rating, message, onUpdate: function(selectedFeedback, comment) {
      return __awaiter(_this, void 0, void 0, function() {
        var newFeedback, error_4;
        var _a4, _b3;
        return __generator(this, function(_c2) {
          switch (_c2.label) {
            case 0:
              if (!(message.myFeedback !== null)) return [3, 4];
              newFeedback = new Be2({
                id: message.myFeedback.id,
                rating: selectedFeedback,
                comment
              });
              _c2.label = 1;
            case 1:
              _c2.trys.push([1, 3, , 4]);
              return [4, message.updateFeedback(newFeedback)];
            case 2:
              _c2.sent();
              return [3, 4];
            case 3:
              error_4 = _c2.sent();
              (_b3 = (_a4 = config === null || config === void 0 ? void 0 : config.logger) === null || _a4 === void 0 ? void 0 : _a4.error) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, "Channel: Update feedback failed.", error_4);
              setFeedbackFailedText(stringSet2.FEEDBACK_FAILED_SAVE);
              return [3, 4];
            case 4:
              onCloseFeedbackForm();
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }, onClose: onCloseFeedbackForm, onRemove: function() {
      return __awaiter(_this, void 0, void 0, function() {
        var error_5;
        var _a4, _b3;
        return __generator(this, function(_c2) {
          switch (_c2.label) {
            case 0:
              _c2.trys.push([0, 3, , 4]);
              if (!(message.myFeedback !== null)) return [3, 2];
              return [4, message.deleteFeedback(message.myFeedback.id)];
            case 1:
              _c2.sent();
              _c2.label = 2;
            case 2:
              return [3, 4];
            case 3:
              error_5 = _c2.sent();
              (_b3 = (_a4 = config === null || config === void 0 ? void 0 : config.logger) === null || _a4 === void 0 ? void 0 : _a4.error) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, "Channel: Delete feedback failed.", error_5);
              setFeedbackFailedText(stringSet2.FEEDBACK_FAILED_DELETE);
              return [3, 4];
            case 4:
              onCloseFeedbackForm();
              return [
                2
                /*return*/
              ];
          }
        });
      });
    } }),
    feedbackFailedText && import_react92.default.createElement(MessageFeedbackFailedModal, { text: feedbackFailedText, onCancel: function() {
      setFeedbackFailedText("");
    } })
  );
}

// node_modules/@sendbird/uikit-react/GroupChannel/components/SuggestedReplies.js
var import_react93 = __toESM(require_react(), 1);
var ReplyItem = function(_a3) {
  var value = _a3.value, onClickReply = _a3.onClickReply, _b2 = _a3.type, type = _b2 === void 0 ? "vertical" : _b2;
  return import_react93.default.createElement("div", { className: "sendbird-suggested-replies__option ".concat(type), id: value, onClick: function(e4) {
    return onClickReply(e4, value);
  } }, value);
};
var SuggestedReplies = function(_a3) {
  var replyOptions = _a3.replyOptions, onSendMessage = _a3.onSendMessage, _b2 = _a3.type, type = _b2 === void 0 ? "vertical" : _b2;
  var _c = (0, import_react93.useState)(false), replied = _c[0], setReplied = _c[1];
  var onClickReply = function(event, option) {
    event.preventDefault();
    onSendMessage({ message: option });
    setReplied(true);
  };
  if (replied) {
    return null;
  }
  var children = replyOptions.map(function(option, index) {
    return import_react93.default.createElement(ReplyItem, { key: index, value: option, onClickReply, type });
  });
  return import_react93.default.createElement("div", { className: "sendbird-suggested-replies ".concat(type) }, children);
};

// node_modules/@sendbird/uikit-react/chunks/bundle-CUxTGz0r.js
var import_react94 = __toESM(require_react(), 1);
function SuggestedUserMentionItem(props) {
  var member = props.member, _a3 = props.isFocused, isFocused = _a3 === void 0 ? false : _a3, parentScrollRef = props.parentScrollRef, onClick = props.onClick, onMouseOver = props.onMouseOver, onMouseMove = props.onMouseMove, renderUserMentionItem = props.renderUserMentionItem;
  var scrollRef = (0, import_react94.useRef)(null);
  var stringSet2 = (0, import_react94.useContext)(LocalizationContext).stringSet;
  (0, import_react94.useEffect)(function() {
    if (isFocused && (parentScrollRef === null || parentScrollRef === void 0 ? void 0 : parentScrollRef.current) != null && (scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current) != null && (parentScrollRef.current.scrollTop >= scrollRef.current.offsetTop || parentScrollRef.current.scrollTop + parentScrollRef.current.clientHeight <= scrollRef.current.offsetTop)) {
      scrollRef.current.scrollIntoView({ block: "nearest", inline: "nearest" });
    }
  }, [isFocused]);
  var customMentionItem = (0, import_react94.useMemo)(function() {
    if (renderUserMentionItem) {
      return import_react94.default.createElement("div", { className: "sendbird-mention-suggest-list__user-item", onClick: function(event) {
        return onClick === null || onClick === void 0 ? void 0 : onClick({ event, member, itemRef: scrollRef });
      }, onMouseOver: function(event) {
        return onMouseOver === null || onMouseOver === void 0 ? void 0 : onMouseOver({ event, member, itemRef: scrollRef });
      }, onMouseMove: function(event) {
        return onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove({ event, member, itemRef: scrollRef });
      }, key: (member === null || member === void 0 ? void 0 : member.userId) || uuidv4(), ref: scrollRef }, renderUserMentionItem({ user: member }));
    }
  }, [renderUserMentionItem]);
  if (customMentionItem) {
    return customMentionItem;
  }
  return import_react94.default.createElement(
    "div",
    { className: classnames("sendbird-mention-suggest-list__user-item", isFocused && "focused"), onClick: function(event) {
      return onClick === null || onClick === void 0 ? void 0 : onClick({ event, member, itemRef: scrollRef });
    }, onMouseOver: function(event) {
      return onMouseOver === null || onMouseOver === void 0 ? void 0 : onMouseOver({ event, member, itemRef: scrollRef });
    }, onMouseMove: function(event) {
      return onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove({ event, member, itemRef: scrollRef });
    }, key: (member === null || member === void 0 ? void 0 : member.userId) || uuidv4(), ref: scrollRef },
    import_react94.default.createElement(Avatar$1, { className: "sendbird-mention-suggest-list__user-item__avatar", src: member === null || member === void 0 ? void 0 : member.profileUrl, alt: "user-profile", width: "24px", height: "24px" }),
    import_react94.default.createElement(Label, { className: "sendbird-mention-suggest-list__user-item__nickname", testID: "sendbird-mention-suggest-list__user-item__nickname", type: LabelTypography.SUBTITLE_2, color: (member === null || member === void 0 ? void 0 : member.nickname) ? LabelColors.ONBACKGROUND_1 : LabelColors.ONBACKGROUND_3 }, (member === null || member === void 0 ? void 0 : member.nickname) || (stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.MENTION_NAME__NO_NAME)),
    import_react94.default.createElement(Label, { className: "sendbird-mention-suggest-list__user-item__user-id", testID: "sendbird-mention-suggest-list__user-item__user-id", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_2 }, member === null || member === void 0 ? void 0 : member.userId)
  );
}
function fetchMembersFromChannel(currentUserId, channel, maxSuggestionCount, searchString) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a3) {
      return [2, channel.members.sort(function(a5, b6) {
        var _a4;
        return (_a4 = a5.nickname) === null || _a4 === void 0 ? void 0 : _a4.localeCompare(b6.nickname);
      }).filter(function(member) {
        var _a4;
        return ((_a4 = member.nickname) === null || _a4 === void 0 ? void 0 : _a4.toLowerCase().startsWith(searchString.toLowerCase())) && member.userId !== currentUserId && member.isActive;
      }).slice(0, maxSuggestionCount)];
    });
  });
}
function fetchMembersFromQuery(currentUserId, channel, maxSuggestionCount, searchString) {
  return __awaiter(this, void 0, void 0, function() {
    var query;
    return __generator(this, function(_a3) {
      query = channel.createMemberListQuery({
        limit: maxSuggestionCount + 1,
        // because current user could be included
        nicknameStartsWithFilter: searchString
      });
      return [2, query.next().then(function(memberList) {
        return memberList.filter(function(member) {
          return currentUserId !== (member === null || member === void 0 ? void 0 : member.userId);
        }).slice(0, maxSuggestionCount);
      })];
    });
  });
}
var DEBOUNCING_TIME = 300;
var SuggestedMentionListView = function(props) {
  var _a3, _b2, _c;
  var className = props.className, currentChannel = props.currentChannel, _d = props.targetNickname, targetNickname = _d === void 0 ? "" : _d, onUserItemClick = props.onUserItemClick, onFocusItemChange = props.onFocusItemChange, onFetchUsers = props.onFetchUsers, renderUserMentionItem = props.renderUserMentionItem, inputEvent = props.inputEvent, _e3 = props.ableAddMention, ableAddMention = _e3 === void 0 ? true : _e3, _f = props.maxMentionCount, maxMentionCount = _f === void 0 ? MAX_USER_MENTION_COUNT : _f, _g2 = props.maxSuggestionCount, maxSuggestionCount = _g2 === void 0 ? MAX_USER_SUGGESTION_COUNT : _g2;
  var _h = useSendbirdStateContext(), config = _h.config, stores = _h.stores;
  var logger = config.logger;
  var currentUserId = ((_c = (_b2 = (_a3 = stores === null || stores === void 0 ? void 0 : stores.sdkStore) === null || _a3 === void 0 ? void 0 : _a3.sdk) === null || _b2 === void 0 ? void 0 : _b2.currentUser) === null || _c === void 0 ? void 0 : _c.userId) || "";
  var scrollRef = (0, import_react94.useRef)(null);
  var stringSet2 = useLocalization().stringSet;
  var _j = (0, import_react94.useState)(null), timer = _j[0], setTimer = _j[1];
  var _k = (0, import_react94.useState)(""), searchString = _k[0], setSearchString = _k[1];
  var _l = (0, import_react94.useState)(""), lastSearchString = _l[0], setLastSearchString = _l[1];
  var _m = (0, import_react94.useState)(null), currentFocusedMember = _m[0], setCurrentFocusedMember = _m[1];
  var _o2 = (0, import_react94.useState)([]), currentMemberList = _o2[0], setCurrentMemberList = _o2[1];
  (0, import_react94.useEffect)(function() {
    clearTimeout(timer !== null && timer !== void 0 ? timer : void 0);
    setTimer(setTimeout(function() {
      setSearchString(targetNickname);
    }, DEBOUNCING_TIME));
  }, [targetNickname]);
  (0, import_react94.useEffect)(function() {
    if ((inputEvent === null || inputEvent === void 0 ? void 0 : inputEvent.key) === MessageInputKeys.Enter) {
      if (currentFocusedMember && currentMemberList.length > 0) {
        onUserItemClick === null || onUserItemClick === void 0 ? void 0 : onUserItemClick(currentFocusedMember);
      }
    }
    if ((inputEvent === null || inputEvent === void 0 ? void 0 : inputEvent.key) === MessageInputKeys.ArrowUp) {
      var currentUserIndex = currentMemberList.findIndex(function(member) {
        return (member === null || member === void 0 ? void 0 : member.userId) === (currentFocusedMember === null || currentFocusedMember === void 0 ? void 0 : currentFocusedMember.userId);
      });
      if (0 < currentUserIndex) {
        setCurrentFocusedMember(currentMemberList[currentUserIndex - 1]);
        onFocusItemChange === null || onFocusItemChange === void 0 ? void 0 : onFocusItemChange(currentMemberList[currentUserIndex - 1]);
      }
    }
    if ((inputEvent === null || inputEvent === void 0 ? void 0 : inputEvent.key) === MessageInputKeys.ArrowDown) {
      var currentUserIndex = currentMemberList.findIndex(function(member) {
        return (member === null || member === void 0 ? void 0 : member.userId) === (currentFocusedMember === null || currentFocusedMember === void 0 ? void 0 : currentFocusedMember.userId);
      });
      if (currentUserIndex < currentMemberList.length - 1) {
        setCurrentFocusedMember(currentMemberList[currentUserIndex + 1]);
        onFocusItemChange === null || onFocusItemChange === void 0 ? void 0 : onFocusItemChange(currentMemberList[currentUserIndex + 1]);
      }
    }
  }, [inputEvent]);
  (0, import_react94.useEffect)(function() {
    if (lastSearchString && searchString.indexOf(lastSearchString) === 0 && currentMemberList.length === 0) {
      return;
    }
    if (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.isSuper) {
      if (!(currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.createMemberListQuery)) {
        logger.warning("SuggestedMentionList: Creating member list query failed");
        return;
      }
    }
    var fetcher = (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.isSuper) ? fetchMembersFromQuery : fetchMembersFromChannel;
    fetcher(currentUserId, currentChannel, maxSuggestionCount, searchString.slice(USER_MENTION_TEMP_CHAR.length)).then(function(suggestingMembers) {
      if (suggestingMembers.length < 1) {
        logger.info("SuggestedMentionList: Fetched member list is empty");
      } else {
        logger.info("SuggestedMentionList: Fetching member list succeeded", { memberList: suggestingMembers });
        setCurrentFocusedMember(suggestingMembers[0]);
      }
      setLastSearchString(searchString);
      onFetchUsers === null || onFetchUsers === void 0 ? void 0 : onFetchUsers(suggestingMembers);
      setCurrentMemberList(suggestingMembers);
    }).catch(function(error) {
      if (error) {
        logger.error("SuggestedMentionList: Fetching member list failed", error);
      }
    });
  }, [
    currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url,
    // We have to be specific like this or React would not recognize the changes in instances.
    currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.members.map(function(member) {
      return member.nickname;
    }).join(),
    currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.members.map(function(member) {
      return member.isActive;
    }).join(),
    searchString,
    maxSuggestionCount,
    currentUserId,
    currentMemberList.length,
    lastSearchString
  ]);
  if (!ableAddMention && currentMemberList.length === 0) {
    return null;
  }
  return import_react94.default.createElement(
    "div",
    { className: classnames("sendbird-mention-suggest-list", className), "data-testid": "sendbird-mention-suggest-list", key: "sendbird-mention-suggest-list", ref: scrollRef },
    ableAddMention && (currentMemberList === null || currentMemberList === void 0 ? void 0 : currentMemberList.map(function(member) {
      return import_react94.default.createElement(SuggestedUserMentionItem, { key: (member === null || member === void 0 ? void 0 : member.userId) || uuidv4(), member, isFocused: (member === null || member === void 0 ? void 0 : member.userId) === (currentFocusedMember === null || currentFocusedMember === void 0 ? void 0 : currentFocusedMember.userId), parentScrollRef: scrollRef, onClick: function(_a4) {
        var member2 = _a4.member;
        onUserItemClick === null || onUserItemClick === void 0 ? void 0 : onUserItemClick(member2);
      }, onMouseOver: function(_a4) {
        var member2 = _a4.member;
        setCurrentFocusedMember(member2);
      }, renderUserMentionItem });
    })),
    !ableAddMention && import_react94.default.createElement(
      "div",
      { className: "sendbird-mention-suggest-list__notice-item" },
      import_react94.default.createElement(Icon, { className: "sendbird-mention-suggest-list__notice-item__icon", type: IconTypes.INFO, fillColor: IconColors.ON_BACKGROUND_2, width: "20px", height: "20px" }),
      import_react94.default.createElement(Label, { className: "sendbird-mention-suggest-list__notice-item__text", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_2 }, stringSet2.MENTION_COUNT__OVER_LIMIT.replace("%d", String(maxMentionCount)))
    )
  );
};

// node_modules/@sendbird/uikit-react/chunks/bundle-CJirTNRH.js
var useDidMountEffect = function(func, deps) {
  var _a3 = (0, import_react95.useState)(false), didMount = _a3[0], setDidmount = _a3[1];
  (0, import_react95.useEffect)(function() {
    if (didMount) {
      func();
    } else {
      setDidmount(true);
    }
  }, deps);
};
var MessageView = function(props) {
  var _a3, _b2;
  var message = props.message, children = props.children, hasSeparator = props.hasSeparator, chainTop = props.chainTop, chainBottom = props.chainBottom, handleScroll = props.handleScroll, channel = props.channel, emojiContainer = props.emojiContainer, editInputDisabled = props.editInputDisabled, shouldRenderSuggestedReplies = props.shouldRenderSuggestedReplies, isReactionEnabled = props.isReactionEnabled, replyType = props.replyType, threadReplySelectType = props.threadReplySelectType, nicknamesMap = props.nicknamesMap, scrollToMessage = props.scrollToMessage, toggleReaction = props.toggleReaction, setQuoteMessage = props.setQuoteMessage, onQuoteMessageClick = props.onQuoteMessageClick, onReplyInThreadClick = props.onReplyInThreadClick, onBeforeDownloadFileMessage = props.onBeforeDownloadFileMessage, sendUserMessage = props.sendUserMessage, updateUserMessage = props.updateUserMessage, resendMessage = props.resendMessage, deleteMessage = props.deleteMessage, setAnimatedMessageId = props.setAnimatedMessageId, animatedMessageId = props.animatedMessageId, onMessageAnimated = props.onMessageAnimated, _c = props.usedInLegacy, usedInLegacy = _c === void 0 ? true : _c;
  var _d = deleteNullish(props), renderUserMentionItem = _d.renderUserMentionItem, renderMessage = _d.renderMessage, _e3 = _d.renderMessageContent, renderMessageContent = _e3 === void 0 ? function(props2) {
    return import_react95.default.createElement(MessageContent, __assign({}, props2));
  } : _e3, _f = _d.renderSuggestedReplies, renderSuggestedReplies = _f === void 0 ? function(props2) {
    return import_react95.default.createElement(SuggestedReplies, __assign({}, props2));
  } : _f, renderCustomSeparator = _d.renderCustomSeparator, renderEditInput = _d.renderEditInput, renderFileViewer = _d.renderFileViewer, renderRemoveMessageModal = _d.renderRemoveMessageModal, filterEmojiCategoryIds = _d.filterEmojiCategoryIds;
  var _g2 = useLocalization(), dateLocale = _g2.dateLocale, stringSet2 = _g2.stringSet;
  var globalStore = useSendbirdStateContext();
  var _h = globalStore.config, userId = _h.userId, isOnline = _h.isOnline, userMention = _h.userMention, logger = _h.logger, groupChannel = _h.groupChannel;
  var maxUserMentionCount = (userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount) || MAX_USER_MENTION_COUNT;
  var maxUserSuggestionCount = (userMention === null || userMention === void 0 ? void 0 : userMention.maxSuggestionCount) || MAX_USER_SUGGESTION_COUNT;
  var _j = (0, import_react95.useState)(false), showEdit = _j[0], setShowEdit = _j[1];
  var _k = (0, import_react95.useState)(false), showRemove = _k[0], setShowRemove = _k[1];
  var _l = (0, import_react95.useState)(false), showFileViewer = _l[0], setShowFileViewer = _l[1];
  var _m = (0, import_react95.useState)(false), isAnimated = _m[0], setIsAnimated = _m[1];
  var _o2 = (0, import_react95.useState)(""), mentionNickname = _o2[0], setMentionNickname = _o2[1];
  var _p = (0, import_react95.useState)([]), mentionedUsers = _p[0], setMentionedUsers = _p[1];
  var _q = (0, import_react95.useState)([]), mentionedUserIds = _q[0], setMentionedUserIds = _q[1];
  var _r2 = (0, import_react95.useState)(null), messageInputEvent = _r2[0], setMessageInputEvent = _r2[1];
  var _s4 = (0, import_react95.useState)(null), selectedUser = _s4[0], setSelectedUser = _s4[1];
  var _t3 = (0, import_react95.useState)([]), mentionSuggestedUsers = _t3[0], setMentionSuggestedUsers = _t3[1];
  var editMessageInputRef = (0, import_react95.useRef)(null);
  var messageScrollRef = (0, import_react95.useRef)(null);
  var displaySuggestedMentionList = isOnline && groupChannel.enableMention && mentionNickname.length > 0 && !isDisabledBecauseFrozen(channel) && !isDisabledBecauseMuted(channel);
  var mentionNodes = useDirtyGetMentions({ ref: editMessageInputRef }, { logger });
  var ableMention = (mentionNodes === null || mentionNodes === void 0 ? void 0 : mentionNodes.length) < maxUserMentionCount;
  (0, import_react95.useEffect)(function() {
    setMentionedUsers(mentionedUsers.filter(function(_a4) {
      var userId2 = _a4.userId;
      var i4 = mentionedUserIds.indexOf(userId2);
      if (i4 < 0) {
        return false;
      } else {
        mentionedUserIds.splice(i4, 1);
        return true;
      }
    }));
  }, [mentionedUserIds]);
  useDidMountEffect(function() {
    handleScroll === null || handleScroll === void 0 ? void 0 : handleScroll();
  }, [showEdit, (_a3 = message === null || message === void 0 ? void 0 : message.reactions) === null || _a3 === void 0 ? void 0 : _a3.length]);
  useDidMountEffect(function() {
    handleScroll === null || handleScroll === void 0 ? void 0 : handleScroll(true);
  }, [message === null || message === void 0 ? void 0 : message.updatedAt, message === null || message === void 0 ? void 0 : message.message]);
  var prevShouldRenderSuggestedReplies = (0, import_react95.useRef)(shouldRenderSuggestedReplies);
  (0, import_react95.useEffect)(function() {
    if (prevShouldRenderSuggestedReplies.current !== shouldRenderSuggestedReplies) {
      handleScroll === null || handleScroll === void 0 ? void 0 : handleScroll();
    } else {
      prevShouldRenderSuggestedReplies.current = shouldRenderSuggestedReplies;
    }
  }, [shouldRenderSuggestedReplies]);
  (0, import_react95.useLayoutEffect)(function() {
    if (usedInLegacy)
      handleScroll === null || handleScroll === void 0 ? void 0 : handleScroll(true);
  }, []);
  (0, import_react95.useLayoutEffect)(function() {
    var timeouts = [];
    if (animatedMessageId === message.messageId && (messageScrollRef === null || messageScrollRef === void 0 ? void 0 : messageScrollRef.current)) {
      timeouts.push(setTimeout(function() {
        setIsAnimated(true);
      }, 500));
      timeouts.push(setTimeout(function() {
        setAnimatedMessageId(null);
        onMessageAnimated === null || onMessageAnimated === void 0 ? void 0 : onMessageAnimated();
      }, 1600));
    } else {
      setIsAnimated(false);
    }
    return function() {
      timeouts.forEach(function(it3) {
        return clearTimeout(it3);
      });
    };
  }, [animatedMessageId, messageScrollRef.current, message.messageId]);
  var renderedCustomSeparator = (0, import_react95.useMemo)(function() {
    var _a4;
    return (_a4 = renderCustomSeparator === null || renderCustomSeparator === void 0 ? void 0 : renderCustomSeparator({ message })) !== null && _a4 !== void 0 ? _a4 : null;
  }, [message, renderCustomSeparator]);
  var renderChildren = function() {
    if (children) {
      return children;
    }
    if (renderMessage) {
      var messageProps = __assign(__assign({}, props), { renderMessage: void 0 });
      return renderMessage(messageProps);
    }
    return import_react95.default.createElement(
      import_react95.default.Fragment,
      null,
      renderMessageContent({
        className: "sendbird-message-hoc__message-content",
        userId,
        scrollToMessage,
        channel,
        message,
        disabled: !isOnline,
        chainTop,
        chainBottom,
        isReactionEnabled,
        replyType,
        threadReplySelectType,
        nicknamesMap,
        emojiContainer,
        showEdit: setShowEdit,
        showRemove: setShowRemove,
        showFileViewer: setShowFileViewer,
        resendMessage,
        deleteMessage,
        toggleReaction,
        setQuoteMessage,
        onReplyInThread: onReplyInThreadClick,
        onQuoteMessageClick,
        onMessageHeightChange: handleScroll,
        onBeforeDownloadFileMessage,
        filterEmojiCategoryIds
      }),
      shouldRenderSuggestedReplies && renderSuggestedReplies({
        replyOptions: getSuggestedReplies(message),
        onSendMessage: sendUserMessage,
        type: groupChannel === null || groupChannel === void 0 ? void 0 : groupChannel.suggestedRepliesDirection
      }),
      showRemove && (renderRemoveMessageModal === null || renderRemoveMessageModal === void 0 ? void 0 : renderRemoveMessageModal({ message, onCancel: function() {
        return setShowRemove(false);
      } })),
      showFileViewer && renderFileViewer({ message, onCancel: function() {
        return setShowFileViewer(false);
      } })
    );
  };
  if (showEdit && ((_b2 = message === null || message === void 0 ? void 0 : message.isUserMessage) === null || _b2 === void 0 ? void 0 : _b2.call(message))) {
    return (renderEditInput === null || renderEditInput === void 0 ? void 0 : renderEditInput()) || import_react95.default.createElement(
      import_react95.default.Fragment,
      null,
      displaySuggestedMentionList && import_react95.default.createElement(SuggestedMentionListView, { currentChannel: channel, targetNickname: mentionNickname, inputEvent: messageInputEvent !== null && messageInputEvent !== void 0 ? messageInputEvent : void 0, renderUserMentionItem, onUserItemClick: function(user) {
        if (user) {
          setMentionedUsers(__spreadArray(__spreadArray([], mentionedUsers, true), [user], false));
        }
        setMentionNickname("");
        setSelectedUser(user);
        setMessageInputEvent(null);
      }, onFocusItemChange: function() {
        setMessageInputEvent(null);
      }, onFetchUsers: function(users) {
        setMentionSuggestedUsers(users);
      }, ableAddMention: ableMention, maxMentionCount: maxUserMentionCount, maxSuggestionCount: maxUserSuggestionCount }),
      import_react95.default.createElement(MessageInput, { isEdit: true, channel, disabled: editInputDisabled, ref: editMessageInputRef, mentionSelectedUser: selectedUser, isMentionEnabled: groupChannel.enableMention, message, onStartTyping: function() {
        var _a4;
        (_a4 = channel === null || channel === void 0 ? void 0 : channel.startTyping) === null || _a4 === void 0 ? void 0 : _a4.call(channel);
      }, onUpdateMessage: function(_a4) {
        var _b3;
        var messageId = _a4.messageId, message2 = _a4.message, mentionTemplate = _a4.mentionTemplate;
        updateUserMessage(messageId, {
          message: message2,
          mentionedUsers,
          mentionedMessageTemplate: mentionTemplate
        });
        setShowEdit(false);
        (_b3 = channel === null || channel === void 0 ? void 0 : channel.endTyping) === null || _b3 === void 0 ? void 0 : _b3.call(channel);
      }, onCancelEdit: function() {
        var _a4;
        setMentionNickname("");
        setMentionedUsers([]);
        setMentionedUserIds([]);
        setMentionSuggestedUsers([]);
        setShowEdit(false);
        (_a4 = channel === null || channel === void 0 ? void 0 : channel.endTyping) === null || _a4 === void 0 ? void 0 : _a4.call(channel);
      }, onUserMentioned: function(user) {
        if ((selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.userId) === (user === null || user === void 0 ? void 0 : user.userId)) {
          setSelectedUser(null);
          setMentionNickname("");
        }
      }, onMentionStringChange: function(mentionText) {
        setMentionNickname(mentionText);
      }, onMentionedUserIdsUpdated: function(userIds) {
        setMentionedUserIds(userIds);
      }, onKeyDown: function(e4) {
        if (displaySuggestedMentionList && (mentionSuggestedUsers === null || mentionSuggestedUsers === void 0 ? void 0 : mentionSuggestedUsers.length) > 0 && (e4.key === MessageInputKeys.Enter && ableMention || e4.key === MessageInputKeys.ArrowUp || e4.key === MessageInputKeys.ArrowDown)) {
          setMessageInputEvent(e4);
          return true;
        }
        return false;
      } })
    );
  }
  return import_react95.default.createElement(
    "div",
    { className: classnames("sendbird-msg-hoc sendbird-msg--scroll-ref", isAnimated && "sendbird-msg-hoc__animated"), "data-testid": "sendbird-message-view", style: children || renderMessage ? void 0 : { marginBottom: "2px" }, "data-sb-message-id": message.messageId, "data-sb-created-at": message.createdAt, ref: messageScrollRef },
    hasSeparator && (renderedCustomSeparator || import_react95.default.createElement(
      DateSeparator,
      null,
      import_react95.default.createElement(Label, { type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, format(message.createdAt, stringSet2.DATE_FORMAT__MESSAGE_LIST__DATE_SEPARATOR, {
        locale: dateLocale
      }))
    )),
    renderChildren()
  );
};

// node_modules/@sendbird/uikit-react/GroupChannel/components/FileViewer.js
var import_react97 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-C_v0tgQ0.js
var import_react96 = __toESM(require_react(), 1);
var import_react_dom23 = __toESM(require_react_dom(), 1);
var FileViewerView = function(_a3) {
  var message = _a3.message, onCancel = _a3.onCancel, deleteMessage = _a3.deleteMessage, onDownloadClick = _a3.onDownloadClick;
  var sender = message.sender, type = message.type, url = message.url, _b2 = message.name, name = _b2 === void 0 ? "" : _b2, threadInfo = message.threadInfo;
  var profileUrl = sender.profileUrl, nickname = sender.nickname, userId = sender.userId;
  var config = useSendbirdStateContext().config;
  return (0, import_react_dom23.createPortal)(import_react96.default.createElement(FileViewerComponent2, { profileUrl, nickname, type, url, name, onCancel, onDelete: function() {
    return deleteMessage(message).then(function() {
      return onCancel();
    });
  }, isByMe: config.userId === userId, disableDelete: (threadInfo === null || threadInfo === void 0 ? void 0 : threadInfo.replyCount) ? threadInfo.replyCount > 0 : false, onDownloadClick }), document.getElementById(MODAL_ROOT));
};
var FileViewerComponent2 = function(_a3) {
  var profileUrl = _a3.profileUrl, nickname = _a3.nickname, name = _a3.name, type = _a3.type, url = _a3.url, isByMe = _a3.isByMe, onCancel = _a3.onCancel, onDelete = _a3.onDelete, disableDelete = _a3.disableDelete, onDownloadClick = _a3.onDownloadClick;
  return import_react96.default.createElement(
    Modal,
    { onClose: onCancel },
    import_react96.default.createElement(
      "div",
      { className: "sendbird-fileviewer", "data-testid": "sendbird-fileviewer" },
      import_react96.default.createElement(
        "div",
        { className: "sendbird-fileviewer__header" },
        import_react96.default.createElement(
          "div",
          { className: "sendbird-fileviewer__header__left" },
          import_react96.default.createElement(
            "div",
            { className: "sendbird-fileviewer__header__left__avatar" },
            import_react96.default.createElement(Avatar$1, { height: "32px", width: "32px", src: profileUrl })
          ),
          import_react96.default.createElement(
            "div",
            { className: "sendbird-fileviewer__header__left__text-container" },
            import_react96.default.createElement(Label, { className: "sendbird-fileviewer__header__left__filename", type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, name),
            import_react96.default.createElement(Label, { className: "sendbird-fileviewer__header__left__sender-name", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, nickname)
          )
        ),
        import_react96.default.createElement(
          "div",
          { className: "sendbird-fileviewer__header__right" },
          isSupportedFileView(type) && import_react96.default.createElement(
            "div",
            { className: "sendbird-fileviewer__header__right__actions" },
            import_react96.default.createElement(
              "a",
              { className: "sendbird-fileviewer__header__right__actions__download", rel: "noopener noreferrer", href: url, target: "_blank", onClick: onDownloadClick },
              import_react96.default.createElement(Icon, { type: IconTypes.DOWNLOAD, fillColor: IconColors.ON_BACKGROUND_1, height: "24px", width: "24px" })
            ),
            onDelete && isByMe && import_react96.default.createElement(
              "div",
              { className: "sendbird-fileviewer__header__right__actions__delete" },
              import_react96.default.createElement(Icon, { className: disableDelete ? "disabled" : "", type: IconTypes.DELETE, fillColor: disableDelete ? IconColors.GRAY : IconColors.ON_BACKGROUND_1, height: "24px", width: "24px", onClick: function() {
                if (!disableDelete) {
                  onDelete();
                }
              } })
            )
          ),
          import_react96.default.createElement(
            "div",
            { className: "sendbird-fileviewer__header__right__actions__close" },
            import_react96.default.createElement(Icon, { type: IconTypes.CLOSE, fillColor: IconColors.ON_BACKGROUND_1, height: "24px", width: "24px", onClick: onCancel })
          )
        )
      ),
      import_react96.default.createElement(
        "div",
        { className: "sendbird-fileviewer__content" },
        isVideo(type) && import_react96.default.createElement(
          "video",
          { controls: true, className: "sendbird-fileviewer__content__video" },
          import_react96.default.createElement("source", { src: url, type })
        ),
        isImage(type) && import_react96.default.createElement("img", { src: url, alt: name, className: "sendbird-fileviewer__content__img" }),
        !isSupportedFileView(type) && import_react96.default.createElement(
          "div",
          { className: "sendbird-fileviewer__content__unsupported" },
          import_react96.default.createElement(Label, { type: LabelTypography.H_1, color: LabelColors.ONBACKGROUND_1 }, LabelStringSet.UI__FILE_VIEWER__UNSUPPORT)
        )
      )
    )
  );
};

// node_modules/@sendbird/uikit-react/GroupChannel/components/FileViewer.js
var import_react_dom24 = __toESM(require_react_dom(), 1);
var FileViewer2 = function(props) {
  var _a3 = useGroupChannelContext(), deleteMessage = _a3.deleteMessage, onBeforeDownloadFileMessage = _a3.onBeforeDownloadFileMessage;
  var config = useSendbirdStateContext().config;
  var logger = config.logger;
  return import_react97.default.createElement(FileViewerView, __assign({}, props, { deleteMessage, onDownloadClick: function(e4) {
    return __awaiter(void 0, void 0, void 0, function() {
      var allowDownload, err_1;
      var _a4, _b2;
      return __generator(this, function(_c) {
        switch (_c.label) {
          case 0:
            if (!onBeforeDownloadFileMessage)
              return [
                2
                /*return*/
              ];
            _c.label = 1;
          case 1:
            _c.trys.push([1, 3, , 4]);
            return [4, onBeforeDownloadFileMessage({ message: props.message })];
          case 2:
            allowDownload = _c.sent();
            if (!allowDownload) {
              e4.preventDefault();
              (_a4 = logger.info) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "FileViewer: Not allowed to download.");
            }
            return [3, 4];
          case 3:
            err_1 = _c.sent();
            (_b2 = logger.error) === null || _b2 === void 0 ? void 0 : _b2.call(logger, "FileViewer: Error occurred while determining download continuation:", err_1);
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  } }));
};

// node_modules/@sendbird/uikit-react/GroupChannel/components/RemoveMessageModal.js
var import_react99 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-BHNcTHkg.js
var import_react98 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-B8L7dGsu.js
function getModalDeleteMessageTitle(stringSet2, message) {
  return K2(message).when(isMultipleFilesMessage, function() {
    var filesCount = message.fileInfoList.length;
    return "Do you want to delete all ".concat(filesCount, " photos?");
  }).otherwise(function() {
    return stringSet2.MODAL__DELETE_MESSAGE__TITLE;
  });
}

// node_modules/@sendbird/uikit-react/chunks/bundle-BHNcTHkg.js
var RemoveMessageModalView = function(props) {
  var _a3;
  var _b2 = props.onSubmit, onSubmit = _b2 === void 0 ? function() {
  } : _b2, onCancel = props.onCancel, message = props.message, deleteMessage = props.deleteMessage;
  var stringSet2 = (0, import_react98.useContext)(LocalizationContext).stringSet;
  return import_react98.default.createElement(Modal, { type: ButtonTypes.DANGER, disabled: ((_a3 = message === null || message === void 0 ? void 0 : message.threadInfo) === null || _a3 === void 0 ? void 0 : _a3.replyCount) ? message.threadInfo.replyCount > 0 : void 0, onCancel, onSubmit: function() {
    if (message.isUserMessage() || message.isFileMessage() || message.isMultipleFilesMessage()) {
      deleteMessage(message).then(function() {
        onSubmit();
        onCancel();
      });
    }
  }, submitText: stringSet2.MESSAGE_MENU__DELETE, titleText: getModalDeleteMessageTitle(stringSet2, message) });
};

// node_modules/@sendbird/uikit-react/GroupChannel/components/RemoveMessageModal.js
var import_react_dom25 = __toESM(require_react_dom(), 1);
var RemoveMessageModal = function(props) {
  var deleteMessage = useGroupChannelContext().deleteMessage;
  return import_react99.default.createElement(RemoveMessageModalView, __assign({}, props, { deleteMessage }));
};

// node_modules/@sendbird/uikit-react/GroupChannel/components/Message.js
var import_react_dom26 = __toESM(require_react_dom(), 1);
var Message = function(props) {
  var _a3 = useSendbirdStateContext(), config = _a3.config, emojiManager = _a3.emojiManager;
  var _b2 = useGroupChannelContext(), loading = _b2.loading, currentChannel = _b2.currentChannel, animatedMessageId = _b2.animatedMessageId, setAnimatedMessageId = _b2.setAnimatedMessageId, scrollToMessage = _b2.scrollToMessage, replyType = _b2.replyType, threadReplySelectType = _b2.threadReplySelectType, isReactionEnabled = _b2.isReactionEnabled, toggleReaction = _b2.toggleReaction, nicknamesMap = _b2.nicknamesMap, setQuoteMessage = _b2.setQuoteMessage, renderUserMentionItem = _b2.renderUserMentionItem, filterEmojiCategoryIds = _b2.filterEmojiCategoryIds, onQuoteMessageClick = _b2.onQuoteMessageClick, onReplyInThreadClick = _b2.onReplyInThreadClick, onMessageAnimated = _b2.onMessageAnimated, onBeforeDownloadFileMessage = _b2.onBeforeDownloadFileMessage, messages = _b2.messages, updateUserMessage = _b2.updateUserMessage, sendUserMessage = _b2.sendUserMessage, resendMessage = _b2.resendMessage, deleteMessage = _b2.deleteMessage;
  var message = props.message;
  var initialized = !loading && Boolean(currentChannel);
  var shouldRenderSuggestedReplies = useIIFE(function() {
    var _a4;
    var _b3 = config.groupChannel, enableSuggestedReplies = _b3.enableSuggestedReplies, showSuggestedRepliesFor = _b3.showSuggestedRepliesFor;
    var lastMessageInView = messages[messages.length - 1];
    var hasUnsentMessage = isSendableMessage2(lastMessageInView) && lastMessageInView.sendingStatus !== "succeeded";
    var showSuggestedReplies = showSuggestedRepliesFor === "all_messages" ? true : message.messageId === ((_a4 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.lastMessage) === null || _a4 === void 0 ? void 0 : _a4.messageId);
    return enableSuggestedReplies && getSuggestedReplies(message).length > 0 && !hasUnsentMessage && showSuggestedReplies;
  });
  return import_react100.default.createElement(MessageView, __assign({}, props, { channel: currentChannel, emojiContainer: emojiManager.emojiContainer, editInputDisabled: !initialized || isDisabledBecauseFrozen(currentChannel !== null && currentChannel !== void 0 ? currentChannel : void 0) || isDisabledBecauseMuted(currentChannel !== null && currentChannel !== void 0 ? currentChannel : void 0) || !config.isOnline, shouldRenderSuggestedReplies, isReactionEnabled: isReactionEnabled !== null && isReactionEnabled !== void 0 ? isReactionEnabled : false, replyType: replyType !== null && replyType !== void 0 ? replyType : "NONE", threadReplySelectType: threadReplySelectType !== null && threadReplySelectType !== void 0 ? threadReplySelectType : ThreadReplySelectType.PARENT, nicknamesMap, renderUserMentionItem, filterEmojiCategoryIds, scrollToMessage, toggleReaction, setQuoteMessage, onQuoteMessageClick, onReplyInThreadClick, sendUserMessage, updateUserMessage, resendMessage, deleteMessage, animatedMessageId, setAnimatedMessageId, onMessageAnimated, renderFileViewer: function(props2) {
    return import_react100.default.createElement(FileViewer2, __assign({}, props2));
  }, renderRemoveMessageModal: function(props2) {
    return import_react100.default.createElement(RemoveMessageModal, __assign({}, props2));
  }, usedInLegacy: false, onBeforeDownloadFileMessage }));
};

// node_modules/@sendbird/uikit-react/GroupChannel/components/UnreadCount.js
var import_react101 = __toESM(require_react(), 1);
var UnreadCount = function(_a3) {
  var _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, _c = _a3.count, count = _c === void 0 ? 0 : _c, _d = _a3.time, time = _d === void 0 ? "" : _d, onClick = _a3.onClick, lastReadAt = _a3.lastReadAt;
  var _e3 = (0, import_react101.useContext)(LocalizationContext), stringSet2 = _e3.stringSet, dateLocale = _e3.dateLocale;
  var unreadSince = (0, import_react101.useMemo)(function() {
    var _a4, _b3;
    if (stringSet2.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON !== "on") {
      var timeArray = ((_b3 = (_a4 = time === null || time === void 0 ? void 0 : time.toString) === null || _a4 === void 0 ? void 0 : _a4.call(time)) === null || _b3 === void 0 ? void 0 : _b3.split(" ")) || [];
      timeArray === null || timeArray === void 0 ? void 0 : timeArray.splice(-2, 0, stringSet2.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);
      return timeArray.join(" ");
    } else if (lastReadAt) {
      return format(lastReadAt, stringSet2.DATE_FORMAT__MESSAGE_LIST__NOTIFICATION__UNREAD_SINCE, { locale: dateLocale });
    }
  }, [time, lastReadAt]);
  return import_react101.default.createElement(
    "div",
    { className: classnames(count < 1 ? "sendbird-notification--hide" : "sendbird-notification", className), "data-testid": "sendbird-notification", onClick },
    import_react101.default.createElement(
      Label,
      { className: "sendbird-notification__text", testID: "sendbird-notification__text", color: LabelColors.ONCONTENT_1, type: LabelTypography.CAPTION_2 },
      "".concat(count, " "),
      stringSet2.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE,
      " ".concat(unreadSince)
    ),
    import_react101.default.createElement(Icon, { width: "24px", height: "24px", type: IconTypes.CHEVRON_DOWN, fillColor: IconColors.CONTENT })
  );
};

// node_modules/@sendbird/uikit-react/GroupChannel/components/FrozenNotification.js
var import_react102 = __toESM(require_react(), 1);
var FrozenNotification = function(_a3) {
  var _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2;
  var stringSet2 = (0, import_react102.useContext)(LocalizationContext).stringSet;
  return import_react102.default.createElement(
    "div",
    { className: classnames("sendbird-notification", "sendbird-notification--frozen", className), "data-testid": "sendbird-notification" },
    import_react102.default.createElement(Label, { className: "sendbird-notification__text", testID: "sendbird-notification__text", type: LabelTypography.CAPTION_2 }, stringSet2.CHANNEL_FROZEN)
  );
};

// node_modules/@sendbird/uikit-react/ui/TypingIndicatorBubble.js
var import_react103 = __toESM(require_react(), 1);
var TypingDots = function() {
  return import_react103.default.createElement(
    "div",
    { className: "typing-dots-container" },
    import_react103.default.createElement("span", null),
    import_react103.default.createElement("span", null),
    import_react103.default.createElement("span", null)
  );
};
var AVATAR_BORDER_SIZE = 2;
var AVATAR_DIAMETER_WITHOUT_BORDER = 28;
var AVATAR_DIAMETER = AVATAR_DIAMETER_WITHOUT_BORDER + AVATAR_BORDER_SIZE * 2;
var LEFT_GAP = 24;
var MAX_PROFILES_COUNT = 3;
var LEFT_FOR_BORDER = AVATAR_BORDER_SIZE;
var AvatarStack = function(props) {
  var sources = props.sources, max2 = props.max;
  return import_react103.default.createElement(
    import_react103.default.Fragment,
    null,
    " ",
    sources.slice(0, max2).map(function(src, index) {
      return import_react103.default.createElement(Avatar$1, {
        className: "sendbird-message-content__left__avatar multiple",
        src: src || "",
        key: "avatar_stack_item_".concat(src),
        // TODO: Divide getting profileUrl logic to utils
        width: "".concat(AVATAR_DIAMETER_WITHOUT_BORDER, "px"),
        height: "".concat(AVATAR_DIAMETER_WITHOUT_BORDER, "px"),
        zIndex: index,
        left: "".concat(index * LEFT_GAP - LEFT_FOR_BORDER, "px")
      });
    }),
    " "
  );
};
var TypingIndicatorBubbleAvatar = function(props) {
  var typingMembers = props.typingMembers;
  var membersCount = typingMembers.length;
  var displayCount = Math.min(membersCount, 4);
  var hiddenCount = membersCount - MAX_PROFILES_COUNT;
  var superImposedWidth = (displayCount - 1) * (AVATAR_DIAMETER - LEFT_GAP);
  var rightPaddingSize = 12;
  return import_react103.default.createElement(
    "div",
    { className: "sendbird-message-content__left incoming", style: {
      minWidth: displayCount * AVATAR_DIAMETER - superImposedWidth + rightPaddingSize
    } },
    import_react103.default.createElement(AvatarStack, { sources: typingMembers.map(function(member) {
      return member.profileUrl;
    }), max: MAX_PROFILES_COUNT }),
    hiddenCount > 0 ? import_react103.default.createElement(Avatar$1, {
      className: "sendbird-message-content__left__avatar multiple",
      // TODO: Divide getting profileUrl logic to utils
      width: "".concat(AVATAR_DIAMETER_WITHOUT_BORDER, "px"),
      height: "".concat(AVATAR_DIAMETER_WITHOUT_BORDER, "px"),
      zIndex: MAX_PROFILES_COUNT,
      left: "".concat(MAX_PROFILES_COUNT * LEFT_GAP, "px"),
      customDefaultComponent: function(_a3) {
        var width = _a3.width, height = _a3.height;
        return import_react103.default.createElement(AvatarDefault, { width, height, text: "+".concat(hiddenCount) });
      }
    }) : null
  );
};
var TypingIndicatorBubble = function(props) {
  var typingMembers = props.typingMembers, handleScroll = props.handleScroll;
  if (typingMembers.length === 0)
    return null;
  (0, import_react103.useLayoutEffect)(function() {
    handleScroll === null || handleScroll === void 0 ? void 0 : handleScroll(true);
  }, []);
  return import_react103.default.createElement(
    "div",
    { className: "sendbird-message-content incoming", style: { marginBottom: "2px" } },
    import_react103.default.createElement(TypingIndicatorBubbleAvatar, { typingMembers }),
    import_react103.default.createElement(
      "div",
      { className: "sendbird-message-content__middle" },
      import_react103.default.createElement(TypingDots, null)
    )
  );
};

// node_modules/@sendbird/uikit-react/Channel/utils/compareMessagesForGrouping.js
var import_react104 = __toESM(require_react(), 1);
var compareMessagesForGrouping = function(prevMessage, currMessage, nextMessage, currentChannel, replyType) {
  if (!currentChannel || currentChannel.channelType !== "group") {
    return [
      isSameGroup(prevMessage, currMessage),
      isSameGroup(currMessage, nextMessage)
    ];
  }
  if (replyType === "THREAD" && (currMessage === null || currMessage === void 0 ? void 0 : currMessage.threadInfo)) {
    return [false, false];
  }
  var sendingStatus = (currMessage === null || currMessage === void 0 ? void 0 : currMessage.sendingStatus) || "";
  var isAcceptable = sendingStatus !== "pending" && sendingStatus !== "failed";
  return [
    isSameGroup(prevMessage, currMessage, currentChannel) && isAcceptable,
    isSameGroup(currMessage, nextMessage, currentChannel) && isAcceptable
  ];
};
var getMessageCreatedAt = function(message) {
  var stringSet2 = useLocalization().stringSet;
  return format(message.createdAt, stringSet2.DATE_FORMAT__MESSAGE_CREATED_AT);
};
var isSameGroup = function(message, comparingMessage, currentChannel) {
  var _a3, _b2;
  if (!(message && comparingMessage && message.messageType && message.messageType !== "admin" && comparingMessage.messageType && (comparingMessage === null || comparingMessage === void 0 ? void 0 : comparingMessage.messageType) !== "admin" && "sender" in message && "sender" in comparingMessage && message.createdAt && comparingMessage.createdAt && message.sender.userId && comparingMessage.sender.userId)) {
    return false;
  }
  return (message === null || message === void 0 ? void 0 : message.sendingStatus) === (comparingMessage === null || comparingMessage === void 0 ? void 0 : comparingMessage.sendingStatus) && ((_a3 = message === null || message === void 0 ? void 0 : message.sender) === null || _a3 === void 0 ? void 0 : _a3.userId) === ((_b2 = comparingMessage === null || comparingMessage === void 0 ? void 0 : comparingMessage.sender) === null || _b2 === void 0 ? void 0 : _b2.userId) && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage) && (currentChannel ? isReadMessage(currentChannel, message) === isReadMessage(currentChannel, comparingMessage) : true);
};

// node_modules/@sendbird/uikit-react/Channel/utils/getMessagePartsInfo.js
var import_react105 = __toESM(require_react(), 1);
var getMessagePartsInfo = function(_a3) {
  var _b2 = _a3.allMessages, allMessages = _b2 === void 0 ? [] : _b2, _c = _a3.isMessageGroupingEnabled, isMessageGroupingEnabled = _c === void 0 ? true : _c, _d = _a3.currentIndex, currentIndex = _d === void 0 ? 0 : _d, currentMessage = _a3.currentMessage, _e3 = _a3.currentChannel, currentChannel = _e3 === void 0 ? null : _e3, _f = _a3.replyType, replyType = _f === void 0 ? "" : _f;
  var previousMessage = allMessages[currentIndex - 1];
  var nextMessage = allMessages[currentIndex + 1];
  var _g2 = isMessageGroupingEnabled ? compareMessagesForGrouping(previousMessage, currentMessage, nextMessage, currentChannel, replyType) : [false, false], chainTop = _g2[0], chainBottom = _g2[1];
  var previousMessageCreatedAt = previousMessage === null || previousMessage === void 0 ? void 0 : previousMessage.createdAt;
  var currentCreatedAt = currentMessage.createdAt;
  var isLocalMessage = "sendingStatus" in currentMessage && currentMessage.sendingStatus !== "succeeded";
  var hasSeparator = isLocalMessage ? false : !(previousMessageCreatedAt && isSameDay(currentCreatedAt, previousMessageCreatedAt));
  return {
    chainTop,
    chainBottom,
    hasSeparator
  };
};

// node_modules/@sendbird/uikit-react/chunks/bundle-CtcQd9Ql.js
var scrollToRenderedMessage = function(scrollRef, initialTimeStamp, setIsScrolled) {
  var _a3;
  try {
    var container = scrollRef.current;
    var element = (_a3 = container === null || container === void 0 ? void 0 : container.querySelectorAll('[data-sb-created-at="'.concat(initialTimeStamp, '"]'))) === null || _a3 === void 0 ? void 0 : _a3[0];
    if (container && element instanceof HTMLElement) {
      container.scrollTop = element.offsetTop;
    }
  } catch (_b2) {
  } finally {
    setIsScrolled === null || setIsScrolled === void 0 ? void 0 : setIsScrolled(true);
  }
};
var scrollIntoLast = function(initialTry, scrollRef, setIsScrolled) {
  if (initialTry === void 0) {
    initialTry = 0;
  }
  var MAX_TRIES = 10;
  var currentTry = initialTry;
  if (currentTry > MAX_TRIES) {
    setIsScrolled === null || setIsScrolled === void 0 ? void 0 : setIsScrolled(true);
    return;
  }
  try {
    var scrollDOM = (scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current) || document.querySelector(".sendbird-conversation__messages-padding");
    if (scrollDOM)
      scrollDOM.scrollTop = scrollDOM.scrollHeight;
    setIsScrolled === null || setIsScrolled === void 0 ? void 0 : setIsScrolled(true);
  } catch (error) {
    setTimeout(function() {
      scrollIntoLast(currentTry + 1, scrollRef, setIsScrolled);
    }, 500 * currentTry);
  }
};
var isOperator = function(groupChannel) {
  var myRole = groupChannel === null || groupChannel === void 0 ? void 0 : groupChannel.myRole;
  return myRole === "operator";
};
var isDisabledBecauseFrozen2 = function(groupChannel) {
  var isFrozen2 = groupChannel === null || groupChannel === void 0 ? void 0 : groupChannel.isFrozen;
  return isFrozen2 && !isOperator(groupChannel);
};
var isDisabledBecauseMuted2 = function(groupChannel) {
  var myMutedState = groupChannel === null || groupChannel === void 0 ? void 0 : groupChannel.myMutedState;
  return myMutedState === "muted";
};
var getAllEmojisMapFromEmojiContainer = function(emojiContainer) {
  var _a3 = emojiContainer.emojiCategories, emojiCategories = _a3 === void 0 ? [] : _a3;
  var allEmojisMap = /* @__PURE__ */ new Map();
  for (var categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {
    var emojis = emojiCategories[categoryIndex].emojis;
    for (var emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {
      var _b2 = emojis[emojiIndex], key = _b2.key, url = _b2.url;
      allEmojisMap.set(key, url);
    }
  }
  return allEmojisMap;
};
var getNicknamesMapFromMembers = function(members) {
  if (members === void 0) {
    members = [];
  }
  var nicknamesMap = /* @__PURE__ */ new Map();
  for (var memberIndex = 0; memberIndex < members.length; memberIndex += 1) {
    var _a3 = members[memberIndex], userId = _a3.userId, nickname = _a3.nickname;
    nicknamesMap.set(userId, nickname);
  }
  return nicknamesMap;
};
var getUniqueListBy = function(arr, key) {
  var entries2 = arr.map(function(item) {
    return [item[key], item];
  });
  return Array.from(new Map(entries2).values());
};
var getUniqueListByMessageId = function(arr) {
  return getUniqueListBy(arr, "messageId");
};
var sortByCreatedAt = function(messages) {
  return messages.sort(function(a5, b6) {
    return a5.createdAt - b6.createdAt;
  });
};
var mergeAndSortMessages = function(oldMessages, newMessages) {
  var lastOldMessage = oldMessages[oldMessages.length - 1];
  var firstNewMessage = newMessages[0];
  if ((lastOldMessage === null || lastOldMessage === void 0 ? void 0 : lastOldMessage.createdAt) < (firstNewMessage === null || firstNewMessage === void 0 ? void 0 : firstNewMessage.createdAt)) {
    return __spreadArray(__spreadArray([], oldMessages, true), newMessages, true);
  }
  var mergedMessages = __spreadArray(__spreadArray([], oldMessages, true), newMessages, true);
  var unique = getUniqueListByMessageId(mergedMessages);
  return sortByCreatedAt(unique);
};
var passUnsuccessfullMessages = function(allMessages, newMessage) {
  if ("sendingStatus" in newMessage && (newMessage.sendingStatus === W.SUCCEEDED || newMessage.sendingStatus === W.PENDING)) {
    var lastIndexOfSucceededMessage = allMessages.map(function(message) {
      if ("sendingStatus" in message && message.sendingStatus)
        return message.sendingStatus;
      return message.isAdminMessage() ? W.SUCCEEDED : null;
    }).lastIndexOf(W.SUCCEEDED);
    if (lastIndexOfSucceededMessage + 1 < allMessages.length) {
      var messages = __spreadArray([], allMessages, true);
      messages.splice(lastIndexOfSucceededMessage + 1, 0, newMessage);
      return messages;
    }
  }
  return __spreadArray(__spreadArray([], allMessages, true), [newMessage], false);
};
var isAboutSame = function(a5, b6, px) {
  return Math.abs(a5 - b6) <= px;
};

// node_modules/@sendbird/uikit-react/GroupChannel/components/MessageList.js
var import_react_dom27 = __toESM(require_react_dom(), 1);
var InfiniteList = (0, import_react106.forwardRef)(function(props, listRef) {
  var messages = props.messages, renderMessage = props.renderMessage, scrollPositionRef = props.scrollPositionRef, scrollDistanceFromBottomRef = props.scrollDistanceFromBottomRef, onLoadPrevious = props.onLoadPrevious, onLoadNext = props.onLoadNext, _a3 = props.loadThreshold, loadThreshold = _a3 === void 0 ? 0.05 : _a3, typingIndicator = props.typingIndicator, _b2 = props.onScrollPosition, onScrollPosition = _b2 === void 0 ? noop : _b2, initDeps = props.initDeps;
  var isFetching = import_react106.default.useRef(false);
  var direction = import_react106.default.useRef();
  var oldScrollTop = (0, import_react106.useRef)(0);
  (0, import_react106.useLayoutEffect)(function() {
    if (listRef.current) {
      listRef.current.scrollTop = listRef.current.scrollHeight;
    }
  }, initDeps);
  (0, import_react106.useLayoutEffect)(function() {
    if (listRef.current) {
      if (direction.current === "top") {
        listRef.current.scrollTop = listRef.current.scrollHeight - scrollPositionRef.current;
      }
      if (direction.current === "bottom") {
        listRef.current.scrollTop = oldScrollTop.current;
      }
      direction.current = void 0;
    }
  }, [listRef.current, messages.length]);
  var handleScroll = function() {
    return __awaiter(void 0, void 0, void 0, function() {
      var list, threshold;
      return __generator(this, function(_a4) {
        switch (_a4.label) {
          case 0:
            if (!listRef.current)
              return [
                2
                /*return*/
              ];
            list = listRef.current;
            onScrollPosition(getReachedStatus(list));
            scrollPositionRef.current = list.scrollHeight - list.scrollTop;
            scrollDistanceFromBottomRef.current = scrollPositionRef.current - list.clientHeight;
            oldScrollTop.current = list.scrollTop;
            if (isFetching.current)
              return [
                2
                /*return*/
              ];
            threshold = list.clientHeight * Math.min(Math.max(0, loadThreshold), 1);
            if (!(list.scrollTop <= threshold)) return [3, 2];
            isFetching.current = true;
            direction.current = "top";
            return [4, onLoadPrevious()];
          case 1:
            _a4.sent();
            isFetching.current = false;
            return [3, 5];
          case 2:
            if (!(list.scrollHeight - list.scrollTop - list.clientHeight <= threshold)) return [3, 4];
            isFetching.current = true;
            direction.current = "bottom";
            return [4, onLoadNext()];
          case 3:
            _a4.sent();
            isFetching.current = false;
            return [3, 5];
          case 4:
            direction.current = void 0;
            _a4.label = 5;
          case 5:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  return import_react106.default.createElement(
    "div",
    { className: "sendbird-conversation__scroll-container" },
    import_react106.default.createElement("div", { className: "sendbird-conversation__padding" }),
    import_react106.default.createElement(
      "div",
      { ref: listRef, className: "sendbird-conversation__messages-padding", "data-testid": "sendbird-message-list-container", onScroll: handleScroll },
      messages.map(function(message, index) {
        return renderMessage({ message, index });
      }),
      typingIndicator
    )
  );
});
function getReachedStatus(element) {
  if (isAboutSame(element.scrollTop, 0, SCROLL_BUFFER)) {
    return "top";
  }
  if (isAboutSame(element.scrollHeight, element.clientHeight + element.scrollTop, SCROLL_BUFFER)) {
    return "bottom";
  }
  return "middle";
}
var MessageList = function(props) {
  var _a3, _b2, _c, _d, _e3;
  var _f = props.className, className = _f === void 0 ? "" : _f;
  var _g2 = deleteNullish(props), _h = _g2.renderMessage, renderMessage = _h === void 0 ? function(props2) {
    return import_react106.default.createElement(Message, __assign({}, props2));
  } : _h, renderMessageContent = _g2.renderMessageContent, renderSuggestedReplies = _g2.renderSuggestedReplies, renderCustomSeparator = _g2.renderCustomSeparator, _j = _g2.renderPlaceholderLoader, renderPlaceholderLoader = _j === void 0 ? function() {
    return import_react106.default.createElement(PlaceHolder, { type: PlaceHolderTypes.LOADING });
  } : _j, _k = _g2.renderPlaceholderEmpty, renderPlaceholderEmpty = _k === void 0 ? function() {
    return import_react106.default.createElement(PlaceHolder, { className: "sendbird-conversation__no-messages", type: PlaceHolderTypes.NO_MESSAGES });
  } : _k, _l = _g2.renderFrozenNotification, renderFrozenNotification = _l === void 0 ? function() {
    return import_react106.default.createElement(FrozenNotification, { className: "sendbird-conversation__messages__notification" });
  } : _l;
  var _m = useGroupChannelContext(), channelUrl = _m.channelUrl, hasNext = _m.hasNext, loading = _m.loading, messages = _m.messages, newMessages = _m.newMessages, scrollToBottom = _m.scrollToBottom, isScrollBottomReached = _m.isScrollBottomReached, isMessageGroupingEnabled = _m.isMessageGroupingEnabled, scrollRef = _m.scrollRef, scrollDistanceFromBottomRef = _m.scrollDistanceFromBottomRef, scrollPositionRef = _m.scrollPositionRef, currentChannel = _m.currentChannel, replyType = _m.replyType, scrollPubSub = _m.scrollPubSub, loadNext = _m.loadNext, loadPrevious = _m.loadPrevious, setIsScrollBottomReached = _m.setIsScrollBottomReached, resetNewMessages = _m.resetNewMessages;
  var store = useSendbirdStateContext();
  var _o2 = (0, import_react106.useState)(), unreadSinceDate = _o2[0], setUnreadSinceDate = _o2[1];
  (0, import_react106.useEffect)(function() {
    if (isScrollBottomReached) {
      setUnreadSinceDate(void 0);
    } else {
      setUnreadSinceDate(/* @__PURE__ */ new Date());
    }
  }, [isScrollBottomReached]);
  var onMessageContentSizeChanged = function(isBottomMessageAffected) {
    if (isBottomMessageAffected === void 0) {
      isBottomMessageAffected = false;
    }
    var elem = scrollRef.current;
    if (elem) {
      var latestDistance = scrollDistanceFromBottomRef.current;
      var currentDistance = elem.scrollHeight - elem.scrollTop - elem.offsetHeight;
      if (latestDistance < currentDistance && (!isBottomMessageAffected || latestDistance < SCROLL_BUFFER)) {
        var diff = currentDistance - latestDistance;
        scrollPubSub.publish("scroll", { top: elem.scrollTop + diff, lazy: false, animated: false });
      }
    }
  };
  var renderer2 = {
    frozenNotification: function() {
      if (!currentChannel || !currentChannel.isFrozen)
        return null;
      return renderFrozenNotification();
    },
    unreadMessagesNotification: function() {
      if (isScrollBottomReached || !unreadSinceDate)
        return null;
      return import_react106.default.createElement(UnreadCount, { className: "sendbird-conversation__messages__notification", count: newMessages.length, lastReadAt: unreadSinceDate, onClick: function() {
        return scrollToBottom();
      } });
    },
    scrollToBottomButton: function() {
      if (!hasNext() && isScrollBottomReached)
        return null;
      return import_react106.default.createElement(
        "div",
        { className: "sendbird-conversation__scroll-bottom-button", onClick: function() {
          return scrollToBottom();
        }, onKeyDown: function() {
          return scrollToBottom();
        }, tabIndex: 0, role: "button" },
        import_react106.default.createElement(Icon, { width: "24px", height: "24px", type: IconTypes.CHEVRON_DOWN, fillColor: IconColors.PRIMARY })
      );
    }
  };
  if (loading) {
    return renderPlaceholderLoader();
  }
  if (messages.length === 0) {
    return renderPlaceholderEmpty();
  }
  return import_react106.default.createElement(
    import_react106.default.Fragment,
    null,
    import_react106.default.createElement(
      "div",
      { className: "sendbird-conversation__messages ".concat(className) },
      import_react106.default.createElement(InfiniteList, { ref: scrollRef, initDeps: [channelUrl], scrollPositionRef, scrollDistanceFromBottomRef, onLoadNext: loadNext, onLoadPrevious: loadPrevious, onScrollPosition: function(it3) {
        var isScrollBottomReached2 = it3 === "bottom";
        if (newMessages.length > 0 && isScrollBottomReached2) {
          resetNewMessages();
        }
        setIsScrollBottomReached(isScrollBottomReached2);
      }, messages, renderMessage: function(_a4) {
        var message = _a4.message, index = _a4.index;
        var _b3 = getMessagePartsInfo({
          allMessages: messages,
          replyType: replyType !== null && replyType !== void 0 ? replyType : "NONE",
          isMessageGroupingEnabled: isMessageGroupingEnabled !== null && isMessageGroupingEnabled !== void 0 ? isMessageGroupingEnabled : false,
          currentIndex: index,
          currentMessage: message,
          currentChannel
        }), chainTop = _b3.chainTop, chainBottom = _b3.chainBottom, hasSeparator = _b3.hasSeparator;
        var isOutgoingMessage = isSendableMessage2(message) && message.sender.userId === store.config.userId;
        return import_react106.default.createElement(MessageProvider, { message, key: getComponentKeyFromMessage(message), isByMe: isOutgoingMessage }, renderMessage({
          handleScroll: onMessageContentSizeChanged,
          message,
          hasSeparator,
          chainTop,
          chainBottom,
          renderMessageContent,
          renderSuggestedReplies,
          renderCustomSeparator
        }));
      }, typingIndicator: !hasNext() && ((_b2 = (_a3 = store === null || store === void 0 ? void 0 : store.config) === null || _a3 === void 0 ? void 0 : _a3.groupChannel) === null || _b2 === void 0 ? void 0 : _b2.enableTypingIndicator) && ((_e3 = (_d = (_c = store === null || store === void 0 ? void 0 : store.config) === null || _c === void 0 ? void 0 : _c.groupChannel) === null || _d === void 0 ? void 0 : _d.typingIndicatorTypes) === null || _e3 === void 0 ? void 0 : _e3.has(TypingIndicatorType.Bubble)) && import_react106.default.createElement(TypingIndicatorBubbleWrapper, { channelUrl, handleScroll: onMessageContentSizeChanged }) }),
      import_react106.default.createElement(import_react106.default.Fragment, null, renderer2.frozenNotification()),
      import_react106.default.createElement(import_react106.default.Fragment, null, renderer2.unreadMessagesNotification()),
      import_react106.default.createElement(import_react106.default.Fragment, null, renderer2.scrollToBottomButton())
    )
  );
};
var TypingIndicatorBubbleWrapper = function(props) {
  var stores = useSendbirdStateContext().stores;
  var _a3 = (0, import_react106.useState)([]), typingMembers = _a3[0], setTypingMembers = _a3[1];
  useGroupChannelHandler(stores.sdkStore.sdk, {
    onTypingStatusUpdated: function(channel) {
      if (channel.url === props.channelUrl) {
        setTypingMembers(channel.getTypingUsers());
      }
    }
  });
  return import_react106.default.createElement(TypingIndicatorBubble, { typingMembers, handleScroll: props.handleScroll });
};

// node_modules/@sendbird/uikit-react/GroupChannel/components/MessageInputWrapper.js
var import_react112 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-SyLbPukg.js
var import_react111 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/GroupChannel/components/SuggestedMentionList.js
var import_react107 = __toESM(require_react(), 1);
var SuggestedMentionList = function(props) {
  return import_react107.default.createElement(SuggestedMentionListView, __assign({}, props));
};

// node_modules/@sendbird/uikit-react/ui/QuoteMessageInput.js
var import_react108 = __toESM(require_react(), 1);
var componentClassname = "sendbird-quote_message_input__avatar";
function QuoteMessageThumbnail(_a3) {
  var _b2;
  var message = _a3.message;
  if (!isFileMessage(message) && !isMultipleFilesMessage(message) || isVoiceMessage(message)) {
    return import_react108.default.createElement(import_react108.default.Fragment, null);
  }
  var thumbnailUrl = getMessageFirstFileThumbnailUrl(message);
  if (!thumbnailUrl) {
    if (isImageMessage(message) || isVideoMessage(message)) {
      thumbnailUrl = getMessageFirstFileUrl(message);
    } else if (isMultipleFilesMessage(message) && isImageFileInfo((_b2 = message.fileInfoList) === null || _b2 === void 0 ? void 0 : _b2[0])) {
      thumbnailUrl = message.fileInfoList[0].url;
    }
  }
  if (isVideoMessage(message) && thumbnailUrl) {
    return import_react108.default.createElement(
      "div",
      { className: componentClassname },
      import_react108.default.createElement("video", { style: {
        width: "44px",
        height: "44px"
      }, src: thumbnailUrl })
    );
  } else if ((isThumbnailMessage(message) || isMultipleFilesMessage(message)) && thumbnailUrl) {
    return import_react108.default.createElement(ImageRenderer, { className: componentClassname, url: thumbnailUrl, alt: getMessageFirstFileType(message), width: "44px", height: "44px", fixedSize: true });
  } else if (isAudioMessage(message)) {
    return import_react108.default.createElement(
      "div",
      { className: componentClassname },
      import_react108.default.createElement(Icon, { type: IconTypes.FILE_AUDIO, fillColor: IconColors.ON_BACKGROUND_2, width: "24px", height: "24px" })
    );
  } else {
    return import_react108.default.createElement(
      "div",
      { className: componentClassname },
      import_react108.default.createElement(Icon, { type: IconTypes.FILE_DOCUMENT, fillColor: IconColors.ON_BACKGROUND_2, width: "24px", height: "24px" })
    );
  }
}
function QuoteMessageInput(_a3) {
  var className = _a3.className, replyingMessage = _a3.replyingMessage, onClose = _a3.onClose;
  var stringSet2 = (0, import_react108.useContext)(LocalizationContext).stringSet;
  var fileMessage = replyingMessage;
  var sender = replyingMessage === null || replyingMessage === void 0 ? void 0 : replyingMessage.sender;
  var displayFileIcon = (isFileMessage(replyingMessage) || isMultipleFilesMessage(replyingMessage)) && !isVoiceMessage(replyingMessage);
  return import_react108.default.createElement(
    "div",
    { className: getClassName(["sendbird-quote_message_input", className !== null && className !== void 0 ? className : ""]) },
    displayFileIcon && import_react108.default.createElement(QuoteMessageThumbnail, { message: fileMessage }),
    import_react108.default.createElement(
      "div",
      { className: "sendbird-quote_message_input__body", style: {
        width: "calc(100% - ".concat(displayFileIcon ? "164px" : "120px", ")"),
        left: displayFileIcon ? "92px" : "40px"
      } },
      import_react108.default.createElement(Label, { className: "sendbird-quote_message_input__body__sender-name", type: LabelTypography.CAPTION_1, color: LabelColors.ONBACKGROUND_1 }, "".concat(stringSet2.QUOTE_MESSAGE_INPUT__REPLY_TO, " ").concat(sender && sender.nickname ? sender.nickname : stringSet2.NO_NAME)),
      import_react108.default.createElement(
        Label,
        { className: "sendbird-quote_message_input__body__message-content", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_3 },
        isImageMessage(fileMessage) && !isGifMessage(fileMessage) && stringSet2.QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE,
        isVideoMessage(fileMessage) && stringSet2.QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO,
        isGifMessage(fileMessage) && stringSet2.QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF,
        isUserMessage(replyingMessage) && replyingMessage.message,
        getUIKitMessageType(replyingMessage) === UIKitMessageTypes.FILE && getMessageFirstFileName(fileMessage),
        isMultipleFilesMessage(replyingMessage) && "".concat(fileMessage.fileInfoList.length, " Photos"),
        isVoiceMessage(replyingMessage) && stringSet2.VOICE_MESSAGE
      )
    ),
    import_react108.default.createElement(Icon, { className: "sendbird-quote_message_input__close-button", type: IconTypes.CLOSE, fillColor: IconColors.ON_BACKGROUND_2, width: "24px", height: "24px", onClick: function() {
      return onClose === null || onClose === void 0 ? void 0 : onClose(replyingMessage);
    } })
  );
}

// node_modules/@sendbird/uikit-react/VoiceRecorder/useVoiceRecorder.js
var import_react109 = __toESM(require_react(), 1);
var import_react_dom28 = __toESM(require_react_dom(), 1);
var VoiceRecorderStatus = {
  PREPARING: "PREPARING",
  READY_TO_RECORD: "READY_TO_RECORD",
  RECORDING: "RECORDING",
  COMPLETED: "COMPLETED"
};
var useVoiceRecorder = function(_a3) {
  var _b2 = _a3.onRecordingStarted, onRecordingStarted = _b2 === void 0 ? noop : _b2, _c = _a3.onRecordingEnded, onRecordingEnded = _c === void 0 ? noop : _c;
  var config = useSendbirdStateContext().config;
  var voiceRecord = config.voiceRecord;
  var maxRecordingTime = voiceRecord.maxRecordingTime;
  var voiceRecorder = useVoiceRecorderContext();
  var isRecordable = voiceRecorder.isRecordable;
  var _d = (0, import_react109.useState)(null), recordedFile = _d[0], setRecordedFile = _d[1];
  var _e3 = (0, import_react109.useState)(VoiceRecorderStatus.PREPARING), recordingStatus = _e3[0], setRecordingStatus = _e3[1];
  (0, import_react109.useEffect)(function() {
    if (isRecordable && recordingStatus === VoiceRecorderStatus.PREPARING) {
      setRecordingStatus(VoiceRecorderStatus.READY_TO_RECORD);
    }
  }, [isRecordable]);
  var start = (0, import_react109.useCallback)(function() {
    voiceRecorder === null || voiceRecorder === void 0 ? void 0 : voiceRecorder.start({
      onRecordingStarted: function() {
        setRecordingStatus(VoiceRecorderStatus.RECORDING);
        onRecordingStarted();
        startTimer();
      },
      onRecordingEnded: function(audioFile) {
        setRecordingStatus(VoiceRecorderStatus.COMPLETED);
        onRecordingEnded(audioFile);
        setRecordedFile(audioFile);
        stopTimer();
      }
    });
  }, [onRecordingStarted, onRecordingEnded]);
  var stop = (0, import_react109.useCallback)(function() {
    voiceRecorder === null || voiceRecorder === void 0 ? void 0 : voiceRecorder.stop();
    stopTimer();
  }, [voiceRecorder]);
  var cancel = (0, import_react109.useCallback)(function() {
    stop();
    setRecordedFile(null);
  }, [voiceRecorder]);
  var _f = (0, import_react109.useState)(0), recordingTime = _f[0], setRecordingTime = _f[1];
  var timer = (0, import_react109.useRef)(null);
  function startTimer() {
    stopTimer();
    setRecordingTime(0);
    timer.current = setInterval(function() {
      setRecordingTime(function(prevTime) {
        var newTime = prevTime + 100;
        if (newTime > maxRecordingTime) {
          stopTimer();
        }
        return newTime;
      });
    }, 100);
  }
  function stopTimer() {
    if (timer.current) {
      clearInterval(timer.current);
      timer.current = null;
    }
  }
  (0, import_react109.useEffect)(function() {
    if (recordingTime > maxRecordingTime) {
      stop();
    }
  }, [recordingTime, maxRecordingTime, stop]);
  return {
    start,
    stop,
    cancel,
    recordingStatus,
    recordingTime,
    recordedFile,
    recordingLimit: maxRecordingTime
  };
};

// node_modules/@sendbird/uikit-react/chunks/bundle-DBeNFit6.js
var import_react110 = __toESM(require_react(), 1);
var VoiceMessageInputStatus = {
  READY_TO_RECORD: "READY_TO_RECORD",
  RECORDING: "RECORDING",
  READY_TO_PLAY: "READY_TO_PLAY",
  PLAYING: "PLAYING"
};
var ControlerIcon = function(_a3) {
  var inputState = _a3.inputState;
  switch (inputState) {
    case VoiceMessageInputStatus.READY_TO_RECORD: {
      return import_react110.default.createElement("div", { className: "sendbird-controler-icon record-icon" });
    }
    case VoiceMessageInputStatus.RECORDING: {
      return import_react110.default.createElement("div", { className: "sendbird-controler-icon stop-icon" });
    }
    case VoiceMessageInputStatus.READY_TO_PLAY: {
      return import_react110.default.createElement(Icon, { className: "sendbird-controler-icon play-icon", width: "20px", height: "20px", type: IconTypes.PLAY, fillColor: IconColors.ON_BACKGROUND_1 });
    }
    case VoiceMessageInputStatus.PLAYING: {
      return import_react110.default.createElement(
        "div",
        { className: "sendbird-controler-icon pause-icon" },
        import_react110.default.createElement("div", { className: "sendbird-controler-icon pause-icon-inner" }),
        import_react110.default.createElement("div", { className: "sendbird-controler-icon pause-icon-inner" })
      );
    }
    default:
      return import_react110.default.createElement(import_react110.default.Fragment, null);
  }
};
var VoiceMessageInput = function(_a3) {
  var _b2 = _a3.minRecordTime, minRecordTime = _b2 === void 0 ? VOICE_RECORDER_DEFAULT_MIN : _b2, maximumValue = _a3.maximumValue, _c = _a3.currentValue, currentValue = _c === void 0 ? 0 : _c, currentType = _a3.currentType, onCancelClick = _a3.onCancelClick, onControlClick = _a3.onControlClick, onSubmitClick = _a3.onSubmitClick, renderCancelButton = _a3.renderCancelButton, renderControlButton = _a3.renderControlButton, renderSubmitButton = _a3.renderSubmitButton;
  var _d = (0, import_react110.useState)(0), lastClickTime = _d[0], setLastClickTime = _d[1];
  var isReadyToRecord = (0, import_react110.useMemo)(function() {
    return currentType === VoiceMessageInputStatus.READY_TO_RECORD;
  }, [currentType]);
  var isRecording = (0, import_react110.useMemo)(function() {
    return currentType === VoiceMessageInputStatus.RECORDING;
  }, [currentType]);
  var isSendButtonDisabled = (0, import_react110.useMemo)(function() {
    if (currentType === VoiceMessageInputStatus.READY_TO_RECORD || currentType === VoiceMessageInputStatus.RECORDING) {
      return minRecordTime > currentValue;
    }
    return false;
  }, [currentType, minRecordTime, currentValue]);
  var isPlayMode = (0, import_react110.useMemo)(function() {
    return currentType === VoiceMessageInputStatus.READY_TO_PLAY || currentType === VoiceMessageInputStatus.PLAYING;
  }, [currentType]);
  var stringSet2 = useLocalization().stringSet;
  var handleOnCancelClick = function() {
    var currentTime = Date.now();
    if (currentTime - lastClickTime > VOICE_RECORDER_CLICK_BUFFER_TIME) {
      onCancelClick === null || onCancelClick === void 0 ? void 0 : onCancelClick();
      setLastClickTime(currentTime);
    }
  };
  var handleOnControlClick = (0, import_react110.useCallback)(function() {
    var currentTime = Date.now();
    if (currentTime - lastClickTime > VOICE_RECORDER_CLICK_BUFFER_TIME) {
      onControlClick === null || onControlClick === void 0 ? void 0 : onControlClick(currentType);
      setLastClickTime(currentTime);
    }
  }, [currentType]);
  var handleOnSubmitClick = function() {
    var currentTime = Date.now();
    if (currentTime - lastClickTime > VOICE_RECORDER_CLICK_BUFFER_TIME) {
      if (!isSendButtonDisabled) {
        onSubmitClick === null || onSubmitClick === void 0 ? void 0 : onSubmitClick();
      }
      setLastClickTime(currentTime);
    }
  };
  return import_react110.default.createElement(
    "div",
    { className: "sendbird-voice-message-input" },
    import_react110.default.createElement(
      "div",
      { className: "sendbird-voice-message-input__indicator" },
      import_react110.default.createElement(
        "div",
        { className: "sendbird-voice-message-input__indicator__progress-bar" },
        import_react110.default.createElement(ProgressBar, { className: "sendbird-voice-message-input__indicator__progress-bar__bar", disabled: isReadyToRecord, maxSize: maximumValue, currentSize: currentValue })
      ),
      isRecording ? import_react110.default.createElement("div", { className: "sendbird-voice-message-input__indicator__on-rec" }) : null,
      import_react110.default.createElement(PlaybackTime, { className: "sendbird-voice-message-input__indicator__playback-time", time: isPlayMode ? maximumValue - currentValue : currentValue, labelColor: isReadyToRecord ? LabelColors.ONBACKGROUND_4 : LabelColors.ONCONTENT_1 })
    ),
    import_react110.default.createElement(
      "div",
      { className: "sendbird-voice-message-input__controler" },
      (renderCancelButton === null || renderCancelButton === void 0 ? void 0 : renderCancelButton()) || import_react110.default.createElement(
        TextButton,
        { className: "sendbird-voice-message-input__controler__cancel", onClick: handleOnCancelClick, disableUnderline: true },
        import_react110.default.createElement(Label, { type: LabelTypography.BUTTON_1, color: LabelColors.PRIMARY }, stringSet2.BUTTON__CANCEL)
      ),
      (renderControlButton === null || renderControlButton === void 0 ? void 0 : renderControlButton(currentType)) || import_react110.default.createElement(
        "div",
        { className: "sendbird-voice-message-input__controler__main", onClick: handleOnControlClick },
        import_react110.default.createElement(ControlerIcon, { inputState: currentType })
      ),
      (renderSubmitButton === null || renderSubmitButton === void 0 ? void 0 : renderSubmitButton()) || import_react110.default.createElement(
        "div",
        { className: classnames("sendbird-voice-message-input__controler__submit", isSendButtonDisabled && "voice-message--disabled"), onClick: handleOnSubmitClick },
        import_react110.default.createElement(Icon, { width: "19px", height: "19px", type: IconTypes.SEND, fillColor: isSendButtonDisabled ? IconColors.ON_BACKGROUND_4 : IconColors.CONTENT })
      )
    )
  );
};

// node_modules/@sendbird/uikit-react/chunks/bundle-BRWtuT59.js
var compressImage = function(_a3) {
  var imageFile = _a3.imageFile, compressionRate = _a3.compressionRate, resizingWidth = _a3.resizingWidth, resizingHeight = _a3.resizingHeight, outputFormat = _a3.outputFormat;
  var image = document.createElement("img");
  return new Promise(function(resolve, reject) {
    image.src = URL.createObjectURL(imageFile);
    image.onerror = reject;
    image.onload = function() {
      URL.revokeObjectURL(image.src);
      var canvas = document.createElement("canvas");
      var originWidth = image.width;
      var originHeight = image.height;
      var targetResizingWidth = !resizingWidth || resizingWidth > originWidth ? originWidth : resizingWidth;
      var targetResizingHeight = !resizingHeight || resizingHeight > originHeight ? originHeight : resizingHeight;
      var widthRatio = originWidth / targetResizingWidth;
      var heightRatio = originHeight / targetResizingHeight;
      if (widthRatio > heightRatio) {
        targetResizingHeight = originHeight / (resizingWidth ? widthRatio : 1);
      } else if (heightRatio > widthRatio) {
        targetResizingWidth = originWidth / (resizingHeight ? heightRatio : 1);
      }
      canvas.width = targetResizingWidth;
      canvas.height = targetResizingHeight;
      var ctx = canvas.getContext("2d");
      if (!ctx) {
        reject(new Error("Failed to get canvas 2d context"));
        return;
      }
      ctx.drawImage(image, 0, 0, targetResizingWidth, targetResizingHeight);
      var targetFileType = outputFormat === "preserve" ? imageFile.type : "image/".concat(outputFormat);
      var targetSubtype = targetFileType.split("/").pop();
      var dotIndex = imageFile.name.lastIndexOf(".");
      var targetName = "".concat(dotIndex === -1 ? imageFile.name : imageFile.name.substring(0, dotIndex), ".").concat(targetSubtype);
      ctx.canvas.toBlob(function(blob) {
        if (blob) {
          var file = new File([blob], targetName, { type: targetFileType });
          resolve(file);
        } else {
          reject(new Error("Failed to compress image"));
        }
      }, targetFileType, compressionRate);
    };
  });
};
var compressImages = function(_a3) {
  return __awaiter(void 0, [_a3], void 0, function(_b2) {
    var compressionRate, _c, outputFormat, resizingWidth, resizingHeight, result;
    var files = _b2.files, logger = _b2.logger, imageCompression = _b2.imageCompression;
    return __generator(this, function(_d) {
      switch (_d.label) {
        case 0:
          compressionRate = imageCompression.compressionRate, _c = imageCompression.outputFormat, outputFormat = _c === void 0 ? "preserve" : _c;
          resizingWidth = imageCompression.resizingWidth ? pxToNumber(imageCompression.resizingWidth) : void 0;
          resizingHeight = imageCompression.resizingHeight ? pxToNumber(imageCompression.resizingHeight) : void 0;
          result = {
            failedIndexes: [],
            compressedFiles: []
          };
          if (!(Array.isArray(files) && files.length > 0)) {
            logger === null || logger === void 0 ? void 0 : logger.warning("utils - compressImages: There are no files.", files);
            return [2, result];
          }
          if (!compressionRate || compressionRate < 0 || 1 < compressionRate) {
            logger === null || logger === void 0 ? void 0 : logger.warning("utils - compressImages: The compressionRate is not acceptable.", compressionRate);
            return [2, result];
          }
          return [4, Promise.all(files.map(function(file, index) {
            return __awaiter(void 0, void 0, void 0, function() {
              var compressedImage, err_1;
              return __generator(this, function(_a4) {
                switch (_a4.label) {
                  case 0:
                    if (!(file.type === "image/jpg" || file.type === "image/png" || file.type === "image/jpeg")) {
                      logger === null || logger === void 0 ? void 0 : logger.warning("utils - compressImages: The fileType is not compressible.", { file, index });
                      result.failedIndexes.push(index);
                      result.compressedFiles.push(file);
                      return [
                        2
                        /*return*/
                      ];
                    }
                    _a4.label = 1;
                  case 1:
                    _a4.trys.push([1, 3, , 4]);
                    return [4, compressImage({
                      imageFile: file,
                      compressionRate,
                      resizingWidth,
                      resizingHeight,
                      outputFormat
                    })];
                  case 2:
                    compressedImage = _a4.sent();
                    result.compressedFiles.push(compressedImage);
                    return [3, 4];
                  case 3:
                    err_1 = _a4.sent();
                    result.compressedFiles.push(file);
                    result.failedIndexes.push(index);
                    logger === null || logger === void 0 ? void 0 : logger.warning("utils - compressImages: Failed to compress image file", { file, err: err_1 });
                    return [3, 4];
                  case 4:
                    return [
                      2
                      /*return*/
                    ];
                }
              });
            });
          }))];
        case 1:
          _d.sent();
          logger === null || logger === void 0 ? void 0 : logger.info("utils - compressImages: Finished compressing images", result);
          return [2, result];
      }
    });
  });
};

// node_modules/@sendbird/uikit-react/chunks/bundle-SyLbPukg.js
var VoiceMessageInputWrapper = function(_a3) {
  var channel = _a3.channel, onCancelClick = _a3.onCancelClick, onSubmitClick = _a3.onSubmitClick;
  var uuid = (0, import_react111.useRef)(uuidv4()).current;
  var _b2 = (0, import_react111.useState)(null), audioFile = _b2[0], setAudioFile = _b2[1];
  var _c = (0, import_react111.useState)(VoiceMessageInputStatus.READY_TO_RECORD), voiceInputState = _c[0], setVoiceInputState = _c[1];
  var _d = (0, import_react111.useState)(false), isSubmitted = _d[0], setSubmit = _d[1];
  var _e3 = (0, import_react111.useState)(false), isDisabled = _e3[0], setDisabled = _e3[1];
  var _f = (0, import_react111.useState)(false), showModal = _f[0], setShowModal = _f[1];
  var stringSet2 = useLocalization().stringSet;
  var config = useSendbirdStateContext().config;
  var _g2 = useVoiceRecorder({
    onRecordingStarted: function() {
      setVoiceInputState(VoiceMessageInputStatus.RECORDING);
    },
    onRecordingEnded: function(audioFile2) {
      setAudioFile(audioFile2);
    }
  }), start = _g2.start, stop = _g2.stop, cancel = _g2.cancel, recordingTime = _g2.recordingTime, recordingStatus = _g2.recordingStatus, recordingLimit = _g2.recordingLimit;
  var voicePlayer = useVoicePlayer({
    channelUrl: channel === null || channel === void 0 ? void 0 : channel.url,
    key: uuid,
    audioFile: audioFile !== null && audioFile !== void 0 ? audioFile : void 0
  });
  var play = voicePlayer.play, pause = voicePlayer.pause, playbackTime = voicePlayer.playbackTime, playingStatus = voicePlayer.playingStatus;
  var stopVoicePlayer = voicePlayer.stop;
  (0, import_react111.useEffect)(function() {
    if (isDisabledBecauseFrozen(channel) || isDisabledBecauseMuted(channel)) {
      setDisabled(true);
    } else {
      setDisabled(false);
    }
  }, [channel === null || channel === void 0 ? void 0 : channel.myRole, channel === null || channel === void 0 ? void 0 : channel.isFrozen, channel === null || channel === void 0 ? void 0 : channel.myMutedState]);
  (0, import_react111.useEffect)(function() {
    if (isSubmitted && audioFile) {
      onSubmitClick === null || onSubmitClick === void 0 ? void 0 : onSubmitClick(audioFile, recordingTime);
      setSubmit(false);
      setAudioFile(null);
    }
  }, [isSubmitted, audioFile, recordingTime]);
  (0, import_react111.useEffect)(function() {
    if (audioFile) {
      if (recordingTime < config.voiceRecord.minRecordingTime) {
        setVoiceInputState(VoiceMessageInputStatus.READY_TO_RECORD);
        setAudioFile(null);
      } else if (playingStatus === VOICE_PLAYER_STATUS.PLAYING) {
        setVoiceInputState(VoiceMessageInputStatus.PLAYING);
      } else {
        setVoiceInputState(VoiceMessageInputStatus.READY_TO_PLAY);
      }
    }
  }, [audioFile, recordingTime, playingStatus]);
  return import_react111.default.createElement(
    "div",
    { className: "sendbird-voice-message-input-wrapper" },
    import_react111.default.createElement(VoiceMessageInput, { currentValue: recordingStatus === VoiceRecorderStatus.COMPLETED ? playbackTime : recordingTime, maximumValue: recordingStatus === VoiceRecorderStatus.COMPLETED ? recordingTime : recordingLimit, currentType: voiceInputState, onCancelClick: function() {
      onCancelClick === null || onCancelClick === void 0 ? void 0 : onCancelClick();
      cancel();
      stopVoicePlayer();
    }, onSubmitClick: function() {
      if (isDisabled) {
        setShowModal(true);
        setVoiceInputState(VoiceMessageInputStatus.READY_TO_RECORD);
      } else {
        stop();
        pause();
        setSubmit(true);
      }
    }, onControlClick: function(type) {
      switch (type) {
        case VoiceMessageInputStatus.READY_TO_RECORD: {
          stopVoicePlayer();
          start();
          break;
        }
        case VoiceMessageInputStatus.RECORDING: {
          if (recordingTime >= config.voiceRecord.minRecordingTime && !isDisabled) {
            stop();
          } else if (isDisabled) {
            cancel();
            setShowModal(true);
            setVoiceInputState(VoiceMessageInputStatus.READY_TO_RECORD);
          } else {
            cancel();
            setVoiceInputState(VoiceMessageInputStatus.READY_TO_RECORD);
          }
          break;
        }
        case VoiceMessageInputStatus.READY_TO_PLAY: {
          play();
          break;
        }
        case VoiceMessageInputStatus.PLAYING: {
          pause();
          break;
        }
      }
    } }),
    showModal && import_react111.default.createElement(
      Modal,
      { className: "sendbird-voice-message-input-wrapper-alert", titleText: isDisabledBecauseMuted(channel) ? stringSet2.MODAL__VOICE_MESSAGE_INPUT_DISABLED__TITLE_MUTED : stringSet2.MODAL__VOICE_MESSAGE_INPUT_DISABLED__TITLE_FROZEN, hideFooter: true, isCloseOnClickOutside: true, onClose: function() {
        setShowModal(false);
        onCancelClick === null || onCancelClick === void 0 ? void 0 : onCancelClick();
      } },
      import_react111.default.createElement(
        "div",
        { className: "sendbird-voice-message-input-wrapper-alert__body" },
        import_react111.default.createElement(Button, { className: "sendbird-voice-message-input-wrapper-alert__body__ok-button", type: ButtonTypes.PRIMARY, size: ButtonSizes.BIG, onClick: function() {
          setShowModal(false);
          onCancelClick === null || onCancelClick === void 0 ? void 0 : onCancelClick();
        } }, stringSet2.BUTTON__OK)
      )
    )
  );
};
var useHandleUploadFiles = function(_a3, _b2) {
  var sendFileMessage = _a3.sendFileMessage, sendMultipleFilesMessage = _a3.sendMultipleFilesMessage, quoteMessage = _a3.quoteMessage;
  var logger = _b2.logger;
  var stringSet2 = useLocalization().stringSet;
  var config = useSendbirdStateContext().config;
  var imageCompression = config.imageCompression;
  var uikitUploadSizeLimit = config === null || config === void 0 ? void 0 : config.uikitUploadSizeLimit;
  var uikitMultipleFilesMessageLimit = config === null || config === void 0 ? void 0 : config.uikitMultipleFilesMessageLimit;
  var openModal = useGlobalModalContext().openModal;
  return (0, import_react111.useCallback)(function(files) {
    return __awaiter(void 0, void 0, void 0, function() {
      var ONE_MiB2, compressedFiles, sendingFiles, file, imageFiles_1, otherFiles_1;
      return __generator(this, function(_a4) {
        switch (_a4.label) {
          case 0:
            if (files.length === 0) {
              logger.warning("Channel|useHandleUploadFiles: given file list is empty.", { files });
              return [
                2
                /*return*/
              ];
            }
            if (files.length > uikitMultipleFilesMessageLimit) {
              logger.info("Channel|useHandleUploadFiles: Cannot upload files more than ".concat(uikitMultipleFilesMessageLimit));
              openModal({
                modalProps: {
                  titleText: stringSet2.FILE_UPLOAD_NOTIFICATION__COUNT_LIMIT.replace("%d", "".concat(uikitUploadSizeLimit)),
                  hideFooter: true
                },
                childElement: function(_a5) {
                  var closeModal = _a5.closeModal;
                  return import_react111.default.createElement(ModalFooter, { type: ButtonTypes.PRIMARY, submitText: stringSet2.BUTTON__OK, hideCancelButton: true, onCancel: closeModal, onSubmit: closeModal });
                }
              });
              return [
                2
                /*return*/
              ];
            }
            if (files.some(function(file2) {
              return file2.size > uikitUploadSizeLimit;
            })) {
              logger.info("Channel|useHandleUploadFiles: Cannot upload file size exceeding ".concat(uikitUploadSizeLimit));
              ONE_MiB2 = 1024 * 1024;
              openModal({
                modalProps: {
                  titleText: stringSet2.FILE_UPLOAD_NOTIFICATION__SIZE_LIMIT.replace("%d", "".concat(Math.floor(uikitUploadSizeLimit / ONE_MiB2))),
                  hideFooter: true
                },
                childElement: function(_a5) {
                  var closeModal = _a5.closeModal;
                  return import_react111.default.createElement(ModalFooter, { type: ButtonTypes.PRIMARY, submitText: stringSet2.BUTTON__OK, hideCancelButton: true, onCancel: closeModal, onSubmit: closeModal });
                }
              });
              return [
                2
                /*return*/
              ];
            }
            return [4, compressImages({
              files,
              imageCompression,
              logger
            })];
          case 1:
            compressedFiles = _a4.sent().compressedFiles;
            sendingFiles = compressedFiles;
            if (sendingFiles.length === 1) {
              logger.info("Channel|useHandleUploadFiles: sending one file.");
              file = sendingFiles[0];
              return [2, sendFileMessage({ file, parentMessageId: quoteMessage === null || quoteMessage === void 0 ? void 0 : quoteMessage.messageId })];
            } else if (sendingFiles.length > 1) {
              logger.info("Channel|useHandleUploadFiles: sending multiple files.");
              imageFiles_1 = [];
              otherFiles_1 = [];
              sendingFiles.forEach(function(file2) {
                if (isImage(file2.type)) {
                  imageFiles_1.push(file2);
                } else {
                  otherFiles_1.push(file2);
                }
              });
              return [2, otherFiles_1.reduce(function(previousPromise, item) {
                return previousPromise.then(function() {
                  return sendFileMessage({ file: item, parentMessageId: quoteMessage === null || quoteMessage === void 0 ? void 0 : quoteMessage.messageId });
                });
              }, function() {
                if (imageFiles_1.length === 0) {
                  return Promise.resolve();
                } else if (imageFiles_1.length === 1) {
                  return sendFileMessage({ file: imageFiles_1[0] });
                } else {
                  return sendMultipleFilesMessage({
                    fileInfoList: imageFiles_1.map(function(file2) {
                      return {
                        file: file2,
                        fileName: file2.name,
                        fileSize: file2.size,
                        mimeType: file2.type
                      };
                    }),
                    parentMessageId: quoteMessage === null || quoteMessage === void 0 ? void 0 : quoteMessage.messageId
                  });
                }
              }())];
            }
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [sendFileMessage, sendMultipleFilesMessage, quoteMessage]);
};
var MessageInputWrapperView = import_react111.default.forwardRef(function(props, ref) {
  var _a3;
  var currentChannel = props.currentChannel, messages = props.messages, loading = props.loading, quoteMessage = props.quoteMessage, setQuoteMessage = props.setQuoteMessage, messageInputRef = props.messageInputRef, sendUserMessage = props.sendUserMessage, sendFileMessage = props.sendFileMessage, sendVoiceMessage = props.sendVoiceMessage, sendMultipleFilesMessage = props.sendMultipleFilesMessage, renderUserMentionItem = props.renderUserMentionItem, renderFileUploadIcon = props.renderFileUploadIcon, renderVoiceMessageIcon = props.renderVoiceMessageIcon, renderSendMessageIcon = props.renderSendMessageIcon, acceptableMimeTypes = props.acceptableMimeTypes, disabled = props.disabled;
  var stringSet2 = useLocalization().stringSet;
  var isMobile = useMediaQueryContext().isMobile;
  var _b2 = useSendbirdStateContext(), stores = _b2.stores, config = _b2.config;
  var isOnline = config.isOnline, userMention = config.userMention, logger = config.logger, groupChannel = config.groupChannel;
  var sdk = stores.sdkStore.sdk;
  var maxMentionCount = userMention.maxMentionCount, maxSuggestionCount = userMention.maxSuggestionCount;
  var isBroadcast = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.isBroadcast;
  var isOperator3 = (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.myRole) === "operator";
  var isMultipleFilesMessageEnabled = (_a3 = props.isMultipleFilesMessageEnabled) !== null && _a3 !== void 0 ? _a3 : config.isMultipleFilesMessageEnabled;
  var isMentionEnabled = groupChannel.enableMention;
  var isVoiceMessageEnabled = groupChannel.enableVoiceMessage;
  var _c = (0, import_react111.useState)(""), mentionNickname = _c[0], setMentionNickname = _c[1];
  var _d = (0, import_react111.useState)([]), mentionedUsers = _d[0], setMentionedUsers = _d[1];
  var _e3 = (0, import_react111.useState)([]), mentionedUserIds = _e3[0], setMentionedUserIds = _e3[1];
  var _f = (0, import_react111.useState)(null), selectedUser = _f[0], setSelectedUser = _f[1];
  var _g2 = (0, import_react111.useState)([]), mentionSuggestedUsers = _g2[0], setMentionSuggestedUsers = _g2[1];
  var _h = (0, import_react111.useState)(null), messageInputEvent = _h[0], setMessageInputEvent = _h[1];
  var _j = (0, import_react111.useState)(false), showVoiceMessageInput = _j[0], setShowVoiceMessageInput = _j[1];
  var isMessageInputDisabled = loading || (!currentChannel || !sdk) || !sdk.isCacheEnabled && !isOnline || isDisabledBecauseFrozen(currentChannel) || isDisabledBecauseMuted(currentChannel) || isDisabledBecauseSuggestedReplies(currentChannel, config.groupChannel.enableSuggestedReplies) || isDisabledBecauseMessageForm(messages, config.groupChannel.enableFormTypeMessage) || disabled;
  var showSuggestedMentionList = !isMessageInputDisabled && isMentionEnabled && mentionNickname.length > 0 && !isBroadcast;
  var mentionNodes = useDirtyGetMentions({ ref: ref || messageInputRef }, { logger });
  var ableMention = (mentionNodes === null || mentionNodes === void 0 ? void 0 : mentionNodes.length) < maxMentionCount;
  (0, import_react111.useEffect)(function() {
    setMentionNickname("");
    setMentionedUsers([]);
    setMentionedUserIds([]);
    setSelectedUser(null);
    setMentionSuggestedUsers([]);
    setMessageInputEvent(null);
    setShowVoiceMessageInput(false);
  }, [currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url]);
  (0, import_react111.useEffect)(function() {
    setMentionedUsers(mentionedUsers.filter(function(_a4) {
      var userId = _a4.userId;
      var i4 = mentionedUserIds.indexOf(userId);
      if (i4 < 0) {
        return false;
      } else {
        mentionedUserIds.splice(i4, 1);
        return true;
      }
    }));
  }, [mentionedUserIds]);
  var handleUploadFiles = useHandleUploadFiles({
    sendFileMessage,
    sendMultipleFilesMessage,
    quoteMessage: quoteMessage !== null && quoteMessage !== void 0 ? quoteMessage : void 0
  }, { logger });
  if (isBroadcast && !isOperator3) {
    return null;
  }
  return import_react111.default.createElement(
    "div",
    { className: showVoiceMessageInput ? "sendbird-message-input-wrapper--voice-message" : "sendbird-message-input-wrapper" },
    showSuggestedMentionList && import_react111.default.createElement(SuggestedMentionList, { currentChannel, targetNickname: mentionNickname, inputEvent: messageInputEvent !== null && messageInputEvent !== void 0 ? messageInputEvent : void 0, renderUserMentionItem, onUserItemClick: function(user) {
      if (user) {
        setMentionedUsers(__spreadArray(__spreadArray([], mentionedUsers, true), [user], false));
      }
      setMentionNickname("");
      setSelectedUser(user);
      setMessageInputEvent(null);
    }, onFocusItemChange: function() {
      setMessageInputEvent(null);
    }, onFetchUsers: function(users) {
      setMentionSuggestedUsers(users);
    }, ableAddMention: ableMention, maxMentionCount, maxSuggestionCount }),
    quoteMessage && import_react111.default.createElement(
      "div",
      { className: "sendbird-message-input-wrapper__quote-message-input" },
      import_react111.default.createElement(QuoteMessageInput, { replyingMessage: quoteMessage, onClose: function() {
        return setQuoteMessage(null);
      } })
    ),
    showVoiceMessageInput ? import_react111.default.createElement(VoiceMessageInputWrapper, { channel: currentChannel !== null && currentChannel !== void 0 ? currentChannel : void 0, onSubmitClick: function(recordedFile, duration) {
      sendVoiceMessage({ file: recordedFile, parentMessageId: quoteMessage === null || quoteMessage === void 0 ? void 0 : quoteMessage.messageId }, duration);
      setQuoteMessage(null);
      setShowVoiceMessageInput(false);
    }, onCancelClick: function() {
      setShowVoiceMessageInput(false);
    } }) : import_react111.default.createElement(MessageInput, { className: "sendbird-message-input-wrapper__message-input", channel: currentChannel, channelUrl: currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url, isMobile, acceptableMimeTypes, mentionSelectedUser: selectedUser, isMentionEnabled, isVoiceMessageEnabled, isSelectingMultipleFilesEnabled: isMultipleFilesMessageEnabled, onVoiceMessageIconClick: function() {
      setShowVoiceMessageInput(true);
    }, setMentionedUsers, placeholder: quoteMessage && stringSet2.MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER || isDisabledBecauseFrozen(currentChannel) && stringSet2.MESSAGE_INPUT__PLACE_HOLDER__FROZEN || isDisabledBecauseMuted(currentChannel) && (isMobile ? stringSet2.MESSAGE_INPUT__PLACE_HOLDER__MUTED_SHORT : stringSet2.MESSAGE_INPUT__PLACE_HOLDER__MUTED) || isDisabledBecauseSuggestedReplies(currentChannel, config.groupChannel.enableSuggestedReplies) && stringSet2.MESSAGE_INPUT__PLACE_HOLDER__SUGGESTED_REPLIES || isDisabledBecauseMessageForm(messages, config.groupChannel.enableFormTypeMessage) && stringSet2.MESSAGE_INPUT__PLACE_HOLDER__MESSAGE_FORM || disabled && stringSet2.MESSAGE_INPUT__PLACE_HOLDER__DISABLED || void 0, ref: ref || messageInputRef, disabled: isMessageInputDisabled, renderFileUploadIcon, renderSendMessageIcon, renderVoiceMessageIcon, onStartTyping: function() {
      currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.startTyping();
    }, onSendMessage: function(_a4) {
      var _b3;
      var message = _a4.message, mentionTemplate = _a4.mentionTemplate;
      sendUserMessage({
        message,
        mentionedUsers,
        mentionedMessageTemplate: mentionTemplate,
        parentMessageId: quoteMessage === null || quoteMessage === void 0 ? void 0 : quoteMessage.messageId
      });
      setMentionNickname("");
      setMentionedUsers([]);
      setQuoteMessage(null);
      (_b3 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.endTyping) === null || _b3 === void 0 ? void 0 : _b3.call(currentChannel);
    }, onFileUpload: function(fileList) {
      handleUploadFiles(fileList);
      setQuoteMessage(null);
    }, onUserMentioned: function(user) {
      if ((selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.userId) === (user === null || user === void 0 ? void 0 : user.userId)) {
        setSelectedUser(null);
        setMentionNickname("");
      }
    }, onMentionStringChange: function(mentionText) {
      setMentionNickname(mentionText);
    }, onMentionedUserIdsUpdated: function(userIds) {
      setMentionedUserIds(userIds);
    }, onKeyDown: function(e4) {
      if (showSuggestedMentionList && (mentionSuggestedUsers === null || mentionSuggestedUsers === void 0 ? void 0 : mentionSuggestedUsers.length) > 0 && (e4.key === MessageInputKeys.Enter && ableMention || e4.key === MessageInputKeys.ArrowUp || e4.key === MessageInputKeys.ArrowDown)) {
        setMessageInputEvent(e4);
        return true;
      }
      return false;
    } })
  );
});

// node_modules/@sendbird/uikit-react/GroupChannel/components/MessageInputWrapper.js
var import_react_dom29 = __toESM(require_react_dom(), 1);
var MessageInputWrapper = function(props) {
  var context = useGroupChannelContext();
  return import_react112.default.createElement(MessageInputWrapperView, __assign({}, props, context));
};

// node_modules/@sendbird/uikit-react/GroupChannel/components/GroupChannelUI.js
var import_react_dom30 = __toESM(require_react_dom(), 1);
var GroupChannelUI = function(props) {
  var context = useGroupChannelContext();
  var channelUrl = context.channelUrl, fetchChannelError = context.fetchChannelError;
  var _a3 = deleteNullish(props), _b2 = _a3.renderChannelHeader, renderChannelHeader = _b2 === void 0 ? function(props2) {
    return import_react113.default.createElement(GroupChannelHeader, __assign({}, props2));
  } : _b2, _c = _a3.renderMessageList, renderMessageList = _c === void 0 ? function(props2) {
    return import_react113.default.createElement(MessageList, __assign({}, props2, { className: "sendbird-conversation__message-list" }));
  } : _c, _d = _a3.renderMessageInput, renderMessageInput = _d === void 0 ? function() {
    return import_react113.default.createElement(MessageInputWrapper, __assign({}, props));
  } : _d;
  return import_react113.default.createElement(GroupChannelUIView, __assign({}, props, context, { isInvalid: fetchChannelError !== null, channelUrl, renderChannelHeader, renderMessageList, renderMessageInput }));
};

// node_modules/@sendbird/uikit-react/GroupChannel.js
var import_react_dom31 = __toESM(require_react_dom(), 1);
var GroupChannel = function(props) {
  return import_react114.default.createElement(
    GroupChannelProvider,
    __assign({}, props),
    import_react114.default.createElement(GroupChannelUI, __assign({}, props))
  );
};

// node_modules/@sendbird/uikit-react/GroupChannelList.js
var import_react135 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/GroupChannelList/context.js
var import_react115 = __toESM(require_react(), 1);
var import_react_dom32 = __toESM(require_react_dom(), 1);
var GroupChannelListContext = import_react115.default.createContext(null);
var GroupChannelListProvider = function(props) {
  var _a3, _b2, _c;
  var children = props.children, _d = props.className, className = _d === void 0 ? "" : _d, selectedChannelUrl = props.selectedChannelUrl, _e3 = props.disableAutoSelect, disableAutoSelect = _e3 === void 0 ? false : _e3, allowProfileEdit = props.allowProfileEdit, isTypingIndicatorEnabled = props.isTypingIndicatorEnabled, isMessageReceiptStatusEnabled = props.isMessageReceiptStatusEnabled, channelListQueryParams = props.channelListQueryParams, onThemeChange = props.onThemeChange, _f = props.onChannelSelect, onChannelSelect = _f === void 0 ? noop : _f, _g2 = props.onChannelCreated, onChannelCreated = _g2 === void 0 ? noop : _g2, onCreateChannelClick = props.onCreateChannelClick, onBeforeCreateChannel = props.onBeforeCreateChannel, onUserProfileUpdated = props.onUserProfileUpdated;
  var globalStore = useSendbirdStateContext();
  var config = globalStore.config, stores = globalStore.stores;
  var sdkStore = stores.sdkStore;
  var sdk = sdkStore.sdk;
  var isConnected = useOnlineStatus(sdk, config.logger);
  var scheduler = useMarkAsDeliveredScheduler({ isConnected }, config);
  var channelListDataSource = useGroupChannelList(sdk, {
    collectionCreator: getCollectionCreator2(sdk, channelListQueryParams),
    markAsDelivered: function(channels) {
      return channels.forEach(scheduler.push);
    },
    onChannelsDeleted: function(channelUrls) {
      channelUrls.forEach(function(url) {
        if (url === selectedChannelUrl)
          onChannelSelect(null);
      });
    }
  });
  var refreshing = channelListDataSource.refreshing, initialized = channelListDataSource.initialized, groupChannels = channelListDataSource.groupChannels, refresh = channelListDataSource.refresh, loadMore = channelListDataSource.loadMore;
  (0, import_react115.useEffect)(function() {
    var _a4;
    if (!disableAutoSelect && stores.sdkStore.initialized && initialized) {
      if (!selectedChannelUrl)
        onChannelSelect((_a4 = groupChannels[0]) !== null && _a4 !== void 0 ? _a4 : null);
    }
  }, [disableAutoSelect, stores.sdkStore.initialized, initialized, selectedChannelUrl]);
  (0, import_react115.useEffect)(function() {
    refresh();
  }, [
    Object.keys(channelListQueryParams !== null && channelListQueryParams !== void 0 ? channelListQueryParams : {}).sort().map(function(key) {
      return "".concat(key, "=").concat(encodeURIComponent(JSON.stringify(channelListQueryParams[key])));
    }).join("&")
  ]);
  var _h = (0, import_react115.useState)([]), typingChannelUrls = _h[0], setTypingChannelUrls = _h[1];
  useGroupChannelHandler(sdk, {
    onTypingStatusUpdated: function(channel) {
      var _a4;
      var channelList = typingChannelUrls.filter(function(channelUrl) {
        return channelUrl !== channel.url;
      });
      if (((_a4 = channel.getTypingUsers()) === null || _a4 === void 0 ? void 0 : _a4.length) > 0) {
        setTypingChannelUrls(channelList.concat(channel.url));
      } else {
        setTypingChannelUrls(channelList);
      }
    }
  });
  return import_react115.default.createElement(
    GroupChannelListContext.Provider,
    { value: {
      className,
      selectedChannelUrl,
      disableAutoSelect,
      allowProfileEdit: (_a3 = allowProfileEdit !== null && allowProfileEdit !== void 0 ? allowProfileEdit : config.allowProfileEdit) !== null && _a3 !== void 0 ? _a3 : true,
      isTypingIndicatorEnabled: (_b2 = isTypingIndicatorEnabled !== null && isTypingIndicatorEnabled !== void 0 ? isTypingIndicatorEnabled : config.groupChannelList.enableTypingIndicator) !== null && _b2 !== void 0 ? _b2 : false,
      isMessageReceiptStatusEnabled: (_c = isMessageReceiptStatusEnabled !== null && isMessageReceiptStatusEnabled !== void 0 ? isMessageReceiptStatusEnabled : config.groupChannelList.enableMessageReceiptStatus) !== null && _c !== void 0 ? _c : false,
      onChannelSelect,
      onChannelCreated,
      onThemeChange,
      onCreateChannelClick,
      onBeforeCreateChannel,
      onUserProfileUpdated,
      typingChannelUrls,
      refreshing,
      initialized,
      groupChannels,
      refresh,
      loadMore
    } },
    import_react115.default.createElement(
      UserProfileProvider,
      __assign({}, props),
      import_react115.default.createElement("div", { className: "sendbird-channel-list ".concat(className) }, children)
    )
  );
};
var useGroupChannelListContext = function() {
  var context = (0, import_react115.useContext)(GroupChannelListContext);
  if (!context)
    throw new Error("GroupChannelListContext not found. Use within the GroupChannelList module.");
  return context;
};
function getCollectionCreator2(sdk, channelListQueryParams) {
  return function(defaultParams) {
    var params = __assign(__assign({}, defaultParams), channelListQueryParams);
    return sdk.groupChannel.createGroupChannelCollection(__assign(__assign({}, params), { filter: new rn2(params) }));
  };
}

// node_modules/@sendbird/uikit-react/GroupChannelList/components/GroupChannelListUI.js
var import_react134 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-CN0VQnSS.js
var import_react121 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/GroupChannelList/components/GroupChannelListHeader.js
var import_react116 = __toESM(require_react(), 1);
var GroupChannelListHeader = function(_a3) {
  var renderTitle = _a3.renderTitle, renderIconButton = _a3.renderIconButton, onEdit = _a3.onEdit, allowProfileEdit = _a3.allowProfileEdit, renderLeft = _a3.renderLeft, renderMiddle = _a3.renderMiddle, renderRight = _a3.renderRight;
  var stores = useSendbirdStateContext().stores;
  var user = stores.userStore.user;
  var stringSet2 = useLocalization().stringSet;
  var renderProfile = renderMiddle !== null && renderMiddle !== void 0 ? renderMiddle : renderTitle;
  return import_react116.default.createElement(Header$1, { className: classnames("sendbird-channel-header", allowProfileEdit && "sendbird-channel-header--allow-edit"), renderLeft, renderMiddle: function() {
    var _a4;
    return (_a4 = renderProfile === null || renderProfile === void 0 ? void 0 : renderProfile()) !== null && _a4 !== void 0 ? _a4 : import_react116.default.createElement(
      "div",
      { className: "sendbird-channel-header__title", role: "button", onClick: function() {
        onEdit === null || onEdit === void 0 ? void 0 : onEdit();
      }, onKeyDown: function() {
        onEdit === null || onEdit === void 0 ? void 0 : onEdit();
      }, tabIndex: 0 },
      import_react116.default.createElement(
        "div",
        { className: "sendbird-channel-header__title__left" },
        import_react116.default.createElement(Avatar$1, { width: "32px", height: "32px", src: user.profileUrl, alt: user.nickname })
      ),
      import_react116.default.createElement(
        "div",
        { className: "sendbird-channel-header__title__right" },
        import_react116.default.createElement(Label, { className: "sendbird-channel-header__title__right__name", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_1 }, user.nickname || stringSet2.NO_NAME),
        import_react116.default.createElement(Label, { className: "sendbird-channel-header__title__right__user-id", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_2 }, user.userId)
      )
    );
  }, renderRight: renderRight !== null && renderRight !== void 0 ? renderRight : renderIconButton });
};

// node_modules/@sendbird/uikit-react/EditUserProfile.js
var import_react119 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/EditUserProfile/context.js
var import_react117 = __toESM(require_react(), 1);
var EditUserProfileProviderContext = import_react117.default.createContext(null);
var EditUserProfileProvider = function(_a3) {
  var children = _a3.children, props = __rest(_a3, ["children"]);
  return import_react117.default.createElement(EditUserProfileProviderContext.Provider, { value: props }, children);
};
var useEditUserProfileContext = function() {
  var context = import_react117.default.useContext(EditUserProfileProviderContext);
  if (!context)
    throw new Error("EditUserProfileContext not found. Use within the EditUserProfile module.");
  return context;
};

// node_modules/@sendbird/uikit-react/EditUserProfile/components/EditUserProfileUI.js
var import_react118 = __toESM(require_react(), 1);
var import_react_dom33 = __toESM(require_react_dom(), 1);
var EditUserProfileUIView = function(_a3) {
  var _b2;
  var formRef = _a3.formRef, inputRef = _a3.inputRef, onThemeChange = _a3.onThemeChange, setProfileImage = _a3.setProfileImage;
  var _c = useSendbirdStateContext(), stores = _c.stores, config = _c.config;
  var theme = config.theme, setCurrentTheme = config.setCurrentTheme;
  var user = (_b2 = stores.userStore) === null || _b2 === void 0 ? void 0 : _b2.user;
  var stringSet2 = useLocalization().stringSet;
  var _d = (0, import_react118.useState)(null), currentImg = _d[0], setCurrentImg = _d[1];
  var hiddenInputRef = (0, import_react118.useRef)(null);
  return import_react118.default.createElement(
    "form",
    { className: "sendbird-edit-user-profile", ref: formRef, onSubmit: function(e4) {
      e4.preventDefault();
    } },
    import_react118.default.createElement(
      "section",
      { className: "sendbird-edit-user-profile__img" },
      import_react118.default.createElement(InputLabel2, null, stringSet2.EDIT_PROFILE__IMAGE_LABEL),
      import_react118.default.createElement(
        "div",
        { className: "sendbird-edit-user-profile__img__avatar" },
        import_react118.default.createElement(Avatar$1, { width: "80px", height: "80px", src: currentImg || (user === null || user === void 0 ? void 0 : user.profileUrl) })
      ),
      import_react118.default.createElement("input", { ref: hiddenInputRef, type: "file", accept: "image/gif, image/jpeg, image/png", style: { display: "none" }, onChange: function(e4) {
        if (e4.target.files) {
          setCurrentImg(URL.createObjectURL(e4.target.files[0]));
          setProfileImage(e4.target.files[0]);
        }
        if (hiddenInputRef.current) {
          hiddenInputRef.current.value = "";
        }
      } }),
      import_react118.default.createElement(
        TextButton,
        { className: "sendbird-edit-user-profile__img__avatar-button", disableUnderline: true, onClick: function() {
          var _a4;
          return (_a4 = hiddenInputRef.current) === null || _a4 === void 0 ? void 0 : _a4.click();
        } },
        import_react118.default.createElement(Label, { type: LabelTypography.BUTTON_1, color: LabelColors.PRIMARY }, stringSet2.EDIT_PROFILE__IMAGE_UPLOAD)
      )
    ),
    import_react118.default.createElement(
      "section",
      { className: "sendbird-edit-user-profile__name" },
      import_react118.default.createElement(InputLabel2, null, stringSet2.EDIT_PROFILE__NICKNAME_LABEL),
      import_react118.default.createElement(Input, { required: (user === null || user === void 0 ? void 0 : user.nickname) !== "", name: "sendbird-edit-user-profile__name__input", ref: inputRef, value: user === null || user === void 0 ? void 0 : user.nickname, placeHolder: stringSet2.EDIT_PROFILE__NICKNAME_PLACEHOLDER })
    ),
    import_react118.default.createElement(
      "section",
      { className: "sendbird-edit-user-profile__userid" },
      import_react118.default.createElement(InputLabel2, null, stringSet2.EDIT_PROFILE__USERID_LABEL),
      import_react118.default.createElement(Input, { disabled: true, name: "sendbird-edit-user-profile__userid__input", value: user === null || user === void 0 ? void 0 : user.userId })
    ),
    import_react118.default.createElement(
      "section",
      { className: "sendbird-edit-user-profile__theme" },
      import_react118.default.createElement(InputLabel2, null, stringSet2.EDIT_PROFILE__THEME_LABEL),
      import_react118.default.createElement("div", { className: "sendbird-edit-user-profile__theme__theme-icon" }, theme === "dark" ? import_react118.default.createElement(Icon, { onClick: function() {
        setCurrentTheme("light");
        onThemeChange === null || onThemeChange === void 0 ? void 0 : onThemeChange("light");
      }, type: IconTypes.TOGGLE_ON, width: 44, height: 24 }) : import_react118.default.createElement(Icon, { onClick: function() {
        setCurrentTheme("dark");
        onThemeChange === null || onThemeChange === void 0 ? void 0 : onThemeChange("dark");
      }, type: IconTypes.TOGGLE_OFF, width: 44, height: 24 }))
    )
  );
};
var handleUpdateUserInfo = function(_a3) {
  var _b2, _c, _d;
  var globalContext = _a3.globalContext, formRef = _a3.formRef, inputRef = _a3.inputRef, profileImage = _a3.profileImage, onEditProfile = _a3.onEditProfile;
  var stores = globalContext.stores, dispatchers = globalContext.dispatchers;
  var sdk = stores.sdkStore.sdk;
  var user = stores.userStore.user;
  var userDispatcher = dispatchers.userDispatcher;
  if ((user === null || user === void 0 ? void 0 : user.nickname) !== "" && !inputRef.current.value) {
    (_c = (_b2 = formRef.current).reportValidity) === null || _c === void 0 ? void 0 : _c.call(_b2);
    return;
  }
  sdk === null || sdk === void 0 ? void 0 : sdk.updateCurrentUserInfo({
    nickname: (_d = inputRef === null || inputRef === void 0 ? void 0 : inputRef.current) === null || _d === void 0 ? void 0 : _d.value,
    profileImage: profileImage !== null && profileImage !== void 0 ? profileImage : void 0
  }).then(function(updatedUser) {
    userDispatcher({ type: USER_ACTIONS.UPDATE_USER_INFO, payload: updatedUser });
    onEditProfile === null || onEditProfile === void 0 ? void 0 : onEditProfile(updatedUser);
  });
};
var useEditUserProfileUISates = function(_a3) {
  var onEditProfile = _a3.onEditProfile;
  var globalContext = useSendbirdStateContext();
  var inputRef = (0, import_react118.useRef)(null);
  var formRef = (0, import_react118.useRef)(null);
  var _b2 = (0, import_react118.useState)(null), profileImage = _b2[0], setProfileImage = _b2[1];
  var updateUserInfo = function() {
    handleUpdateUserInfo({
      globalContext,
      formRef,
      inputRef,
      profileImage,
      onEditProfile
    });
  };
  return {
    formRef,
    inputRef,
    updateUserInfo,
    profileImage,
    setProfileImage
  };
};
var EditUserProfileUI = function() {
  var editProfileContext = useEditUserProfileContext();
  var onEditProfile = editProfileContext.onEditProfile, onCancel = editProfileContext.onCancel, onThemeChange = editProfileContext.onThemeChange;
  var stringSet2 = (0, import_react118.useContext)(LocalizationContext).stringSet;
  var _a3 = useEditUserProfileUISates({ onEditProfile }), formRef = _a3.formRef, inputRef = _a3.inputRef, updateUserInfo = _a3.updateUserInfo, setProfileImage = _a3.setProfileImage;
  return import_react118.default.createElement(
    Modal,
    { titleText: stringSet2.EDIT_PROFILE__TITLE, submitText: stringSet2.BUTTON__SAVE, type: ButtonTypes.PRIMARY, onCancel, isFullScreenOnMobile: true, onSubmit: updateUserInfo },
    import_react118.default.createElement(EditUserProfileUIView, { formRef, inputRef, setProfileImage, onThemeChange })
  );
};

// node_modules/@sendbird/uikit-react/EditUserProfile.js
var import_react_dom34 = __toESM(require_react_dom(), 1);
var EditUserProfile = function(props) {
  var onEditProfile = props.onEditProfile, onCancel = props.onCancel, onThemeChange = props.onThemeChange;
  return import_react119.default.createElement(
    EditUserProfileProvider,
    { onEditProfile, onCancel, onThemeChange },
    import_react119.default.createElement(EditUserProfileUI, null)
  );
};

// node_modules/@sendbird/uikit-react/chunks/bundle-BmCCzxjb.js
var import_react120 = __toESM(require_react(), 1);
function useThrottleCallback(callback, delay, options) {
  if (options === void 0) {
    options = {
      leading: true,
      trailing: false
    };
  }
  var timer = (0, import_react120.useRef)(null);
  var trailingArgs = (0, import_react120.useRef)(null);
  (0, import_react120.useEffect)(function() {
    return function() {
      if (timer.current)
        clearTimeout(timer.current);
    };
  }, []);
  return usePreservedCallback(function() {
    var args = [];
    for (var _i2 = 0; _i2 < arguments.length; _i2++) {
      args[_i2] = arguments[_i2];
    }
    if (timer.current) {
      trailingArgs.current = args;
      return;
    }
    if (options.leading) {
      callback.apply(void 0, args);
    } else {
      trailingArgs.current = args;
    }
    var invoke = function() {
      if (options.trailing && trailingArgs.current) {
        callback.apply(void 0, trailingArgs.current);
        trailingArgs.current = null;
        timer.current = setTimeout(invoke, delay);
      } else {
        timer.current = null;
      }
    };
    timer.current = setTimeout(invoke, delay);
  });
}

// node_modules/@sendbird/uikit-react/chunks/bundle-CxKIQVXi.js
var BUFFER_DELAY = 100;
function useOnScrollPositionChangeDetector(params) {
  var onReachedTop = params.onReachedTop, onReachedBottom = params.onReachedBottom, onInBetween = params.onInBetween;
  var cb = usePreservedCallback(function(event) {
    if (event === null || event === void 0 ? void 0 : event.target) {
      var _a3 = event.target, scrollTop = _a3.scrollTop, scrollHeight = _a3.scrollHeight, clientHeight = _a3.clientHeight;
      var positionEvent = {
        distanceFromBottom: scrollHeight - scrollTop - clientHeight
      };
      if (onReachedTop && isAboutSame(scrollTop, 0, SCROLL_BUFFER)) {
        onReachedTop(positionEvent);
      } else if (onReachedBottom && isAboutSame(scrollHeight, clientHeight + scrollTop, SCROLL_BUFFER)) {
        onReachedBottom(positionEvent);
      } else if (onInBetween) {
        onInBetween(positionEvent);
      }
    }
  });
  return useThrottleCallback(cb, BUFFER_DELAY, { trailing: true });
}

// node_modules/@sendbird/uikit-react/chunks/bundle-CN0VQnSS.js
var GroupChannelListUIView = function(_a3) {
  var renderHeader = _a3.renderHeader, renderPlaceHolderError = _a3.renderPlaceHolderError, renderPlaceHolderLoading = _a3.renderPlaceHolderLoading, renderPlaceHolderEmptyList = _a3.renderPlaceHolderEmptyList, onChangeTheme = _a3.onChangeTheme, onUserProfileUpdated = _a3.onUserProfileUpdated, allowProfileEdit = _a3.allowProfileEdit, channels = _a3.channels, onLoadMore = _a3.onLoadMore, initialized = _a3.initialized, renderChannel = _a3.renderChannel, renderAddChannel = _a3.renderAddChannel;
  var _b2 = (0, import_react121.useState)(false), showProfileEdit = _b2[0], setShowProfileEdit = _b2[1];
  var stores = useSendbirdStateContext().stores;
  var renderer2 = {
    addChannel: renderAddChannel,
    channel: renderChannel,
    placeholder: {
      loading: function() {
        if (initialized)
          return null;
        if (renderPlaceHolderLoading)
          return renderPlaceHolderLoading();
        return import_react121.default.createElement(PlaceHolder, { type: PlaceHolderTypes.LOADING });
      },
      empty: function() {
        if (!initialized)
          return null;
        if (renderPlaceHolderEmptyList)
          return renderPlaceHolderEmptyList();
        return import_react121.default.createElement(PlaceHolder, { type: PlaceHolderTypes.NO_CHANNELS });
      },
      error: function() {
        if (!initialized || !stores.sdkStore.error)
          return null;
        if (renderPlaceHolderError)
          return renderPlaceHolderError();
        return import_react121.default.createElement(PlaceHolder, { type: PlaceHolderTypes.WRONG });
      }
    }
  };
  return import_react121.default.createElement(
    import_react121.default.Fragment,
    null,
    import_react121.default.createElement("div", { className: "sendbird-channel-list__header" }, (renderHeader === null || renderHeader === void 0 ? void 0 : renderHeader()) || import_react121.default.createElement(GroupChannelListHeader, { onEdit: function() {
      return allowProfileEdit && setShowProfileEdit(true);
    }, allowProfileEdit, renderIconButton: function() {
      return renderer2.addChannel();
    } })),
    showProfileEdit && import_react121.default.createElement(EditUserProfile, { onThemeChange: onChangeTheme, onCancel: function() {
      return setShowProfileEdit(false);
    }, onEditProfile: function(user) {
      setShowProfileEdit(false);
      onUserProfileUpdated(user);
    } }),
    import_react121.default.createElement(ChannelListComponent, { data: channels, renderItem: renderer2.channel, onLoadMore, placeholderLoading: renderer2.placeholder.loading(), placeholderEmpty: renderer2.placeholder.empty(), placeholderError: renderer2.placeholder.error() })
  );
};
var ChannelListComponent = function(props) {
  var data = props.data, renderItem = props.renderItem, onLoadMore = props.onLoadMore, placeholderLoading = props.placeholderLoading, placeholderError = props.placeholderError, placeholderEmpty = props.placeholderEmpty;
  var onScroll = useOnScrollPositionChangeDetector({
    onReachedBottom: function() {
      return onLoadMore === null || onLoadMore === void 0 ? void 0 : onLoadMore();
    }
  });
  return import_react121.default.createElement(
    "div",
    { className: "sendbird-channel-list__body", onScroll },
    placeholderError,
    import_react121.default.createElement("div", null, data.map(function(item, index) {
      return renderItem({ item, index });
    })),
    placeholderLoading,
    data.length === 0 && placeholderEmpty
  );
};

// node_modules/@sendbird/uikit-react/GroupChannelList/components/GroupChannelPreviewAction.js
var import_react122 = __toESM(require_react(), 1);
var import_react_dom35 = __toESM(require_react_dom(), 1);
var LeaveGroupChannel = function(_a3) {
  var channel = _a3.channel, onSubmit = _a3.onSubmit, onCancel = _a3.onCancel;
  var config = useSendbirdStateContext().config;
  var logger = config.logger, isOnline = config.isOnline;
  var stringSet2 = useLocalization().stringSet;
  if (channel) {
    return import_react122.default.createElement(Modal, { disabled: !isOnline, onCancel, onSubmit: function() {
      logger.info("LeaveGroupChannel: Leaving channel", channel);
      channel.leave().then(function() {
        logger.info("LeaveGroupChannel: Leaving channel successful!", channel);
        onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit();
      });
    }, submitText: stringSet2.MODAL__LEAVE_CHANNEL__FOOTER, titleText: stringSet2.MODAL__LEAVE_CHANNEL__TITLE });
  }
};
function GroupChannelPreviewAction(_a3) {
  var channel = _a3.channel, _b2 = _a3.disabled, disabled = _b2 === void 0 ? false : _b2, onLeaveChannel = _a3.onLeaveChannel;
  var parentRef = (0, import_react122.useRef)(null);
  var parentContainerRef = (0, import_react122.useRef)(null);
  var _c = (0, import_react122.useState)(false), showModal = _c[0], setShowModal = _c[1];
  var stringSet2 = (0, import_react122.useContext)(LocalizationContext).stringSet;
  return import_react122.default.createElement(
    "div",
    { ref: parentContainerRef, tabIndex: 0, role: "button", style: { display: "inline-block" }, onKeyDown: function(e4) {
      return e4.stopPropagation();
    }, onClick: function(e4) {
      return e4.stopPropagation();
    } },
    import_react122.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
      return import_react122.default.createElement(
        IconButton,
        { ref: parentRef, onClick: toggleDropdown, height: "32px", width: "32px" },
        import_react122.default.createElement(Icon, { type: IconTypes.MORE, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
      );
    }, menuItems: function(closeDropdown) {
      return import_react122.default.createElement(
        MenuItems,
        { parentRef, parentContainRef: parentContainerRef, closeDropdown },
        import_react122.default.createElement(MenuItem, { onClick: function() {
          if (disabled)
            return;
          setShowModal(true);
          closeDropdown();
        }, testID: "channel_list_item_context_menu_leave_channel" }, stringSet2.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE)
      );
    } }),
    showModal && import_react122.default.createElement(LeaveGroupChannel, { channel, onSubmit: function() {
      setShowModal(false);
      onLeaveChannel === null || onLeaveChannel === void 0 ? void 0 : onLeaveChannel();
    }, onCancel: function() {
      return setShowModal(false);
    } })
  );
}

// node_modules/@sendbird/uikit-react/GroupChannelList/components/GroupChannelListItem.js
var import_react126 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-ZTcZWLri.js
var import_react125 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ui/Badge.js
var import_react123 = __toESM(require_react(), 1);
function Badge(_a3) {
  var count = _a3.count, _b2 = _a3.maxLevel, maxLevel = _b2 === void 0 ? 2 : _b2, _c = _a3.className, className = _c === void 0 ? "" : _c;
  var stringSet2 = (0, import_react123.useContext)(LocalizationContext).stringSet;
  var maximumNumber = parseInt("9".repeat(maxLevel > 6 ? 6 : maxLevel), 10);
  return import_react123.default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-badge"
    ], false).join(" ") },
    import_react123.default.createElement(
      "div",
      { className: "sendbird-badge__text" },
      import_react123.default.createElement(Label, { type: LabelTypography.CAPTION_2, color: LabelColors.ONCONTENT_1 }, typeof count === "string" ? count : count > maximumNumber ? "".concat(maximumNumber).concat(stringSet2.BADGE__OVER) : count)
    )
  );
}

// node_modules/@sendbird/uikit-react/ui/MentionUserLabel.js
var import_react124 = __toESM(require_react(), 1);
function MentionUserLabel(_a3) {
  var _b2 = _a3.className, className = _b2 === void 0 ? "" : _b2, children = _a3.children, _c = _a3.isReverse, isReverse = _c === void 0 ? false : _c, color = _a3.color, userId = _a3.userId;
  return import_react124.default.createElement("span", { className: classnames(MENTION_USER_LABEL_CLASSNAME, className, isReverse && "reverse", color), contentEditable: false, "data-userid": userId, "data-sb-mention": true }, children);
}

// node_modules/@sendbird/uikit-react/chunks/bundle-ZTcZWLri.js
var GroupChannelListItemView = function(_a3) {
  var channel = _a3.channel, tabIndex = _a3.tabIndex, isTyping = _a3.isTyping, isSelected = _a3.isSelected, channelName = _a3.channelName, _b2 = _a3.isMessageStatusEnabled, isMessageStatusEnabled = _b2 === void 0 ? true : _b2, _c = _a3.onClick, onClick = _c === void 0 ? noop : _c, _d = _a3.onLeaveChannel, onLeaveChannel = _d === void 0 ? function() {
    return Promise.resolve();
  } : _d, renderChannelAction = _a3.renderChannelAction;
  var config = useSendbirdStateContext().config;
  var theme = config.theme, userId = config.userId;
  var _e3 = useLocalization(), dateLocale = _e3.dateLocale, stringSet2 = _e3.stringSet;
  var isMobile = useMediaQueryContext().isMobile;
  var isMentionEnabled = config.groupChannel.enableMention;
  var lastMessage = getLastMessageText(channel, stringSet2);
  var previewLastMessage = config.groupChannel.enableMarkdownForUserMessage ? getChannelPreviewMessage(lastMessage) : lastMessage;
  var _f = (0, import_react125.useState)(false), showMobileLeave = _f[0], setShowMobileLeave = _f[1];
  var onLongPress = useLongPress({
    onLongPress: function() {
      if (isMobile) {
        setShowMobileLeave(true);
      }
    },
    onClick
  }, {
    delay: 1e3
  });
  return import_react125.default.createElement(
    import_react125.default.Fragment,
    null,
    import_react125.default.createElement(
      "div",
      __assign({ className: [
        "sendbird-channel-preview",
        isSelected ? "sendbird-channel-preview--active" : ""
      ].join(" "), role: "link", tabIndex }, isMobile ? __assign({}, onLongPress) : { onClick }),
      import_react125.default.createElement(
        "div",
        { className: "sendbird-channel-preview__avatar" },
        import_react125.default.createElement(ChannelAvatar, { channel, userId, theme })
      ),
      import_react125.default.createElement(
        "div",
        { className: "sendbird-channel-preview__content" },
        import_react125.default.createElement(
          "div",
          { className: "sendbird-channel-preview__content__upper" },
          import_react125.default.createElement(
            "div",
            { className: "sendbird-channel-preview__content__upper__header" },
            (channel.isBroadcast || false) && import_react125.default.createElement(
              "div",
              { className: "sendbird-channel-preview__content__upper__header__broadcast-icon" },
              import_react125.default.createElement(Icon, { type: IconTypes.BROADCAST, fillColor: IconColors.SECONDARY, height: "16px", width: "16px" })
            ),
            import_react125.default.createElement(Label, { className: "sendbird-channel-preview__content__upper__header__channel-name", testID: "sendbird-channel-preview__content__upper__header__channel-name", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_1 }, channelName),
            import_react125.default.createElement(Label, { className: "sendbird-channel-preview__content__upper__header__total-members", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, getTotalMembers(channel)),
            channel.isFrozen && import_react125.default.createElement(
              "div",
              { title: "Frozen", className: "sendbird-channel-preview__content__upper__header__frozen-icon" },
              import_react125.default.createElement(Icon, { type: IconTypes.FREEZE, fillColor: IconColors.PRIMARY, height: 12, width: 12 })
            )
          ),
          !channel.isEphemeral && isMessageStatusEnabled && import_react125.default.createElement(MessageStatus, { className: "sendbird-channel-preview__content__upper__last-message-at", channel, message: channel.lastMessage, isDateSeparatorConsidered: false }),
          !channel.isEphemeral && !isMessageStatusEnabled && import_react125.default.createElement(Label, { className: "sendbird-channel-preview__content__upper__last-message-at", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, getLastMessageCreatedAt({
            channel,
            locale: dateLocale,
            stringSet: stringSet2
          }))
        ),
        import_react125.default.createElement(
          "div",
          { className: "sendbird-channel-preview__content__lower" },
          import_react125.default.createElement(
            Label,
            { className: "sendbird-channel-preview__content__lower__last-message", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_3 },
            isTyping && import_react125.default.createElement(TypingIndicatorText, { members: channel.getTypingUsers() }),
            !isTyping && !isVoiceMessage(channel.lastMessage) && previewLastMessage,
            !isTyping && isVoiceMessage(channel.lastMessage) && stringSet2.VOICE_MESSAGE
          ),
          /**
           * Do not show unread count for focused channel. This is because of the limitation where
           * isScrollBottom and hasNext states needs to be added globally but they are from channel context
           * so channel list cannot see them with the current architecture.
           */
          !isSelected && !channel.isEphemeral && import_react125.default.createElement(
            "div",
            { className: "sendbird-channel-preview__content__lower__unread-message-count" },
            isMentionEnabled && channel.unreadMentionCount > 0 ? import_react125.default.createElement(MentionUserLabel, { className: "sendbird-channel-preview__content__lower__unread-message-count__mention", color: "purple" }, "@") : null,
            getChannelUnreadMessageCount(channel) ? (
              // return number
              import_react125.default.createElement(Badge, { count: getChannelUnreadMessageCount(channel) })
            ) : null
          )
        )
      ),
      !isMobile && import_react125.default.createElement("div", { className: "sendbird-channel-preview__action" }, renderChannelAction({ channel }))
    ),
    showMobileLeave && isMobile && import_react125.default.createElement(
      Modal,
      { className: "sendbird-channel-preview__leave--mobile", titleText: channelName, hideFooter: true, isCloseOnClickOutside: true, onCancel: function() {
        return setShowMobileLeave(false);
      } },
      import_react125.default.createElement(
        TextButton,
        { onClick: function() {
          onLeaveChannel();
          setShowMobileLeave(false);
        }, className: "sendbird-channel-preview__leave-label--mobile" },
        import_react125.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.CHANNEL_PREVIEW_MOBILE_LEAVE)
      )
    )
  );
};

// node_modules/@sendbird/uikit-react/GroupChannelList/components/GroupChannelListItem.js
var import_react_dom36 = __toESM(require_react_dom(), 1);
var GroupChannelListItem = function(_a3) {
  var _b2, _c, _d;
  var channel = _a3.channel, isSelected = _a3.isSelected, isTyping = _a3.isTyping, renderChannelAction = _a3.renderChannelAction, onLeaveChannel = _a3.onLeaveChannel, onClick = _a3.onClick, tabIndex = _a3.tabIndex;
  var config = useSendbirdStateContext().config;
  var stringSet2 = useLocalization().stringSet;
  var _e3 = useGroupChannelListContext(), _f = _e3.isTypingIndicatorEnabled, isTypingIndicatorEnabled = _f === void 0 ? false : _f, _g2 = _e3.isMessageReceiptStatusEnabled, isMessageReceiptStatusEnabled = _g2 === void 0 ? false : _g2;
  var userId = config.userId;
  var isMessageStatusEnabled = isMessageReceiptStatusEnabled && !((_b2 = channel.lastMessage) === null || _b2 === void 0 ? void 0 : _b2.isAdminMessage()) && ((_d = (_c = channel.lastMessage) === null || _c === void 0 ? void 0 : _c.sender) === null || _d === void 0 ? void 0 : _d.userId) === userId;
  return import_react126.default.createElement(GroupChannelListItemView, { channel, tabIndex, channelName: getChannelTitle2(channel, userId, stringSet2), isTyping: isTypingIndicatorEnabled && isTyping, isSelected, isMessageStatusEnabled, onClick, onLeaveChannel, renderChannelAction });
};

// node_modules/@sendbird/uikit-react/GroupChannelList/components/AddGroupChannel.js
var import_react133 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-DYrU3olW.js
var import_react132 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/CreateChannel.js
var import_react131 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/CreateChannel/components/CreateChannelUI.js
var import_react130 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-CU6kTo_I.js
var import_react127 = __toESM(require_react(), 1);
var CHANNEL_TYPE;
(function(CHANNEL_TYPE2) {
  CHANNEL_TYPE2["GROUP"] = "group";
  CHANNEL_TYPE2["SUPERGROUP"] = "supergroup";
  CHANNEL_TYPE2["BROADCAST"] = "broadcast";
})(CHANNEL_TYPE || (CHANNEL_TYPE = {}));
var CreateChannelContext = import_react127.default.createContext(null);
var CreateChannelProvider = function(props) {
  var _a3;
  var children = props.children, onCreateChannelClick = props.onCreateChannelClick, onBeforeCreateChannel = props.onBeforeCreateChannel, onChannelCreated = props.onChannelCreated, userListQuery = props.userListQuery, onCreateChannel = props.onCreateChannel, overrideInviteUser = props.overrideInviteUser;
  var store = useSendbirdStateContext();
  var _userListQuery = userListQuery !== null && userListQuery !== void 0 ? userListQuery : (_a3 = store === null || store === void 0 ? void 0 : store.config) === null || _a3 === void 0 ? void 0 : _a3.userListQuery;
  var _b2 = (0, import_react127.useState)(0), step = _b2[0], setStep = _b2[1];
  var _c = (0, import_react127.useState)(CHANNEL_TYPE.GROUP), type = _c[0], setType = _c[1];
  return import_react127.default.createElement(CreateChannelContext.Provider, { value: {
    sdk: store.stores.sdkStore.sdk,
    createChannel: getCreateGroupChannel(store),
    onCreateChannelClick,
    onBeforeCreateChannel,
    onChannelCreated,
    userListQuery: _userListQuery,
    step,
    setStep,
    type,
    setType,
    onCreateChannel,
    overrideInviteUser
  } }, children);
};
var useCreateChannelContext = function() {
  var context = import_react127.default.useContext(CreateChannelContext);
  if (!context)
    throw new Error("CreateChannelContext not found. Use within the CreateChannel module.");
  return context;
};

// node_modules/@sendbird/uikit-react/CreateChannel/components/InviteUsers.js
var import_react128 = __toESM(require_react(), 1);
var import_react_dom37 = __toESM(require_react_dom(), 1);
var filterUser = function(idsToFilter) {
  return function(currentId) {
    return idsToFilter === null || idsToFilter === void 0 ? void 0 : idsToFilter.includes(currentId);
  };
};
var setChannelType = function(params, type) {
  if (type === "broadcast") {
    params.isBroadcast = true;
  }
  if (type === "supergroup") {
    params.isSuper = true;
  }
  return params;
};
var createDefaultUserListQuery = function(_a3) {
  var sdk = _a3.sdk, userFilledApplicationUserListQuery = _a3.userFilledApplicationUserListQuery;
  var params = sdk.createApplicationUserListQuery();
  if (userFilledApplicationUserListQuery) {
    Object.keys(userFilledApplicationUserListQuery).forEach(function(key) {
      params[key] = userFilledApplicationUserListQuery[key];
    });
  }
  return params;
};
var BUFFER = 50;
var InviteUsers = function(_a3) {
  var _b2, _c, _d;
  var onCancel = _a3.onCancel, userListQuery = _a3.userListQuery;
  var _e3 = useCreateChannelContext(), onCreateChannelClick = _e3.onCreateChannelClick, onBeforeCreateChannel = _e3.onBeforeCreateChannel, onChannelCreated = _e3.onChannelCreated, createChannel = _e3.createChannel, onCreateChannel = _e3.onCreateChannel, overrideInviteUser = _e3.overrideInviteUser, type = _e3.type;
  var globalStore = useSendbirdStateContext();
  var userId = (_b2 = globalStore === null || globalStore === void 0 ? void 0 : globalStore.config) === null || _b2 === void 0 ? void 0 : _b2.userId;
  var sdk = (_d = (_c = globalStore === null || globalStore === void 0 ? void 0 : globalStore.stores) === null || _c === void 0 ? void 0 : _c.sdkStore) === null || _d === void 0 ? void 0 : _d.sdk;
  var idsToFilter = [userId];
  var _f = (0, import_react128.useState)([]), users = _f[0], setUsers = _f[1];
  var _g2 = (0, import_react128.useState)({}), selectedUsers = _g2[0], setSelectedUsers = _g2[1];
  var stringSet2 = (0, import_react128.useContext)(LocalizationContext).stringSet;
  var _h = (0, import_react128.useState)(null), usersDataSource = _h[0], setUsersDataSource = _h[1];
  var selectedCount = Object.keys(selectedUsers).length;
  var titleText = stringSet2.MODAL__CREATE_CHANNEL__TITLE;
  var submitText = stringSet2.BUTTON__CREATE;
  var isMobile = useMediaQueryContext().isMobile;
  var _j = (0, import_react128.useState)(window.innerHeight), scrollableAreaHeight = _j[0], setScrollableAreaHeight = _j[1];
  (0, import_react128.useEffect)(function() {
    var applicationUserListQuery = userListQuery ? userListQuery() : createDefaultUserListQuery({ sdk });
    setUsersDataSource(applicationUserListQuery);
    if (!(applicationUserListQuery === null || applicationUserListQuery === void 0 ? void 0 : applicationUserListQuery.isLoading)) {
      applicationUserListQuery.next().then(function(it3) {
        setUsers(it3);
      });
    }
  }, []);
  (0, import_react128.useEffect)(function() {
    var scrollableAreaHeight2 = function() {
      setScrollableAreaHeight(window.innerHeight);
    };
    window.addEventListener("resize", scrollableAreaHeight2);
    return function() {
      window.removeEventListener("resize", scrollableAreaHeight2);
    };
  }, []);
  return import_react128.default.createElement(
    Modal,
    {
      isFullScreenOnMobile: true,
      titleText,
      submitText,
      type: ButtonTypes.PRIMARY,
      // Disable the create button if no users are selected,
      // but if there's only the logged-in user in the user list,
      // then the create button should be enabled
      disabled: users.length > 1 && Object.keys(selectedUsers).length === 0,
      onCancel,
      onSubmit: function() {
        var selectedUserList = Object.keys(selectedUsers).length > 0 ? Object.keys(selectedUsers) : [userId];
        var _onChannelCreated = onChannelCreated !== null && onChannelCreated !== void 0 ? onChannelCreated : onCreateChannel;
        var _onCreateChannelClick = onCreateChannelClick !== null && onCreateChannelClick !== void 0 ? onCreateChannelClick : overrideInviteUser;
        if (typeof _onCreateChannelClick === "function") {
          _onCreateChannelClick({
            users: selectedUserList,
            onClose: onCancel !== null && onCancel !== void 0 ? onCancel : noop,
            channelType: type
          });
          return;
        }
        if (onBeforeCreateChannel) {
          var params = onBeforeCreateChannel(selectedUserList);
          setChannelType(params, type);
          createChannel(params).then(function(channel) {
            return _onChannelCreated === null || _onChannelCreated === void 0 ? void 0 : _onChannelCreated(channel);
          });
        } else {
          var params = {};
          params.invitedUserIds = selectedUserList;
          params.isDistinct = false;
          if (userId) {
            params.operatorUserIds = [userId];
          }
          setChannelType(params, type);
          createChannel(params).then(function(channel) {
            return _onChannelCreated === null || _onChannelCreated === void 0 ? void 0 : _onChannelCreated(channel);
          });
        }
        onCancel === null || onCancel === void 0 ? void 0 : onCancel();
      }
    },
    import_react128.default.createElement(
      "div",
      null,
      import_react128.default.createElement(Label, { color: selectedCount > 0 ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3, type: LabelTypography.CAPTION_1 }, "".concat(selectedCount, " ").concat(stringSet2.MODAL__INVITE_MEMBER__SELECTED)),
      import_react128.default.createElement("div", { className: "sendbird-create-channel--scroll", style: isMobile ? { height: "calc(".concat(scrollableAreaHeight, "px - 200px)") } : {}, onScroll: function(e4) {
        if (!usersDataSource)
          return;
        var eventTarget = e4.target;
        var hasNext = usersDataSource.hasNext, isLoading = usersDataSource.isLoading;
        var fetchMore = eventTarget.clientHeight + eventTarget.scrollTop + BUFFER > eventTarget.scrollHeight;
        if (hasNext && fetchMore && !isLoading) {
          usersDataSource.next().then(function(usersBatch) {
            setUsers(__spreadArray(__spreadArray([], users, true), usersBatch, true));
          });
        }
      } }, users.map(function(user) {
        return !filterUser(idsToFilter)(user.userId) && import_react128.default.createElement(UserListItem, { key: user.userId, user, checkBox: true, checked: selectedUsers[user.userId], onChange: function(event) {
          var _a4;
          var modifiedSelectedUsers = __assign(__assign({}, selectedUsers), (_a4 = {}, _a4[event.target.id] = event.target.checked, _a4));
          if (!event.target.checked) {
            delete modifiedSelectedUsers[event.target.id];
          }
          setSelectedUsers(modifiedSelectedUsers);
        } });
      }))
    )
  );
};

// node_modules/@sendbird/uikit-react/CreateChannel/components/SelectChannelType.js
var import_react129 = __toESM(require_react(), 1);
var import_react_dom38 = __toESM(require_react_dom(), 1);
var isBroadcastChannelEnabled = function(sdk) {
  var _a3;
  var ALLOW_BROADCAST_CHANNEL = "allow_broadcast_channel";
  var applicationAttributes2 = (_a3 = sdk === null || sdk === void 0 ? void 0 : sdk.appInfo) === null || _a3 === void 0 ? void 0 : _a3.applicationAttributes;
  if (Array.isArray(applicationAttributes2)) {
    return applicationAttributes2.includes(ALLOW_BROADCAST_CHANNEL);
  }
  return false;
};
var isSuperGroupChannelEnabled = function(sdk) {
  var _a3;
  var ALLOW_SUPER_GROUP_CHANNEL = "allow_super_group_channel";
  var applicationAttributes2 = (_a3 = sdk === null || sdk === void 0 ? void 0 : sdk.appInfo) === null || _a3 === void 0 ? void 0 : _a3.applicationAttributes;
  if (Array.isArray(applicationAttributes2)) {
    return applicationAttributes2.includes(ALLOW_SUPER_GROUP_CHANNEL);
  }
  return false;
};
var SelectChannelType = function(props) {
  var onCancel = props.onCancel;
  var store = useSendbirdStateContext();
  var sdk = getSdk(store);
  var createChannelProps = useCreateChannelContext();
  var setStep = createChannelProps.setStep, setType = createChannelProps.setType;
  var stringSet2 = (0, import_react129.useContext)(LocalizationContext).stringSet;
  var isBroadcastAvailable = isBroadcastChannelEnabled(sdk);
  var isSupergroupAvailable = isSuperGroupChannelEnabled(sdk);
  return import_react129.default.createElement(
    Modal,
    { titleText: stringSet2 === null || stringSet2 === void 0 ? void 0 : stringSet2.MODAL__CREATE_CHANNEL__TITLE, hideFooter: true, onCancel: function() {
      onCancel === null || onCancel === void 0 ? void 0 : onCancel();
    }, className: "sendbird-add-channel__modal" },
    import_react129.default.createElement(
      "div",
      { className: "sendbird-add-channel__rectangle-wrap" },
      import_react129.default.createElement(
        "div",
        { className: "sendbird-add-channel__rectangle", onClick: function() {
          setType(CHANNEL_TYPE.GROUP);
          setStep(1);
        }, role: "button", tabIndex: 0, onKeyDown: function() {
          setType(CHANNEL_TYPE.GROUP);
          setStep(1);
        } },
        import_react129.default.createElement(Icon, { className: "sendbird-add-channel__rectangle__chat-icon", type: IconTypes.CHAT, fillColor: IconColors.PRIMARY, width: "28px", height: "28px" }),
        import_react129.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MODAL__CREATE_CHANNEL__GROUP)
      ),
      isSupergroupAvailable && import_react129.default.createElement(
        "div",
        { className: "sendbird-add-channel__rectangle", onClick: function() {
          setType(CHANNEL_TYPE.SUPERGROUP);
          setStep(1);
        }, role: "button", tabIndex: 0, onKeyDown: function() {
          setType(CHANNEL_TYPE.SUPERGROUP);
          setStep(1);
        } },
        import_react129.default.createElement(Icon, { className: "sendbird-add-channel__rectangle__supergroup-icon", type: IconTypes.SUPERGROUP, fillColor: IconColors.PRIMARY, width: "28px", height: "28px" }),
        import_react129.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MODAL__CREATE_CHANNEL__SUPER)
      ),
      isBroadcastAvailable && import_react129.default.createElement(
        "div",
        { className: "sendbird-add-channel__rectangle", onClick: function() {
          setType(CHANNEL_TYPE.BROADCAST);
          setStep(1);
        }, role: "button", tabIndex: 0, onKeyDown: function() {
          setType(CHANNEL_TYPE.BROADCAST);
          setStep(1);
        } },
        import_react129.default.createElement(Icon, { className: "sendbird-add-channel__rectangle__broadcast-icon", type: IconTypes.BROADCAST, fillColor: IconColors.PRIMARY, width: "28px", height: "28px" }),
        import_react129.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.MODAL__CREATE_CHANNEL__BROADCAST)
      )
    )
  );
};

// node_modules/@sendbird/uikit-react/CreateChannel/components/CreateChannelUI.js
var import_react_dom39 = __toESM(require_react_dom(), 1);
var CreateChannel = function(props) {
  var onCancel = props.onCancel, renderStepOne = props.renderStepOne;
  var _a3 = useCreateChannelContext(), step = _a3.step, setStep = _a3.setStep, userListQuery = _a3.userListQuery;
  return import_react130.default.createElement(
    import_react130.default.Fragment,
    null,
    step === 0 && ((renderStepOne === null || renderStepOne === void 0 ? void 0 : renderStepOne()) || import_react130.default.createElement(SelectChannelType, { onCancel })),
    step === 1 && import_react130.default.createElement(InviteUsers, { userListQuery, onCancel: function() {
      setStep(0);
      onCancel === null || onCancel === void 0 ? void 0 : onCancel();
    } })
  );
};

// node_modules/@sendbird/uikit-react/CreateChannel.js
var import_react_dom40 = __toESM(require_react_dom(), 1);
var CreateChannel2 = function(props) {
  return import_react131.default.createElement(
    CreateChannelProvider,
    __assign({}, props),
    import_react131.default.createElement(CreateChannel, __assign({}, props))
  );
};

// node_modules/@sendbird/uikit-react/chunks/bundle-DYrU3olW.js
var AddGroupChannelView = function(_a3) {
  var createChannelVisible = _a3.createChannelVisible, onChangeCreateChannelVisible = _a3.onChangeCreateChannelVisible, onBeforeCreateChannel = _a3.onBeforeCreateChannel, onCreateChannelClick = _a3.onCreateChannelClick, onChannelCreated = _a3.onChannelCreated;
  var config = useSendbirdStateContext().config;
  return import_react132.default.createElement(
    import_react132.default.Fragment,
    null,
    import_react132.default.createElement(
      IconButton,
      { height: "32px", width: "32px", disabled: !config.isOnline, onClick: function() {
        return onChangeCreateChannelVisible(true);
      } },
      import_react132.default.createElement(Icon, { type: IconTypes.CREATE, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
    ),
    createChannelVisible && import_react132.default.createElement(CreateChannel2, { onCancel: function() {
      return onChangeCreateChannelVisible(false);
    }, onChannelCreated: function(channel) {
      onChannelCreated === null || onChannelCreated === void 0 ? void 0 : onChannelCreated(channel);
      onChangeCreateChannelVisible(false);
    }, onBeforeCreateChannel, onCreateChannelClick })
  );
};

// node_modules/@sendbird/uikit-react/GroupChannelList/components/AddGroupChannel.js
var import_react_dom41 = __toESM(require_react_dom(), 1);
var AddGroupChannel = function() {
  var _a3 = (0, import_react133.useState)(false), createChannelVisible = _a3[0], setCreateChannelVisible = _a3[1];
  var _b2 = useGroupChannelListContext(), onChannelCreated = _b2.onChannelCreated, onBeforeCreateChannel = _b2.onBeforeCreateChannel, onCreateChannelClick = _b2.onCreateChannelClick;
  return import_react133.default.createElement(AddGroupChannelView, { createChannelVisible, onChangeCreateChannelVisible: setCreateChannelVisible, onCreateChannelClick, onBeforeCreateChannel, onChannelCreated });
};

// node_modules/@sendbird/uikit-react/GroupChannelList/components/GroupChannelListUI.js
var import_react_dom42 = __toESM(require_react_dom(), 1);
var GroupChannelListUI = function(props) {
  var renderHeader = props.renderHeader, renderChannelPreview = props.renderChannelPreview, renderPlaceHolderError = props.renderPlaceHolderError, renderPlaceHolderLoading = props.renderPlaceHolderLoading, renderPlaceHolderEmptyList = props.renderPlaceHolderEmptyList;
  var _a3 = useGroupChannelListContext(), onChannelSelect = _a3.onChannelSelect, onThemeChange = _a3.onThemeChange, allowProfileEdit = _a3.allowProfileEdit, typingChannelUrls = _a3.typingChannelUrls, groupChannels = _a3.groupChannels, initialized = _a3.initialized, selectedChannelUrl = _a3.selectedChannelUrl, loadMore = _a3.loadMore, onUserProfileUpdated = _a3.onUserProfileUpdated;
  var _b2 = useSendbirdStateContext(), stores = _b2.stores, config = _b2.config;
  var logger = config.logger, isOnline = config.isOnline;
  var sdk = stores.sdkStore.sdk;
  var renderListItem = function(renderProps) {
    var channel = renderProps.item, index = renderProps.index;
    var itemProps = {
      channel,
      tabIndex: index,
      isSelected: channel.url === selectedChannelUrl,
      isTyping: typingChannelUrls.includes(channel.url),
      renderChannelAction: function(props2) {
        return import_react134.default.createElement(GroupChannelPreviewAction, __assign({}, props2));
      },
      onClick: function() {
        if (isOnline || (sdk === null || sdk === void 0 ? void 0 : sdk.isCacheEnabled)) {
          logger.info("ChannelList: Clicked on channel:", channel);
          onChannelSelect(channel);
        } else {
          logger.warning("ChannelList: Inactivated clicking channel item during offline.");
        }
      },
      onLeaveChannel: function() {
        return __awaiter(this, void 0, void 0, function() {
          return __generator(this, function(_a4) {
            switch (_a4.label) {
              case 0:
                logger.info("ChannelList: Leaving channel", channel);
                return [4, channel.leave()];
              case 1:
                _a4.sent();
                logger.info("ChannelList: Leaving channel success");
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }
    };
    if (renderChannelPreview) {
      return import_react134.default.createElement("div", { key: channel.url, onClick: itemProps.onClick }, renderChannelPreview(itemProps));
    }
    return import_react134.default.createElement(GroupChannelListItem, __assign({ key: channel.url }, itemProps));
  };
  return import_react134.default.createElement(GroupChannelListUIView, { renderHeader, renderChannel: renderListItem, renderPlaceHolderError, renderPlaceHolderLoading, renderPlaceHolderEmptyList, onChangeTheme: onThemeChange !== null && onThemeChange !== void 0 ? onThemeChange : noop, allowProfileEdit, onUserProfileUpdated: onUserProfileUpdated !== null && onUserProfileUpdated !== void 0 ? onUserProfileUpdated : noop, channels: groupChannels, onLoadMore: loadMore, initialized, renderAddChannel: function() {
    return import_react134.default.createElement(AddGroupChannel, null);
  } });
};

// node_modules/@sendbird/uikit-react/GroupChannelList.js
var import_react_dom43 = __toESM(require_react_dom(), 1);
var GroupChannelList = function(props) {
  return import_react135.default.createElement(
    GroupChannelListProvider,
    __assign({}, props),
    import_react135.default.createElement(GroupChannelListUI, __assign({}, props))
  );
};

// node_modules/@sendbird/uikit-react/Channel.js
var import_react147 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/Channel/context.js
var import_react139 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-DKR-710v.js
var RESET_MESSAGES = "RESET_MESSAGES";
var FETCH_INITIAL_MESSAGES_START = "FETCH_INITIAL_MESSAGES_START";
var FETCH_INITIAL_MESSAGES_SUCCESS = "FETCH_INITIAL_MESSAGES_SUCCESS";
var FETCH_INITIAL_MESSAGES_FAILURE = "FETCH_INITIAL_MESSAGES_FAILURE";
var FETCH_PREV_MESSAGES_SUCCESS = "FETCH_PREV_MESSAGES_SUCCESS";
var FETCH_PREV_MESSAGES_FAILURE = "FETCH_PREV_MESSAGES_FAILURE";
var FETCH_NEXT_MESSAGES_SUCCESS = "FETCH_NEXT_MESSAGES_SUCCESS";
var FETCH_NEXT_MESSAGES_FAILURE = "FETCH_NEXT_MESSAGES_FAILURE";
var SEND_MESSAGE_START = "SEND_MESSAGE_START";
var SEND_MESSAGE_SUCCESS = "SEND_MESSAGE_SUCCESS";
var SEND_MESSAGE_FAILURE = "SEND_MESSAGE_FAILURE";
var RESEND_MESSAGE_START = "RESEND_MESSAGE_START";
var ON_MESSAGE_RECEIVED = "ON_MESSAGE_RECEIVED";
var ON_MESSAGE_UPDATED = "ON_MESSAGE_UPDATED";
var ON_MESSAGE_THREAD_INFO_UPDATED = "ON_MESSAGE_THREAD_INFO_UPDATED";
var ON_MESSAGE_DELETED = "ON_MESSAGE_DELETED";
var ON_MESSAGE_DELETED_BY_REQ_ID = "ON_MESSAGE_DELETED_BY_REQ_ID";
var SET_CURRENT_CHANNEL = "SET_CURRENT_CHANNEL";
var SET_CHANNEL_INVALID = "SET_CHANNEL_INVALID";
var MARK_AS_READ = "MARK_AS_READ";
var ON_REACTION_UPDATED = "ON_REACTION_UPDATED";
var SET_EMOJI_CONTAINER = "SET_EMOJI_CONTAINER";
var MESSAGE_LIST_PARAMS_CHANGED = "MESSAGE_LIST_PARAMS_CHANGED";
var ON_FILE_INFO_UPLOADED = "ON_FILE_INFO_UPLOADED";
var ON_TYPING_STATUS_UPDATED = "ON_TYPING_STATUS_UPDATED";
var channelActions = Object.freeze({
  __proto__: null,
  FETCH_INITIAL_MESSAGES_FAILURE,
  FETCH_INITIAL_MESSAGES_START,
  FETCH_INITIAL_MESSAGES_SUCCESS,
  FETCH_NEXT_MESSAGES_FAILURE,
  FETCH_NEXT_MESSAGES_SUCCESS,
  FETCH_PREV_MESSAGES_FAILURE,
  FETCH_PREV_MESSAGES_SUCCESS,
  MARK_AS_READ,
  MESSAGE_LIST_PARAMS_CHANGED,
  ON_FILE_INFO_UPLOADED,
  ON_MESSAGE_DELETED,
  ON_MESSAGE_DELETED_BY_REQ_ID,
  ON_MESSAGE_RECEIVED,
  ON_MESSAGE_THREAD_INFO_UPDATED,
  ON_MESSAGE_UPDATED,
  ON_REACTION_UPDATED,
  ON_TYPING_STATUS_UPDATED,
  RESEND_MESSAGE_START,
  RESET_MESSAGES,
  SEND_MESSAGE_FAILURE,
  SEND_MESSAGE_START,
  SEND_MESSAGE_SUCCESS,
  SET_CHANNEL_INVALID,
  SET_CURRENT_CHANNEL,
  SET_EMOJI_CONTAINER
});

// node_modules/@sendbird/uikit-react/chunks/bundle-BKwxWorE.js
var isEmpty2 = function(val) {
  return val === null || val === void 0;
};
function compareIds(a5, b6) {
  if (isEmpty2(a5) || isEmpty2(b6)) {
    return false;
  }
  var aString = a5.toString();
  var bString = b6.toString();
  return aString === bString;
}

// node_modules/@sendbird/uikit-react/chunks/bundle-CCJRc28C.js
var import_react136 = __toESM(require_react(), 1);
var PREV_RESULT_SIZE = 30;
var NEXT_RESULT_SIZE = 15;
function useInitialMessagesFetch(_a3, _b2) {
  var currentGroupChannel = _a3.currentGroupChannel, initialTimeStamp = _a3.initialTimeStamp, userFilledMessageListQuery = _a3.userFilledMessageListQuery, replyType = _a3.replyType, setIsScrolled = _a3.setIsScrolled;
  var logger = _b2.logger, scrollRef = _b2.scrollRef, messagesDispatcher = _b2.messagesDispatcher;
  var channelUrl = currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.url;
  var fetchMessages = (0, import_react136.useCallback)(function() {
    logger.info("Channel useInitialMessagesFetch: Setup started", currentGroupChannel);
    setIsScrolled(false);
    messagesDispatcher({
      type: RESET_MESSAGES,
      payload: null
    });
    if (currentGroupChannel && (currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.getMessagesByTimestamp)) {
      var messageListParams_1 = {
        prevResultSize: PREV_RESULT_SIZE,
        isInclusive: true,
        includeReactions: true,
        includeMetaArray: true
      };
      if (initialTimeStamp) {
        messageListParams_1.nextResultSize = NEXT_RESULT_SIZE;
      }
      if (replyType === "QUOTE_REPLY" || replyType === "THREAD") {
        messageListParams_1.includeThreadInfo = true;
        messageListParams_1.includeParentMessageInfo = true;
        messageListParams_1.replyType = B.ONLY_REPLY_TO_CHANNEL;
      }
      if (userFilledMessageListQuery) {
        Object.keys(userFilledMessageListQuery).forEach(function(key) {
          messageListParams_1[key] = userFilledMessageListQuery[key];
        });
      }
      if (replyType && (replyType === "QUOTE_REPLY" || replyType === "THREAD") || userFilledMessageListQuery) {
        logger.info("Channel useInitialMessagesFetch: Setup messageListParams", messageListParams_1);
        messagesDispatcher({
          type: MESSAGE_LIST_PARAMS_CHANGED,
          payload: messageListParams_1
        });
      }
      logger.info("Channel: Fetching messages", { currentGroupChannel, userFilledMessageListQuery });
      messagesDispatcher({
        type: FETCH_INITIAL_MESSAGES_START,
        payload: null
      });
      currentGroupChannel.getMessagesByTimestamp(initialTimeStamp || (/* @__PURE__ */ new Date()).getTime(), messageListParams_1).then(function(messages) {
        messagesDispatcher({
          type: FETCH_INITIAL_MESSAGES_SUCCESS,
          payload: {
            currentGroupChannel,
            messages
          }
        });
      }).catch(function(error) {
        logger.error("Channel: Fetching messages failed", error);
        messagesDispatcher({
          type: FETCH_INITIAL_MESSAGES_FAILURE,
          payload: { currentGroupChannel }
        });
      }).finally(function() {
        if (!initialTimeStamp) {
          setTimeout(function() {
            return scrollIntoLast(0, scrollRef, setIsScrolled);
          }, SCROLL_BOTTOM_DELAY_FOR_FETCH);
        } else {
          setTimeout(function() {
            scrollToRenderedMessage(scrollRef, initialTimeStamp, setIsScrolled);
          }, 500);
        }
      });
    }
  }, [channelUrl, userFilledMessageListQuery, initialTimeStamp]);
  (0, import_react136.useEffect)(function() {
    fetchMessages();
  }, [fetchMessages]);
  return fetchMessages;
}

// node_modules/@sendbird/uikit-react/chunks/bundle-lJZ9BTB_.js
var import_react137 = __toESM(require_react(), 1);
function useReconnectOnIdle(isOnline, currentGroupChannel, reconnectOnIdle) {
  if (reconnectOnIdle === void 0) {
    reconnectOnIdle = true;
  }
  var _a3 = (0, import_react137.useState)(false), isTabHidden = _a3[0], setIsTabHidden = _a3[1];
  var wasOffline = !isOnline;
  (0, import_react137.useEffect)(function() {
    var handleVisibilityChange = function() {
      if (reconnectOnIdle) {
        setIsTabHidden(document.hidden);
      }
    };
    document.addEventListener("visibilitychange", handleVisibilityChange);
    return function() {
      document.removeEventListener("visibilitychange", handleVisibilityChange);
    };
  }, [reconnectOnIdle, document.hidden]);
  var shouldReconnect = wasOffline && !!currentGroupChannel && !isTabHidden;
  return { shouldReconnect };
}

// node_modules/@sendbird/uikit-react/chunks/bundle-CDvkkTNs.js
var import_react138 = __toESM(require_react(), 1);
var getNicknamesMapFromMembers2 = function(members) {
  if (members === void 0) {
    members = [];
  }
  var nicknamesMap = /* @__PURE__ */ new Map();
  for (var memberIndex = 0; memberIndex < members.length; memberIndex += 1) {
    var _a3 = members[memberIndex], userId = _a3.userId, nickname = _a3.nickname;
    nicknamesMap.set(userId, nickname);
  }
  return nicknamesMap;
};
var getParentMessageFrom = function(message) {
  if (!message) {
    return null;
  }
  if (isParentMessage(message)) {
    return message;
  }
  if (isThreadMessage2(message)) {
    return (message === null || message === void 0 ? void 0 : message.parentMessage) || null;
  }
  return null;
};
var isParentMessage = function(message) {
  return (message === null || message === void 0 ? void 0 : message.parentMessage) === null && typeof (message === null || message === void 0 ? void 0 : message.parentMessageId) === "number" && !(message === null || message === void 0 ? void 0 : message.parentMessageId);
};
var isThreadMessage2 = function(message) {
  return (message === null || message === void 0 ? void 0 : message.parentMessage) !== null && typeof (message === null || message === void 0 ? void 0 : message.parentMessageId) === "number" && (message === null || message === void 0 ? void 0 : message.parentMessageId) > 0 && (message === null || message === void 0 ? void 0 : message.threadInfo) === null;
};
var isAboutSame2 = function(a5, b6, px) {
  return Math.abs(a5 - b6) <= px;
};
var isEmpty3 = function(val) {
  return val === null || val === void 0;
};
function compareIds2(a5, b6) {
  if (isEmpty3(a5) || isEmpty3(b6)) {
    return false;
  }
  var aString = a5.toString();
  var bString = b6.toString();
  return aString === bString;
}
var scrollIntoLast2 = function(intialTry) {
  if (intialTry === void 0) {
    intialTry = 0;
  }
  var MAX_TRIES = 10;
  var currentTry = intialTry;
  if (currentTry > MAX_TRIES) {
    return;
  }
  try {
    var scrollDOM = document.querySelector(".sendbird-thread-ui--scroll");
    if (scrollDOM) {
      scrollDOM.scrollTop = scrollDOM.scrollHeight;
    }
  } catch (error) {
    setTimeout(function() {
      scrollIntoLast2(currentTry + 1);
    }, 500 * currentTry);
  }
};
var useSendMultipleFilesMessage = function(_a3, _b2) {
  var currentChannel = _a3.currentChannel, onBeforeSendMultipleFilesMessage = _a3.onBeforeSendMultipleFilesMessage, publishingModules = _a3.publishingModules;
  var logger = _b2.logger, pubSub = _b2.pubSub, scrollRef = _b2.scrollRef;
  var sendMessage = (0, import_react138.useCallback)(function(files, quoteMessage) {
    return new Promise(function(resolve, reject) {
      if (!currentChannel) {
        logger.warning("Channel: Sending MFm failed, because currentChannel is null.", { currentChannel });
        reject();
      }
      if (files.length <= 1) {
        logger.warning("Channel: Sending MFM failed, because there are no multiple files.", { files });
        reject();
      }
      var messageParams = {
        fileInfoList: files.map(function(file) {
          return {
            file,
            fileName: file.name,
            fileSize: file.size,
            mimeType: file.type
          };
        })
      };
      if (quoteMessage) {
        messageParams.isReplyToChannel = true;
        messageParams.parentMessageId = quoteMessage.messageId;
      }
      if (typeof onBeforeSendMultipleFilesMessage === "function") {
        messageParams = onBeforeSendMultipleFilesMessage(files, quoteMessage);
      }
      logger.info("Channel: Start sending MFM", { messageParams });
      try {
        currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.sendMultipleFilesMessage(messageParams).onFileUploaded(function(requestId, index, uploadableFileInfo, error) {
          logger.info("Channel: onFileUploaded during sending MFM", {
            requestId,
            index,
            error,
            uploadableFileInfo
          });
          pubSub.publish(pubSubTopics.ON_FILE_INFO_UPLOADED, {
            response: {
              channelUrl: currentChannel.url,
              requestId,
              index,
              uploadableFileInfo,
              error
            },
            publishingModules
          });
        }).onPending(function(pendingMessage) {
          logger.info("Channel: in progress of sending MFM", { pendingMessage, fileInfoList: messageParams.fileInfoList });
          pubSub.publish(pubSubTopics.SEND_MESSAGE_START, {
            message: pendingMessage,
            channel: currentChannel,
            publishingModules
          });
          setTimeout(function() {
            if (scrollRef && shouldPubSubPublishToChannel(publishingModules)) {
              scrollIntoLast(0, scrollRef);
            }
            if (shouldPubSubPublishToThread(publishingModules)) {
              scrollIntoLast2(0);
            }
          }, SCROLL_BOTTOM_DELAY_FOR_SEND);
        }).onFailed(function(error, failedMessage) {
          logger.error("Channel: Sending MFM failed.", { error, failedMessage });
          pubSub.publish(pubSubTopics.SEND_MESSAGE_FAILED, {
            channel: currentChannel,
            message: failedMessage,
            publishingModules
          });
          reject(error);
        }).onSucceeded(function(succeededMessage) {
          logger.info("Channel: Sending voice message success!", { succeededMessage });
          pubSub.publish(pubSubTopics.SEND_FILE_MESSAGE, {
            channel: currentChannel,
            message: succeededMessage,
            publishingModules
          });
          resolve(succeededMessage);
        });
      } catch (error) {
        logger.error("Channel: Sending MFM failed.", { error });
        reject(error);
      }
    });
  }, [
    currentChannel,
    onBeforeSendMultipleFilesMessage,
    publishingModules
  ]);
  return [sendMessage];
};

// node_modules/@sendbird/uikit-react/Channel/context.js
var import_react_dom44 = __toESM(require_react_dom(), 1);
var initialState2 = {
  initialized: false,
  loading: true,
  allMessages: [],
  /**
   * localMessages: pending & failed messages
   */
  localMessages: [],
  currentGroupChannel: null,
  // for scrollup
  hasMorePrev: false,
  oldestMessageTimeStamp: 0,
  // for scroll down
  // onScrollDownCallback is added for navigation to different timestamps on messageSearch
  // hasMorePrev, onScrollCallback -> scroll up(default behavior)
  // hasMoreNext, onScrollDownCallback -> scroll down
  hasMoreNext: false,
  latestMessageTimeStamp: 0,
  emojiContainer: { emojiCategories: [], emojiHash: "" },
  /** @deprecated Please use `unreadSinceDate` instead. * */
  unreadSince: null,
  /**
   * unreadSinceDate is a date information about message unread.
   * It's used only for the {unreadSinceDate && <UnreadCount unreadSinceDate={unreadSinceDate} />}
   */
  unreadSinceDate: null,
  isInvalid: false,
  readStatus: null,
  messageListParams: null,
  typingMembers: []
};
var getOldestMessageTimeStamp = function(messages) {
  if (messages === void 0) {
    messages = [];
  }
  var oldestMessage = messages[0];
  return oldestMessage && oldestMessage.createdAt || null;
};
var getLatestMessageTimeStamp = function(messages) {
  if (messages === void 0) {
    messages = [];
  }
  var latestMessage = messages[messages.length - 1];
  return latestMessage && latestMessage.createdAt || null;
};
function hasReqId(message) {
  return "reqId" in message;
}
function channelReducer(state, action) {
  var stringSet2 = useLocalization().stringSet;
  return K2(action).with({ type: RESET_MESSAGES }, function() {
    return __assign(__assign({}, state), {
      // when user switches channel, if the previous channel `hasMorePrev`
      // the onScroll gets called twice, setting hasMorePrev false prevents this
      hasMorePrev: false,
      hasMoreNext: false,
      allMessages: [],
      localMessages: []
    });
  }).with({ type: FETCH_INITIAL_MESSAGES_START }, function() {
    return __assign(__assign({}, state), { loading: true, allMessages: state.allMessages.filter(function(m5) {
      return isSendableMessage2(m5) ? m5.sendingStatus !== W.SUCCEEDED : true;
    }), localMessages: [] });
  }).with({ type: FETCH_INITIAL_MESSAGES_SUCCESS }, function(action2) {
    var _a3;
    var _b2 = action2.payload, currentGroupChannel = _b2.currentGroupChannel, messages = _b2.messages;
    if (!((currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.url) === ((_a3 = state.currentGroupChannel) === null || _a3 === void 0 ? void 0 : _a3.url))) {
      return state;
    }
    var oldestMessageTimeStamp = getOldestMessageTimeStamp(messages);
    var latestMessageTimeStamp = getLatestMessageTimeStamp(messages);
    return __assign(__assign({}, state), { loading: false, initialized: true, hasMorePrev: true, hasMoreNext: true, oldestMessageTimeStamp, latestMessageTimeStamp, allMessages: __spreadArray([], messages, true) });
  }).with({ type: FETCH_PREV_MESSAGES_SUCCESS }, function(action2) {
    var _a3, _b2, _c, _d;
    var _e3 = action2.payload, currentGroupChannel = _e3.currentGroupChannel, messages = _e3.messages;
    if (!((currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.url) === ((_a3 = state.currentGroupChannel) === null || _a3 === void 0 ? void 0 : _a3.url))) {
      return state;
    }
    var hasMorePrev = ((_b2 = messages === null || messages === void 0 ? void 0 : messages.length) !== null && _b2 !== void 0 ? _b2 : 0) >= ((_d = (_c = state === null || state === void 0 ? void 0 : state.messageListParams) === null || _c === void 0 ? void 0 : _c.prevResultSize) !== null && _d !== void 0 ? _d : PREV_RESULT_SIZE) + 1;
    var oldestMessageTimeStamp = getOldestMessageTimeStamp(messages);
    var duplicatedMessageIds = [];
    var updatedOldMessages = state.allMessages.map(function(msg) {
      var duplicatedMessage = messages.find(function(_a4) {
        var messageId = _a4.messageId;
        return compareIds(messageId, msg.messageId);
      });
      if (!duplicatedMessage) {
        return msg;
      }
      duplicatedMessageIds.push(duplicatedMessage.messageId);
      return duplicatedMessage.updatedAt > msg.updatedAt ? duplicatedMessage : msg;
    });
    var filteredNewMessages = duplicatedMessageIds.length > 0 ? messages.filter(function(msg) {
      return !duplicatedMessageIds.find(function(messageId) {
        return compareIds(messageId, msg.messageId);
      });
    }) : messages;
    return __assign(__assign({}, state), { hasMorePrev, oldestMessageTimeStamp, allMessages: __spreadArray(__spreadArray([], filteredNewMessages, true), updatedOldMessages, true) });
  }).with({ type: FETCH_NEXT_MESSAGES_SUCCESS }, function(action2) {
    var _a3, _b2, _c, _d;
    var _e3 = action2.payload, currentGroupChannel = _e3.currentGroupChannel, messages = _e3.messages;
    if (!((currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.url) === ((_a3 = state.currentGroupChannel) === null || _a3 === void 0 ? void 0 : _a3.url))) {
      return state;
    }
    var hasMoreNext = ((_b2 = messages === null || messages === void 0 ? void 0 : messages.length) !== null && _b2 !== void 0 ? _b2 : 0) === ((_d = (_c = state === null || state === void 0 ? void 0 : state.messageListParams) === null || _c === void 0 ? void 0 : _c.nextResultSize) !== null && _d !== void 0 ? _d : NEXT_RESULT_SIZE) + 1;
    var latestMessageTimeStamp = getLatestMessageTimeStamp(messages);
    var sortedMessages = mergeAndSortMessages(state.allMessages, messages);
    return __assign(__assign({}, state), { hasMoreNext, latestMessageTimeStamp, allMessages: sortedMessages });
  }).with({
    type: S3.union(FETCH_INITIAL_MESSAGES_FAILURE, FETCH_PREV_MESSAGES_FAILURE, FETCH_NEXT_MESSAGES_FAILURE)
  }, function(action2) {
    var _a3;
    var currentGroupChannel = action2.payload.currentGroupChannel;
    if ((currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.url) !== ((_a3 = state === null || state === void 0 ? void 0 : state.currentGroupChannel) === null || _a3 === void 0 ? void 0 : _a3.url))
      return state;
    var shouldInvalid = [FETCH_INITIAL_MESSAGES_FAILURE].includes(action2.type);
    return __assign(__assign({}, state), { loading: false, isInvalid: shouldInvalid, initialized: false, allMessages: [], hasMorePrev: false, hasMoreNext: false, oldestMessageTimeStamp: null, latestMessageTimeStamp: null });
  }).with({ type: SEND_MESSAGE_START }, function(action2) {
    return __assign(__assign({}, state), { localMessages: __spreadArray(__spreadArray([], state.localMessages, true), [action2.payload], false) });
  }).with({ type: SEND_MESSAGE_SUCCESS }, function(action2) {
    var message = action2.payload;
    var filteredMessages = state.allMessages.filter(function(m5) {
      return !hasReqId(m5) || (m5 === null || m5 === void 0 ? void 0 : m5.reqId) !== (message === null || message === void 0 ? void 0 : message.reqId);
    });
    return __assign(__assign({}, state), { allMessages: __spreadArray(__spreadArray([], filteredMessages, true), [message], false), localMessages: state.localMessages.filter(function(m5) {
      return hasReqId(m5) && (m5 === null || m5 === void 0 ? void 0 : m5.reqId) !== (message === null || message === void 0 ? void 0 : message.reqId);
    }) });
  }).with({ type: SEND_MESSAGE_FAILURE }, function(action2) {
    action2.payload.failed = true;
    return __assign(__assign({}, state), { localMessages: state.localMessages.map(function(m5) {
      return compareIds(hasReqId(m5) && m5.reqId, action2.payload.reqId) ? action2.payload : m5;
    }) });
  }).with({ type: SET_CURRENT_CHANNEL }, function(action2) {
    return __assign(__assign({}, state), { currentGroupChannel: action2.payload, isInvalid: false });
  }).with({ type: SET_CHANNEL_INVALID }, function() {
    return __assign(__assign({}, state), { currentGroupChannel: null, allMessages: [], localMessages: [], isInvalid: true });
  }).with({ type: ON_MESSAGE_RECEIVED }, function(action2) {
    var _a3, _b2;
    var _c = action2.payload, channel = _c.channel, message = _c.message;
    var members = channel.members;
    var sender = message.sender;
    var currentGroupChannel = state.currentGroupChannel;
    var currentGroupChannelUrl = currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.url;
    if (!compareIds(channel === null || channel === void 0 ? void 0 : channel.url, currentGroupChannelUrl)) {
      return state;
    }
    if (state.allMessages.some(function(msg) {
      return msg.messageId === message.messageId;
    })) {
      return state;
    }
    if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {
      return state;
    }
    if (message.isAdminMessage && message.isAdminMessage()) {
      return __assign(__assign({}, state), { allMessages: passUnsuccessfullMessages(state.allMessages, message) });
    }
    var senderMember = members === null || members === void 0 ? void 0 : members.find(function(m5) {
      return (m5 === null || m5 === void 0 ? void 0 : m5.userId) === (sender === null || sender === void 0 ? void 0 : sender.userId);
    });
    if ((senderMember === null || senderMember === void 0 ? void 0 : senderMember.profileUrl) !== (sender === null || sender === void 0 ? void 0 : sender.profileUrl) || (senderMember === null || senderMember === void 0 ? void 0 : senderMember.friendName) !== (sender === null || sender === void 0 ? void 0 : sender.friendName) || (senderMember === null || senderMember === void 0 ? void 0 : senderMember.nickname) !== (sender === null || sender === void 0 ? void 0 : sender.nickname)) {
      channel.members = members.map(function(member) {
        if (member.userId === sender.userId) {
          return sender;
        }
        return member;
      });
    }
    return __assign(__assign({}, state), { currentGroupChannel: channel, unreadSince: (_a3 = state.unreadSince) !== null && _a3 !== void 0 ? _a3 : format(/* @__PURE__ */ new Date(), stringSet2.DATE_FORMAT__UNREAD_SINCE), unreadSinceDate: (_b2 = state.unreadSinceDate) !== null && _b2 !== void 0 ? _b2 : /* @__PURE__ */ new Date(), allMessages: passUnsuccessfullMessages(state.allMessages, message) });
  }).with({ type: ON_MESSAGE_UPDATED }, function(action2) {
    var _a3;
    var _b2 = action2.payload, channel = _b2.channel, message = _b2.message;
    var currentGroupChannelUrl = ((_a3 = state === null || state === void 0 ? void 0 : state.currentGroupChannel) === null || _a3 === void 0 ? void 0 : _a3.url) || "";
    if (!compareIds(channel === null || channel === void 0 ? void 0 : channel.url, currentGroupChannelUrl)) {
      return state;
    }
    if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {
      return __assign(__assign({}, state), { allMessages: state.allMessages.filter(function(m5) {
        return !compareIds(m5.messageId, message === null || message === void 0 ? void 0 : message.messageId);
      }) });
    }
    return __assign(__assign({}, state), { allMessages: state.allMessages.map(function(m5) {
      if (compareIds(m5.messageId, message.messageId)) {
        return message;
      }
      if (compareIds(m5.parentMessageId, message.messageId)) {
        m5.parentMessage = message;
      }
      return m5;
    }) });
  }).with({ type: ON_MESSAGE_THREAD_INFO_UPDATED }, function(action2) {
    var _a3;
    var _b2 = action2.payload, channel = _b2.channel, event = _b2.event;
    var channelUrl = event.channelUrl, threadInfo = event.threadInfo, targetMessageId = event.targetMessageId;
    var currentGroupChannelUrl = ((_a3 = state === null || state === void 0 ? void 0 : state.currentGroupChannel) === null || _a3 === void 0 ? void 0 : _a3.url) || "";
    if (!compareIds(channel === null || channel === void 0 ? void 0 : channel.url, currentGroupChannelUrl) || !compareIds(channel === null || channel === void 0 ? void 0 : channel.url, channelUrl)) {
      return state;
    }
    return __assign(__assign({}, state), { allMessages: state.allMessages.map(function(m5) {
      if (compareIds(m5.messageId, targetMessageId)) {
        m5.threadInfo = threadInfo;
      }
      return m5;
    }) });
  }).with({ type: RESEND_MESSAGE_START }, function(action2) {
    return __assign(__assign({}, state), { localMessages: state.localMessages.map(function(m5) {
      return compareIds(hasReqId(m5) && m5.reqId, action2.payload.reqId) ? action2.payload : m5;
    }) });
  }).with({ type: MARK_AS_READ }, function(action2) {
    var _a3, _b2, _c;
    if (((_a3 = state.currentGroupChannel) === null || _a3 === void 0 ? void 0 : _a3.url) !== ((_c = (_b2 = action2.payload) === null || _b2 === void 0 ? void 0 : _b2.channel) === null || _c === void 0 ? void 0 : _c.url)) {
      return state;
    }
    return __assign(__assign({}, state), { unreadSince: null, unreadSinceDate: null });
  }).with({ type: ON_MESSAGE_DELETED }, function(action2) {
    return __assign(__assign({}, state), { allMessages: state.allMessages.filter(function(m5) {
      return !compareIds(m5.messageId, action2.payload);
    }) });
  }).with({ type: ON_MESSAGE_DELETED_BY_REQ_ID }, function(action2) {
    return __assign(__assign({}, state), { localMessages: state.localMessages.filter(function(m5) {
      return !compareIds(hasReqId(m5) && m5.reqId, action2.payload);
    }) });
  }).with({ type: SET_EMOJI_CONTAINER }, function(action2) {
    return __assign(__assign({}, state), { emojiContainer: action2.payload });
  }).with({ type: ON_REACTION_UPDATED }, function(action2) {
    return __assign(__assign({}, state), { allMessages: state.allMessages.map(function(m5) {
      if (compareIds(m5.messageId, action2.payload.messageId)) {
        if (m5.applyReactionEvent && typeof m5.applyReactionEvent === "function") {
          m5.applyReactionEvent(action2.payload);
        }
        return m5;
      }
      return m5;
    }) });
  }).with({ type: MESSAGE_LIST_PARAMS_CHANGED }, function(action2) {
    return __assign(__assign({}, state), { messageListParams: action2.payload });
  }).with({ type: ON_FILE_INFO_UPLOADED }, function(action2) {
    var _a3, _b2;
    var _c = action2.payload, channelUrl = _c.channelUrl, requestId = _c.requestId, index = _c.index, uploadableFileInfo = _c.uploadableFileInfo, error = _c.error;
    if (!compareIds(channelUrl, (_a3 = state === null || state === void 0 ? void 0 : state.currentGroupChannel) === null || _a3 === void 0 ? void 0 : _a3.url)) {
      return state;
    }
    if (error)
      return state;
    var localMessages = state.localMessages;
    var messageToUpdate = localMessages.find(function(message) {
      return compareIds(hasReqId(message) && message.reqId, requestId);
    });
    var fileInfoList = (_b2 = messageToUpdate.messageParams) === null || _b2 === void 0 ? void 0 : _b2.fileInfoList;
    if (Array.isArray(fileInfoList)) {
      fileInfoList[index] = uploadableFileInfo;
    }
    return __assign(__assign({}, state), { localMessages });
  }).with({ type: ON_TYPING_STATUS_UPDATED }, function(action2) {
    var _a3;
    var _b2 = action2.payload, channel = _b2.channel, typingMembers = _b2.typingMembers;
    if (!compareIds(channel.url, (_a3 = state === null || state === void 0 ? void 0 : state.currentGroupChannel) === null || _a3 === void 0 ? void 0 : _a3.url)) {
      return state;
    }
    return __assign(__assign({}, state), { typingMembers });
  }).otherwise(function() {
    return state;
  });
}
var DELIVERY_RECEIPT2 = "delivery_receipt";
function useHandleChannelEvents(_a3, _b2) {
  var _c, _d, _e3;
  var sdkInit = _a3.sdkInit, currentGroupChannel = _a3.currentGroupChannel, disableMarkAsRead = _a3.disableMarkAsRead;
  var sdk = _b2.sdk, logger = _b2.logger, scrollRef = _b2.scrollRef, setQuoteMessage = _b2.setQuoteMessage, messagesDispatcher = _b2.messagesDispatcher;
  var store = useSendbirdStateContext();
  var _f = store.config, markAsReadScheduler = _f.markAsReadScheduler, markAsDeliveredScheduler = _f.markAsDeliveredScheduler, disableMarkAsDelivered = _f.disableMarkAsDelivered;
  var canSetMarkAsDelivered = (_e3 = (_d = (_c = store.stores.sdkStore.sdk) === null || _c === void 0 ? void 0 : _c.appInfo) === null || _d === void 0 ? void 0 : _d.premiumFeatureList) === null || _e3 === void 0 ? void 0 : _e3.find(function(feature) {
    return feature === DELIVERY_RECEIPT2;
  });
  (0, import_react139.useEffect)(function() {
    var _a4;
    var channelUrl = currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.url;
    var channelHandlerId = uuidv4();
    if (channelUrl && sdkInit) {
      var channelHandler = {
        onMessageReceived: function(channel, message) {
          var _a5, _b3;
          if (channel.isGroupChannel() && compareIds(channel === null || channel === void 0 ? void 0 : channel.url, channelUrl)) {
            var scrollToEnd = false;
            try {
              var current = scrollRef.current;
              if (current) {
                scrollToEnd = current.offsetHeight + current.scrollTop >= current.scrollHeight - 10;
              }
            } catch (error) {
            }
            logger.info("Channel | useHandleChannelEvents: onMessageReceived", message);
            messagesDispatcher({
              type: ON_MESSAGE_RECEIVED,
              payload: { channel, message }
            });
            if (scrollToEnd && ((_a5 = document.getElementById("sendbird-dropdown-portal")) === null || _a5 === void 0 ? void 0 : _a5.childElementCount) === 0 && ((_b3 = document.getElementById("sendbird-emoji-list-portal")) === null || _b3 === void 0 ? void 0 : _b3.childElementCount) === 0) {
              try {
                setTimeout(function() {
                  return scrollIntoLast(0, scrollRef);
                });
                if (!disableMarkAsRead) {
                  markAsReadScheduler.push(currentGroupChannel);
                }
                if (canSetMarkAsDelivered && !disableMarkAsDelivered) {
                  markAsDeliveredScheduler.push(currentGroupChannel);
                }
              } catch (error) {
                logger.warning("Channel | onMessageReceived | scroll to end failed");
              }
            }
          }
        },
        onUnreadMemberStatusUpdated: function(channel) {
          logger.info("Channel | useHandleChannelEvents: onUnreadMemberStatusUpdated", channel);
          if (compareIds(channel === null || channel === void 0 ? void 0 : channel.url, channelUrl)) {
            messagesDispatcher({
              type: SET_CURRENT_CHANNEL,
              payload: channel
            });
          }
        },
        // before(onDeliveryReceiptUpdated)
        onUndeliveredMemberStatusUpdated: function(channel) {
          if (compareIds(channel === null || channel === void 0 ? void 0 : channel.url, channelUrl)) {
            logger.info("Channel | useHandleChannelEvents: onDeliveryReceiptUpdated", channel);
            messagesDispatcher({
              type: SET_CURRENT_CHANNEL,
              payload: channel
            });
          }
        },
        onMessageUpdated: function(channel, message) {
          if (channel.isGroupChannel() && compareIds(channel === null || channel === void 0 ? void 0 : channel.url, channelUrl)) {
            logger.info("Channel | useHandleChannelEvents: onMessageUpdated", message);
            messagesDispatcher({
              type: ON_MESSAGE_UPDATED,
              payload: { channel, message }
            });
          }
        },
        onThreadInfoUpdated: function(channel, threadInfoUpdateEvent) {
          if (channel.isGroupChannel() && compareIds(channel === null || channel === void 0 ? void 0 : channel.url, channelUrl)) {
            logger.info("Channel | useHandleChannelEvents: onThreadInfoUpdated", { channel, threadInfoUpdateEvent });
            messagesDispatcher({
              type: ON_MESSAGE_THREAD_INFO_UPDATED,
              payload: { channel, event: threadInfoUpdateEvent }
            });
          }
        },
        onMessageDeleted: function(channel, messageId) {
          logger.info("Channel | useHandleChannelEvents: onMessageDeleted", { channel, messageId });
          setQuoteMessage(null);
          messagesDispatcher({
            type: ON_MESSAGE_DELETED,
            payload: messageId
          });
        },
        onReactionUpdated: function(channel, reactionEvent) {
          logger.info("Channel | useHandleChannelEvents: onReactionUpdated", { channel, reactionEvent });
          messagesDispatcher({
            type: ON_REACTION_UPDATED,
            payload: reactionEvent
          });
        },
        onChannelChanged: function(channel) {
          if (channel.isGroupChannel() && compareIds(channel === null || channel === void 0 ? void 0 : channel.url, channelUrl)) {
            logger.info("Channel | useHandleChannelEvents: onChannelChanged", channel);
            messagesDispatcher({
              type: SET_CURRENT_CHANNEL,
              payload: channel
            });
          }
        },
        onChannelFrozen: function(channel) {
          if (channel.isGroupChannel() && compareIds(channel === null || channel === void 0 ? void 0 : channel.url, channelUrl)) {
            logger.info("Channel | useHandleChannelEvents: onChannelFrozen", channel);
            messagesDispatcher({
              type: SET_CURRENT_CHANNEL,
              payload: channel
            });
          }
        },
        onChannelUnfrozen: function(channel) {
          if (channel.isGroupChannel() && compareIds(channel === null || channel === void 0 ? void 0 : channel.url, channelUrl)) {
            logger.info("Channel | useHandleChannelEvents: onChannelUnFrozen", channel);
            messagesDispatcher({
              type: SET_CURRENT_CHANNEL,
              payload: channel
            });
          }
        },
        onUserMuted: function(channel, user) {
          if (channel.isGroupChannel() && compareIds(channel === null || channel === void 0 ? void 0 : channel.url, channelUrl)) {
            logger.info("Channel | useHandleChannelEvents: onUserMuted", { channel, user });
            messagesDispatcher({
              type: SET_CURRENT_CHANNEL,
              payload: channel
            });
          }
        },
        onUserUnmuted: function(channel, user) {
          if (channel.isGroupChannel() && compareIds(channel === null || channel === void 0 ? void 0 : channel.url, channelUrl)) {
            logger.info("Channel | useHandleChannelEvents: onUserUnmuted", { channel, user });
            messagesDispatcher({
              type: SET_CURRENT_CHANNEL,
              payload: channel
            });
          }
        },
        onUserBanned: function(channel, user) {
          var _a5;
          if (compareIds(channel === null || channel === void 0 ? void 0 : channel.url, channelUrl) && channel.isGroupChannel()) {
            logger.info("Channel | useHandleChannelEvents: onUserBanned", { channel, user });
            var isByMe = (user === null || user === void 0 ? void 0 : user.userId) === ((_a5 = sdk === null || sdk === void 0 ? void 0 : sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
            messagesDispatcher({
              type: SET_CURRENT_CHANNEL,
              payload: isByMe ? null : channel
            });
          }
        },
        onOperatorUpdated: function(channel, users) {
          if (channel.isGroupChannel() && compareIds(channel === null || channel === void 0 ? void 0 : channel.url, channelUrl)) {
            logger.info("Channel | useHandleChannelEvents: onOperatorUpdated", { channel, users });
            messagesDispatcher({
              type: SET_CURRENT_CHANNEL,
              payload: channel
            });
          }
        },
        onUserLeft: function(channel, user) {
          var _a5;
          if (compareIds(channel === null || channel === void 0 ? void 0 : channel.url, channelUrl)) {
            logger.info("Channel | useHandleChannelEvents: onUserLeft", { channel, user });
            var isByMe = (user === null || user === void 0 ? void 0 : user.userId) === ((_a5 = sdk === null || sdk === void 0 ? void 0 : sdk.currentUser) === null || _a5 === void 0 ? void 0 : _a5.userId);
            messagesDispatcher({
              type: SET_CURRENT_CHANNEL,
              payload: isByMe ? null : channel
            });
          }
        },
        onTypingStatusUpdated: function(channel) {
          if (compareIds(channel === null || channel === void 0 ? void 0 : channel.url, channelUrl)) {
            logger.info("Channel | onTypingStatusUpdated", { channel });
            var typingMembers = channel.getTypingUsers();
            messagesDispatcher({
              type: ON_TYPING_STATUS_UPDATED,
              payload: {
                channel,
                typingMembers
              }
            });
          }
        }
      };
      logger.info("Channel | useHandleChannelEvents: Setup event handler", { channelHandlerId, channelHandler });
      (_a4 = sdk.groupChannel) === null || _a4 === void 0 ? void 0 : _a4.addGroupChannelHandler(channelHandlerId, new Ye3(channelHandler));
    }
    return function() {
      var _a5;
      if ((_a5 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a5 === void 0 ? void 0 : _a5.removeGroupChannelHandler) {
        logger.info("Channel | useHandleChannelEvents: Removing message reciver handler", channelHandlerId);
        sdk.groupChannel.removeGroupChannelHandler(channelHandlerId);
      } else if (sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) {
        logger.error("Channel | useHandleChannelEvents: Not found the removeGroupChannelHandler");
      }
    };
  }, [currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.url, sdkInit]);
}
function useGetChannel(_a3, _b2) {
  var channelUrl = _a3.channelUrl, sdkInit = _a3.sdkInit, disableMarkAsRead = _a3.disableMarkAsRead;
  var messagesDispatcher = _b2.messagesDispatcher, sdk = _b2.sdk, logger = _b2.logger, markAsReadScheduler = _b2.markAsReadScheduler;
  (0, import_react139.useEffect)(function() {
    if (channelUrl && sdkInit && sdk && sdk.groupChannel) {
      logger.info("Channel | useSetChannel fetching channel", channelUrl);
      sdk.groupChannel.getChannel(channelUrl).then(function(groupChannel) {
        logger.info("Channel | useSetChannel fetched channel", groupChannel);
        messagesDispatcher({
          type: SET_CURRENT_CHANNEL,
          payload: groupChannel
        });
        logger.info("Channel: Mark as read", groupChannel);
        if (!disableMarkAsRead) {
          markAsReadScheduler.push(groupChannel);
        }
      }).catch(function(e4) {
        logger.warning("Channel | useSetChannel fetch channel failed", { channelUrl, e: e4 });
        messagesDispatcher({
          type: SET_CHANNEL_INVALID
        });
      });
      sdk.getAllEmoji().then(function(emojiContainer_) {
        logger.info("Channel: Getting emojis success", emojiContainer_);
        messagesDispatcher({
          type: SET_EMOJI_CONTAINER,
          payload: emojiContainer_
        });
      }).catch(function(err) {
        logger.error("Channel: Getting emojis failed", err);
      });
    }
  }, [channelUrl, sdkInit]);
}
function useHandleReconnect(_a3, _b2) {
  var isOnline = _a3.isOnline, replyType = _a3.replyType, disableMarkAsRead = _a3.disableMarkAsRead, reconnectOnIdle = _a3.reconnectOnIdle;
  var logger = _b2.logger, sdk = _b2.sdk, scrollRef = _b2.scrollRef, currentGroupChannel = _b2.currentGroupChannel, messagesDispatcher = _b2.messagesDispatcher, markAsReadScheduler = _b2.markAsReadScheduler, userFilledMessageListQuery = _b2.userFilledMessageListQuery;
  var shouldReconnect = useReconnectOnIdle(isOnline, currentGroupChannel, reconnectOnIdle).shouldReconnect;
  (0, import_react139.useEffect)(function() {
    return function() {
      var _a4, _b3, _c;
      if (shouldReconnect) {
        logger.info("Refreshing conversation state");
        var isReactionEnabled = ((_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.appInfo) === null || _a4 === void 0 ? void 0 : _a4.useReaction) || false;
        var messageListParams_1 = {
          prevResultSize: PREV_RESULT_SIZE,
          isInclusive: true,
          includeReactions: isReactionEnabled,
          includeMetaArray: true,
          nextResultSize: NEXT_RESULT_SIZE
        };
        if (replyType && replyType === "QUOTE_REPLY") {
          messageListParams_1.includeThreadInfo = true;
          messageListParams_1.includeParentMessageInfo = true;
          messageListParams_1.replyType = B.ONLY_REPLY_TO_CHANNEL;
        }
        if (userFilledMessageListQuery) {
          Object.keys(userFilledMessageListQuery).forEach(function(key) {
            messageListParams_1[key] = userFilledMessageListQuery[key];
          });
        }
        logger.info("Channel: Fetching messages", { currentGroupChannel, userFilledMessageListQuery });
        messagesDispatcher({
          type: FETCH_INITIAL_MESSAGES_START,
          payload: null
        });
        (_b3 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _b3 === void 0 ? void 0 : _b3.getChannel((_c = currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.url) !== null && _c !== void 0 ? _c : "").then(function(groupChannel) {
          var lastMessageTime = (/* @__PURE__ */ new Date()).getTime();
          groupChannel.getMessagesByTimestamp(lastMessageTime, messageListParams_1).then(function(messages) {
            messagesDispatcher({
              type: FETCH_INITIAL_MESSAGES_SUCCESS,
              payload: {
                currentGroupChannel: groupChannel,
                messages
              }
            });
            setTimeout(function() {
              return scrollIntoLast(0, scrollRef);
            }, SCROLL_BOTTOM_DELAY_FOR_FETCH);
          }).catch(function(error) {
            logger.error("Channel: Fetching messages failed", error);
            messagesDispatcher({
              type: FETCH_INITIAL_MESSAGES_FAILURE,
              payload: { currentGroupChannel: groupChannel }
            });
          });
          if (!disableMarkAsRead) {
            markAsReadScheduler.push(groupChannel);
          }
        });
      }
    };
  }, [shouldReconnect, replyType]);
}
function useScrollCallback(_a3, _b2) {
  var currentGroupChannel = _a3.currentGroupChannel, oldestMessageTimeStamp = _a3.oldestMessageTimeStamp, userFilledMessageListQuery = _a3.userFilledMessageListQuery, replyType = _a3.replyType;
  var hasMorePrev = _b2.hasMorePrev, logger = _b2.logger, messagesDispatcher = _b2.messagesDispatcher, sdk = _b2.sdk;
  return (0, import_react139.useCallback)(function(callback) {
    var _a4, _b3;
    if (!hasMorePrev) {
      return;
    }
    var messageListParams = {
      prevResultSize: PREV_RESULT_SIZE,
      isInclusive: true,
      includeMetaArray: true,
      includeReactions: (_b3 = (_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.appInfo) === null || _a4 === void 0 ? void 0 : _a4.useReaction) !== null && _b3 !== void 0 ? _b3 : false
    };
    if (replyType === "QUOTE_REPLY" || replyType === "THREAD") {
      messageListParams.includeThreadInfo = true;
      messageListParams.includeParentMessageInfo = true;
      messageListParams.replyType = B.ONLY_REPLY_TO_CHANNEL;
    }
    if (userFilledMessageListQuery) {
      Object.keys(userFilledMessageListQuery).forEach(function(key) {
        messageListParams[key] = userFilledMessageListQuery[key];
      });
    }
    logger.info("Channel: Fetching messages", {
      currentGroupChannel,
      userFilledMessageListQuery
    });
    currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.getMessagesByTimestamp(oldestMessageTimeStamp || (/* @__PURE__ */ new Date()).getTime(), messageListParams).then(function(messages) {
      messagesDispatcher({
        type: FETCH_PREV_MESSAGES_SUCCESS,
        payload: { currentGroupChannel, messages }
      });
      if (callback)
        setTimeout(function() {
          return callback();
        });
    }).catch(function() {
      messagesDispatcher({
        type: FETCH_PREV_MESSAGES_FAILURE,
        payload: { currentGroupChannel }
      });
    });
  }, [currentGroupChannel, oldestMessageTimeStamp, replyType]);
}
function useScrollDownCallback(_a3, _b2) {
  var currentGroupChannel = _a3.currentGroupChannel, latestMessageTimeStamp = _a3.latestMessageTimeStamp, userFilledMessageListQuery = _a3.userFilledMessageListQuery, hasMoreNext = _a3.hasMoreNext, replyType = _a3.replyType;
  var logger = _b2.logger, messagesDispatcher = _b2.messagesDispatcher, sdk = _b2.sdk;
  return (0, import_react139.useCallback)(function(cb) {
    var _a4, _b3;
    if (!hasMoreNext) {
      return;
    }
    var isReactionEnabled = (_b3 = (_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.appInfo) === null || _a4 === void 0 ? void 0 : _a4.useReaction) !== null && _b3 !== void 0 ? _b3 : false;
    var messageListParams = {
      nextResultSize: NEXT_RESULT_SIZE,
      isInclusive: true,
      includeReactions: isReactionEnabled,
      includeMetaArray: true
    };
    if (replyType && (replyType === "QUOTE_REPLY" || replyType === "THREAD")) {
      messageListParams.includeThreadInfo = true;
      messageListParams.includeParentMessageInfo = true;
      messageListParams.replyType = B.ONLY_REPLY_TO_CHANNEL;
    }
    if (userFilledMessageListQuery) {
      Object.keys(userFilledMessageListQuery).forEach(function(key) {
        messageListParams[key] = userFilledMessageListQuery[key];
      });
    }
    logger.info("Channel: Fetching later messages", { currentGroupChannel, userFilledMessageListQuery });
    currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.getMessagesByTimestamp(latestMessageTimeStamp || (/* @__PURE__ */ new Date()).getTime(), messageListParams).then(function(messages) {
      messagesDispatcher({
        type: FETCH_NEXT_MESSAGES_SUCCESS,
        payload: { currentGroupChannel, messages }
      });
      setTimeout(function() {
        return cb([messages, null]);
      });
    }).catch(function(error) {
      logger.error("Channel: Fetching later messages failed", error);
      messagesDispatcher({
        type: FETCH_NEXT_MESSAGES_FAILURE,
        payload: { currentGroupChannel }
      });
      setTimeout(function() {
        return cb([null, error]);
      });
    });
  }, [currentGroupChannel, latestMessageTimeStamp, hasMoreNext, replyType]);
}
function useDeleteMessageCallback(_a3, _b2) {
  var currentGroupChannel = _a3.currentGroupChannel, messagesDispatcher = _a3.messagesDispatcher;
  var logger = _b2.logger;
  return (0, import_react139.useCallback)(function(message) {
    logger.info("Channel | useDeleteMessageCallback: Deleting message", message);
    var sendingStatus = isSendableMessage2(message) ? message.sendingStatus : void 0;
    return new Promise(function(resolve, reject) {
      logger.info("Channel | useDeleteMessageCallback: Deleting message requestState:", sendingStatus);
      if ((sendingStatus === W.FAILED || sendingStatus === W.PENDING) && "reqId" in message) {
        logger.info("Channel | useDeleteMessageCallback: Deleted message from local:", message);
        messagesDispatcher({
          type: ON_MESSAGE_DELETED_BY_REQ_ID,
          payload: message.reqId
        });
        resolve();
      } else {
        logger.info("Channel | useDeleteMessageCallback: Deleting message from remote:", sendingStatus);
        currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.deleteMessage(message).then(function() {
          logger.info("Channel | useDeleteMessageCallback: Deleting message success!", message);
          messagesDispatcher({
            type: ON_MESSAGE_DELETED,
            payload: message.messageId
          });
          resolve();
        }).catch(function(err) {
          logger.warning("Channel | useDeleteMessageCallback: Deleting message failed!", err);
          reject(err);
        });
      }
    });
  }, [currentGroupChannel, messagesDispatcher]);
}
function useUpdateMessageCallback(_a3, _b2) {
  var currentGroupChannel = _a3.currentGroupChannel, messagesDispatcher = _a3.messagesDispatcher, onBeforeUpdateUserMessage = _a3.onBeforeUpdateUserMessage, isMentionEnabled = _a3.isMentionEnabled;
  var logger = _b2.logger, pubSub = _b2.pubSub;
  return (0, import_react139.useCallback)(function(props, callback) {
    var messageId = props.messageId, message = props.message, mentionedUsers = props.mentionedUsers, mentionTemplate = props.mentionTemplate;
    var createParamsDefault = function(message2) {
      var params2 = {
        message: message2
      };
      if (isMentionEnabled && mentionedUsers && mentionedUsers.length > 0) {
        params2.mentionedUsers = mentionedUsers;
      }
      if (isMentionEnabled && mentionTemplate) {
        params2.mentionedMessageTemplate = mentionTemplate;
      } else {
        params2.mentionedMessageTemplate = message2;
      }
      return params2;
    };
    var shouldCreateCustomParams = onBeforeUpdateUserMessage && typeof onBeforeUpdateUserMessage === "function";
    if (shouldCreateCustomParams) {
      logger.info("Channel: creating params using onBeforeUpdateUserMessage", onBeforeUpdateUserMessage);
    }
    var params = shouldCreateCustomParams ? onBeforeUpdateUserMessage(message) : createParamsDefault(message);
    logger.info("Channel: Updating message!", params);
    currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.updateUserMessage(messageId, params).then(function(msg) {
      if (callback) {
        callback(null, msg);
      }
      logger.info("Channel: Updating message success!", msg);
      messagesDispatcher({
        type: ON_MESSAGE_UPDATED,
        payload: {
          channel: currentGroupChannel,
          message: msg
        }
      });
      pubSub.publish(pubSubTopics.UPDATE_USER_MESSAGE, {
        message: msg,
        channel: currentGroupChannel,
        publishingModules: [PublishingModuleType.CHANNEL]
      });
    }).catch(function(err) {
      if (callback) {
        callback(err, null);
      }
    });
  }, [currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.url, messagesDispatcher, onBeforeUpdateUserMessage]);
}
function useResendMessageCallback(_a3, _b2) {
  var currentGroupChannel = _a3.currentGroupChannel, messagesDispatcher = _a3.messagesDispatcher;
  var logger = _b2.logger, pubSub = _b2.pubSub;
  return (0, import_react139.useCallback)(function(failedMessage) {
    logger.info("Channel: Resending message has started", failedMessage);
    if (failedMessage === null || failedMessage === void 0 ? void 0 : failedMessage.isResendable) {
      if (failedMessage.isUserMessage()) {
        currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.resendMessage(failedMessage).onPending(function(message) {
          logger.info("Channel: Resending message start!", message);
          messagesDispatcher({
            type: RESEND_MESSAGE_START,
            payload: message
          });
        }).onSucceeded(function(message) {
          logger.info("Channel: Resending message success!", message);
          messagesDispatcher({
            type: SEND_MESSAGE_SUCCESS,
            payload: message
          });
        }).onFailed(function(e4, message) {
          logger.warning("Channel: Resending message failed!", e4);
          messagesDispatcher({
            type: SEND_MESSAGE_FAILURE,
            payload: message
          });
        });
      } else if (failedMessage.isFileMessage()) {
        currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.resendMessage(failedMessage).onPending(function(message) {
          logger.info("Channel: Resending file message start!", message);
          messagesDispatcher({
            type: RESEND_MESSAGE_START,
            payload: message
          });
        }).onSucceeded(function(message) {
          logger.info("Channel: Resending file message success!", message);
          messagesDispatcher({
            type: SEND_MESSAGE_SUCCESS,
            payload: message
          });
        }).onFailed(function(e4, message) {
          logger.warning("Channel: Resending file message failed!", e4);
          messagesDispatcher({
            type: SEND_MESSAGE_FAILURE,
            payload: message
          });
        });
      } else if (failedMessage.isMultipleFilesMessage()) {
        currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.resendMessage(failedMessage).onPending(function(message) {
          logger.info("Channel: Resending multiple files message start!", message);
          messagesDispatcher({
            type: RESEND_MESSAGE_START,
            payload: message
          });
        }).onFileUploaded(function(requestId, index, uploadableFileInfo, error) {
          var _a4;
          logger.info("Channel: Resending multiple files message file uploaded!", {
            requestId,
            index,
            error,
            uploadableFileInfo
          });
          pubSub.publish(pubSubTopics.ON_FILE_INFO_UPLOADED, {
            response: {
              channelUrl: (_a4 = currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.url) !== null && _a4 !== void 0 ? _a4 : "",
              requestId,
              index,
              uploadableFileInfo,
              error
            },
            publishingModules: [PublishingModuleType.CHANNEL]
          });
        }).onSucceeded(function(message) {
          logger.info("Channel: Resending multiple files message success!", message);
          messagesDispatcher({
            type: SEND_MESSAGE_SUCCESS,
            payload: message
          });
        }).onFailed(function(e4, message) {
          logger.warning("Channel: Resending multiple files message failed!", e4);
          messagesDispatcher({
            type: SEND_MESSAGE_FAILURE,
            payload: message
          });
        });
      }
    } else {
      logger.error("Message is not resendable", failedMessage);
    }
  }, [currentGroupChannel, messagesDispatcher]);
}
function useSendMessageCallback(_a3, _b2) {
  var isMentionEnabled = _a3.isMentionEnabled, currentGroupChannel = _a3.currentGroupChannel, onBeforeSendUserMessage = _a3.onBeforeSendUserMessage;
  var logger = _b2.logger, pubSub = _b2.pubSub, scrollRef = _b2.scrollRef, messagesDispatcher = _b2.messagesDispatcher;
  var messageInputRef = (0, import_react139.useRef)(null);
  var sendMessage = (0, import_react139.useCallback)(function(_a4) {
    var quoteMessage = _a4.quoteMessage, message = _a4.message, mentionTemplate = _a4.mentionTemplate, mentionedUsers = _a4.mentionedUsers;
    var createParamsDefault = function() {
      var params2 = {
        message
      };
      if (isMentionEnabled && mentionedUsers && mentionedUsers.length > 0) {
        params2.mentionedUsers = mentionedUsers;
      }
      if (isMentionEnabled && mentionTemplate && mentionedUsers && mentionedUsers.length > 0) {
        params2.mentionedMessageTemplate = mentionTemplate;
      }
      if (quoteMessage) {
        params2.isReplyToChannel = true;
        params2.parentMessageId = quoteMessage.messageId;
      }
      return params2;
    };
    var shouldCreateCustomParams = onBeforeSendUserMessage && typeof onBeforeSendUserMessage === "function";
    if (shouldCreateCustomParams) {
      logger.info("Channel: creating params using onBeforeSendUserMessage", onBeforeSendUserMessage);
    }
    var params = shouldCreateCustomParams ? onBeforeSendUserMessage(message, quoteMessage) : createParamsDefault();
    logger.info("Channel: Sending message has started", params);
    currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.sendUserMessage(params).onPending(function(pendingMsg) {
      pubSub.publish(pubSubTopics.SEND_MESSAGE_START, {
        /* pubSub is used instead of messagesDispatcher
          to avoid redundantly calling `messageActionTypes.SEND_MESSAGE_START` */
        message: pendingMsg,
        channel: currentGroupChannel,
        publishingModules: [PublishingModuleType.CHANNEL]
      });
      setTimeout(function() {
        return scrollIntoLast(0, scrollRef);
      }, SCROLL_BOTTOM_DELAY_FOR_SEND);
    }).onFailed(function(err, msg) {
      logger.warning("Channel: Sending message failed!", { message: msg, error: err });
      messagesDispatcher({
        type: SEND_MESSAGE_FAILURE,
        payload: msg
      });
    }).onSucceeded(function(msg) {
      logger.info("Channel: Sending message success!", msg);
      messagesDispatcher({
        type: SEND_MESSAGE_SUCCESS,
        payload: msg
      });
    });
  }, [currentGroupChannel, onBeforeSendUserMessage]);
  return [messageInputRef, sendMessage];
}
function useSendFileMessageCallback(_a3, _b2) {
  var currentGroupChannel = _a3.currentGroupChannel, onBeforeSendFileMessage = _a3.onBeforeSendFileMessage, imageCompression = _a3.imageCompression;
  var logger = _b2.logger, pubSub = _b2.pubSub, scrollRef = _b2.scrollRef, messagesDispatcher = _b2.messagesDispatcher;
  var sendMessage = (0, import_react139.useCallback)(function(compressedFile, quoteMessage) {
    return new Promise(function(resolve, reject) {
      var params = onBeforeSendFileMessage === null || onBeforeSendFileMessage === void 0 ? void 0 : onBeforeSendFileMessage(compressedFile, quoteMessage);
      if (!params) {
        params = { file: compressedFile };
        if (quoteMessage) {
          params.isReplyToChannel = true;
          params.parentMessageId = quoteMessage.messageId;
        }
      }
      logger.info("Channel: Uploading file message start!", params);
      currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.sendFileMessage(params).onPending(function(pendingMessage) {
        pubSub.publish(pubSubTopics.SEND_MESSAGE_START, {
          /* pubSub is used instead of messagesDispatcher
            to avoid redundantly calling `messageActionTypes.SEND_MESSAGE_START` */
          // TODO: remove data pollution
          message: __assign(__assign({}, pendingMessage), {
            url: URL.createObjectURL(compressedFile),
            // pending thumbnail message seems to be failed
            requestState: "pending",
            isUserMessage: pendingMessage.isUserMessage,
            isFileMessage: pendingMessage.isFileMessage,
            isAdminMessage: pendingMessage.isAdminMessage,
            isMultipleFilesMessage: pendingMessage.isMultipleFilesMessage
          }),
          channel: currentGroupChannel,
          publishingModules: [PublishingModuleType.CHANNEL]
        });
        setTimeout(function() {
          return scrollIntoLast(0, scrollRef);
        }, SCROLL_BOTTOM_DELAY_FOR_SEND);
      }).onFailed(function(err, failedMessage) {
        logger.error("Channel: Sending file message failed!", { failedMessage, err });
        failedMessage.localUrl = URL.createObjectURL(compressedFile);
        failedMessage.file = compressedFile;
        messagesDispatcher({
          type: SEND_MESSAGE_FAILURE,
          payload: failedMessage
        });
        reject(err);
      }).onSucceeded(function(succeededMessage) {
        logger.info("Channel: Sending file message success!", succeededMessage);
        messagesDispatcher({
          type: SEND_MESSAGE_SUCCESS,
          payload: succeededMessage
        });
        resolve(succeededMessage);
      });
    });
  }, [currentGroupChannel, onBeforeSendFileMessage, imageCompression]);
  return [sendMessage];
}
function deactivateClick(scrollRef) {
  var element = scrollRef.current;
  var parentNode = element === null || element === void 0 ? void 0 : element.parentNode;
  if (element && parentNode) {
    element.style.pointerEvents = "none";
    parentNode.style.cursor = "wait";
  }
}
function activateClick(scrollRef) {
  var element = scrollRef.current;
  var parentNode = element === null || element === void 0 ? void 0 : element.parentNode;
  if (element && parentNode) {
    element.style.pointerEvents = "auto";
    parentNode.style.cursor = "auto";
  }
}
function useScrollToMessage(_a3, _b2) {
  var setInitialTimeStamp = _a3.setInitialTimeStamp, setAnimatedMessageId = _a3.setAnimatedMessageId, allMessages = _a3.allMessages, scrollRef = _a3.scrollRef;
  var logger = _b2.logger;
  return (0, import_react139.useCallback)(function(createdAt, messageId) {
    var isPresent = allMessages.find(function(m5) {
      return m5.messageId === messageId;
    });
    setAnimatedMessageId(null);
    setTimeout(function() {
      try {
        logger.info("Channel: scroll to message - disabling mouse events");
        deactivateClick(scrollRef);
        if (isPresent) {
          logger.info("Channel: scroll to message - message is present");
          setAnimatedMessageId(messageId);
          scrollToRenderedMessage(scrollRef, createdAt);
        } else {
          logger.info("Channel: scroll to message - fetching older messages");
          setInitialTimeStamp(null);
          setInitialTimeStamp(createdAt);
          setAnimatedMessageId(messageId);
        }
      } finally {
        logger.info("Channel: scroll to message - enabled mouse events");
        activateClick(scrollRef);
      }
    });
  }, [
    setInitialTimeStamp,
    setAnimatedMessageId,
    allMessages
  ]);
}
var useSendVoiceMessageCallback = function(_a3, _b2) {
  var currentGroupChannel = _a3.currentGroupChannel, onBeforeSendVoiceMessage = _a3.onBeforeSendVoiceMessage;
  var logger = _b2.logger, pubSub = _b2.pubSub, scrollRef = _b2.scrollRef, messagesDispatcher = _b2.messagesDispatcher;
  var sendMessage = (0, import_react139.useCallback)(function(file, duration, quoteMessage) {
    return new Promise(function(resolve, reject) {
      if (!currentGroupChannel) {
        return;
      }
      var messageParams = onBeforeSendVoiceMessage && typeof onBeforeSendVoiceMessage === "function" ? onBeforeSendVoiceMessage(file, quoteMessage) : {
        file,
        fileName: VOICE_MESSAGE_FILE_NAME,
        mimeType: VOICE_MESSAGE_MIME_TYPE,
        metaArrays: [
          new je({
            key: META_ARRAY_VOICE_DURATION_KEY,
            value: ["".concat(duration)]
          }),
          new je({
            key: META_ARRAY_MESSAGE_TYPE_KEY,
            value: [META_ARRAY_MESSAGE_TYPE_VALUE__VOICE]
          })
        ]
      };
      if (quoteMessage) {
        messageParams.isReplyToChannel = true;
        messageParams.parentMessageId = quoteMessage.messageId;
      }
      logger.info("Channel: Start sending voice message", messageParams);
      currentGroupChannel.sendFileMessage(messageParams).onPending(function(pendingMessage) {
        pubSub.publish(pubSubTopics.SEND_MESSAGE_START, {
          /* pubSub is used instead of messagesDispatcher
            to avoid redundantly calling `messageActionTypes.SEND_MESSAGE_START` */
          message: pendingMessage,
          channel: currentGroupChannel,
          publishingModules: [PublishingModuleType.CHANNEL]
        });
        setTimeout(function() {
          return scrollIntoLast(0, scrollRef);
        }, SCROLL_BOTTOM_DELAY_FOR_SEND);
      }).onFailed(function(err, failedMessage) {
        logger.error("Channel: Sending voice message failed!", { failedMessage, err });
        messagesDispatcher({
          type: SEND_MESSAGE_FAILURE,
          payload: failedMessage
        });
        reject(err);
      }).onSucceeded(function(succeededMessage) {
        logger.info("Channel: Sending voice message success!", succeededMessage);
        messagesDispatcher({
          type: SEND_MESSAGE_SUCCESS,
          payload: succeededMessage
        });
        resolve(succeededMessage);
      });
    });
  }, [
    currentGroupChannel,
    onBeforeSendVoiceMessage
  ]);
  return [sendMessage];
};
var useHandleChannelPubsubEvents = function(_a3) {
  var channelUrl = _a3.channelUrl, sdkInit = _a3.sdkInit, pubSub = _a3.pubSub, dispatcher = _a3.dispatcher, scrollRef = _a3.scrollRef;
  (0, import_react139.useEffect)(function() {
    var subscriber = /* @__PURE__ */ new Map();
    if (pubSub === null || pubSub === void 0 ? void 0 : pubSub.subscribe) {
      subscriber.set(PUBSUB_TOPICS.SEND_USER_MESSAGE, pubSub.subscribe(PUBSUB_TOPICS.SEND_USER_MESSAGE, function(props) {
        var channel = props.channel, message = props.message;
        if (channelUrl === (channel === null || channel === void 0 ? void 0 : channel.url)) {
          dispatcher({
            type: SEND_MESSAGE_SUCCESS,
            payload: message
          });
          setTimeout(function() {
            return scrollIntoLast(0, scrollRef);
          }, SCROLL_BOTTOM_DELAY_FOR_SEND);
        }
      }));
      subscriber.set(PUBSUB_TOPICS.SEND_MESSAGE_START, pubSub.subscribe(PUBSUB_TOPICS.SEND_MESSAGE_START, function(props) {
        var channel = props.channel, message = props.message, publishingModules = props.publishingModules;
        if (channelUrl === (channel === null || channel === void 0 ? void 0 : channel.url) && shouldPubSubPublishToChannel(publishingModules)) {
          dispatcher({
            type: SEND_MESSAGE_START,
            payload: message
          });
        }
      }));
      subscriber.set(PUBSUB_TOPICS.ON_FILE_INFO_UPLOADED, pubSub.subscribe(PUBSUB_TOPICS.ON_FILE_INFO_UPLOADED, function(props) {
        var response = props.response, publishingModules = props.publishingModules;
        if (channelUrl === response.channelUrl && shouldPubSubPublishToChannel(publishingModules)) {
          dispatcher({
            type: ON_FILE_INFO_UPLOADED,
            payload: response
          });
        }
      }));
      subscriber.set(PUBSUB_TOPICS.SEND_MESSAGE_FAILED, pubSub.subscribe(PUBSUB_TOPICS.SEND_MESSAGE_FAILED, function(props) {
        var channel = props.channel, message = props.message, publishingModules = props.publishingModules;
        if (channelUrl === (channel === null || channel === void 0 ? void 0 : channel.url) && shouldPubSubPublishToChannel(publishingModules)) {
          dispatcher({
            type: SEND_MESSAGE_FAILURE,
            payload: message
          });
        }
      }));
      subscriber.set(PUBSUB_TOPICS.SEND_FILE_MESSAGE, pubSub.subscribe(PUBSUB_TOPICS.SEND_FILE_MESSAGE, function(props) {
        var channel = props.channel, message = props.message;
        if (channelUrl === (channel === null || channel === void 0 ? void 0 : channel.url)) {
          dispatcher({
            type: SEND_MESSAGE_SUCCESS,
            payload: message
          });
          setTimeout(function() {
            return scrollIntoLast(0, scrollRef);
          }, SCROLL_BOTTOM_DELAY_FOR_SEND);
        }
      }));
      subscriber.set(PUBSUB_TOPICS.UPDATE_USER_MESSAGE, pubSub.subscribe(PUBSUB_TOPICS.UPDATE_USER_MESSAGE, function(props) {
        var channel = props.channel, message = props.message, fromSelector = props.fromSelector;
        if (fromSelector && channelUrl === (channel === null || channel === void 0 ? void 0 : channel.url) && channel.isGroupChannel()) {
          dispatcher({
            type: ON_MESSAGE_UPDATED,
            payload: { channel, message }
          });
        }
      }));
      subscriber.set(PUBSUB_TOPICS.DELETE_MESSAGE, pubSub.subscribe(PUBSUB_TOPICS.DELETE_MESSAGE, function(props) {
        var channel = props.channel, messageId = props.messageId;
        if (channelUrl === (channel === null || channel === void 0 ? void 0 : channel.url)) {
          dispatcher({
            type: ON_MESSAGE_DELETED,
            payload: messageId
          });
        }
      }));
    }
    return function() {
      subscriber.forEach(function(s6) {
        try {
          s6.remove();
        } catch (_a4) {
        }
      });
    };
  }, [
    channelUrl,
    sdkInit
  ]);
};
var ChannelContext = import_react139.default.createContext(null);
var ChannelProvider = function(props) {
  var _a3, _b2, _c, _d, _e3, _f;
  var channelUrl = props.channelUrl, children = props.children, isReactionEnabled = props.isReactionEnabled, _g2 = props.isMessageGroupingEnabled, isMessageGroupingEnabled = _g2 === void 0 ? true : _g2, isMultipleFilesMessageEnabled = props.isMultipleFilesMessageEnabled, showSearchIcon = props.showSearchIcon, animatedMessage = props.animatedMessage, highlightedMessage = props.highlightedMessage, startingPoint = props.startingPoint, onBeforeSendUserMessage = props.onBeforeSendUserMessage, onBeforeSendFileMessage = props.onBeforeSendFileMessage, onBeforeUpdateUserMessage = props.onBeforeUpdateUserMessage, onBeforeSendVoiceMessage = props.onBeforeSendVoiceMessage, onBeforeSendMultipleFilesMessage = props.onBeforeSendMultipleFilesMessage, onChatHeaderActionClick = props.onChatHeaderActionClick, onSearchClick = props.onSearchClick, onBackClick = props.onBackClick, threadReplySelectType = props.threadReplySelectType, queries = props.queries, filterMessageList = props.filterMessageList, _h = props.disableMarkAsRead, disableMarkAsRead = _h === void 0 ? false : _h, onReplyInThread = props.onReplyInThread, onQuoteMessageClick = props.onQuoteMessageClick, onMessageAnimated = props.onMessageAnimated, onMessageHighlighted = props.onMessageHighlighted, _j = props.scrollBehavior, scrollBehavior = _j === void 0 ? "auto" : _j, _k = props.reconnectOnIdle, reconnectOnIdle = _k === void 0 ? true : _k;
  var globalStore = useSendbirdStateContext();
  var config = globalStore.config;
  var replyType = (_a3 = props.replyType) !== null && _a3 !== void 0 ? _a3 : getCaseResolvedReplyType(config.groupChannel.replyType).upperCase;
  var pubSub = config.pubSub, logger = config.logger, userId = config.userId, isOnline = config.isOnline, imageCompression = config.imageCompression, markAsReadScheduler = config.markAsReadScheduler, groupChannel = config.groupChannel, htmlTextDirection = config.htmlTextDirection, forceLeftToRightMessageLayout = config.forceLeftToRightMessageLayout;
  var sdk = (_c = (_b2 = globalStore === null || globalStore === void 0 ? void 0 : globalStore.stores) === null || _b2 === void 0 ? void 0 : _b2.sdkStore) === null || _c === void 0 ? void 0 : _c.sdk;
  var sdkInit = (_e3 = (_d = globalStore === null || globalStore === void 0 ? void 0 : globalStore.stores) === null || _d === void 0 ? void 0 : _d.sdkStore) === null || _e3 === void 0 ? void 0 : _e3.initialized;
  var globalConfigs = globalStore === null || globalStore === void 0 ? void 0 : globalStore.config;
  var _l = (0, import_react139.useState)(startingPoint), initialTimeStamp = _l[0], setInitialTimeStamp = _l[1];
  (0, import_react139.useEffect)(function() {
    setInitialTimeStamp(startingPoint);
  }, [startingPoint, channelUrl]);
  var _m = (0, import_react139.useState)(null), animatedMessageId = _m[0], setAnimatedMessageId = _m[1];
  var _o2 = (0, import_react139.useState)(highlightedMessage), highLightedMessageId = _o2[0], setHighLightedMessageId = _o2[1];
  (0, import_react139.useEffect)(function() {
    setHighLightedMessageId(highlightedMessage);
  }, [highlightedMessage]);
  var userFilledMessageListQuery = queries === null || queries === void 0 ? void 0 : queries.messageListParams;
  var _p = (0, import_react139.useState)(null), quoteMessage = _p[0], setQuoteMessage = _p[1];
  var _q = (0, import_react139.useState)(false), isScrolled = _q[0], setIsScrolled = _q[1];
  var _r2 = (0, import_react139.useReducer)(channelReducer, initialState2), messagesStore = _r2[0], messagesDispatcher = _r2[1];
  var scrollRef = (0, import_react139.useRef)(null);
  var isMentionEnabled = groupChannel.enableMention;
  var allMessages = messagesStore.allMessages, localMessages = messagesStore.localMessages, loading = messagesStore.loading, initialized = messagesStore.initialized, unreadSince = messagesStore.unreadSince, unreadSinceDate = messagesStore.unreadSinceDate, isInvalid = messagesStore.isInvalid, currentGroupChannel = messagesStore.currentGroupChannel, hasMorePrev = messagesStore.hasMorePrev, oldestMessageTimeStamp = messagesStore.oldestMessageTimeStamp, hasMoreNext = messagesStore.hasMoreNext, latestMessageTimeStamp = messagesStore.latestMessageTimeStamp, emojiContainer = messagesStore.emojiContainer, readStatus = messagesStore.readStatus, typingMembers = messagesStore.typingMembers;
  var usingReaction = getIsReactionEnabled({
    channel: currentGroupChannel,
    config,
    moduleLevel: isReactionEnabled
  });
  var emojiAllMap = (0, import_react139.useMemo)(function() {
    return usingReaction ? getAllEmojisMapFromEmojiContainer(emojiContainer) : /* @__PURE__ */ new Map();
  }, [emojiContainer]);
  var nicknamesMap = (0, import_react139.useMemo)(function() {
    return usingReaction && currentGroupChannel ? getNicknamesMapFromMembers(currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.members) : /* @__PURE__ */ new Map();
  }, [currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.members]);
  (0, import_react139.useEffect)(function() {
    if (animatedMessage) {
      setAnimatedMessageId(animatedMessage);
    }
  }, [animatedMessage]);
  var onScrollCallback = useScrollCallback({
    currentGroupChannel,
    oldestMessageTimeStamp,
    userFilledMessageListQuery,
    replyType
  }, {
    hasMorePrev,
    logger,
    messagesDispatcher,
    sdk
  });
  var scrollToMessage = useScrollToMessage({
    setInitialTimeStamp,
    setAnimatedMessageId,
    allMessages,
    scrollRef
  }, { logger });
  var onScrollDownCallback = useScrollDownCallback({
    currentGroupChannel,
    latestMessageTimeStamp,
    userFilledMessageListQuery,
    hasMoreNext,
    replyType
  }, {
    logger,
    messagesDispatcher,
    sdk
  });
  var toggleReaction = useToggleReactionCallback(currentGroupChannel, logger);
  useGetChannel({ channelUrl, sdkInit, disableMarkAsRead }, { messagesDispatcher, sdk, logger, markAsReadScheduler });
  (0, import_react139.useEffect)(function() {
    setQuoteMessage(null);
  }, [channelUrl]);
  useHandleChannelEvents({
    currentGroupChannel,
    sdkInit,
    currentUserId: userId,
    disableMarkAsRead
  }, {
    messagesDispatcher,
    sdk,
    logger,
    scrollRef,
    setQuoteMessage
  });
  useInitialMessagesFetch({
    currentGroupChannel,
    userFilledMessageListQuery,
    initialTimeStamp,
    replyType,
    setIsScrolled
  }, {
    logger,
    scrollRef,
    messagesDispatcher
  });
  useHandleChannelPubsubEvents({
    channelUrl,
    sdkInit,
    pubSub,
    dispatcher: messagesDispatcher,
    scrollRef
  });
  useHandleReconnect({ isOnline, replyType, disableMarkAsRead, reconnectOnIdle }, {
    logger,
    sdk,
    scrollRef,
    currentGroupChannel,
    messagesDispatcher,
    userFilledMessageListQuery,
    markAsReadScheduler
  });
  useMessageLayoutDirection(htmlTextDirection, forceLeftToRightMessageLayout, loading);
  var deleteMessage = useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher }, { logger });
  var updateMessage = useUpdateMessageCallback({ currentGroupChannel, messagesDispatcher, onBeforeUpdateUserMessage, isMentionEnabled }, { logger, pubSub });
  var resendMessage = useResendMessageCallback({ currentGroupChannel, messagesDispatcher }, { logger, pubSub });
  var _s4 = useSendMessageCallback({
    currentGroupChannel,
    isMentionEnabled,
    onBeforeSendUserMessage
  }, {
    logger,
    pubSub,
    scrollRef,
    messagesDispatcher
  }), messageInputRef = _s4[0], sendMessage = _s4[1];
  var sendFileMessage = useSendFileMessageCallback({
    currentGroupChannel,
    imageCompression,
    onBeforeSendFileMessage
  }, {
    logger,
    pubSub,
    scrollRef,
    messagesDispatcher
  })[0];
  var sendVoiceMessage = useSendVoiceMessageCallback({
    currentGroupChannel,
    onBeforeSendVoiceMessage
  }, {
    logger,
    pubSub,
    scrollRef,
    messagesDispatcher
  })[0];
  var sendMultipleFilesMessage = useSendMultipleFilesMessage({
    currentChannel: currentGroupChannel,
    onBeforeSendMultipleFilesMessage,
    publishingModules: [PublishingModuleType.CHANNEL]
  }, {
    logger,
    pubSub,
    scrollRef
  })[0];
  return import_react139.default.createElement(
    ChannelContext.Provider,
    { value: {
      // props
      channelUrl,
      isReactionEnabled: usingReaction,
      isMessageGroupingEnabled,
      isMultipleFilesMessageEnabled,
      showSearchIcon: showSearchIcon !== null && showSearchIcon !== void 0 ? showSearchIcon : globalConfigs.groupChannelSettings.enableMessageSearch,
      highlightedMessage,
      startingPoint,
      onBeforeSendUserMessage,
      onBeforeSendFileMessage,
      onBeforeUpdateUserMessage,
      onChatHeaderActionClick,
      onSearchClick,
      onBackClick,
      replyType,
      threadReplySelectType: (_f = threadReplySelectType !== null && threadReplySelectType !== void 0 ? threadReplySelectType : getCaseResolvedThreadReplySelectType(groupChannel.threadReplySelectType).upperCase) !== null && _f !== void 0 ? _f : ThreadReplySelectType.THREAD,
      queries,
      filterMessageList,
      disableMarkAsRead,
      onReplyInThread,
      onQuoteMessageClick,
      onMessageAnimated,
      onMessageHighlighted,
      // messagesStore
      allMessages,
      localMessages,
      loading,
      initialized,
      unreadSince,
      unreadSinceDate,
      isInvalid,
      currentGroupChannel,
      hasMorePrev,
      hasMoreNext,
      oldestMessageTimeStamp,
      latestMessageTimeStamp,
      emojiContainer,
      readStatus,
      typingMembers,
      // utils
      scrollToMessage,
      quoteMessage,
      setQuoteMessage,
      deleteMessage,
      updateMessage,
      resendMessage,
      messageInputRef,
      sendMessage,
      sendFileMessage,
      sendVoiceMessage,
      sendMultipleFilesMessage,
      initialTimeStamp,
      messageActionTypes: channelActions,
      messagesDispatcher,
      setInitialTimeStamp,
      setAnimatedMessageId,
      setHighLightedMessageId,
      animatedMessageId,
      highLightedMessageId,
      nicknamesMap,
      emojiAllMap,
      onScrollCallback,
      onScrollDownCallback,
      scrollRef,
      scrollBehavior,
      toggleReaction,
      isScrolled,
      setIsScrolled
    } },
    import_react139.default.createElement(UserProfileProvider, __assign({}, props), children)
  );
};
var useChannelContext = function() {
  var context = import_react139.default.useContext(ChannelContext);
  if (!context)
    throw new Error("ChannelContext not found. Use within the Channel module.");
  return context;
};

// node_modules/@sendbird/uikit-react/Channel/components/ChannelUI.js
var import_react146 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/Channel/components/ChannelHeader.js
var import_react140 = __toESM(require_react(), 1);
var import_react_dom45 = __toESM(require_react_dom(), 1);
var ChannelHeader = function(_a3) {
  var className = _a3.className;
  var context = useChannelContext();
  return import_react140.default.createElement(GroupChannelHeaderView, __assign({}, context, { className, currentChannel: context.currentGroupChannel }));
};

// node_modules/@sendbird/uikit-react/Channel/components/MessageList.js
var import_react144 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/Channel/components/Message.js
var import_react143 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/Channel/components/FileViewer.js
var import_react141 = __toESM(require_react(), 1);
var import_react_dom46 = __toESM(require_react_dom(), 1);
var FileViewer3 = function(props) {
  var deleteMessage = useChannelContext().deleteMessage;
  return import_react141.default.createElement(FileViewerView, __assign({}, props, { deleteMessage }));
};

// node_modules/@sendbird/uikit-react/Channel/components/RemoveMessageModal.js
var import_react142 = __toESM(require_react(), 1);
var import_react_dom47 = __toESM(require_react_dom(), 1);
var RemoveMessageModal2 = function(props) {
  var deleteMessage = useChannelContext().deleteMessage;
  return import_react142.default.createElement(RemoveMessageModalView, __assign({}, props, { deleteMessage }));
};

// node_modules/@sendbird/uikit-react/Channel/components/Message.js
var import_react_dom48 = __toESM(require_react_dom(), 1);
var Message2 = function(props) {
  var _a3, _b2, _c;
  var config = useSendbirdStateContext().config;
  var _d = useChannelContext(), initialized = _d.initialized, currentGroupChannel = _d.currentGroupChannel, animatedMessageId = _d.animatedMessageId, setAnimatedMessageId = _d.setAnimatedMessageId, updateMessage = _d.updateMessage, scrollToMessage = _d.scrollToMessage, replyType = _d.replyType, threadReplySelectType = _d.threadReplySelectType, isReactionEnabled = _d.isReactionEnabled, toggleReaction = _d.toggleReaction, emojiContainer = _d.emojiContainer, nicknamesMap = _d.nicknamesMap, setQuoteMessage = _d.setQuoteMessage, resendMessage = _d.resendMessage, deleteMessage = _d.deleteMessage, renderUserMentionItem = _d.renderUserMentionItem, onReplyInThread = _d.onReplyInThread, onQuoteMessageClick = _d.onQuoteMessageClick, onMessageAnimated = _d.onMessageAnimated, sendMessage = _d.sendMessage, localMessages = _d.localMessages;
  var message = props.message;
  if (!currentGroupChannel)
    return null;
  return import_react143.default.createElement(MessageView, __assign({}, props, { channel: currentGroupChannel, emojiContainer, editInputDisabled: !initialized || isDisabledBecauseFrozen2(currentGroupChannel) || isDisabledBecauseMuted2(currentGroupChannel) || !config.isOnline, shouldRenderSuggestedReplies: ((_a3 = config === null || config === void 0 ? void 0 : config.groupChannel) === null || _a3 === void 0 ? void 0 : _a3.enableSuggestedReplies) && (((_b2 = config === null || config === void 0 ? void 0 : config.groupChannel) === null || _b2 === void 0 ? void 0 : _b2.showSuggestedRepliesFor) === "all_messages" ? true : message.messageId === ((_c = currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.lastMessage) === null || _c === void 0 ? void 0 : _c.messageId)) && (localMessages === null || localMessages === void 0 ? void 0 : localMessages.length) === 0 && getSuggestedReplies(message).length > 0, isReactionEnabled, replyType, threadReplySelectType, nicknamesMap, renderUserMentionItem, scrollToMessage, toggleReaction, setQuoteMessage, onQuoteMessageClick, onReplyInThreadClick: onReplyInThread, sendUserMessage: function(params) {
    sendMessage({
      message: params.message,
      mentionedUsers: params.mentionedUsers,
      mentionTemplate: params.mentionedMessageTemplate
    });
  }, updateUserMessage: function(messageId, params) {
    var _a4;
    updateMessage({
      messageId,
      message: (_a4 = params.message) !== null && _a4 !== void 0 ? _a4 : "",
      mentionedUsers: params.mentionedUsers,
      mentionTemplate: params.mentionedMessageTemplate
    });
  }, resendMessage, deleteMessage, animatedMessageId, setAnimatedMessageId, onMessageAnimated, renderFileViewer: function(props2) {
    return import_react143.default.createElement(FileViewer3, __assign({}, props2));
  }, renderRemoveMessageModal: function(props2) {
    return import_react143.default.createElement(RemoveMessageModal2, __assign({}, props2));
  } }));
};

// node_modules/@sendbird/uikit-react/chunks/bundle-Bj90BL0E.js
var DELAY = 100;
function calcScrollBottom(scrollHeight, scrollTop) {
  return scrollHeight - scrollTop;
}
function useHandleOnScrollCallback(_a3) {
  var hasMore = _a3.hasMore, hasNext = _a3.hasNext, onScroll = _a3.onScroll, scrollRef = _a3.scrollRef, setShowScrollDownButton = _a3.setShowScrollDownButton;
  var scrollCb = usePreservedCallback(function() {
    var element = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
    if (element == null)
      return;
    var scrollTop = element.scrollTop, scrollHeight = element.scrollHeight, clientHeight = element.clientHeight;
    var scrollBottom = calcScrollBottom(scrollHeight, scrollTop);
    if (typeof setShowScrollDownButton === "function") {
      setShowScrollDownButton(scrollHeight > scrollTop + clientHeight + 1);
    }
    if (hasMore && isAboutSame(scrollTop, 0, SCROLL_BUFFER)) {
      onScroll(function() {
        var messagesAreAddedToView = element.scrollHeight > scrollHeight;
        if (messagesAreAddedToView)
          element.scrollTop = element.scrollHeight - scrollBottom;
      });
    }
    if (hasNext && isAboutSame(clientHeight + scrollTop, scrollHeight, SCROLL_BUFFER)) {
      onScroll(function() {
        var messagesAreAddedToView = element.scrollHeight > scrollHeight;
        if (messagesAreAddedToView)
          element.scrollTop = scrollTop;
      });
    }
  });
  return useThrottleCallback(scrollCb, DELAY, { trailing: true });
}

// node_modules/@sendbird/uikit-react/Channel/components/MessageList.js
var import_react_dom49 = __toESM(require_react_dom(), 1);
var DELAY2 = 100;
function useSetScrollToBottom(_a3) {
  var loading = _a3.loading;
  var _b2 = (0, import_react144.useState)(0), scrollBottom = _b2[0], setScrollBottom = _b2[1];
  (0, import_react144.useEffect)(function() {
    if (loading) {
      setScrollBottom(0);
    }
  }, [loading]);
  var scrollCb = function(e4) {
    var element = e4.target;
    try {
      setScrollBottom(element.scrollHeight - element.scrollTop - element.offsetHeight);
    } catch (_a4) {
    }
  };
  return {
    scrollBottom,
    scrollToBottomHandler: useThrottleCallback(scrollCb, DELAY2, { trailing: true })
  };
}
function useScrollBehavior() {
  var _a3 = useChannelContext(), scrollRef = _a3.scrollRef, _b2 = _a3.scrollBehavior, scrollBehavior = _b2 === void 0 ? "auto" : _b2;
  (0, import_react144.useEffect)(function() {
    if (scrollRef.current) {
      scrollRef.current.style.scrollBehavior = scrollBehavior;
    }
  }, [scrollRef.current]);
  return null;
}
var SCROLL_BOTTOM_PADDING = 50;
var MessageList2 = function(props) {
  var _a3, _b2, _c, _d, _e3;
  var _f = props.className, className = _f === void 0 ? "" : _f;
  var _g2 = deleteNullish(props), renderMessage = _g2.renderMessage, renderMessageContent = _g2.renderMessageContent, renderSuggestedReplies = _g2.renderSuggestedReplies, renderCustomSeparator = _g2.renderCustomSeparator, _h = _g2.renderPlaceholderLoader, renderPlaceholderLoader = _h === void 0 ? function() {
    return import_react144.default.createElement(PlaceHolder, { type: PlaceHolderTypes.LOADING });
  } : _h, _j = _g2.renderPlaceholderEmpty, renderPlaceholderEmpty = _j === void 0 ? function() {
    return import_react144.default.createElement(PlaceHolder, { className: "sendbird-conversation__no-messages", type: PlaceHolderTypes.NO_MESSAGES });
  } : _j, _k = _g2.renderFrozenNotification, renderFrozenNotification = _k === void 0 ? function() {
    return import_react144.default.createElement(FrozenNotification, { className: "sendbird-conversation__messages__notification" });
  } : _k;
  var _l = useChannelContext(), allMessages = _l.allMessages, localMessages = _l.localMessages, hasMorePrev = _l.hasMorePrev, hasMoreNext = _l.hasMoreNext, setInitialTimeStamp = _l.setInitialTimeStamp, setAnimatedMessageId = _l.setAnimatedMessageId, setHighLightedMessageId = _l.setHighLightedMessageId, isMessageGroupingEnabled = _l.isMessageGroupingEnabled, scrollRef = _l.scrollRef, onScrollCallback = _l.onScrollCallback, onScrollDownCallback = _l.onScrollDownCallback, messagesDispatcher = _l.messagesDispatcher, messageActionTypes = _l.messageActionTypes, currentGroupChannel = _l.currentGroupChannel, disableMarkAsRead = _l.disableMarkAsRead, filterMessageList = _l.filterMessageList, replyType = _l.replyType, loading = _l.loading, isScrolled = _l.isScrolled, unreadSince = _l.unreadSince, unreadSinceDate = _l.unreadSinceDate, typingMembers = _l.typingMembers;
  var store = useSendbirdStateContext();
  var allMessagesFiltered = typeof filterMessageList === "function" ? allMessages.filter(filterMessageList) : allMessages;
  var markAsReadScheduler = store.config.markAsReadScheduler;
  var _m = (0, import_react144.useState)(false), isScrollBottom = _m[0], setIsScrollBottom = _m[1];
  useScrollBehavior();
  var onScroll = function(callback) {
    var element = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
    if (element == null) {
      return;
    }
    var scrollTop = element.scrollTop, clientHeight = element.clientHeight, scrollHeight = element.scrollHeight;
    if (hasMorePrev && isAboutSame(scrollTop, 0, SCROLL_BUFFER)) {
      onScrollCallback(callback);
    }
    if (hasMoreNext && isAboutSame(clientHeight + scrollTop, scrollHeight, SCROLL_BUFFER)) {
      onScrollDownCallback(callback);
    }
    if (!disableMarkAsRead && isAboutSame(clientHeight + scrollTop, scrollHeight, SCROLL_BUFFER) && !!currentGroupChannel) {
      messagesDispatcher({
        type: messageActionTypes.MARK_AS_READ,
        payload: { channel: currentGroupChannel }
      });
      markAsReadScheduler.push(currentGroupChannel);
    }
  };
  var onClickScrollBot = function() {
    var _a4, _b3;
    setInitialTimeStamp === null || setInitialTimeStamp === void 0 ? void 0 : setInitialTimeStamp(null);
    setAnimatedMessageId === null || setAnimatedMessageId === void 0 ? void 0 : setAnimatedMessageId(null);
    setHighLightedMessageId === null || setHighLightedMessageId === void 0 ? void 0 : setHighLightedMessageId(null);
    if (scrollRef.current && scrollRef.current.scrollTop > -1) {
      scrollRef.current.scrollTop = ((_a4 = scrollRef.current.scrollHeight) !== null && _a4 !== void 0 ? _a4 : 0) - ((_b3 = scrollRef.current.offsetHeight) !== null && _b3 !== void 0 ? _b3 : 0);
    }
  };
  var moveScroll = function(isBottomMessageAffected) {
    if (isBottomMessageAffected === void 0) {
      isBottomMessageAffected = false;
    }
    var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
    if (current) {
      var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;
      if (scrollBottom < bottom && (!isBottomMessageAffected || scrollBottom < SCROLL_BUFFER)) {
        current.scrollTop += bottom - scrollBottom;
      }
    }
  };
  var handleOnScroll = useHandleOnScrollCallback({
    hasMore: hasMorePrev,
    hasNext: hasMoreNext,
    onScroll,
    scrollRef
  });
  var onScrollReachedEndDetector = useOnScrollPositionChangeDetector({
    onReachedBottom: function() {
      if (!hasMoreNext && !disableMarkAsRead && !!currentGroupChannel) {
        messagesDispatcher({
          type: messageActionTypes.MARK_AS_READ,
          payload: { channel: currentGroupChannel }
        });
        markAsReadScheduler.push(currentGroupChannel);
      }
      setIsScrollBottom(true);
    },
    onReachedTop: function() {
      setIsScrollBottom(false);
    },
    onInBetween: function() {
      setIsScrollBottom(false);
    }
  });
  var _o2 = useSetScrollToBottom({ loading }), scrollToBottomHandler = _o2.scrollToBottomHandler, scrollBottom = _o2.scrollBottom;
  if (loading) {
    return renderPlaceholderLoader();
  }
  if (allMessagesFiltered.length < 1) {
    return renderPlaceholderEmpty();
  }
  return import_react144.default.createElement(
    import_react144.default.Fragment,
    null,
    !isScrolled && import_react144.default.createElement(PlaceHolder, { type: PlaceHolderTypes.LOADING }),
    import_react144.default.createElement(
      "div",
      { className: "sendbird-conversation__messages ".concat(className) },
      import_react144.default.createElement(
        "div",
        { className: "sendbird-conversation__scroll-container" },
        import_react144.default.createElement("div", { className: "sendbird-conversation__padding" }),
        import_react144.default.createElement(
          "div",
          { className: "sendbird-conversation__messages-padding", "data-testid": "sendbird-message-list-container", ref: scrollRef, onScroll: function(e4) {
            handleOnScroll();
            scrollToBottomHandler(e4);
            onScrollReachedEndDetector(e4);
          } },
          allMessagesFiltered.map(function(m5, idx) {
            var _a4, _b3;
            var _c2 = getMessagePartsInfo({
              allMessages: allMessagesFiltered,
              replyType,
              isMessageGroupingEnabled,
              currentIndex: idx,
              currentMessage: m5,
              currentChannel: currentGroupChannel
            }), chainTop = _c2.chainTop, chainBottom = _c2.chainBottom, hasSeparator = _c2.hasSeparator;
            var isByMe = ((_a4 = m5 === null || m5 === void 0 ? void 0 : m5.sender) === null || _a4 === void 0 ? void 0 : _a4.userId) === ((_b3 = store === null || store === void 0 ? void 0 : store.config) === null || _b3 === void 0 ? void 0 : _b3.userId);
            return import_react144.default.createElement(
              MessageProvider,
              { message: m5, key: m5 === null || m5 === void 0 ? void 0 : m5.messageId, isByMe },
              import_react144.default.createElement(Message2, {
                handleScroll: moveScroll,
                message: m5,
                hasSeparator,
                chainTop,
                chainBottom,
                renderMessageContent,
                renderSuggestedReplies,
                renderCustomSeparator,
                // backward compatibility
                renderMessage
              })
            );
          }),
          localMessages.map(function(m5, idx) {
            var _a4, _b3;
            var _c2 = getMessagePartsInfo({
              allMessages: allMessagesFiltered,
              replyType,
              isMessageGroupingEnabled,
              currentIndex: idx,
              currentMessage: m5,
              currentChannel: currentGroupChannel
            }), chainTop = _c2.chainTop, chainBottom = _c2.chainBottom;
            var isByMe = ((_a4 = m5 === null || m5 === void 0 ? void 0 : m5.sender) === null || _a4 === void 0 ? void 0 : _a4.userId) === ((_b3 = store === null || store === void 0 ? void 0 : store.config) === null || _b3 === void 0 ? void 0 : _b3.userId);
            return import_react144.default.createElement(
              MessageProvider,
              { message: m5, key: m5 === null || m5 === void 0 ? void 0 : m5.messageId, isByMe },
              import_react144.default.createElement(Message2, {
                handleScroll: moveScroll,
                message: m5,
                chainTop,
                chainBottom,
                renderMessageContent,
                renderSuggestedReplies,
                renderCustomSeparator,
                // backward compatibility
                renderMessage
              })
            );
          }),
          !hasMoreNext && ((_b2 = (_a3 = store === null || store === void 0 ? void 0 : store.config) === null || _a3 === void 0 ? void 0 : _a3.groupChannel) === null || _b2 === void 0 ? void 0 : _b2.enableTypingIndicator) && ((_e3 = (_d = (_c = store === null || store === void 0 ? void 0 : store.config) === null || _c === void 0 ? void 0 : _c.groupChannel) === null || _d === void 0 ? void 0 : _d.typingIndicatorTypes) === null || _e3 === void 0 ? void 0 : _e3.has(TypingIndicatorType.Bubble)) && import_react144.default.createElement(TypingIndicatorBubble, { typingMembers, handleScroll: moveScroll })
        )
      ),
      (currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.isFrozen) && renderFrozenNotification(),
      /**
       * Show unread count IFF scroll is not bottom or is bottom but hasNext is true.
       */
      (!isScrollBottom || hasMoreNext) && (unreadSince || unreadSinceDate) && import_react144.default.createElement(UnreadCount, { className: "sendbird-conversation__messages__notification", count: currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.unreadMessageCount, time: unreadSince, lastReadAt: unreadSinceDate, onClick: function() {
        if (scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current)
          scrollRef.current.scrollTop = scrollRef.current.scrollHeight;
        if (!disableMarkAsRead && !!currentGroupChannel) {
          markAsReadScheduler.push(currentGroupChannel);
          messagesDispatcher({
            type: messageActionTypes.MARK_AS_READ,
            payload: { channel: currentGroupChannel }
          });
        }
        setInitialTimeStamp(null);
        setAnimatedMessageId(null);
        setHighLightedMessageId(null);
      } }),
      // This flag is an unmatched variable
      scrollBottom > SCROLL_BOTTOM_PADDING && import_react144.default.createElement(
        "div",
        { className: "sendbird-conversation__scroll-bottom-button", onClick: onClickScrollBot, onKeyDown: onClickScrollBot, tabIndex: 0, role: "button" },
        import_react144.default.createElement(Icon, { width: "24px", height: "24px", type: IconTypes.CHEVRON_DOWN, fillColor: IconColors.PRIMARY })
      )
    )
  );
};

// node_modules/@sendbird/uikit-react/Channel/components/MessageInput.js
var import_react145 = __toESM(require_react(), 1);
var import_react_dom50 = __toESM(require_react_dom(), 1);
var MessageInputWrapper2 = function(props) {
  var context = useChannelContext();
  var quoteMessage = context.quoteMessage, currentGroupChannel = context.currentGroupChannel, sendMessage = context.sendMessage, sendFileMessage = context.sendFileMessage, sendVoiceMessage = context.sendVoiceMessage, sendMultipleFilesMessage = context.sendMultipleFilesMessage;
  return import_react145.default.createElement(MessageInputWrapperView, __assign({}, props, context, { currentChannel: currentGroupChannel, messages: context.allMessages, sendUserMessage: function(params) {
    return sendMessage({
      message: params.message,
      mentionTemplate: params.mentionedMessageTemplate,
      mentionedUsers: params.mentionedUsers,
      quoteMessage: quoteMessage !== null && quoteMessage !== void 0 ? quoteMessage : void 0
    });
  }, sendFileMessage: function(params) {
    return sendFileMessage(params.file, quoteMessage !== null && quoteMessage !== void 0 ? quoteMessage : void 0);
  }, sendVoiceMessage: function(_a3, duration) {
    var file = _a3.file;
    return sendVoiceMessage(file, duration, quoteMessage !== null && quoteMessage !== void 0 ? quoteMessage : void 0);
  }, sendMultipleFilesMessage: function(_a3) {
    var fileInfoList = _a3.fileInfoList;
    return sendMultipleFilesMessage(fileInfoList.map(function(fileInfo) {
      return fileInfo.file;
    }), quoteMessage !== null && quoteMessage !== void 0 ? quoteMessage : void 0);
  } }));
};

// node_modules/@sendbird/uikit-react/Channel/components/ChannelUI.js
var import_react_dom51 = __toESM(require_react_dom(), 1);
var ChannelUI = function(props) {
  var context = useChannelContext();
  var channelUrl = context.channelUrl, isInvalid = context.isInvalid;
  var _a3 = deleteNullish(props), _b2 = _a3.renderChannelHeader, renderChannelHeader = _b2 === void 0 ? function(p4) {
    return import_react146.default.createElement(ChannelHeader, __assign({}, p4));
  } : _b2, _c = _a3.renderMessageList, renderMessageList = _c === void 0 ? function(p4) {
    return import_react146.default.createElement(MessageList2, __assign({}, p4, { className: "sendbird-conversation__message-list" }));
  } : _c, _d = _a3.renderMessageInput, renderMessageInput = _d === void 0 ? function() {
    return import_react146.default.createElement(MessageInputWrapper2, __assign({}, props));
  } : _d;
  return import_react146.default.createElement(GroupChannelUIView, __assign({}, props, context, { isLoading: props === null || props === void 0 ? void 0 : props.isLoading, isInvalid, channelUrl, renderChannelHeader, renderMessageList, renderMessageInput }));
};

// node_modules/@sendbird/uikit-react/Channel.js
var import_react_dom52 = __toESM(require_react_dom(), 1);
var Channel = function(props) {
  return import_react147.default.createElement(
    ChannelProvider,
    __assign({}, props),
    import_react147.default.createElement(ChannelUI, __assign({}, props))
  );
};

// node_modules/@sendbird/uikit-react/ChannelList.js
var import_react152 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-DnMqBZ_F.js
var import_react148 = __toESM(require_react(), 1);
var RESET_CHANNEL_LIST = "RESET_CHANNEL_LIST";
var CREATE_CHANNEL = "CREATE_CHANNEL";
var LEAVE_CHANNEL_SUCCESS = "LEAVE_CHANNEL_SUCCESS";
var SET_CURRENT_CHANNEL2 = "SET_CURRENT_CHANNEL";
var FETCH_CHANNELS_START = "FETCH_CHANNELS_START";
var FETCH_CHANNELS_SUCCESS = "FETCH_CHANNELS_SUCCESS";
var FETCH_CHANNELS_FAILURE = "FETCH_CHANNELS_FAILURE";
var INIT_CHANNELS_START = "INIT_CHANNELS_START";
var INIT_CHANNELS_SUCCESS = "INIT_CHANNELS_SUCCESS";
var REFRESH_CHANNELS_SUCCESS = "REFRESH_CHANNELS_SUCCESS";
var INIT_CHANNELS_FAILURE = "INIT_CHANNELS_FAILURE";
var ON_USER_JOINED = "ON_USER_JOINED";
var ON_CHANNEL_DELETED = "ON_CHANNEL_DELETED";
var ON_LAST_MESSAGE_UPDATED = "ON_LAST_MESSAGE_UPDATED";
var ON_USER_LEFT = "ON_USER_LEFT";
var ON_CHANNEL_CHANGED = "ON_CHANNEL_CHANGED";
var ON_CHANNEL_ARCHIVED = "ON_CHANNEL_ARCHIVED";
var ON_CHANNEL_FROZEN = "ON_CHANNEL_FROZEN";
var ON_CHANNEL_UNFROZEN = "ON_CHANNEL_UNFROZEN";
var ON_READ_RECEIPT_UPDATED = "ON_READ_RECEIPT_UPDATED";
var ON_DELIVERY_RECEIPT_UPDATED = "ON_DELIVERY_RECEIPT_UPDATED";
var CHANNEL_LIST_PARAMS_UPDATED = "CHANNEL_LIST_PARAMS_UPDATED";
var DELIVERY_RECEIPT3 = "delivery_receipt";
var createEventHandler = function(_a3) {
  var sdk = _a3.sdk, sdkChannelHandlerId = _a3.sdkChannelHandlerId, channelListDispatcher = _a3.channelListDispatcher, logger = _a3.logger;
  var ChannelHandler = new Ye3({
    onChannelChanged: function(channel) {
      if (channel.isGroupChannel()) {
        logger.info("ChannelList: onChannelChanged", channel);
        channelListDispatcher({
          type: ON_CHANNEL_CHANGED,
          payload: channel
        });
      }
    },
    onChannelDeleted: function(channelUrl) {
      logger.info("ChannelList: onChannelDeleted", channelUrl);
      channelListDispatcher({
        type: ON_CHANNEL_DELETED,
        payload: channelUrl
      });
    },
    onUserJoined: function(channel) {
      logger.info("ChannelList: onUserJoined", channel);
      channelListDispatcher({
        type: ON_USER_JOINED,
        payload: channel
      });
    },
    onUserBanned: function(channel, user) {
      var _a4;
      if (channel.isGroupChannel()) {
        logger.info("Channel: onUserBanned", channel);
        var isMe = user.userId === ((_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
        channelListDispatcher({
          type: ON_USER_LEFT,
          payload: { channel, isMe }
        });
      }
    },
    onUserLeft: function(channel, user) {
      var _a4;
      logger.info("ChannelList: onUserLeft", channel);
      var isMe = user.userId === ((_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId);
      channelListDispatcher({
        type: ON_USER_LEFT,
        payload: { channel, isMe }
      });
    },
    onUnreadMemberStatusUpdated: function(channel) {
      logger.info("ChannelList: onUnreadMemberStatusUpdated", channel);
      channelListDispatcher({
        type: ON_READ_RECEIPT_UPDATED,
        payload: channel
      });
    },
    onUndeliveredMemberStatusUpdated: function(channel) {
      logger.info("ChannelList: onUndeliveredMemberStatusUpdated", channel);
      if (channel.lastMessage) {
        channelListDispatcher({
          type: ON_DELIVERY_RECEIPT_UPDATED,
          payload: channel
        });
      }
    },
    onMessageUpdated: function(channel, message) {
      var _a4;
      if (channel.isGroupChannel() && ((_a4 = channel.lastMessage) === null || _a4 === void 0 ? void 0 : _a4.isEqual(message))) {
        logger.info("ChannelList: onMessageUpdated", channel);
        channelListDispatcher({
          type: ON_LAST_MESSAGE_UPDATED,
          payload: channel
        });
      }
    },
    onChannelHidden: function(channel) {
      logger.info("ChannelList: onChannelHidden", channel);
      channelListDispatcher({
        type: ON_CHANNEL_ARCHIVED,
        payload: channel
      });
    },
    onChannelFrozen: function(channel) {
      if (channel.isGroupChannel()) {
        logger.info("ChannelList: onChannelFrozen", channel);
        channelListDispatcher({
          type: ON_CHANNEL_FROZEN,
          payload: channel
        });
      }
    },
    onChannelUnfrozen: function(channel) {
      if (channel.isGroupChannel()) {
        logger.info("ChannelList: onChannelUnfrozen", channel);
        channelListDispatcher({
          type: ON_CHANNEL_UNFROZEN,
          payload: channel
        });
      }
    }
  });
  logger.info("ChannelList: Added channelHandler");
  sdk.groupChannel.addGroupChannelHandler(sdkChannelHandlerId, ChannelHandler);
};
var createChannelListQuery = function(_a3) {
  var sdk = _a3.sdk, _b2 = _a3.userFilledChannelListQuery, userFilledChannelListQuery = _b2 === void 0 ? {} : _b2;
  var params = {
    includeEmpty: false,
    limit: 20,
    // The value of pagination limit could be set up to 100.
    order: E.LATEST_LAST_MESSAGE
  };
  if (userFilledChannelListQuery) {
    Object.keys(userFilledChannelListQuery).forEach(function(key) {
      params[key] = userFilledChannelListQuery[key];
    });
  }
  return sdk.groupChannel.createMyGroupChannelListQuery(params);
};
function setupChannelList(_a3) {
  var _b2, _c, _d, _e3;
  var sdk = _a3.sdk, sdkChannelHandlerId = _a3.sdkChannelHandlerId, channelListDispatcher = _a3.channelListDispatcher, setChannelSource = _a3.setChannelSource, onChannelSelect = _a3.onChannelSelect, userFilledChannelListQuery = _a3.userFilledChannelListQuery, logger = _a3.logger, sortChannelList2 = _a3.sortChannelList, disableAutoSelect = _a3.disableAutoSelect, markAsDeliveredScheduler = _a3.markAsDeliveredScheduler, disableMarkAsDelivered = _a3.disableMarkAsDelivered;
  if (sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) {
    createEventHandler({
      sdk,
      channelListDispatcher,
      sdkChannelHandlerId,
      logger
    });
  } else {
    logger.warning("ChannelList - createEventHandler: sdk or sdk.ChannelHandler does not exist", sdk);
  }
  logger.info("ChannelList - creating query", { userFilledChannelListQuery });
  var channelListQuery = createChannelListQuery({ sdk, userFilledChannelListQuery });
  logger.info("ChannelList - created query", channelListQuery);
  setChannelSource(channelListQuery);
  channelListDispatcher({
    type: INIT_CHANNELS_START,
    payload: {
      currentUserId: (_c = (_b2 = sdk === null || sdk === void 0 ? void 0 : sdk.currentUser) === null || _b2 === void 0 ? void 0 : _b2.userId) !== null && _c !== void 0 ? _c : ""
    }
  });
  if (userFilledChannelListQuery) {
    logger.info("ChannelList - setting up channelListQuery", channelListQuery);
    channelListDispatcher({
      type: CHANNEL_LIST_PARAMS_UPDATED,
      payload: {
        channelListQuery,
        currentUserId: (_e3 = (_d = sdk === null || sdk === void 0 ? void 0 : sdk.currentUser) === null || _d === void 0 ? void 0 : _d.userId) !== null && _e3 !== void 0 ? _e3 : ""
      }
    });
  }
  logger.info("ChannelList - fetching channels");
  if (channelListQuery.hasNext) {
    channelListQuery.next().then(function(channelList) {
      var _a4, _b3;
      logger.info("ChannelList - fetched channels", channelList);
      logger.info("ChannelList - highlight channel", channelList[0]);
      var sortedChannelList = channelList;
      if (sortChannelList2 && typeof sortChannelList2 === "function") {
        sortedChannelList = sortChannelList2(channelList);
        logger.info("ChannelList - channel list sorted", sortedChannelList);
      }
      if (!disableAutoSelect) {
        onChannelSelect === null || onChannelSelect === void 0 ? void 0 : onChannelSelect(sortedChannelList[0]);
      }
      channelListDispatcher({
        type: INIT_CHANNELS_SUCCESS,
        payload: {
          channelList: sortedChannelList,
          disableAutoSelect
        }
      });
      var canSetMarkAsDelivered = (_b3 = (_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.appInfo) === null || _a4 === void 0 ? void 0 : _a4.premiumFeatureList) === null || _b3 === void 0 ? void 0 : _b3.find(function(feature) {
        return feature === DELIVERY_RECEIPT3;
      });
      if (canSetMarkAsDelivered && !disableMarkAsDelivered) {
        sortedChannelList.forEach(function(channel) {
          markAsDeliveredScheduler.push(channel);
        });
      }
    }).catch(function(err) {
      if (err) {
        logger.error("ChannelList - couldnt fetch channels", err);
        channelListDispatcher({
          type: INIT_CHANNELS_FAILURE
        });
      }
    });
  } else {
    logger.info("ChannelList - there are no more channels");
  }
}
var pubSubHandleRemover = function(subscriber) {
  subscriber.forEach(function(s6) {
    try {
      s6.remove();
    } catch (_a3) {
    }
  });
};
var pubSubHandler = function(pubSub, channelListDispatcher) {
  var subscriber = /* @__PURE__ */ new Map();
  if (!pubSub)
    return subscriber;
  subscriber.set(pubSubTopics.CREATE_CHANNEL, pubSub.subscribe(pubSubTopics.CREATE_CHANNEL, function(_a3) {
    var channel = _a3.channel;
    channelListDispatcher({
      type: CREATE_CHANNEL,
      payload: channel
    });
  }));
  subscriber.set(pubSubTopics.UPDATE_USER_MESSAGE, pubSub.subscribe(pubSubTopics.UPDATE_USER_MESSAGE, function(_a3) {
    var _b2;
    var channel = _a3.channel, message = _a3.message;
    if (channel.isGroupChannel() && ((_b2 = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _b2 === void 0 ? void 0 : _b2.messageId) === message.messageId) {
      channel.lastMessage = message;
      channelListDispatcher({
        type: ON_LAST_MESSAGE_UPDATED,
        payload: channel
      });
    }
  }));
  subscriber.set(pubSubTopics.LEAVE_CHANNEL, pubSub.subscribe(pubSubTopics.LEAVE_CHANNEL, function(msg) {
    var channel = msg.channel;
    channelListDispatcher({
      type: LEAVE_CHANNEL_SUCCESS,
      payload: channel === null || channel === void 0 ? void 0 : channel.url
    });
  }));
  return subscriber;
};
var getNextChannel = function(_a3) {
  var channel = _a3.channel, currentChannel = _a3.currentChannel, allChannels = _a3.allChannels, disableAutoSelect = _a3.disableAutoSelect;
  var nextChannel = null;
  if ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) === channel.url) {
    if (!disableAutoSelect && allChannels.length > 0) {
      var firstChannel = allChannels[0], _b2 = allChannels[1], secondChannel = _b2 === void 0 ? null : _b2;
      nextChannel = firstChannel.url === channel.url ? secondChannel : firstChannel;
    }
  } else {
    nextChannel = currentChannel;
  }
  return nextChannel;
};
var initialState3 = {
  // we might not need this initialized state -> should remove
  initialized: false,
  loading: true,
  allChannels: [],
  currentChannel: null,
  channelListQuery: null,
  currentUserId: "",
  disableAutoSelect: false
};
function channelListReducer(state, action) {
  return K2(action).with({ type: INIT_CHANNELS_START }, function(_a3) {
    var payload = _a3.payload;
    return __assign(__assign({}, state), { loading: true, currentUserId: payload.currentUserId });
  }).with({ type: RESET_CHANNEL_LIST }, function() {
    return initialState3;
  }).with({ type: INIT_CHANNELS_SUCCESS }, function(action2) {
    var _a3 = action2.payload, channelList = _a3.channelList, disableAutoSelect = _a3.disableAutoSelect;
    return __assign(__assign({}, state), { initialized: true, loading: false, allChannels: channelList, disableAutoSelect, currentChannel: !disableAutoSelect && channelList && channelList.length && channelList.length > 0 ? channelList[0] : state.currentChannel });
  }).with({ type: REFRESH_CHANNELS_SUCCESS }, function(action2) {
    var _a3 = action2.payload, channelList = _a3.channelList, currentChannel = _a3.currentChannel;
    return __assign(__assign({}, state), { loading: false, allChannels: channelList, currentChannel });
  }).with({ type: FETCH_CHANNELS_SUCCESS }, function(action2) {
    var currentChannels = state.allChannels.map(function(c4) {
      return c4.url;
    });
    var filteredChannels = action2.payload.filter(function(_a3) {
      var url = _a3.url;
      return !currentChannels.find(function(c4) {
        return c4 === url;
      });
    });
    return __assign(__assign({}, state), { allChannels: __spreadArray(__spreadArray([], state.allChannels, true), filteredChannels, true) });
  }).with({ type: CREATE_CHANNEL }, function(action2) {
    var _a3;
    var channel = action2.payload;
    var allChannels = state.allChannels, currentUserId = state.currentUserId, channelListQuery = state.channelListQuery;
    if (channelListQuery) {
      if (filterChannelListParams(channelListQuery, channel, currentUserId)) {
        return __assign(__assign({}, state), { currentChannel: channel, allChannels: getChannelsWithUpsertedChannel(allChannels, channel, (_a3 = state.channelListQuery) === null || _a3 === void 0 ? void 0 : _a3.order) });
      }
      return __assign(__assign({}, state), { currentChannel: channel });
    }
    return __assign(__assign({}, state), { currentChannel: channel, allChannels: __spreadArray([channel], allChannels.filter(function(ch) {
      return ch.url !== (channel === null || channel === void 0 ? void 0 : channel.url);
    }), true) });
  }).with({ type: ON_CHANNEL_ARCHIVED }, function(action2) {
    var _a3;
    var channel = action2.payload;
    var allChannels = state.allChannels, currentUserId = state.currentUserId, currentChannel = state.currentChannel, channelListQuery = state.channelListQuery, disableAutoSelect = state.disableAutoSelect;
    if (channelListQuery) {
      if (filterChannelListParams(channelListQuery, channel, currentUserId)) {
        return __assign(__assign({}, state), { allChannels: getChannelsWithUpsertedChannel(allChannels, channel, (_a3 = state.channelListQuery) === null || _a3 === void 0 ? void 0 : _a3.order) });
      }
    }
    var nextChannel = getNextChannel({
      channel,
      currentChannel,
      allChannels,
      disableAutoSelect
    });
    return __assign(__assign({}, state), { currentChannel: nextChannel, allChannels: allChannels.filter(function(_a4) {
      var url = _a4.url;
      return url !== (channel === null || channel === void 0 ? void 0 : channel.url);
    }) });
  }).with({ type: S3.union(LEAVE_CHANNEL_SUCCESS, ON_CHANNEL_DELETED) }, function(action2) {
    var _a3;
    var channelUrl = action2.payload;
    var allChannels = state.allChannels.filter(function(_a4) {
      var url = _a4.url;
      return url !== channelUrl;
    });
    return __assign(__assign({}, state), { currentChannel: channelUrl === ((_a3 = state.currentChannel) === null || _a3 === void 0 ? void 0 : _a3.url) ? allChannels[0] : state.currentChannel, allChannels });
  }).with({ type: ON_USER_LEFT }, function(action2) {
    var _a3;
    var _b2 = action2.payload, channel = _b2.channel, isMe = _b2.isMe;
    var allChannels = state.allChannels, currentUserId = state.currentUserId, currentChannel = state.currentChannel, channelListQuery = state.channelListQuery, disableAutoSelect = state.disableAutoSelect;
    var nextChannels = __spreadArray([], allChannels, true);
    var nextChannel = channel;
    if (isMe || channelListQuery && !filterChannelListParams(channelListQuery, channel, currentUserId)) {
      var channelAt = allChannels.findIndex(function(ch) {
        return ch.url === channel.url;
      });
      if (channelAt > -1) {
        nextChannels.splice(channelAt, 1);
        nextChannel = getNextChannel({
          channel,
          currentChannel,
          allChannels,
          disableAutoSelect
        });
      }
    } else {
      nextChannels = getChannelsWithUpsertedChannel(allChannels, channel, (_a3 = state.channelListQuery) === null || _a3 === void 0 ? void 0 : _a3.order);
      if ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) === channel.url) {
        nextChannel = channel;
      }
    }
    return __assign(__assign({}, state), { currentChannel: nextChannel, allChannels: nextChannels });
  }).with({
    type: S3.union(ON_USER_JOINED, ON_CHANNEL_CHANGED, ON_READ_RECEIPT_UPDATED, ON_DELIVERY_RECEIPT_UPDATED)
  }, function(action2) {
    var _a3, _b2, _c;
    var channel = action2.payload;
    var _d = state.allChannels, allChannels = _d === void 0 ? [] : _d, currentUserId = state.currentUserId, currentChannel = state.currentChannel, channelListQuery = state.channelListQuery, disableAutoSelect = state.disableAutoSelect;
    var unreadMessageCount = channel.unreadMessageCount;
    if (channelListQuery) {
      if (filterChannelListParams(channelListQuery, channel, currentUserId)) {
        return __assign(__assign({}, state), { allChannels: getChannelsWithUpsertedChannel(allChannels, channel, (_a3 = state.channelListQuery) === null || _a3 === void 0 ? void 0 : _a3.order) });
      }
      if (isChannelJustCreated(channel)) {
        return state;
      }
      var nextChannel = getNextChannel({
        channel,
        currentChannel,
        allChannels,
        disableAutoSelect
      });
      return __assign(__assign({}, state), { currentChannel: nextChannel, allChannels: allChannels.filter(function(_a4) {
        var url = _a4.url;
        return url !== (channel === null || channel === void 0 ? void 0 : channel.url);
      }) });
    }
    if (
      // When marking as read the channel
      unreadMessageCount === 0 && ((_c = (_b2 = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _b2 === void 0 ? void 0 : _b2.sender) === null || _c === void 0 ? void 0 : _c.userId) !== currentUserId
    ) {
      return __assign(__assign({}, state), { allChannels: allChannels.map(function(ch) {
        return ch.url === (channel === null || channel === void 0 ? void 0 : channel.url) ? channel : ch;
      }) });
    }
    return __assign(__assign({}, state), { allChannels: __spreadArray([channel], allChannels.filter(function(_a4) {
      var url = _a4.url;
      return url !== channel.url;
    }), true) });
  }).with({ type: SET_CURRENT_CHANNEL2 }, function(action2) {
    return __assign(__assign({}, state), { currentChannel: action2.payload });
  }).with({ type: ON_LAST_MESSAGE_UPDATED }, function(action2) {
    return __assign(__assign({}, state), { allChannels: state.allChannels.map(function(channel) {
      return (channel === null || channel === void 0 ? void 0 : channel.url) === action2.payload.url ? action2.payload : channel;
    }) });
  }).with({ type: ON_CHANNEL_FROZEN }, function(action2) {
    var _a3;
    var channel = action2.payload;
    var allChannels = state.allChannels, currentUserId = state.currentUserId, currentChannel = state.currentChannel, channelListQuery = state.channelListQuery, disableAutoSelect = state.disableAutoSelect;
    if (channelListQuery) {
      if (filterChannelListParams(channelListQuery, channel, currentUserId)) {
        return __assign(__assign({}, state), { allChannels: getChannelsWithUpsertedChannel(allChannels, channel, (_a3 = state.channelListQuery) === null || _a3 === void 0 ? void 0 : _a3.order) });
      }
      var nextChannel = getNextChannel({
        channel,
        currentChannel,
        allChannels,
        disableAutoSelect
      });
      return __assign(__assign({}, state), { currentChannel: nextChannel, allChannels: allChannels.filter(function(_a4) {
        var url = _a4.url;
        return url !== (channel === null || channel === void 0 ? void 0 : channel.url);
      }) });
    }
    return __assign(__assign({}, state), { allChannels: allChannels.map(function(ch) {
      if (ch.url === (channel === null || channel === void 0 ? void 0 : channel.url)) {
        ch.isFrozen = true;
        return ch;
      }
      return ch;
    }) });
  }).with({ type: ON_CHANNEL_UNFROZEN }, function(action2) {
    var _a3;
    var channel = action2.payload;
    var allChannels = state.allChannels, currentUserId = state.currentUserId, currentChannel = state.currentChannel, channelListQuery = state.channelListQuery, disableAutoSelect = state.disableAutoSelect;
    if (channelListQuery) {
      if (filterChannelListParams(channelListQuery, channel, currentUserId)) {
        return __assign(__assign({}, state), { allChannels: getChannelsWithUpsertedChannel(allChannels, channel, (_a3 = state.channelListQuery) === null || _a3 === void 0 ? void 0 : _a3.order) });
      }
      var nextChannel = getNextChannel({
        channel,
        currentChannel,
        allChannels,
        disableAutoSelect
      });
      return __assign(__assign({}, state), { currentChannel: nextChannel, allChannels: allChannels.filter(function(_a4) {
        var url = _a4.url;
        return url !== (channel === null || channel === void 0 ? void 0 : channel.url);
      }) });
    }
    return __assign(__assign({}, state), { allChannels: allChannels.map(function(ch) {
      if (ch.url === (channel === null || channel === void 0 ? void 0 : channel.url)) {
        ch.isFrozen = false;
        return ch;
      }
      return ch;
    }) });
  }).with({ type: CHANNEL_LIST_PARAMS_UPDATED }, function(action2) {
    return __assign(__assign({}, state), { channelListQuery: action2.payload.channelListQuery, currentUserId: action2.payload.currentUserId });
  }).otherwise(function() {
    return state;
  });
}
function useActiveChannelUrl(_a3, _b2) {
  var activeChannelUrl = _a3.activeChannelUrl, channels = _a3.channels, sdk = _a3.sdk;
  var logger = _b2.logger, channelListDispatcher = _b2.channelListDispatcher;
  return (0, import_react148.useEffect)(function() {
    var _a4;
    if (activeChannelUrl) {
      logger.info("ChannelListProvider: looking for active channel", { activeChannelUrl });
      var activeChannel = channels === null || channels === void 0 ? void 0 : channels.find(function(channel) {
        return channel.url === activeChannelUrl;
      });
      if (activeChannel) {
        channelListDispatcher({
          type: SET_CURRENT_CHANNEL2,
          payload: activeChannel
        });
      } else {
        logger.info("ChannelListProvider: searching backend for active channel", { activeChannelUrl });
        (_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a4 === void 0 ? void 0 : _a4.getChannel(activeChannelUrl).then(function(channel) {
          channelListDispatcher({
            type: FETCH_CHANNELS_SUCCESS,
            payload: [channel]
          });
          channelListDispatcher({
            type: SET_CURRENT_CHANNEL2,
            payload: channel
          });
        }).catch(function() {
          logger.warning("ChannelListProvider: Active channel not found");
        });
      }
    }
  }, [activeChannelUrl]);
}
var useFetchChannelList = function(_a3, _b2) {
  var channelSource = _a3.channelSource, disableMarkAsDelivered = _a3.disableMarkAsDelivered;
  var channelListDispatcher = _b2.channelListDispatcher, logger = _b2.logger, markAsDeliveredScheduler = _b2.markAsDeliveredScheduler;
  return (0, import_react148.useCallback)(function() {
    return __awaiter(void 0, void 0, void 0, function() {
      var channelList, error_1;
      return __generator(this, function(_a4) {
        switch (_a4.label) {
          case 0:
            if (!(channelSource === null || channelSource === void 0 ? void 0 : channelSource.hasNext)) {
              logger.info("ChannelList: not able to fetch");
              return [
                2
                /*return*/
              ];
            }
            logger.info("ChannelList: starting fetch");
            channelListDispatcher({
              type: FETCH_CHANNELS_START,
              payload: null
            });
            _a4.label = 1;
          case 1:
            _a4.trys.push([1, 3, , 4]);
            return [4, channelSource.next()];
          case 2:
            channelList = _a4.sent();
            logger.info("ChannelList: succeeded fetch", { channelList });
            channelListDispatcher({
              type: FETCH_CHANNELS_SUCCESS,
              payload: channelList
            });
            if (!disableMarkAsDelivered) {
              logger.info("ChannelList: mark as delivered to fetched channels");
              channelList === null || channelList === void 0 ? void 0 : channelList.forEach(function(channel) {
                if ((channel === null || channel === void 0 ? void 0 : channel.unreadMessageCount) > 0) {
                  markAsDeliveredScheduler.push(channel);
                }
              });
            }
            return [3, 4];
          case 3:
            error_1 = _a4.sent();
            logger.error("ChannelList: failed fetch", { error: error_1 });
            channelListDispatcher({
              type: FETCH_CHANNELS_FAILURE,
              payload: error_1
            });
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [
    channelSource,
    disableMarkAsDelivered
  ]);
};
function useHandleReconnectForChannelList(_a3) {
  var isOnline = _a3.isOnline, reconnectOnIdle = _a3.reconnectOnIdle, logger = _a3.logger, sdk = _a3.sdk, currentGroupChannel = _a3.currentGroupChannel, channelListDispatcher = _a3.channelListDispatcher, setChannelSource = _a3.setChannelSource, userFilledChannelListQuery = _a3.userFilledChannelListQuery, sortChannelList2 = _a3.sortChannelList, disableAutoSelect = _a3.disableAutoSelect, markAsDeliveredScheduler = _a3.markAsDeliveredScheduler, disableMarkAsDelivered = _a3.disableMarkAsDelivered;
  var shouldReconnect = useReconnectOnIdle(isOnline, currentGroupChannel, reconnectOnIdle).shouldReconnect;
  (0, import_react148.useEffect)(function() {
    return function() {
      var _a4, _b2, _c, _d;
      if (shouldReconnect) {
        logger.info("ChannelList refresh - creating query", { userFilledChannelListQuery });
        var channelListQuery = createChannelListQuery({ sdk, userFilledChannelListQuery });
        logger.info("ChannelList refresh - created query", channelListQuery);
        setChannelSource(channelListQuery);
        channelListDispatcher({
          type: INIT_CHANNELS_START,
          payload: {
            currentUserId: (_b2 = (_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId) !== null && _b2 !== void 0 ? _b2 : ""
          }
        });
        if (userFilledChannelListQuery) {
          logger.info("ChannelList refresh - setting up channelListQuery", channelListQuery);
          channelListDispatcher({
            type: CHANNEL_LIST_PARAMS_UPDATED,
            payload: {
              channelListQuery,
              currentUserId: (_d = (_c = sdk === null || sdk === void 0 ? void 0 : sdk.currentUser) === null || _c === void 0 ? void 0 : _c.userId) !== null && _d !== void 0 ? _d : ""
            }
          });
        }
        logger.info("ChannelList refresh - fetching channels");
        if (channelListQuery.hasNext) {
          channelListQuery.next().then(function(channelList) {
            var _a5, _b3;
            logger.info("ChannelList refresh - fetched channels", channelList);
            var sortedChannelList = channelList;
            if (sortChannelList2 && typeof sortChannelList2 === "function") {
              sortedChannelList = sortChannelList2(channelList);
              logger.info("ChannelList refresh - channel list sorted", sortedChannelList);
            }
            var newCurrentChannel = !disableAutoSelect ? sortedChannelList[0] : null;
            if (currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.url) {
              var foundChannel = sortedChannelList.find(function(channel) {
                return channel.url === currentGroupChannel.url;
              });
              if (foundChannel) {
                newCurrentChannel = foundChannel;
              }
            }
            logger.info("ChannelList refresh - highlight channel", newCurrentChannel);
            channelListDispatcher({
              type: REFRESH_CHANNELS_SUCCESS,
              payload: {
                channelList: sortedChannelList,
                currentChannel: newCurrentChannel
              }
            });
            var canSetMarkAsDelivered = (_b3 = (_a5 = sdk === null || sdk === void 0 ? void 0 : sdk.appInfo) === null || _a5 === void 0 ? void 0 : _a5.premiumFeatureList) === null || _b3 === void 0 ? void 0 : _b3.find(function(feature) {
              return feature === DELIVERY_RECEIPT;
            });
            if (canSetMarkAsDelivered && !disableMarkAsDelivered) {
              sortedChannelList.forEach(function(channel) {
                markAsDeliveredScheduler.push(channel);
              });
            }
          }).catch(function(err) {
            if (err) {
              logger.error("ChannelList refresh - could not fetch channels", err);
              channelListDispatcher({
                type: INIT_CHANNELS_FAILURE
              });
            }
          });
        } else {
          logger.info("ChannelList refresh - there are no more channels");
        }
      }
    };
  }, [shouldReconnect]);
}
var ChannelListContext = import_react148.default.createContext(null);
var ChannelListProvider = function(props) {
  var _a3, _b2;
  var children = props.children, className = props.className, disableUserProfile = props.disableUserProfile, allowProfileEdit = props.allowProfileEdit, queries = props.queries, onProfileEditSuccess = props.onProfileEditSuccess, onThemeChange = props.onThemeChange, onBeforeCreateChannel = props.onBeforeCreateChannel, sortChannelList2 = props.sortChannelList, overrideInviteUser = props.overrideInviteUser, activeChannelUrl = props.activeChannelUrl, _c = props.isTypingIndicatorEnabled, isTypingIndicatorEnabled = _c === void 0 ? null : _c, _d = props.isMessageReceiptStatusEnabled, isMessageReceiptStatusEnabled = _d === void 0 ? null : _d, reconnectOnIdle = props.reconnectOnIdle;
  var disableAutoSelect = (props === null || props === void 0 ? void 0 : props.disableAutoSelect) || !!activeChannelUrl;
  var onChannelSelect = (props === null || props === void 0 ? void 0 : props.onChannelSelect) || noop;
  var globalStore = useSendbirdStateContext();
  var config = globalStore.config, stores = globalStore.stores;
  var sdkStore = stores.sdkStore;
  var pubSub = config.pubSub, logger = config.logger;
  var markAsDeliveredScheduler = config.markAsDeliveredScheduler, _e3 = config.disableMarkAsDelivered, disableMarkAsDelivered = _e3 === void 0 ? false : _e3, isOnline = config.isOnline;
  var sdk = sdkStore === null || sdkStore === void 0 ? void 0 : sdkStore.sdk;
  var _f = ((_a3 = sdk === null || sdk === void 0 ? void 0 : sdk.appInfo) !== null && _a3 !== void 0 ? _a3 : {}).premiumFeatureList, premiumFeatureList = _f === void 0 ? [] : _f;
  var enableEditProfile = allowProfileEdit || config.allowProfileEdit;
  var userFilledChannelListQuery = queries === null || queries === void 0 ? void 0 : queries.channelListQuery;
  var userFilledApplicationUserListQuery = queries === null || queries === void 0 ? void 0 : queries.applicationUserListQuery;
  var sdkIntialized = sdkStore === null || sdkStore === void 0 ? void 0 : sdkStore.initialized;
  var _g2 = (0, import_react148.useReducer)(channelListReducer, initialState3), channelListStore = _g2[0], channelListDispatcher = _g2[1];
  var currentChannel = channelListStore.currentChannel;
  var _h = (0, import_react148.useState)(null), channelSource = _h[0], setChannelSource = _h[1];
  var _j = (0, import_react148.useState)([]), typingChannels = _j[0], setTypingChannels = _j[1];
  (0, import_react148.useEffect)(function() {
    var subscriber = pubSubHandler(pubSub, channelListDispatcher);
    return function() {
      pubSubHandleRemover(subscriber);
    };
  }, [sdkIntialized]);
  (0, import_react148.useEffect)(function() {
    var _a4;
    var sdkChannelHandlerId = uuidv4();
    if (sdkIntialized) {
      logger.info("ChannelList: Setup channelHandlers");
      setupChannelList({
        sdk,
        sdkChannelHandlerId,
        channelListDispatcher,
        setChannelSource,
        onChannelSelect,
        userFilledChannelListQuery: __assign({}, userFilledChannelListQuery),
        logger,
        sortChannelList: sortChannelList2,
        disableAutoSelect,
        markAsDeliveredScheduler,
        disableMarkAsDelivered
      });
    } else {
      logger.info("ChannelList: Removing channelHandlers");
      if ((_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a4 === void 0 ? void 0 : _a4.removeGroupChannelHandler) {
        sdk.groupChannel.removeGroupChannelHandler(sdkChannelHandlerId);
      }
      setChannelSource(null);
      channelListDispatcher({
        type: RESET_CHANNEL_LIST,
        payload: null
      });
    }
    return function() {
      var _a5, _b3;
      logger.info("ChannelList: Removing channelHandlers");
      if ((_a5 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a5 === void 0 ? void 0 : _a5.removeGroupChannelHandler) {
        (_b3 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _b3 === void 0 ? void 0 : _b3.removeGroupChannelHandler(sdkChannelHandlerId);
      }
    };
  }, [
    sdkIntialized,
    sortChannelList2,
    Object.entries(userFilledChannelListQuery !== null && userFilledChannelListQuery !== void 0 ? userFilledChannelListQuery : {}).map(function(_a4) {
      var key = _a4[0], value = _a4[1];
      return key + value;
    }).join()
  ]);
  (0, import_react148.useEffect)(function() {
    var _a4, _b3;
    var typingHandlerId = "";
    if ((_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a4 === void 0 ? void 0 : _a4.addGroupChannelHandler) {
      typingHandlerId = uuidv4();
      var handler = new Ye3({
        onTypingStatusUpdated: function(channel) {
          var _a5;
          var typingMemberCount = (_a5 = channel === null || channel === void 0 ? void 0 : channel.getTypingUsers()) === null || _a5 === void 0 ? void 0 : _a5.length;
          var channelList = typingChannels.filter(function(ch) {
            return ch.url !== channel.url;
          });
          if (typingMemberCount > 0) {
            setTypingChannels(__spreadArray(__spreadArray([], channelList, true), [channel], false));
          } else {
            setTypingChannels(channelList);
          }
        },
        onUnreadMemberStatusUpdated: function(channel) {
          channelListDispatcher({
            type: ON_LAST_MESSAGE_UPDATED,
            payload: channel
          });
        },
        onUndeliveredMemberStatusUpdated: function(channel) {
          channelListDispatcher({
            type: ON_LAST_MESSAGE_UPDATED,
            payload: channel
          });
        },
        onMessageUpdated: function(channel) {
          if (channel.isGroupChannel()) {
            channelListDispatcher({
              type: ON_LAST_MESSAGE_UPDATED,
              payload: channel
            });
            sdk.groupChannel.getChannelWithoutCache(channel.url).then(function(ch) {
              channelListDispatcher({
                type: ON_LAST_MESSAGE_UPDATED,
                payload: ch
              });
            });
          }
        },
        onMentionReceived: function(channel) {
          if (channel.isGroupChannel()) {
            channelListDispatcher({
              type: ON_LAST_MESSAGE_UPDATED,
              payload: channel
            });
            sdk.groupChannel.getChannelWithoutCache(channel.url).then(function(ch) {
              channelListDispatcher({
                type: ON_LAST_MESSAGE_UPDATED,
                payload: ch
              });
            });
          }
        }
      });
      (_b3 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _b3 === void 0 ? void 0 : _b3.addGroupChannelHandler(typingHandlerId, handler);
    }
    return function() {
      var _a5;
      if (((_a5 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a5 === void 0 ? void 0 : _a5.removeGroupChannelHandler) && typingHandlerId !== "") {
        sdk.groupChannel.removeGroupChannelHandler(typingHandlerId);
      }
    };
  }, [(_b2 = sdk === null || sdk === void 0 ? void 0 : sdk.currentUser) === null || _b2 === void 0 ? void 0 : _b2.userId]);
  var queries_ = (0, import_react148.useMemo)(function() {
    return {
      applicationUserListQuery: userFilledApplicationUserListQuery,
      channelListQuery: userFilledChannelListQuery
    };
  }, [userFilledApplicationUserListQuery, userFilledChannelListQuery]);
  var allChannels = channelListStore.allChannels;
  var sortedChannels = sortChannelList2 && typeof sortChannelList2 === "function" ? sortChannelList2(allChannels) : allChannels;
  if (sortedChannels.length !== allChannels.length) {
    var warning = "ChannelList: You have removed/added extra channels on sortChannelList\n      this could cause unexpected problems";
    console.warn(warning, { before: allChannels, after: sortedChannels });
    logger.warning(warning, { before: allChannels, after: sortedChannels });
  }
  (0, import_react148.useEffect)(function() {
    if (!sdk || !sdk.groupChannel) {
      return;
    }
    if (!(currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url)) {
      onChannelSelect(null);
      return;
    }
    sdk.groupChannel.getChannel(currentChannel.url).then(function(groupChannel) {
      if (groupChannel) {
        onChannelSelect(groupChannel);
      } else {
        onChannelSelect(null);
      }
    });
  }, [currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url]);
  useActiveChannelUrl({
    activeChannelUrl,
    channels: sortedChannels,
    sdk
  }, {
    logger,
    channelListDispatcher
  });
  useHandleReconnectForChannelList({
    isOnline,
    reconnectOnIdle,
    logger,
    sdk,
    currentGroupChannel: currentChannel,
    channelListDispatcher,
    setChannelSource,
    userFilledChannelListQuery,
    sortChannelList: sortChannelList2,
    disableAutoSelect,
    markAsDeliveredScheduler,
    disableMarkAsDelivered
  });
  var fetchChannelList = useFetchChannelList({
    channelSource,
    disableMarkAsDelivered: disableMarkAsDelivered || !premiumFeatureList.some(function(feature) {
      return feature === DELIVERY_RECEIPT;
    })
  }, {
    channelListDispatcher,
    logger,
    markAsDeliveredScheduler
  });
  return import_react148.default.createElement(
    ChannelListContext.Provider,
    { value: __assign(__assign({ className, disableUserProfile, queries: queries_, onProfileEditSuccess, onThemeChange, onBeforeCreateChannel, overrideInviteUser, onChannelSelect, sortChannelList: sortChannelList2, allowProfileEdit: enableEditProfile, channelListDispatcher, channelSource }, channelListStore), { allChannels: sortedChannels, typingChannels, isTypingIndicatorEnabled: isTypingIndicatorEnabled !== null && isTypingIndicatorEnabled !== void 0 ? isTypingIndicatorEnabled : config.groupChannelList.enableTypingIndicator, isMessageReceiptStatusEnabled: isMessageReceiptStatusEnabled !== null && isMessageReceiptStatusEnabled !== void 0 ? isMessageReceiptStatusEnabled : config.groupChannelList.enableMessageReceiptStatus, fetchChannelList }) },
    import_react148.default.createElement(
      UserProfileProvider,
      __assign({}, props),
      import_react148.default.createElement("div", { className: "sendbird-channel-list ".concat(className) }, children)
    )
  );
};
function useChannelListContext() {
  var context = (0, import_react148.useContext)(ChannelListContext);
  if (!context)
    throw new Error("ChannelListContext not found. Use within the ChannelList module.");
  return context;
}

// node_modules/@sendbird/uikit-react/ChannelList/components/ChannelListUI.js
var import_react151 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ChannelList/components/ChannelPreview.js
var import_react149 = __toESM(require_react(), 1);
var import_react_dom53 = __toESM(require_react_dom(), 1);
var ChannelPreview = function(_a3) {
  var _b2, _c, _d, _e3;
  var channel = _a3.channel, _f = _a3.isActive, isActive = _f === void 0 ? false : _f, _g2 = _a3.isSelected, isSelected = _g2 === void 0 ? false : _g2, _h = _a3.isTyping, isTyping = _h === void 0 ? false : _h, renderChannelAction = _a3.renderChannelAction, onLeaveChannel = _a3.onLeaveChannel, onClick = _a3.onClick, tabIndex = _a3.tabIndex;
  var config = useSendbirdStateContext().config;
  var stringSet2 = useLocalization().stringSet;
  var _j = useChannelListContext(), _k = _j.isTypingIndicatorEnabled, isTypingIndicatorEnabled = _k === void 0 ? false : _k, _l = _j.isMessageReceiptStatusEnabled, isMessageReceiptStatusEnabled = _l === void 0 ? false : _l;
  var userId = config.userId;
  var isMessageStatusEnabled = isMessageReceiptStatusEnabled && (((_b2 = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _b2 === void 0 ? void 0 : _b2.messageType) === "user" || ((_c = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _c === void 0 ? void 0 : _c.messageType) === "file") && ((_e3 = (_d = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _d === void 0 ? void 0 : _d.sender) === null || _e3 === void 0 ? void 0 : _e3.userId) === userId;
  return import_react149.default.createElement(GroupChannelListItemView, { channel, tabIndex, isTyping: isTypingIndicatorEnabled && isTyping, isSelected: isSelected !== null && isSelected !== void 0 ? isSelected : isActive, channelName: getChannelTitle2(channel, userId, stringSet2), isMessageStatusEnabled, onClick, onLeaveChannel, renderChannelAction });
};

// node_modules/@sendbird/uikit-react/ChannelList/components/AddChannel.js
var import_react150 = __toESM(require_react(), 1);
var import_react_dom54 = __toESM(require_react_dom(), 1);
var AddChannel = function() {
  var _a3 = (0, import_react150.useState)(false), showModal = _a3[0], setShowModal = _a3[1];
  var _b2 = useChannelListContext(), overrideInviteUser = _b2.overrideInviteUser, onBeforeCreateChannel = _b2.onBeforeCreateChannel, onChannelSelect = _b2.onChannelSelect;
  return import_react150.default.createElement(AddGroupChannelView, { createChannelVisible: showModal, onChangeCreateChannelVisible: setShowModal, onCreateChannelClick: overrideInviteUser, onBeforeCreateChannel, onChannelCreated: function(it3) {
    return onChannelSelect === null || onChannelSelect === void 0 ? void 0 : onChannelSelect(it3);
  } });
};

// node_modules/@sendbird/uikit-react/ChannelList/components/ChannelListUI.js
var import_react_dom55 = __toESM(require_react_dom(), 1);
var ChannelListUI = function(props) {
  var renderHeader = props.renderHeader, renderChannelPreview = props.renderChannelPreview, renderPlaceHolderError = props.renderPlaceHolderError, renderPlaceHolderLoading = props.renderPlaceHolderLoading, renderPlaceHolderEmptyList = props.renderPlaceHolderEmptyList;
  var _a3 = useChannelListContext(), onThemeChange = _a3.onThemeChange, allowProfileEdit = _a3.allowProfileEdit, allChannels = _a3.allChannels, currentChannel = _a3.currentChannel, channelListDispatcher = _a3.channelListDispatcher, typingChannels = _a3.typingChannels, initialized = _a3.initialized, fetchChannelList = _a3.fetchChannelList, onProfileEditSuccess = _a3.onProfileEditSuccess;
  var _b2 = useSendbirdStateContext(), stores = _b2.stores, config = _b2.config;
  var logger = config.logger, _c = config.isOnline, isOnline = _c === void 0 ? false : _c;
  var sdk = stores.sdkStore.sdk;
  var renderListItem = function(props2) {
    var channel = props2.item, index = props2.index;
    var previewProps = {
      channel,
      tabIndex: index,
      isSelected: (channel === null || channel === void 0 ? void 0 : channel.url) === (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url),
      isTyping: typingChannels === null || typingChannels === void 0 ? void 0 : typingChannels.some(function(_a4) {
        var url = _a4.url;
        return url === (channel === null || channel === void 0 ? void 0 : channel.url);
      }),
      renderChannelAction: function(props3) {
        return import_react151.default.createElement(GroupChannelPreviewAction, __assign({}, props3));
      },
      onClick: function() {
        if (!isOnline && !(sdk === null || sdk === void 0 ? void 0 : sdk.isCacheEnabled)) {
          logger.warning("ChannelList: Inactivated clicking channel item during offline.");
          return;
        }
        logger.info("ChannelList: Clicked on channel:", channel);
        channelListDispatcher({
          type: SET_CURRENT_CHANNEL2,
          payload: channel
        });
      },
      onLeaveChannel: function(channel2, cb) {
        return __awaiter(this, void 0, void 0, function() {
          var response, err_1;
          return __generator(this, function(_a4) {
            switch (_a4.label) {
              case 0:
                logger.info("ChannelList: Leaving channel", channel2);
                if (!channel2) return [3, 4];
                _a4.label = 1;
              case 1:
                _a4.trys.push([1, 3, , 4]);
                return [4, channel2.leave()];
              case 2:
                response = _a4.sent();
                logger.info("ChannelList: Leaving channel success", response);
                if (cb && typeof cb === "function")
                  cb(channel2, null);
                channelListDispatcher({
                  type: LEAVE_CHANNEL_SUCCESS,
                  payload: channel2.url
                });
                return [3, 4];
              case 3:
                err_1 = _a4.sent();
                logger.error("ChannelList: Leaving channel failed", err_1);
                if (cb && typeof cb === "function")
                  cb(channel2, err_1);
                return [3, 4];
              case 4:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }
    };
    if (renderChannelPreview) {
      return import_react151.default.createElement("div", { key: channel === null || channel === void 0 ? void 0 : channel.url, onClick: previewProps.onClick }, renderChannelPreview(previewProps));
    }
    return import_react151.default.createElement(ChannelPreview, __assign({ key: channel === null || channel === void 0 ? void 0 : channel.url }, previewProps));
  };
  return import_react151.default.createElement(GroupChannelListUIView, { renderHeader, renderChannel: renderListItem, renderPlaceHolderError, renderPlaceHolderLoading, renderPlaceHolderEmptyList, onChangeTheme: onThemeChange !== null && onThemeChange !== void 0 ? onThemeChange : noop, allowProfileEdit, onUserProfileUpdated: onProfileEditSuccess !== null && onProfileEditSuccess !== void 0 ? onProfileEditSuccess : noop, channels: allChannels, onLoadMore: fetchChannelList, initialized, renderAddChannel: function() {
    return import_react151.default.createElement(AddChannel, null);
  } });
};

// node_modules/@sendbird/uikit-react/ChannelList.js
var import_react_dom56 = __toESM(require_react_dom(), 1);
var ChannelList = function(props) {
  return import_react152.default.createElement(
    ChannelListProvider,
    __assign({}, props),
    import_react152.default.createElement(ChannelListUI, __assign({}, props))
  );
};

// node_modules/@sendbird/uikit-react/ChannelSettings.js
var import_react166 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ChannelSettings/components/ChannelSettingsUI.js
var import_react165 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ChannelSettings/context.js
var import_react153 = __toESM(require_react(), 1);
var import_react_dom57 = __toESM(require_react_dom(), 1);
function useAsyncRequest(request, options) {
  var _this = this;
  var _a3;
  var _b2 = (0, import_react153.useState)({ loading: true, response: void 0, error: void 0 }), state = _b2[0], setState = _b2[1];
  var updateWithRequest = function() {
    return __awaiter(_this, void 0, void 0, function() {
      var response_1, error_1;
      return __generator(this, function(_a4) {
        switch (_a4.label) {
          case 0:
            _a4.trys.push([0, 2, , 3]);
            setState(function(prev) {
              return { loading: true, error: void 0, response: (options === null || options === void 0 ? void 0 : options.resetResponseOnRefresh) ? void 0 : prev.response };
            });
            return [4, request()];
          case 1:
            response_1 = _a4.sent();
            if (response_1) {
              setState(function(prev) {
                return __assign(__assign({}, prev), { response: response_1, loading: false });
              });
            } else {
              setState(function(prev) {
                return __assign(__assign({}, prev), { loading: Boolean(options === null || options === void 0 ? void 0 : options.persistLoadingIfNoResponse) });
              });
            }
            return [3, 3];
          case 2:
            error_1 = _a4.sent();
            setState(function(prev) {
              return __assign(__assign({}, prev), { error: error_1, loading: false });
            });
            return [3, 3];
          case 3:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  (0, import_react153.useEffect)(function() {
    updateWithRequest();
    return function() {
      if (request.cancel && typeof request.cancel === "function") {
        request.cancel();
      }
    };
  }, (_a3 = options === null || options === void 0 ? void 0 : options.deps) !== null && _a3 !== void 0 ? _a3 : []);
  return __assign(__assign({}, state), { refresh: updateWithRequest });
}
var ChannelSettingsContext = import_react153.default.createContext(null);
var ChannelSettingsProvider = function(props) {
  var children = props.children, className = props.className, channelUrl = props.channelUrl, onCloseClick = props.onCloseClick, onLeaveChannel = props.onLeaveChannel, onChannelModified = props.onChannelModified, overrideInviteUser = props.overrideInviteUser, onBeforeUpdateChannel = props.onBeforeUpdateChannel, queries = props.queries, renderUserListItem = props.renderUserListItem;
  var _a3 = useSendbirdStateContext(), config = _a3.config, stores = _a3.stores;
  var sdkStore = stores.sdkStore;
  var logger = config.logger;
  var _b2 = (0, import_react153.useState)(), channelHandlerId = _b2[0], setChannelHandlerId = _b2[1];
  var _c = (0, import_react153.useState)(function() {
    return uuidv4();
  }), channelUpdateId = _c[0], setChannelUpdateId = _c[1];
  var forceUpdateUI = function() {
    return setChannelUpdateId(uuidv4());
  };
  var _d = useAsyncRequest(function() {
    return __awaiter(void 0, void 0, void 0, function() {
      var channel_1, channelHandler, newChannelHandlerId, error_1;
      var _a4, _b3, _c2, _d2;
      return __generator(this, function(_e4) {
        switch (_e4.label) {
          case 0:
            logger.info("ChannelSettings: fetching channel");
            if (!channelUrl) {
              logger.warning("ChannelSettings: channel url is required");
              return [
                2
                /*return*/
              ];
            } else if (!sdkStore.initialized || !sdkStore.sdk) {
              logger.warning("ChannelSettings: SDK is not initialized");
              return [
                2
                /*return*/
              ];
            } else if (!sdkStore.sdk.groupChannel) {
              logger.warning("ChannelSettings: GroupChannelModule is not specified in the SDK");
              return [
                2
                /*return*/
              ];
            }
            _e4.label = 1;
          case 1:
            _e4.trys.push([1, 3, , 4]);
            if (channelHandlerId) {
              if ((_b3 = (_a4 = sdkStore.sdk) === null || _a4 === void 0 ? void 0 : _a4.groupChannel) === null || _b3 === void 0 ? void 0 : _b3.removeGroupChannelHandler) {
                logger.info("ChannelSettings: Removing message reciver handler", channelHandlerId);
                sdkStore.sdk.groupChannel.removeGroupChannelHandler(channelHandlerId);
              } else if ((_c2 = sdkStore.sdk) === null || _c2 === void 0 ? void 0 : _c2.groupChannel) {
                logger.error("ChannelSettings: Not found the removeGroupChannelHandler");
              }
              setChannelHandlerId(void 0);
            }
            return [4, sdkStore.sdk.groupChannel.getChannel(channelUrl)];
          case 2:
            channel_1 = _e4.sent();
            channelHandler = {
              onUserLeft: function(channel2, user) {
                if (compareIds(channel2 === null || channel2 === void 0 ? void 0 : channel2.url, channelUrl)) {
                  logger.info("ChannelSettings: onUserLeft", { channel: channel2, user });
                  refresh();
                }
              },
              onUserBanned: function(channel2, user) {
                if (compareIds(channel2 === null || channel2 === void 0 ? void 0 : channel2.url, channelUrl) && channel2.isGroupChannel()) {
                  logger.info("ChannelSettings: onUserBanned", { channel: channel2, user });
                  refresh();
                }
              }
            };
            newChannelHandlerId = uuidv4();
            (_d2 = sdkStore.sdk.groupChannel) === null || _d2 === void 0 ? void 0 : _d2.addGroupChannelHandler(newChannelHandlerId, new Ye3(channelHandler));
            setChannelHandlerId(newChannelHandlerId);
            return [2, channel_1];
          case 3:
            error_1 = _e4.sent();
            logger.error("ChannelSettings: fetching channel error:", error_1);
            throw error_1;
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, {
    resetResponseOnRefresh: true,
    persistLoadingIfNoResponse: true,
    deps: [sdkStore.initialized, sdkStore.sdk.groupChannel]
  }), _e3 = _d.response, channel = _e3 === void 0 ? null : _e3, loading = _d.loading, error = _d.error, refresh = _d.refresh;
  (0, import_react153.useEffect)(function() {
    refresh();
  }, [channelUrl, channelUpdateId]);
  return import_react153.default.createElement(
    ChannelSettingsContext.Provider,
    { value: {
      channelUrl,
      onCloseClick,
      onLeaveChannel,
      onChannelModified,
      onBeforeUpdateChannel,
      queries,
      overrideInviteUser,
      setChannelUpdateId,
      forceUpdateUI,
      channel,
      loading,
      invalidChannel: Boolean(error),
      renderUserListItem
    } },
    import_react153.default.createElement(
      UserProfileProvider,
      __assign({}, props),
      import_react153.default.createElement("div", { className: "sendbird-channel-settings ".concat(className) }, children)
    )
  );
};
var useChannelSettingsContext = function() {
  var context = import_react153.default.useContext(ChannelSettingsContext);
  if (!context)
    throw new Error("ChannelSettingsContext not found. Use within the ChannelSettings module");
  return context;
};

// node_modules/@sendbird/uikit-react/ChannelSettings/components/ChannelSettingsHeader.js
var import_react154 = __toESM(require_react(), 1);
var ChannelSettingsHeader = function(_a3) {
  var onCloseClick = _a3.onCloseClick, renderLeft = _a3.renderLeft, renderMiddle = _a3.renderMiddle, renderRight = _a3.renderRight;
  var stringSet2 = useLocalization().stringSet;
  var config = useSendbirdStateContext().config;
  var logger = config.logger;
  return import_react154.default.createElement(Header$1, { className: "sendbird-channel-settings__header", renderLeft, renderMiddle: renderMiddle !== null && renderMiddle !== void 0 ? renderMiddle : function() {
    return import_react154.default.createElement(Header$1.Title, { title: stringSet2.CHANNEL_SETTING__HEADER__TITLE });
  }, renderRight: renderRight !== null && renderRight !== void 0 ? renderRight : function() {
    return import_react154.default.createElement(
      "div",
      { className: "sendbird-channel-settings__header-icon" },
      import_react154.default.createElement(Header$1.IconButton, { type: IconTypes.CLOSE, onClick: function(e4) {
        logger.info("ChannelSettings: Click close");
        onCloseClick(e4);
      } })
    );
  } });
};

// node_modules/@sendbird/uikit-react/ChannelSettings/components/ChannelProfile.js
var import_react156 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ChannelSettings/components/EditDetailsModal.js
var import_react155 = __toESM(require_react(), 1);
var import_react_dom58 = __toESM(require_react_dom(), 1);
var EditDetails = function(props) {
  var _a3, _b2, _c;
  var onSubmit = props.onSubmit, onCancel = props.onCancel;
  var _d = useChannelSettingsContext(), channel = _d.channel, onChannelModified = _d.onChannelModified, onBeforeUpdateChannel = _d.onBeforeUpdateChannel, setChannelUpdateId = _d.setChannelUpdateId;
  var title = channel === null || channel === void 0 ? void 0 : channel.name;
  var state = useSendbirdStateContext();
  var userId = (_a3 = state === null || state === void 0 ? void 0 : state.config) === null || _a3 === void 0 ? void 0 : _a3.userId;
  var theme = (_b2 = state === null || state === void 0 ? void 0 : state.config) === null || _b2 === void 0 ? void 0 : _b2.theme;
  var logger = (_c = state === null || state === void 0 ? void 0 : state.config) === null || _c === void 0 ? void 0 : _c.logger;
  var inputRef = (0, import_react155.useRef)(null);
  var formRef = (0, import_react155.useRef)(null);
  var hiddenInputRef = (0, import_react155.useRef)(null);
  var _e3 = (0, import_react155.useState)(null), currentImg = _e3[0], setCurrentImg = _e3[1];
  var _f = (0, import_react155.useState)(null), newFile = _f[0], setNewFile = _f[1];
  var stringSet2 = (0, import_react155.useContext)(LocalizationContext).stringSet;
  return import_react155.default.createElement(
    Modal,
    { isFullScreenOnMobile: true, titleText: stringSet2.MODAL__CHANNEL_INFORMATION__TITLE, submitText: stringSet2.BUTTON__SAVE, onCancel, onSubmit: function() {
      var _a4, _b3, _c2;
      if (title !== "" && !((_a4 = inputRef.current) === null || _a4 === void 0 ? void 0 : _a4.value)) {
        if ((_b3 = formRef.current) === null || _b3 === void 0 ? void 0 : _b3.reportValidity) {
          formRef.current.reportValidity();
        }
        return;
      }
      var currentTitle = (_c2 = inputRef.current) === null || _c2 === void 0 ? void 0 : _c2.value;
      var currentImg2 = newFile;
      logger.info("ChannelSettings: Channel information being updated", {
        currentTitle,
        currentImg: currentImg2
      });
      if (onBeforeUpdateChannel) {
        logger.info("ChannelSettings: onBeforeUpdateChannel");
        var params = onBeforeUpdateChannel(currentTitle !== null && currentTitle !== void 0 ? currentTitle : "", currentImg2, channel === null || channel === void 0 ? void 0 : channel.data);
        channel === null || channel === void 0 ? void 0 : channel.updateChannel(params).then(function(groupChannel) {
          onChannelModified === null || onChannelModified === void 0 ? void 0 : onChannelModified(groupChannel);
          setChannelUpdateId(uuidv4());
          onSubmit();
        });
      } else {
        logger.info("ChannelSettings: normal");
        channel === null || channel === void 0 ? void 0 : channel.updateChannel({
          coverImage: currentImg2,
          name: currentTitle,
          data: (channel === null || channel === void 0 ? void 0 : channel.data) || ""
        }).then(function(groupChannel) {
          logger.info("ChannelSettings: Channel information updated", groupChannel);
          onChannelModified === null || onChannelModified === void 0 ? void 0 : onChannelModified(groupChannel);
          setChannelUpdateId === null || setChannelUpdateId === void 0 ? void 0 : setChannelUpdateId(uuidv4());
          onSubmit();
        });
      }
    }, type: ButtonTypes.PRIMARY },
    import_react155.default.createElement(
      "form",
      { className: "channel-profile-form", ref: formRef, onSubmit: function(e4) {
        e4.preventDefault();
      } },
      import_react155.default.createElement(
        "div",
        { className: "channel-profile-form__img-section" },
        import_react155.default.createElement(InputLabel2, null, stringSet2.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE),
        import_react155.default.createElement("div", { className: "channel-profile-form__avatar" }, currentImg ? import_react155.default.createElement(Avatar$1, { height: "80px", width: "80px", src: currentImg }) : import_react155.default.createElement(ChannelAvatar, { height: 80, width: 80, channel, userId, theme })),
        import_react155.default.createElement("input", { ref: hiddenInputRef, type: "file", accept: "image/gif, image/jpeg, image/png", style: { display: "none" }, onChange: function(e4) {
          if (e4.target.files) {
            setCurrentImg(URL.createObjectURL(e4.target.files[0]));
            setNewFile(e4.target.files[0]);
          }
          if (hiddenInputRef.current) {
            hiddenInputRef.current.value = "";
          }
        } }),
        import_react155.default.createElement(
          TextButton,
          { className: "channel-profile-form__avatar-button", onClick: function() {
            var _a4;
            return (_a4 = hiddenInputRef.current) === null || _a4 === void 0 ? void 0 : _a4.click();
          }, disableUnderline: true },
          import_react155.default.createElement(Label, { type: LabelTypography.BUTTON_1, color: LabelColors.PRIMARY }, stringSet2.MODAL__CHANNEL_INFORMATION__UPLOAD)
        )
      ),
      import_react155.default.createElement(
        "div",
        { className: "channel-profile-form__name-section" },
        import_react155.default.createElement(InputLabel2, null, stringSet2.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME),
        import_react155.default.createElement(Input, { required: title !== "", name: "channel-profile-form__name", ref: inputRef, value: title, placeHolder: stringSet2.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER })
      )
    )
  );
};

// node_modules/@sendbird/uikit-react/ChannelSettings/components/ChannelProfile.js
var import_react_dom59 = __toESM(require_react_dom(), 1);
var ChannelProfile = function() {
  var _a3, _b2, _c;
  var state = useSendbirdStateContext();
  var channelSettingStore = useChannelSettingsContext();
  var stringSet2 = (0, import_react156.useContext)(LocalizationContext).stringSet;
  var _d = (0, import_react156.useState)(false), showModal = _d[0], setShowModal = _d[1];
  var userId = (_a3 = state === null || state === void 0 ? void 0 : state.config) === null || _a3 === void 0 ? void 0 : _a3.userId;
  var theme = ((_b2 = state === null || state === void 0 ? void 0 : state.config) === null || _b2 === void 0 ? void 0 : _b2.theme) || "light";
  var isOnline = (_c = state === null || state === void 0 ? void 0 : state.config) === null || _c === void 0 ? void 0 : _c.isOnline;
  var disabled = !isOnline;
  var channel = channelSettingStore === null || channelSettingStore === void 0 ? void 0 : channelSettingStore.channel;
  var channelName = (0, import_react156.useMemo)(function() {
    if ((channel === null || channel === void 0 ? void 0 : channel.name) && channel.name !== "Group Channel") {
      return channel.name;
    }
    if ((channel === null || channel === void 0 ? void 0 : channel.name) === "Group Channel" || !(channel === null || channel === void 0 ? void 0 : channel.name)) {
      return ((channel === null || channel === void 0 ? void 0 : channel.members) || []).map(function(member) {
        return member.nickname || stringSet2.NO_NAME;
      }).join(", ");
    }
    return stringSet2.NO_TITLE;
  }, [channel === null || channel === void 0 ? void 0 : channel.name, channel === null || channel === void 0 ? void 0 : channel.joinedMemberCount]);
  return import_react156.default.createElement(
    "div",
    { className: "sendbird-channel-profile" },
    import_react156.default.createElement(
      "div",
      { className: "sendbird-channel-profile--inner" },
      import_react156.default.createElement(
        "div",
        { className: "sendbird-channel-profile__avatar" },
        import_react156.default.createElement(ChannelAvatar, { channel, userId, theme, width: 80, height: 80 })
      ),
      import_react156.default.createElement(Label, { className: "sendbird-channel-profile__title", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_1 }, channelName),
      import_react156.default.createElement(
        TextButton,
        { disabled, className: "sendbird-channel-profile__edit", onClick: function() {
          if (disabled) {
            return;
          }
          setShowModal(true);
        }, disableUnderline: true },
        import_react156.default.createElement(Label, { type: LabelTypography.BUTTON_1, color: disabled ? LabelColors.ONBACKGROUND_2 : LabelColors.PRIMARY }, stringSet2.CHANNEL_SETTING__PROFILE__EDIT)
      ),
      showModal && import_react156.default.createElement(EditDetails, { onCancel: function() {
        return setShowModal(false);
      }, onSubmit: function() {
        return setShowModal(false);
      } })
    )
  );
};

// node_modules/@sendbird/uikit-react/ChannelSettings/components/LeaveChannel.js
var import_react157 = __toESM(require_react(), 1);
var import_react_dom60 = __toESM(require_react_dom(), 1);
var LeaveChannel = function(props) {
  var _a3, _b2;
  var _c = props.onSubmit, onSubmit = _c === void 0 ? noop : _c, _d = props.onCancel, onCancel = _d === void 0 ? noop : _d;
  var _e3 = useChannelSettingsContext(), channel = _e3.channel, onLeaveChannel = _e3.onLeaveChannel;
  var stringSet2 = useLocalization().stringSet;
  var state = useSendbirdStateContext();
  var logger = (_a3 = state === null || state === void 0 ? void 0 : state.config) === null || _a3 === void 0 ? void 0 : _a3.logger;
  var isOnline = (_b2 = state === null || state === void 0 ? void 0 : state.config) === null || _b2 === void 0 ? void 0 : _b2.isOnline;
  var isMobile = useMediaQueryContext().isMobile;
  var getChannelName = function(channel2) {
    if ((channel2 === null || channel2 === void 0 ? void 0 : channel2.name) && (channel2 === null || channel2 === void 0 ? void 0 : channel2.name) !== "Group Channel") {
      return channel2.name;
    }
    if ((channel2 === null || channel2 === void 0 ? void 0 : channel2.name) === "Group Channel" || !(channel2 === null || channel2 === void 0 ? void 0 : channel2.name)) {
      return ((channel2 === null || channel2 === void 0 ? void 0 : channel2.members) || []).map(function(member) {
        return member.nickname || stringSet2.NO_NAME;
      }).join(", ");
    }
    return stringSet2.NO_TITLE;
  };
  if (isMobile) {
    return import_react157.default.createElement(
      Modal,
      { className: "sendbird-channel-settings__leave--mobile", titleText: getChannelName(channel), hideFooter: true, isCloseOnClickOutside: true, onCancel },
      import_react157.default.createElement(
        TextButton,
        { onClick: function() {
          logger.info("ChannelSettings: Leaving channel", channel);
          channel === null || channel === void 0 ? void 0 : channel.leave().then(function() {
            logger.info("ChannelSettings: Leaving channel successful!", channel);
            onLeaveChannel === null || onLeaveChannel === void 0 ? void 0 : onLeaveChannel();
          });
        }, className: "sendbird-channel-settings__leave-label--mobile" },
        import_react157.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.CHANNEL_PREVIEW_MOBILE_LEAVE)
      )
    );
  }
  return import_react157.default.createElement(Modal, { isFullScreenOnMobile: true, disabled: !isOnline, onCancel, onSubmit: function() {
    logger.info("ChannelSettings: Leaving channel", channel);
    channel === null || channel === void 0 ? void 0 : channel.leave().then(function() {
      logger.info("ChannelSettings: Leaving channel successful!", channel);
      if (onLeaveChannel) {
        onLeaveChannel();
      } else {
        onSubmit();
      }
    });
  }, submitText: stringSet2.MODAL__LEAVE_CHANNEL__FOOTER, titleText: stringSet2.MODAL__LEAVE_CHANNEL__TITLE });
};

// node_modules/@sendbird/uikit-react/ChannelSettings/components/ChannelSettingsMenuItem.js
var import_react158 = __toESM(require_react(), 1);
var MenuItem2 = function(_a3) {
  var renderLeft = _a3.renderLeft, renderMiddle = _a3.renderMiddle, _b2 = _a3.renderRight, renderRight = _b2 === void 0 ? function(props) {
    return import_react158.default.createElement(MenuItemAction, __assign({}, props));
  } : _b2, renderAccordion = _a3.renderAccordion, className = _a3.className, onClick = _a3.onClick, onKeyDown = _a3.onKeyDown, accordionOpened = _a3.accordionOpened, setAccordionOpened = _a3.setAccordionOpened;
  var useAccordion = typeof renderAccordion === "function";
  return import_react158.default.createElement(
    import_react158.default.Fragment,
    null,
    import_react158.default.createElement(
      "div",
      { className: classnames("sendbird-channel-settings__panel-item", className), onClick: function(e4) {
        onClick === null || onClick === void 0 ? void 0 : onClick(e4);
        if (useAccordion)
          setAccordionOpened(!accordionOpened);
      }, onKeyDown: function(e4) {
        onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e4);
        if (useAccordion)
          setAccordionOpened(!accordionOpened);
      } },
      renderLeft(),
      renderMiddle(),
      renderRight({
        useAccordion,
        accordionOpened
      })
    ),
    accordionOpened && (renderAccordion === null || renderAccordion === void 0 ? void 0 : renderAccordion())
  );
};
var MenuItemAction = function(_a3) {
  var useAccordion = _a3.useAccordion, accordionOpened = _a3.accordionOpened, children = _a3.children;
  return useAccordion ? import_react158.default.createElement(Icon, { type: IconTypes.CHEVRON_RIGHT, className: [
    "sendbird-accordion__panel-icon-right",
    "sendbird-accordion__panel-icon--chevron",
    accordionOpened ? "sendbird-accordion__panel-icon--open" : ""
  ].join(" "), height: "24px", width: "24px" }) : children;
};

// node_modules/@sendbird/uikit-react/ChannelSettings/components/ChannelSettingMenuList.js
var import_react159 = __toESM(require_react(), 1);
var import_react_dom61 = __toESM(require_react_dom(), 1);
var MenuListByRole = function(_a3) {
  var menuItems = _a3.menuItems;
  var channel = useChannelSettingsContext().channel;
  var menuItemsByRole = isOperator(channel) ? menuItems.operator : menuItems.nonOperator;
  var _b2 = (0, import_react159.useState)(null), openAccordionKey = _b2[0], setOpenAccordionKey = _b2[1];
  return import_react159.default.createElement("div", { className: "sendbird-channel-settings__operator" }, Object.entries(menuItemsByRole).map(function(_a4) {
    var key = _a4[0], item = _a4[1];
    if (item.hideMenu)
      return null;
    return import_react159.default.createElement(MenuItem2, { key, onClick: item.onClick, onKeyDown: item.onKeyDown, renderLeft: function() {
      return import_react159.default.createElement(Icon, __assign({}, item.icon));
    }, renderMiddle: function() {
      return import_react159.default.createElement(Label, __assign({}, item.label));
    }, renderRight: item.rightComponent, renderAccordion: item.accordionComponent, accordionOpened: openAccordionKey === key, setAccordionOpened: function() {
      setOpenAccordionKey(function(prevKey) {
        return prevKey === key ? null : key;
      });
    } });
  }));
};

// node_modules/@sendbird/uikit-react/ChannelSettings/hooks/useMenuList.js
var import_react164 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-DN92WwJg.js
var import_react161 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-B9c-G9oD.js
var import_react160 = __toESM(require_react(), 1);
var import_react_dom62 = __toESM(require_react_dom(), 1);
var processToggleAction = function(isProcessing, action, errorHandler) {
  return __awaiter(void 0, void 0, void 0, function() {
    var error_1;
    return __generator(this, function(_a3) {
      switch (_a3.label) {
        case 0:
          if (isProcessing.current) {
            errorHandler === null || errorHandler === void 0 ? void 0 : errorHandler(new Error("Processing in progress"));
            return [
              2
              /*return*/
            ];
          }
          isProcessing.current = true;
          _a3.label = 1;
        case 1:
          _a3.trys.push([1, 3, 4, 5]);
          return [4, action()];
        case 2:
          _a3.sent();
          return [3, 5];
        case 3:
          error_1 = _a3.sent();
          errorHandler === null || errorHandler === void 0 ? void 0 : errorHandler(error_1);
          return [3, 5];
        case 4:
          isProcessing.current = false;
          return [
            7
            /*endfinally*/
          ];
        case 5:
          return [
            2
            /*return*/
          ];
      }
    });
  });
};
var getInitialIsOperator = function(channel, user) {
  if (!channel)
    return false;
  if (channel instanceof xe3) {
    return channel.isOperator(user);
  }
  return (user === null || user === void 0 ? void 0 : user.role) === V.OPERATOR;
};
var getInitialIsMuted = function(channel, user) {
  return channel ? user === null || user === void 0 ? void 0 : user.isMuted : false;
};
var useToggleOperator = function(_a3) {
  var channel = _a3.channel, user = _a3.user, onToggleOperatorState = _a3.onToggleOperatorState, _isOperator = _a3.isOperator;
  var _b2 = (0, import_react160.useState)(_isOperator !== null && _isOperator !== void 0 ? _isOperator : getInitialIsOperator(channel, user)), isOperator3 = _b2[0], setIsOperator = _b2[1];
  var isProcessing = (0, import_react160.useRef)(false);
  var toggleOperator = (0, import_react160.useCallback)(function() {
    if (!channel)
      return Promise.resolve();
    return processToggleAction(isProcessing, function() {
      return __awaiter(void 0, void 0, void 0, function() {
        var togglePromise, newStatus;
        return __generator(this, function(_a4) {
          switch (_a4.label) {
            case 0:
              togglePromise = isOperator3 ? channel.removeOperators([user.userId]) : channel.addOperators([user.userId]);
              return [4, togglePromise];
            case 1:
              _a4.sent();
              newStatus = !isOperator3;
              setIsOperator(newStatus);
              onToggleOperatorState === null || onToggleOperatorState === void 0 ? void 0 : onToggleOperatorState({ user, newStatus });
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }, function(error) {
      onToggleOperatorState === null || onToggleOperatorState === void 0 ? void 0 : onToggleOperatorState({ user, newStatus: isOperator3, error });
    });
  }, [isOperator3, channel.url, user.userId, onToggleOperatorState]);
  return {
    isOperator: isOperator3,
    toggleOperator
  };
};
var useToggleMute = function(_a3) {
  var channel = _a3.channel, user = _a3.user, onToggleMuteState = _a3.onToggleMuteState, _isMuted = _a3.isMuted;
  var _b2 = (0, import_react160.useState)(_isMuted !== null && _isMuted !== void 0 ? _isMuted : getInitialIsMuted(channel, user)), isMuted = _b2[0], setIsMuted = _b2[1];
  var isProcessing = (0, import_react160.useRef)(false);
  var toggleMute = (0, import_react160.useCallback)(function() {
    if (!channel)
      return Promise.resolve();
    return processToggleAction(isProcessing, function() {
      return __awaiter(void 0, void 0, void 0, function() {
        var togglePromise, newStatus;
        return __generator(this, function(_a4) {
          switch (_a4.label) {
            case 0:
              togglePromise = isMuted ? channel.unmuteUser(user) : channel.muteUser(user);
              return [4, togglePromise];
            case 1:
              _a4.sent();
              newStatus = !isMuted;
              setIsMuted(newStatus);
              onToggleMuteState === null || onToggleMuteState === void 0 ? void 0 : onToggleMuteState({ user, newStatus });
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }, function(error) {
      onToggleMuteState === null || onToggleMuteState === void 0 ? void 0 : onToggleMuteState({ user, newStatus: isMuted, error });
    });
  }, [isMuted, channel.url, user.userId, onToggleMuteState]);
  return {
    isMuted,
    toggleMute
  };
};
var useToggleBan = function(_a3) {
  var channel = _a3.channel, user = _a3.user, onToggleBanState = _a3.onToggleBanState, _isBanned = _a3.isBanned;
  var _b2 = (0, import_react160.useState)(_isBanned !== null && _isBanned !== void 0 ? _isBanned : false), isBanned = _b2[0], setIsBanned = _b2[1];
  var isProcessing = (0, import_react160.useRef)(false);
  var toggleBan = (0, import_react160.useCallback)(function() {
    if (!channel)
      return Promise.resolve();
    return processToggleAction(isProcessing, function() {
      return __awaiter(void 0, void 0, void 0, function() {
        var togglePromise, newStatus;
        return __generator(this, function(_a4) {
          switch (_a4.label) {
            case 0:
              togglePromise = isBanned ? channel.unbanUser(user) : channel.banUser(user);
              return [4, togglePromise];
            case 1:
              _a4.sent();
              newStatus = !isBanned;
              setIsBanned(newStatus);
              onToggleBanState === null || onToggleBanState === void 0 ? void 0 : onToggleBanState({ user, newStatus });
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }, function(error) {
      onToggleBanState === null || onToggleBanState === void 0 ? void 0 : onToggleBanState({ user, newStatus: isBanned, error });
    });
  }, [isBanned, channel.url, user.userId, onToggleBanState]);
  return {
    isBanned,
    toggleBan
  };
};
var UserListItemMenuContext = (0, import_react160.createContext)(void 0);
var UserListItemMenuProvider = function(_a3) {
  var children = _a3.children, values = __rest(_a3, ["children"]);
  var config = useSendbirdStateContext().config;
  var currentUserId = config.userId;
  var channel = values.channel, user = values.user;
  var isCurrentUser = user.userId === currentUserId;
  var isCurrentUserOperator = function() {
    if (!channel)
      return false;
    return channel instanceof xe3 ? channel.isOperator(currentUserId) : channel.myRole === V.OPERATOR;
  }();
  var operatorState = useToggleOperator(values);
  var muteState = useToggleMute(values);
  var banState = useToggleBan(values);
  return import_react160.default.createElement(UserListItemMenuContext.Provider, { value: __assign(__assign(__assign(__assign(__assign({}, values), operatorState), muteState), banState), { isCurrentUser, isCurrentUserOperator }) }, children);
};
var useUserListItemMenuContext = function() {
  var context = (0, import_react160.useContext)(UserListItemMenuContext);
  if (!context) {
    throw new Error("useUserListItemMenuContext must be used within a UserListItemMenuProvider.");
  }
  return context;
};
var OperatorToggleMenuItem = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useUserListItemMenuContext(), isOperator3 = _b2.isOperator, toggleOperator = _b2.toggleOperator, isCurrentUser = _b2.isCurrentUser, isCurrentUserOperator = _b2.isCurrentUserOperator, hideMenu = _b2.hideMenu;
  if (!isCurrentUserOperator)
    return import_react160.default.createElement(import_react160.default.Fragment, null);
  return import_react160.default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e4) {
    var _a4;
    (_a4 = props === null || props === void 0 ? void 0 : props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
    toggleOperator();
    hideMenu();
  }, disabled: isCurrentUser }), (_a3 = props === null || props === void 0 ? void 0 : props.children) !== null && _a3 !== void 0 ? _a3 : isOperator3 ? stringSet2.CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR : stringSet2.CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR);
};
var MuteToggleMenuItem = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useUserListItemMenuContext(), isMuted = _b2.isMuted, toggleMute = _b2.toggleMute, isCurrentUserOperator = _b2.isCurrentUserOperator, hideMenu = _b2.hideMenu, channel = _b2.channel;
  if (!isCurrentUserOperator || (channel === null || channel === void 0 ? void 0 : channel.isBroadcast))
    return import_react160.default.createElement(import_react160.default.Fragment, null);
  return import_react160.default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e4) {
    var _a4;
    (_a4 = props === null || props === void 0 ? void 0 : props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
    toggleMute();
    hideMenu();
  } }), (_a3 = props === null || props === void 0 ? void 0 : props.children) !== null && _a3 !== void 0 ? _a3 : isMuted ? stringSet2.CHANNEL_SETTING__MODERATION__UNMUTE : stringSet2.CHANNEL_SETTING__MODERATION__MUTE);
};
var BanToggleMenuItem = function(props) {
  var _a3;
  var stringSet2 = useLocalization().stringSet;
  var _b2 = useUserListItemMenuContext(), isBanned = _b2.isBanned, toggleBan = _b2.toggleBan, isCurrentUserOperator = _b2.isCurrentUserOperator, hideMenu = _b2.hideMenu;
  if (!isCurrentUserOperator)
    return import_react160.default.createElement(import_react160.default.Fragment, null);
  return import_react160.default.createElement(MenuItem$1, __assign({}, props, { onClick: function(e4) {
    var _a4;
    (_a4 = props === null || props === void 0 ? void 0 : props.onClick) === null || _a4 === void 0 ? void 0 : _a4.call(props, e4);
    toggleBan();
    hideMenu();
  } }), (_a3 = props === null || props === void 0 ? void 0 : props.children) !== null && _a3 !== void 0 ? _a3 : isBanned ? stringSet2.CHANNEL_SETTING__MODERATION__UNBAN : stringSet2.CHANNEL_SETTING__MODERATION__BAN);
};
var TriggerIcon2 = function(_a3) {
  var toggleMenu = _a3.toggleMenu, ref = _a3.ref;
  return import_react160.default.createElement(
    IconButton,
    { ref, className: "sendbird-user-message__more__menu", width: "32px", height: "32px", onClick: toggleMenu },
    import_react160.default.createElement(Icon, { width: "24px", height: "24px", type: IconTypes.MORE, fillColor: IconColors.CONTENT_INVERSE })
  );
};
var DefaultMenuItems = function(_a3) {
  var items = _a3.items;
  var OperatorToggleMenuItem2 = items.OperatorToggleMenuItem, MuteToggleMenuItem2 = items.MuteToggleMenuItem, BanToggleMenuItem2 = items.BanToggleMenuItem;
  return import_react160.default.createElement(
    import_react160.default.Fragment,
    null,
    import_react160.default.createElement(OperatorToggleMenuItem2, null),
    import_react160.default.createElement(MuteToggleMenuItem2, null),
    import_react160.default.createElement(BanToggleMenuItem2, null)
  );
};
var UserListItemMenu = function(props) {
  var user = props.user, className = props.className, _a3 = props.renderTrigger, renderTrigger = _a3 === void 0 ? TriggerIcon2 : _a3, _b2 = props.renderMenuItems, renderMenuItems = _b2 === void 0 ? DefaultMenuItems : _b2;
  var _c = (0, import_react160.useState)(false), isMenuVisible = _c[0], setMenuVisibility = _c[1];
  var containerRef = (0, import_react160.useRef)(null);
  var triggerRef = (0, import_react160.useRef)(null);
  var config = useSendbirdStateContext().config;
  var currentUserId = config.userId;
  var toggleMenu = function() {
    setMenuVisibility(function(prev) {
      return !prev;
    });
  };
  var hideMenu = function() {
    setMenuVisibility(false);
  };
  if (user.userId === currentUserId) {
    return null;
  }
  return import_react160.default.createElement(
    "div",
    { className: classnames("sendbird-user-list-item-menu", className), ref: containerRef },
    import_react160.default.createElement(
      UserListItemMenuProvider,
      __assign({}, props, { hideMenu, toggleMenu }),
      renderTrigger({ ref: triggerRef, toggleMenu }),
      isMenuVisible && import_react160.default.createElement(
        MenuItems,
        {
          // TODO: Add id using getObservingId for useElementObserver
          parentRef: triggerRef,
          parentContainRef: containerRef,
          closeDropdown: hideMenu
        },
        renderMenuItems({
          items: {
            OperatorToggleMenuItem,
            MuteToggleMenuItem,
            BanToggleMenuItem
          }
        })
      )
    )
  );
};

// node_modules/@sendbird/uikit-react/chunks/bundle-DN92WwJg.js
function OperatorsModal(_a3) {
  var _this = this;
  var onCancel = _a3.onCancel, _b2 = _a3.renderUserListItem, renderUserListItem = _b2 === void 0 ? function(props) {
    return import_react161.default.createElement(UserListItem, __assign({}, props));
  } : _b2, _c = _a3.operatorListQueryParams, operatorListQueryParams = _c === void 0 ? {} : _c;
  var _d = (0, import_react161.useState)([]), operators = _d[0], setOperators = _d[1];
  var _e3 = (0, import_react161.useState)(null), operatorQuery = _e3[0], setOperatorQuery = _e3[1];
  var channel = useChannelSettingsContext().channel;
  var stringSet2 = (0, import_react161.useContext)(LocalizationContext).stringSet;
  (0, import_react161.useEffect)(function() {
    var operatorListQuery = channel === null || channel === void 0 ? void 0 : channel.createOperatorListQuery(__assign({ limit: 20 }, operatorListQueryParams));
    operatorListQuery === null || operatorListQuery === void 0 ? void 0 : operatorListQuery.next().then(function(operators2) {
      setOperators(operators2);
    });
    setOperatorQuery(operatorListQuery !== null && operatorListQuery !== void 0 ? operatorListQuery : null);
  }, []);
  return import_react161.default.createElement(
    "div",
    null,
    import_react161.default.createElement(
      Modal,
      { isFullScreenOnMobile: true, hideFooter: true, titleText: stringSet2.CHANNEL_SETTING__OPERATORS__TITLE_ALL, onCancel },
      import_react161.default.createElement("div", { className: "sendbird-more-members__popup-scroll", onScroll: useOnScrollPositionChangeDetector({
        onReachedBottom: function() {
          return __awaiter(_this, void 0, void 0, function() {
            return __generator(this, function(_a4) {
              if (operatorQuery && operatorQuery.hasNext) {
                operatorQuery.next().then(function(o3) {
                  setOperators(__spreadArray(__spreadArray([], operators, true), o3, true));
                });
              }
              return [
                2
                /*return*/
              ];
            });
          });
        }
      }) }, operators.map(function(member) {
        return import_react161.default.createElement(import_react161.default.Fragment, { key: member.userId }, renderUserListItem({
          user: member,
          channel,
          renderListItemMenu: function(props) {
            return import_react161.default.createElement(UserListItemMenu, __assign({}, props, { isOperator: true, onToggleOperatorState: function(_a4) {
              var user = _a4.user;
              setOperators(operators.filter(function(_a5) {
                var userId = _a5.userId;
                return userId !== user.userId;
              }));
            }, renderMenuItems: function(_a4) {
              var items = _a4.items;
              return import_react161.default.createElement(items.OperatorToggleMenuItem, null);
            } }));
          }
        }));
      }))
    )
  );
}
function AddOperatorsModal(_a3) {
  var _this = this;
  var onCancel = _a3.onCancel, onSubmit = _a3.onSubmit, _b2 = _a3.renderUserListItem, renderUserListItem = _b2 === void 0 ? function(props) {
    return import_react161.default.createElement(UserListItem, __assign({}, props));
  } : _b2;
  var _c = (0, import_react161.useState)([]), members = _c[0], setMembers = _c[1];
  var _d = (0, import_react161.useState)({}), selectedMembers = _d[0], setSelectedMembers = _d[1];
  var _e3 = (0, import_react161.useState)(null), memberQuery = _e3[0], setMemberQuery = _e3[1];
  var stringSet2 = (0, import_react161.useContext)(LocalizationContext).stringSet;
  var channel = useChannelSettingsContext().channel;
  (0, import_react161.useEffect)(function() {
    var memberListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery({
      operatorFilter: Zt2.NONOPERATOR,
      limit: 20
    });
    memberListQuery === null || memberListQuery === void 0 ? void 0 : memberListQuery.next().then(function(members2) {
      setMembers(members2);
    });
    setMemberQuery(memberListQuery !== null && memberListQuery !== void 0 ? memberListQuery : null);
  }, []);
  var selectedCount = Object.keys(selectedMembers).filter(function(m5) {
    return selectedMembers[m5];
  }).length;
  return import_react161.default.createElement(
    "div",
    null,
    import_react161.default.createElement(
      Modal,
      { isFullScreenOnMobile: true, type: ButtonTypes.PRIMARY, submitText: stringSet2.CHANNEL_SETTING__OPERATORS__ADD_BUTTON, onCancel, onSubmit: function() {
        var members2 = Object.keys(selectedMembers).filter(function(m5) {
          return selectedMembers[m5];
        });
        channel === null || channel === void 0 ? void 0 : channel.addOperators(members2).then(function() {
          onSubmit(members2);
        });
      }, titleText: stringSet2.CHANNEL_SETTING__MEMBERS__SELECT_TITLE },
      import_react161.default.createElement(Label, { color: selectedCount > 0 ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3, type: LabelTypography.CAPTION_1 }, "".concat(selectedCount, " ").concat(stringSet2.MODAL__INVITE_MEMBER__SELECTED)),
      import_react161.default.createElement("div", { className: "sendbird-more-members__popup-scroll", onScroll: useOnScrollPositionChangeDetector({
        onReachedBottom: function() {
          return __awaiter(_this, void 0, void 0, function() {
            var hasNext;
            return __generator(this, function(_a4) {
              hasNext = memberQuery.hasNext;
              if (hasNext) {
                memberQuery.next().then(function(o3) {
                  setMembers(__spreadArray(__spreadArray([], members, true), o3, true));
                });
              }
              return [
                2
                /*return*/
              ];
            });
          });
        }
      }) }, members.map(function(member) {
        return import_react161.default.createElement(import_react161.default.Fragment, { key: member.userId }, renderUserListItem({
          user: member,
          checkBox: true,
          checked: selectedMembers[member.userId],
          disabled: (member === null || member === void 0 ? void 0 : member.role) === "operator",
          onChange: function(event) {
            var _a4;
            var modifiedSelectedMembers = __assign(__assign({}, selectedMembers), (_a4 = {}, _a4[event.target.id] = event.target.checked, _a4));
            if (!event.target.checked) {
              delete modifiedSelectedMembers[event.target.id];
            }
            setSelectedMembers(modifiedSelectedMembers);
          }
        }));
      }))
    )
  );
}
var OperatorList = function(_a3) {
  var _b2 = _a3.renderUserListItem, renderUserListItem = _b2 === void 0 ? function(props) {
    return import_react161.default.createElement(UserListItem, __assign({}, props));
  } : _b2, _c = _a3.operatorListQueryParams, operatorListQueryParams = _c === void 0 ? {} : _c;
  var _d = (0, import_react161.useState)([]), operators = _d[0], setOperators = _d[1];
  var _e3 = (0, import_react161.useState)(false), showMore = _e3[0], setShowMore = _e3[1];
  var _f = (0, import_react161.useState)(false), showAdd = _f[0], setShowAdd = _f[1];
  var _g2 = (0, import_react161.useState)(false), hasNext = _g2[0], setHasNext = _g2[1];
  var stringSet2 = (0, import_react161.useContext)(LocalizationContext).stringSet;
  var channel = useChannelSettingsContext().channel;
  var refreshList = (0, import_react161.useCallback)(function() {
    if (!channel) {
      setOperators([]);
      return;
    }
    var operatorListQuery = channel === null || channel === void 0 ? void 0 : channel.createOperatorListQuery(__assign({ limit: 10 }, operatorListQueryParams));
    operatorListQuery.next().then(function(operators2) {
      setOperators(operators2);
      setHasNext(operatorListQuery.hasNext);
    });
  }, [channel === null || channel === void 0 ? void 0 : channel.url, channel === null || channel === void 0 ? void 0 : channel.createOperatorListQuery]);
  (0, import_react161.useEffect)(refreshList, [channel === null || channel === void 0 ? void 0 : channel.url]);
  return import_react161.default.createElement(
    import_react161.default.Fragment,
    null,
    operators.map(function(operator) {
      return import_react161.default.createElement(import_react161.default.Fragment, { key: operator.userId }, renderUserListItem({
        user: operator,
        channel,
        size: "small",
        avatarSize: "24px",
        renderListItemMenu: function(props) {
          return import_react161.default.createElement(UserListItemMenu, __assign({}, props, {
            /**
             * isOperator:
             * The ReturnType of createOperatorListQuery is User[].
             * We can't determine if this user is an operator, because User doesn't have a `role` property.
             * Therefore, we need to explicitly specify that this user is an operator.
            */
            isOperator: true,
            onToggleOperatorState: function() {
              setTimeout(function() {
                refreshList();
              }, 500);
            },
            renderMenuItems: function(_a4) {
              var items = _a4.items;
              return import_react161.default.createElement(items.OperatorToggleMenuItem, null);
            }
          }));
        }
      }));
    }),
    import_react161.default.createElement(
      "div",
      { className: "sendbird-channel-settings-accordion__footer" },
      import_react161.default.createElement(Button, { type: ButtonTypes.SECONDARY, size: ButtonSizes.SMALL, onClick: function() {
        setShowAdd(true);
      } }, stringSet2.CHANNEL_SETTING__OPERATORS__TITLE_ADD),
      hasNext && import_react161.default.createElement(Button, { type: ButtonTypes.SECONDARY, size: ButtonSizes.SMALL, onClick: function() {
        setShowMore(true);
      } }, stringSet2.CHANNEL_SETTING__OPERATORS__TITLE_ALL)
    ),
    showMore && import_react161.default.createElement(OperatorsModal, { onCancel: function() {
      setShowMore(false);
      refreshList();
    }, renderUserListItem, operatorListQueryParams }),
    showAdd && import_react161.default.createElement(AddOperatorsModal, { onCancel: function() {
      return setShowAdd(false);
    }, onSubmit: function() {
      setTimeout(function() {
        refreshList();
      }, 500);
      setShowAdd(false);
    }, renderUserListItem })
  );
};
function BannedUsersModal(_a3) {
  var _this = this;
  var onCancel = _a3.onCancel, _b2 = _a3.renderUserListItem, renderUserListItem = _b2 === void 0 ? function(props) {
    return import_react161.default.createElement(UserListItem, __assign({}, props));
  } : _b2, _c = _a3.bannedUserListQueryParams, bannedUserListQueryParams = _c === void 0 ? {} : _c;
  var _d = (0, import_react161.useState)([]), members = _d[0], setMembers = _d[1];
  var _e3 = (0, import_react161.useState)(null), memberQuery = _e3[0], setMemberQuery = _e3[1];
  var channel = useChannelSettingsContext().channel;
  var stringSet2 = useLocalization().stringSet;
  (0, import_react161.useEffect)(function() {
    var bannedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery(__assign({ limit: 20 }, bannedUserListQueryParams));
    if (bannedUserListQuery) {
      bannedUserListQuery.next().then(function(users) {
        setMembers(users);
      });
      setMemberQuery(bannedUserListQuery);
    }
  }, []);
  return import_react161.default.createElement(
    "div",
    null,
    import_react161.default.createElement(
      Modal,
      { isFullScreenOnMobile: true, hideFooter: true, onCancel: function() {
        return onCancel();
      }, onSubmit: noop, titleText: stringSet2.CHANNEL_SETTING__BANNED_MEMBERS__TITLE },
      import_react161.default.createElement("div", { className: "sendbird-more-members__popup-scroll", onScroll: useOnScrollPositionChangeDetector({
        onReachedBottom: function() {
          return __awaiter(_this, void 0, void 0, function() {
            var hasNext;
            return __generator(this, function(_a4) {
              if (!memberQuery)
                return [
                  2
                  /*return*/
                ];
              hasNext = memberQuery.hasNext;
              if (hasNext) {
                memberQuery.next().then(function(o3) {
                  setMembers(__spreadArray(__spreadArray([], members, true), o3, true));
                });
              }
              return [
                2
                /*return*/
              ];
            });
          });
        }
      }) }, members.map(function(member) {
        return renderUserListItem({
          user: member,
          channel,
          renderListItemMenu: function(props) {
            return import_react161.default.createElement(UserListItemMenu, __assign({}, props, { isBanned: true, onToggleBanState: function() {
              setMembers(members.filter(function(m5) {
                return m5.userId !== member.userId;
              }));
            }, renderMenuItems: function(_a4) {
              var items = _a4.items;
              return import_react161.default.createElement(items.BanToggleMenuItem, null);
            } }));
          }
        });
      }))
    )
  );
}
var BannedUserList = function(_a3) {
  var _b2 = _a3.renderUserListItem, renderUserListItem = _b2 === void 0 ? function(props) {
    return import_react161.default.createElement(UserListItem, __assign({}, props));
  } : _b2, _c = _a3.bannedUserListQueryParams, bannedUserListQueryParams = _c === void 0 ? {} : _c;
  var _d = (0, import_react161.useState)([]), members = _d[0], setMembers = _d[1];
  var _e3 = (0, import_react161.useState)(false), hasNext = _e3[0], setHasNext = _e3[1];
  var _f = (0, import_react161.useState)(false), showModal = _f[0], setShowModal = _f[1];
  var stringSet2 = (0, import_react161.useContext)(LocalizationContext).stringSet;
  var channel = useChannelSettingsContext().channel;
  var refreshList = (0, import_react161.useCallback)(function() {
    if (!channel) {
      setMembers([]);
      return;
    }
    var bannedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery(__assign({ limit: 10 }, bannedUserListQueryParams));
    bannedUserListQuery.next().then(function(users) {
      setMembers(users);
      setHasNext(bannedUserListQuery.hasNext);
    });
  }, [channel === null || channel === void 0 ? void 0 : channel.url, channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery]);
  (0, import_react161.useEffect)(refreshList, [channel === null || channel === void 0 ? void 0 : channel.url]);
  return import_react161.default.createElement(
    import_react161.default.Fragment,
    null,
    members.map(function(member) {
      return import_react161.default.createElement(import_react161.default.Fragment, { key: member.userId }, renderUserListItem({
        user: member,
        channel,
        size: "small",
        avatarSize: "24px",
        renderListItemMenu: function(props) {
          return import_react161.default.createElement(UserListItemMenu, __assign({}, props, { isBanned: true, onToggleBanState: function() {
            return refreshList();
          }, renderMenuItems: function(_a4) {
            var items = _a4.items;
            return import_react161.default.createElement(items.BanToggleMenuItem, null);
          } }));
        }
      }));
    }),
    members && members.length === 0 && import_react161.default.createElement(Label, { className: "sendbird-channel-settings__empty-list", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_3 }, stringSet2.CHANNEL_SETTING__MODERATION__EMPTY_BAN),
    hasNext && import_react161.default.createElement(
      "div",
      { className: "sendbird-channel-settings-accordion__footer" },
      import_react161.default.createElement(Button, { type: ButtonTypes.SECONDARY, size: ButtonSizes.SMALL, onClick: function() {
        setShowModal(true);
      } }, stringSet2.CHANNEL_SETTING__MODERATION__ALL_BAN)
    ),
    showModal && import_react161.default.createElement(BannedUsersModal, { onCancel: function() {
      setShowModal(false);
      refreshList();
    }, renderUserListItem, bannedUserListQueryParams })
  );
};
function MutedMembersModal(_a3) {
  var _this = this;
  var onCancel = _a3.onCancel, _b2 = _a3.renderUserListItem, renderUserListItem = _b2 === void 0 ? function(props) {
    return import_react161.default.createElement(UserListItem, __assign({}, props));
  } : _b2, _c = _a3.memberListQueryParams, memberListQueryParams = _c === void 0 ? {} : _c;
  var _d = (0, import_react161.useState)([]), members = _d[0], setMembers = _d[1];
  var _e3 = (0, import_react161.useState)(null), memberQuery = _e3[0], setMemberQuery = _e3[1];
  var channel = useChannelSettingsContext().channel;
  var stringSet2 = useLocalization().stringSet;
  (0, import_react161.useEffect)(function() {
    var memberUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery(__assign(__assign({ limit: 20 }, memberListQueryParams), {
      // @ts-ignore
      mutedMemberFilter: "muted"
    }));
    memberUserListQuery === null || memberUserListQuery === void 0 ? void 0 : memberUserListQuery.next().then(function(members2) {
      setMembers(members2);
    });
    setMemberQuery(memberUserListQuery !== null && memberUserListQuery !== void 0 ? memberUserListQuery : null);
  }, []);
  return import_react161.default.createElement(
    "div",
    null,
    import_react161.default.createElement(
      Modal,
      { isFullScreenOnMobile: true, hideFooter: true, onCancel: function() {
        return onCancel();
      }, onSubmit: noop, titleText: stringSet2.CHANNEL_SETTING__MUTED_MEMBERS__TITLE },
      import_react161.default.createElement("div", { className: "sendbird-more-members__popup-scroll", onScroll: useOnScrollPositionChangeDetector({
        onReachedBottom: function() {
          return __awaiter(_this, void 0, void 0, function() {
            var hasNext;
            return __generator(this, function(_a4) {
              hasNext = memberQuery.hasNext;
              if (hasNext) {
                memberQuery.next().then(function(o3) {
                  setMembers(__spreadArray(__spreadArray([], members, true), o3, true));
                });
              }
              return [
                2
                /*return*/
              ];
            });
          });
        }
      }) }, members.map(function(member) {
        return import_react161.default.createElement(import_react161.default.Fragment, { key: member.userId }, renderUserListItem({
          user: member,
          channel,
          renderListItemMenu: function(props) {
            return import_react161.default.createElement(UserListItemMenu, __assign({}, props, { onToggleMuteState: function() {
              setMembers(members.filter(function(m5) {
                return m5.userId !== member.userId;
              }));
            }, renderMenuItems: function(_a4) {
              var items = _a4.items;
              return import_react161.default.createElement(items.MuteToggleMenuItem, null);
            } }));
          }
        }));
      }))
    )
  );
}
var MutedMemberList = function(_a3) {
  var _b2 = _a3.renderUserListItem, renderUserListItem = _b2 === void 0 ? function(props) {
    return import_react161.default.createElement(UserListItem, __assign({}, props));
  } : _b2, _c = _a3.memberListQueryParams, memberListQueryParams = _c === void 0 ? {} : _c;
  var _d = (0, import_react161.useState)([]), members = _d[0], setMembers = _d[1];
  var _e3 = (0, import_react161.useState)(false), hasNext = _e3[0], setHasNext = _e3[1];
  var _f = (0, import_react161.useState)(false), showModal = _f[0], setShowModal = _f[1];
  var stringSet2 = useLocalization().stringSet;
  var channel = useChannelSettingsContext().channel;
  var refreshList = (0, import_react161.useCallback)(function() {
    if (!channel) {
      setMembers([]);
      return;
    }
    var memberUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery(__assign(__assign({ limit: 10 }, memberListQueryParams), {
      // @ts-ignore
      mutedMemberFilter: "muted"
    }));
    memberUserListQuery.next().then(function(members2) {
      setMembers(members2);
      setHasNext(memberUserListQuery.hasNext);
    });
  }, [channel === null || channel === void 0 ? void 0 : channel.url, channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery]);
  (0, import_react161.useEffect)(refreshList, [channel === null || channel === void 0 ? void 0 : channel.url]);
  return import_react161.default.createElement(
    import_react161.default.Fragment,
    null,
    members.map(function(member) {
      return import_react161.default.createElement(import_react161.default.Fragment, { key: member.userId }, renderUserListItem({
        user: member,
        channel,
        size: "small",
        avatarSize: "24px",
        renderListItemMenu: function(props) {
          return import_react161.default.createElement(UserListItemMenu, __assign({}, props, { onToggleMuteState: function() {
            setTimeout(function() {
              refreshList();
            }, 500);
          }, renderMenuItems: function(_a4) {
            var items = _a4.items;
            return import_react161.default.createElement(items.MuteToggleMenuItem, null);
          } }));
        }
      }));
    }),
    members && members.length === 0 && import_react161.default.createElement(Label, { className: "sendbird-channel-settings__empty-list", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_3 }, stringSet2.CHANNEL_SETTING__NO_UNMUTED),
    hasNext && import_react161.default.createElement(
      "div",
      { className: "sendbird-channel-settings-accordion__footer" },
      import_react161.default.createElement(Button, { type: ButtonTypes.SECONDARY, size: ButtonSizes.SMALL, onClick: function() {
        setShowModal(true);
      } }, stringSet2.CHANNEL_SETTING__MUTED_MEMBERS__TITLE_ALL)
    ),
    showModal && import_react161.default.createElement(MutedMembersModal, { onCancel: function() {
      setShowModal(false);
      refreshList();
    }, renderUserListItem, memberListQueryParams })
  );
};

// node_modules/@sendbird/uikit-react/chunks/bundle-DKPIYAYp.js
var import_react162 = __toESM(require_react(), 1);
function MembersModal(_a3) {
  var _this = this;
  var onCancel = _a3.onCancel, _b2 = _a3.renderUserListItem, renderUserListItem = _b2 === void 0 ? function(props) {
    return import_react162.default.createElement(UserListItem, __assign({}, props));
  } : _b2, _c = _a3.memberListQueryParams, memberListQueryParams = _c === void 0 ? {} : _c;
  var _d = (0, import_react162.useState)([]), members = _d[0], setMembers = _d[1];
  var _e3 = (0, import_react162.useState)(null), memberQuery = _e3[0], setMemberQuery = _e3[1];
  var channel = useChannelSettingsContext().channel;
  var stringSet2 = (0, import_react162.useContext)(LocalizationContext).stringSet;
  (0, import_react162.useEffect)(function() {
    var memberListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery(__assign({ limit: 20 }, memberListQueryParams));
    memberListQuery === null || memberListQuery === void 0 ? void 0 : memberListQuery.next().then(function(members2) {
      setMembers(members2);
    });
    setMemberQuery(memberListQuery !== null && memberListQuery !== void 0 ? memberListQuery : null);
  }, []);
  return import_react162.default.createElement(
    "div",
    null,
    import_react162.default.createElement(
      Modal,
      { isFullScreenOnMobile: true, hideFooter: true, onCancel: function() {
        return onCancel();
      }, onSubmit: noop, titleText: stringSet2.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS },
      import_react162.default.createElement("div", { className: "sendbird-more-members__popup-scroll", onScroll: useOnScrollPositionChangeDetector({
        onReachedBottom: function() {
          return __awaiter(_this, void 0, void 0, function() {
            return __generator(this, function(_a4) {
              if (memberQuery && memberQuery.hasNext) {
                memberQuery.next().then(function(o3) {
                  setMembers(__spreadArray(__spreadArray([], members, true), o3, true));
                });
              }
              return [
                2
                /*return*/
              ];
            });
          });
        }
      }) }, members.map(function(member, index) {
        return import_react162.default.createElement(import_react162.default.Fragment, { key: member.userId }, renderUserListItem({
          // NOTE: This `index` is used to display the current user's user item at the top when customizing externally.
          index,
          user: member,
          channel,
          renderListItemMenu: function(props) {
            return import_react162.default.createElement(UserListItemMenu, __assign({}, props, { onToggleOperatorState: function(_a4) {
              var isOperator3 = _a4.newStatus;
              var newMembers = __spreadArray([], members, true);
              for (var _i2 = 0, newMembers_1 = newMembers; _i2 < newMembers_1.length; _i2++) {
                var newMember = newMembers_1[_i2];
                if (newMember.userId === member.userId) {
                  newMember.role = isOperator3 ? V.OPERATOR : V.NONE;
                  break;
                }
              }
              setMembers(newMembers);
            }, onToggleMuteState: function(_a4) {
              var isMuted = _a4.newStatus;
              var newMembers = __spreadArray([], members, true);
              for (var _i2 = 0, newMembers_2 = newMembers; _i2 < newMembers_2.length; _i2++) {
                var newMember = newMembers_2[_i2];
                if (newMember.userId === member.userId) {
                  newMember.isMuted = isMuted;
                  break;
                }
              }
              setMembers(newMembers);
            }, onToggleBanState: function() {
              setMembers(members.filter(function(_a4) {
                var userId = _a4.userId;
                return userId !== member.userId;
              }));
            } }));
          }
        }));
      }))
    )
  );
}
function InviteUsersModal(_a3) {
  var _this = this;
  var _b2, _c, _d;
  var onCancel = _a3.onCancel, onSubmit = _a3.onSubmit, _e3 = _a3.renderUserListItem, renderUserListItem = _e3 === void 0 ? function(props) {
    return import_react162.default.createElement(UserListItem, __assign({}, props));
  } : _e3;
  var _f = (0, import_react162.useState)([]), users = _f[0], setUsers = _f[1];
  var _g2 = (0, import_react162.useState)(null), userListQuery = _g2[0], setUserListQuery = _g2[1];
  var _h = (0, import_react162.useState)({}), selectedUsers = _h[0], setSelectedUsers = _h[1];
  var state = useSendbirdStateContext();
  var sdk = (_c = (_b2 = state === null || state === void 0 ? void 0 : state.stores) === null || _b2 === void 0 ? void 0 : _b2.sdkStore) === null || _c === void 0 ? void 0 : _c.sdk;
  var globalUserListQuery = (_d = state === null || state === void 0 ? void 0 : state.config) === null || _d === void 0 ? void 0 : _d.userListQuery;
  var _j = useChannelSettingsContext(), channel = _j.channel, overrideInviteUser = _j.overrideInviteUser, queries = _j.queries;
  var stringSet2 = useLocalization().stringSet;
  var onScroll = useOnScrollPositionChangeDetector({
    onReachedBottom: function() {
      return __awaiter(this, void 0, void 0, function() {
        var users_1;
        return __generator(this, function(_a4) {
          switch (_a4.label) {
            case 0:
              if (!(userListQuery === null || userListQuery === void 0 ? void 0 : userListQuery.hasNext)) return [3, 2];
              return [4, userListQuery.next()];
            case 1:
              users_1 = _a4.sent();
              setUsers(function(prev) {
                return __spreadArray(__spreadArray([], prev, true), users_1, true);
              });
              _a4.label = 2;
            case 2:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }
  });
  var onInviteUsers = function() {
    return __awaiter(_this, void 0, void 0, function() {
      var userIdsToInvite;
      return __generator(this, function(_a4) {
        switch (_a4.label) {
          case 0:
            userIdsToInvite = Object.keys(selectedUsers);
            if (!(channel && typeof overrideInviteUser === "function")) return [3, 1];
            overrideInviteUser({ users: userIdsToInvite, onClose: onCancel, channel });
            return [3, 3];
          case 1:
            return [4, channel === null || channel === void 0 ? void 0 : channel.inviteWithUserIds(userIdsToInvite)];
          case 2:
            _a4.sent();
            onSubmit(userIdsToInvite);
            _a4.label = 3;
          case 3:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  var onSelectUser = function(user) {
    setSelectedUsers(function(_a4) {
      var draft = __rest(_a4, []);
      if (draft[user.userId]) {
        delete draft[user.userId];
      } else {
        draft[user.userId] = user;
      }
      return draft;
    });
  };
  var membersMap = (0, import_react162.useMemo)(function() {
    var _a4;
    var _b3, _c2;
    if ((channel === null || channel === void 0 ? void 0 : channel.isSuper) || (channel === null || channel === void 0 ? void 0 : channel.isBroadcast))
      return _a4 = {}, _a4[(_c2 = (_b3 = sdk.currentUser) === null || _b3 === void 0 ? void 0 : _b3.userId) !== null && _c2 !== void 0 ? _c2 : ""] = sdk.currentUser, _a4;
    return channel === null || channel === void 0 ? void 0 : channel.members.reduce(function(acc, cur) {
      acc[cur.userId] = cur;
      return acc;
    }, {});
  }, [channel === null || channel === void 0 ? void 0 : channel.members.length]);
  (0, import_react162.useEffect)(function() {
    var fetchUsersAndSetQuery = function() {
      return __awaiter(_this, void 0, void 0, function() {
        var query, users_2;
        var _a4;
        return __generator(this, function(_b3) {
          switch (_b3.label) {
            case 0:
              query = (_a4 = globalUserListQuery === null || globalUserListQuery === void 0 ? void 0 : globalUserListQuery()) !== null && _a4 !== void 0 ? _a4 : sdk === null || sdk === void 0 ? void 0 : sdk.createApplicationUserListQuery(queries === null || queries === void 0 ? void 0 : queries.applicationUserListQuery);
              if (!query) return [3, 2];
              return [4, query.next()];
            case 1:
              users_2 = _b3.sent();
              setUserListQuery(query);
              setUsers(users_2);
              _b3.label = 2;
            case 2:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    };
    fetchUsersAndSetQuery();
  }, [sdk]);
  return import_react162.default.createElement(
    "div",
    null,
    import_react162.default.createElement(
      Modal,
      { isFullScreenOnMobile: true, disabled: Object.keys(selectedUsers).length === 0, submitText: stringSet2.BUTTON__INVITE, type: ButtonTypes.PRIMARY, onCancel: function() {
        return onCancel();
      }, onSubmit: onInviteUsers, titleText: stringSet2.CHANNEL_SETTING__MEMBERS__SELECT_TITLE },
      import_react162.default.createElement(
        "div",
        { className: "sendbird-more-members__popup-scroll", onScroll },
        import_react162.default.createElement("div", { className: "sendbird-more-members__popup-scroll__inner" }, users.map(function(user) {
          var isMember = Boolean(membersMap ? membersMap[user.userId] : false);
          var isSelected = Boolean(selectedUsers[user.userId]);
          return import_react162.default.createElement(import_react162.default.Fragment, { key: user.userId }, renderUserListItem({
            user,
            checkBox: true,
            checked: isMember || isSelected,
            disabled: isMember,
            onChange: function() {
              return onSelectUser(user);
            }
          }));
        }))
      )
    )
  );
}
var MemberList = function(_a3) {
  var _b2 = _a3.renderUserListItem, renderUserListItem = _b2 === void 0 ? function(props) {
    return import_react162.default.createElement(UserListItem, __assign({}, props));
  } : _b2, _c = _a3.memberListQueryParams, memberListQueryParams = _c === void 0 ? {} : _c;
  var _d = (0, import_react162.useState)([]), members = _d[0], setMembers = _d[1];
  var _e3 = (0, import_react162.useState)(false), hasNext = _e3[0], setHasNext = _e3[1];
  var _f = (0, import_react162.useState)(false), showAllMembers = _f[0], setShowAllMembers = _f[1];
  var _g2 = (0, import_react162.useState)(false), showInviteUsers = _g2[0], setShowInviteUsers = _g2[1];
  var _h = useChannelSettingsContext(), channel = _h.channel, forceUpdateUI = _h.forceUpdateUI;
  var stringSet2 = (0, import_react162.useContext)(LocalizationContext).stringSet;
  var refreshList = (0, import_react162.useCallback)(function() {
    if (!channel) {
      setMembers([]);
      return;
    }
    var memberUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery(__assign({ limit: 10 }, memberListQueryParams));
    memberUserListQuery.next().then(function(members2) {
      setMembers(members2);
      setHasNext(memberUserListQuery.hasNext);
    });
  }, [channel === null || channel === void 0 ? void 0 : channel.url, channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery]);
  (0, import_react162.useEffect)(refreshList, [channel === null || channel === void 0 ? void 0 : channel.url]);
  return import_react162.default.createElement(
    "div",
    { className: "sendbird-channel-settings-member-list" },
    members.map(function(member, index) {
      return import_react162.default.createElement(import_react162.default.Fragment, { key: member.userId }, renderUserListItem({
        // NOTE: This `index` is used to display the current user's user item at the top when customizing externally.
        index,
        user: member,
        channel,
        size: "small",
        avatarSize: "24px",
        renderListItemMenu: function(props) {
          return import_react162.default.createElement(UserListItemMenu, __assign({}, props, { onToggleOperatorState: function(_a4) {
            var isOperator3 = _a4.newStatus;
            var newMembers = __spreadArray([], members, true);
            for (var _i2 = 0, newMembers_1 = newMembers; _i2 < newMembers_1.length; _i2++) {
              var newMember = newMembers_1[_i2];
              if (newMember.userId === member.userId) {
                newMember.role = isOperator3 ? V.OPERATOR : V.NONE;
                break;
              }
            }
            setMembers(newMembers);
          }, onToggleMuteState: function(_a4) {
            var isMuted = _a4.newStatus;
            var newMembers = __spreadArray([], members, true);
            for (var _i2 = 0, newMembers_2 = newMembers; _i2 < newMembers_2.length; _i2++) {
              var newMember = newMembers_2[_i2];
              if (newMember.userId === member.userId) {
                newMember.isMuted = isMuted;
                break;
              }
            }
            setMembers(newMembers);
          }, onToggleBanState: function() {
            setMembers(members.filter(function(_a4) {
              var userId = _a4.userId;
              return userId !== member.userId;
            }));
          } }));
        }
      }));
    }),
    import_react162.default.createElement(
      "div",
      { className: "sendbird-channel-settings-accordion__footer" },
      hasNext && import_react162.default.createElement(Button, { type: ButtonTypes.SECONDARY, size: ButtonSizes.SMALL, onClick: function() {
        return setShowAllMembers(true);
      } }, stringSet2.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS),
      import_react162.default.createElement(Button, { type: ButtonTypes.SECONDARY, size: ButtonSizes.SMALL, onClick: function() {
        return setShowInviteUsers(true);
      } }, stringSet2.CHANNEL_SETTING__MEMBERS__INVITE_MEMBER)
    ),
    showAllMembers && import_react162.default.createElement(MembersModal, { onCancel: function() {
      setShowAllMembers(false);
      refreshList();
      forceUpdateUI();
    }, renderUserListItem, memberListQueryParams }),
    showInviteUsers && import_react162.default.createElement(InviteUsersModal, { onCancel: function() {
      return setShowInviteUsers(false);
    }, onSubmit: function() {
      setShowInviteUsers(false);
      refreshList();
      forceUpdateUI();
    }, renderUserListItem })
  );
};

// node_modules/@sendbird/uikit-react/ui/Toggle.js
var import_react163 = __toESM(require_react(), 1);
var noop5 = function() {
};
var TOGGLE_DEFAULT_VALUE = {
  checked: null,
  defaultChecked: false,
  disabled: false,
  onChange: noop5,
  onFocus: noop5,
  onBlur: noop5
};
var ToggleContext = import_react163.default.createContext(TOGGLE_DEFAULT_VALUE);
function useToggleContext() {
  var context = import_react163.default.useContext(ToggleContext);
  if (context === void 0) {
    throw new Error("@sendbird/uikit-react/ui/Toggle: useToggleContext must be used within a ToggleContainer.");
  }
  return context;
}
function ToggleContainer(_a3) {
  var _b2 = _a3.checked, checked = _b2 === void 0 ? TOGGLE_DEFAULT_VALUE.checked : _b2, _c = _a3.defaultChecked, defaultChecked = _c === void 0 ? TOGGLE_DEFAULT_VALUE.defaultChecked : _c, _d = _a3.disabled, disabled = _d === void 0 ? TOGGLE_DEFAULT_VALUE.disabled : _d, _e3 = _a3.onChange, onChange = _e3 === void 0 ? TOGGLE_DEFAULT_VALUE.onChange : _e3, _f = _a3.onFocus, onFocus = _f === void 0 ? TOGGLE_DEFAULT_VALUE.onFocus : _f, _g2 = _a3.onBlur, onBlur = _g2 === void 0 ? TOGGLE_DEFAULT_VALUE.onBlur : _g2, children = _a3.children;
  var _h = (0, import_react163.useState)(defaultChecked || false), isChecked = _h[0], setChecked = _h[1];
  var handleChange = (0, import_react163.useCallback)(function(e4) {
    if (disabled) {
      return;
    }
    if (checked === null) {
      setChecked(e4.currentTarget.checked);
    }
    onChange(e4);
  }, [onChange, checked]);
  return import_react163.default.createElement(ToggleContext.Provider, { value: {
    checked: checked !== null ? checked : isChecked,
    disabled,
    onChange: handleChange,
    onFocus: function(e4) {
      if (!disabled) {
        onFocus(e4);
      }
    },
    onBlur: function(e4) {
      if (!disabled) {
        onBlur(e4);
      }
    }
  } }, children);
}
function filterNumber(input) {
  if (typeof input !== "string" && typeof input !== "number") {
    try {
      var config = useSendbirdStateContext().config;
      var logger = config.logger;
      logger.warning("@sendbird/uikit-react/ui/Toggle: TypeError - expected string or number.", input);
    } catch (_2) {
    }
    return [];
  }
  if (typeof input === "number") {
    return [input];
  }
  var regex2 = /(-?\d+)(\.\d+)?/g;
  var numbers = input.match(regex2) || [];
  return numbers.map(parseFloat);
}
function ToggleUI(props) {
  var _a3;
  var _b2 = props.reversed, reversed = _b2 === void 0 ? false : _b2, _c = props.width, width = _c === void 0 ? "40px" : _c, _d = props.animationDuration, animationDuration = _d === void 0 ? "0.5s" : _d, _e3 = props.style, style = _e3 === void 0 ? {} : _e3, _f = props.name, name = _f === void 0 ? "" : _f, _g2 = props.id, id2 = _g2 === void 0 ? "" : _g2, _h = props.ariaLabel, ariaLabel = _h === void 0 ? "" : _h, _j = props.ariaLabelledby, ariaLabelledby = _j === void 0 ? "" : _j;
  var _k = useToggleContext(), checked = _k.checked, disabled = _k.disabled, onChange = _k.onChange, onFocus = _k.onFocus, onBlur = _k.onBlur;
  var _l = (0, import_react163.useState)(""), animatedClassName = _l[0], setAnimatedClassName = _l[1];
  var toggleWidth = (_a3 = filterNumber(width)) === null || _a3 === void 0 ? void 0 : _a3[0];
  var toggleHeight = toggleWidth / 2;
  var dotSize = toggleHeight * 0.6;
  return import_react163.default.createElement(
    "label",
    { className: [
      "sendbird-input-toggle-button",
      animatedClassName,
      checked ? "sendbird-input-toggle-button--checked" : "sendbird-input-toggle-button--unchecked",
      disabled ? "sendbird-input-toggle-button--disabled" : [],
      reversed ? "sendbird-input-toggle-button--reversed" : []
    ].flat().join(" "), "data-testid": "sendbird-input-toggle-button", style: __assign({ width: "".concat(toggleWidth, "px"), height: "".concat(toggleHeight, "px"), borderRadius: "".concat(dotSize, "px") }, style) },
    import_react163.default.createElement("div", { className: [
      "sendbird-input-toggle-button__inner-dot",
      checked ? "sendbird-input-toggle-button__inner-dot--activate" : "sendbird-input-toggle-button__inner-dot--inactivate"
    ].join(" "), style: {
      width: "".concat(dotSize, "px"),
      height: "".concat(dotSize, "px"),
      animationDuration
    } }),
    import_react163.default.createElement("input", { type: "checkbox", "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, name, id: id2, checked: checked !== null && checked !== void 0 ? checked : void 0, disabled, onChange: function(e4) {
      onChange === null || onChange === void 0 ? void 0 : onChange(e4);
      setAnimatedClassName(e4.currentTarget.checked ? "sendbird-input-toggle-button--turned-on" : "sendbird-input-toggle-button--turned-off");
    }, onFocus, onBlur })
  );
}
function Toggle(props) {
  var checked = props.checked, defaultChecked = props.defaultChecked, disabled = props.disabled, onChange = props.onChange, onFocus = props.onFocus, onBlur = props.onBlur, className = props.className, reversed = props.reversed, width = props.width, animationDuration = props.animationDuration, style = props.style, name = props.name, id2 = props.id, ariaLabel = props.ariaLabel, ariaLabelledby = props.ariaLabelledby;
  return import_react163.default.createElement(
    "div",
    { className: "sendbird-ui-toggle ".concat(className) },
    import_react163.default.createElement(
      ToggleContainer,
      { checked, defaultChecked, disabled, onChange, onFocus, onBlur },
      import_react163.default.createElement(ToggleUI, { reversed, width, animationDuration, style, name, id: id2, ariaLabel, ariaLabelledby })
    )
  );
}

// node_modules/@sendbird/uikit-react/ChannelSettings/hooks/useMenuList.js
var import_react_dom63 = __toESM(require_react_dom(), 1);
var kFormatter = function(num) {
  return Math.abs(num) > 999 ? "".concat((Math.abs(num) / 1e3).toFixed(1), "K") : num;
};
var commonIconProps = {
  fillColor: IconColors.PRIMARY,
  width: 24,
  height: 24,
  className: "sendbird-channel-settings__accordion-icon"
};
var commonLabelProps = {
  type: LabelTypography.SUBTITLE_1,
  color: LabelColors.ONBACKGROUND_1
};
var useMenuItems = function() {
  var _a3 = (0, import_react164.useState)(false), frozen = _a3[0], setFrozen = _a3[1];
  var stringSet2 = (0, import_react164.useContext)(LocalizationContext).stringSet;
  var _b2 = useChannelSettingsContext(), channel = _b2.channel, renderUserListItem = _b2.renderUserListItem;
  (0, import_react164.useEffect)(function() {
    var _a4;
    setFrozen((_a4 = channel === null || channel === void 0 ? void 0 : channel.isFrozen) !== null && _a4 !== void 0 ? _a4 : false);
  }, [channel === null || channel === void 0 ? void 0 : channel.isFrozen]);
  return (0, import_react164.useMemo)(function() {
    return {
      operator: {
        operators: {
          icon: __assign(__assign({}, commonIconProps), { type: IconTypes.OPERATOR }),
          label: __assign(__assign({}, commonLabelProps), { children: stringSet2.CHANNEL_SETTING__OPERATORS__TITLE }),
          accordionComponent: function() {
            return import_react164.default.createElement(OperatorList, { renderUserListItem });
          }
        },
        allUsers: {
          icon: __assign(__assign({}, commonIconProps), { type: IconTypes.MEMBERS }),
          label: __assign(__assign({}, commonLabelProps), { children: stringSet2.CHANNEL_SETTING__MEMBERS__TITLE }),
          rightComponent: function(props) {
            return import_react164.default.createElement(
              "div",
              { className: "sendbird-channel-settings__members" },
              import_react164.default.createElement(Badge, { count: (channel === null || channel === void 0 ? void 0 : channel.memberCount) ? kFormatter(channel.memberCount) : "" }),
              import_react164.default.createElement(MenuItemAction, __assign({}, props))
            );
          },
          accordionComponent: function() {
            return import_react164.default.createElement(MemberList, { renderUserListItem });
          }
        },
        mutedUsers: {
          icon: __assign(__assign({}, commonIconProps), { type: IconTypes.MUTE }),
          label: __assign(__assign({}, commonLabelProps), { children: stringSet2.CHANNEL_SETTING__MUTED_MEMBERS__TITLE }),
          accordionComponent: function() {
            return import_react164.default.createElement(MutedMemberList, { renderUserListItem });
          }
        },
        bannedUsers: {
          icon: __assign(__assign({}, commonIconProps), { type: IconTypes.BAN }),
          label: __assign(__assign({}, commonLabelProps), { children: stringSet2.CHANNEL_SETTING__BANNED_MEMBERS__TITLE }),
          accordionComponent: function() {
            return import_react164.default.createElement(BannedUserList, { renderUserListItem });
          }
        },
        freezeChannel: {
          hideMenu: channel === null || channel === void 0 ? void 0 : channel.isBroadcast,
          icon: __assign(__assign({}, commonIconProps), { type: IconTypes.FREEZE }),
          label: __assign(__assign({}, commonLabelProps), { children: stringSet2.CHANNEL_SETTING__FREEZE_CHANNEL }),
          rightComponent: function() {
            return import_react164.default.createElement(Toggle, { className: "sendbird-channel-settings__frozen-icon", checked: frozen, onChange: function() {
              if (frozen) {
                channel === null || channel === void 0 ? void 0 : channel.unfreeze().then(function() {
                  setFrozen(function(prev) {
                    return !prev;
                  });
                });
              } else {
                channel === null || channel === void 0 ? void 0 : channel.freeze().then(function() {
                  setFrozen(function(prev) {
                    return !prev;
                  });
                });
              }
            } });
          }
        }
      },
      nonOperator: {
        allUsers: {
          icon: __assign(__assign({}, commonIconProps), { type: IconTypes.MEMBERS }),
          label: __assign(__assign({}, commonLabelProps), { children: stringSet2.CHANNEL_SETTING__MEMBERS__TITLE }),
          rightComponent: function(props) {
            return import_react164.default.createElement(
              "div",
              { className: "sendbird-channel-settings__members" },
              import_react164.default.createElement(Badge, { count: (channel === null || channel === void 0 ? void 0 : channel.memberCount) ? kFormatter(channel.memberCount) : "" }),
              import_react164.default.createElement(MenuItemAction, __assign({}, props))
            );
          },
          accordionComponent: function() {
            return import_react164.default.createElement(MemberList, { renderUserListItem });
          }
        }
      }
    };
  }, [channel === null || channel === void 0 ? void 0 : channel.url, frozen]);
};

// node_modules/@sendbird/uikit-react/ChannelSettings/components/ChannelSettingsUI.js
var import_react_dom64 = __toESM(require_react_dom(), 1);
var ChannelSettingsUI = function(props) {
  var _a3;
  var _b2 = useChannelSettingsContext(), channel = _b2.channel, invalidChannel = _b2.invalidChannel, onCloseClick = _b2.onCloseClick, loading = _b2.loading;
  var _c = deleteNullish(props), _d = _c.renderHeader, renderHeader = _d === void 0 ? function(props2) {
    return import_react165.default.createElement(ChannelSettingsHeader, __assign({}, props2));
  } : _d, renderLeaveChannel = _c.renderLeaveChannel, renderChannelProfile = _c.renderChannelProfile, _e3 = _c.renderModerationPanel, renderModerationPanel = _e3 === void 0 ? function(props2) {
    return import_react165.default.createElement(MenuListByRole, __assign({}, props2));
  } : _e3, renderPlaceholderError = _c.renderPlaceholderError, renderPlaceholderLoading = _c.renderPlaceholderLoading;
  var menuItems = useMenuItems();
  var state = useSendbirdStateContext();
  var _f = (0, import_react165.useState)(false), showLeaveChannelModal = _f[0], setShowLeaveChannelModal = _f[1];
  var isOnline = (_a3 = state === null || state === void 0 ? void 0 : state.config) === null || _a3 === void 0 ? void 0 : _a3.isOnline;
  var stringSet2 = (0, import_react165.useContext)(LocalizationContext).stringSet;
  if (loading) {
    if (renderPlaceholderLoading)
      return renderPlaceholderLoading();
    return import_react165.default.createElement(PlaceHolder, { type: PlaceHolderTypes.LOADING });
  }
  var headerProps = { onCloseClick };
  if (invalidChannel || !channel) {
    return import_react165.default.createElement(
      "div",
      null,
      renderHeader(headerProps),
      import_react165.default.createElement("div", null, renderPlaceholderError ? renderPlaceholderError() : import_react165.default.createElement(PlaceHolder, { type: PlaceHolderTypes.WRONG }))
    );
  }
  return import_react165.default.createElement(
    import_react165.default.Fragment,
    null,
    renderHeader(headerProps),
    import_react165.default.createElement(
      "div",
      { className: "sendbird-channel-settings__scroll-area" },
      (renderChannelProfile === null || renderChannelProfile === void 0 ? void 0 : renderChannelProfile()) || import_react165.default.createElement(ChannelProfile, null),
      renderModerationPanel === null || renderModerationPanel === void 0 ? void 0 : renderModerationPanel({ menuItems }),
      (renderLeaveChannel === null || renderLeaveChannel === void 0 ? void 0 : renderLeaveChannel()) || import_react165.default.createElement(MenuItem2, { className: classnames(!isOnline ? "sendbird-channel-settings__panel-item__disabled" : "", "sendbird-channel-settings__panel-item__leave-channel"), onKeyDown: function() {
        if (!isOnline)
          return;
        setShowLeaveChannelModal(true);
      }, onClick: function() {
        if (!isOnline)
          return;
        setShowLeaveChannelModal(true);
      }, renderLeft: function() {
        return import_react165.default.createElement(Icon, { className: ["sendbird-channel-settings__panel-icon-left", "sendbird-channel-settings__panel-icon__leave"].join(" "), type: IconTypes.LEAVE, fillColor: IconColors.ERROR, height: "24px", width: "24px" });
      }, renderMiddle: function() {
        return import_react165.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE);
      } }),
      showLeaveChannelModal && import_react165.default.createElement(LeaveChannel, { onCancel: function() {
        setShowLeaveChannelModal(false);
      }, onSubmit: function() {
        setShowLeaveChannelModal(false);
        onCloseClick === null || onCloseClick === void 0 ? void 0 : onCloseClick();
      } })
    )
  );
};

// node_modules/@sendbird/uikit-react/ChannelSettings.js
var import_react_dom65 = __toESM(require_react_dom(), 1);
var ChannelSettings = function(props) {
  return import_react166.default.createElement(
    ChannelSettingsProvider,
    __assign({}, props),
    import_react166.default.createElement(ChannelSettingsUI, __assign({}, props))
  );
};

// node_modules/@sendbird/uikit-react/MessageSearch.js
var import_react171 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/MessageSearch/components/MessageSearchUI.js
var import_react170 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/MessageSearch/context.js
var import_react167 = __toESM(require_react(), 1);
var GET_SEARCHED_MESSAGES = "GET_SEARCHED_MESSAGES";
var GET_NEXT_SEARCHED_MESSAGES = "GET_NEXT_SEARCHED_MESSAGES";
var START_MESSAGE_SEARCH = "START_MESSAGE_SEARCH";
var START_GETTING_SEARCHED_MESSAGES = "START_GETTING_SEARCHED_MESSAGES";
var SET_QUERY_INVALID = "SET_QUERY_INVALID";
var SET_CURRENT_CHANNEL3 = "SET_CURRENT_CHANNEL";
var CHANNEL_INVALID = "CHANNEL_INVALID";
var RESET_SEARCH_STRING = "RESET_SEARCH_STRING";
function reducer3(state, action) {
  switch (action.type) {
    case SET_CURRENT_CHANNEL3: {
      var currentChannel = action.payload;
      return __assign(__assign({}, state), { currentChannel, initialized: true });
    }
    case CHANNEL_INVALID: {
      return __assign(__assign({}, state), { currentChannel: null, initialized: false });
    }
    case GET_SEARCHED_MESSAGES: {
      var _a3 = action.payload, messages = _a3.messages, createdQuery = _a3.createdQuery;
      if (createdQuery && createdQuery.channelUrl === (state === null || state === void 0 ? void 0 : state.currentMessageSearchQuery).channelUrl && createdQuery.key === (state === null || state === void 0 ? void 0 : state.currentMessageSearchQuery).key) {
        return __assign(__assign({}, state), { loading: false, isInvalid: false, allMessages: __spreadArray([], messages, true), hasMoreResult: (state === null || state === void 0 ? void 0 : state.currentMessageSearchQuery).hasNext });
      }
      return __assign({}, state);
    }
    case SET_QUERY_INVALID: {
      return __assign(__assign({}, state), { isInvalid: true });
    }
    case START_MESSAGE_SEARCH: {
      return __assign(__assign({}, state), { isInvalid: false, loading: false });
    }
    case START_GETTING_SEARCHED_MESSAGES: {
      var currentMessageSearchQuery = action.payload;
      return __assign(__assign({}, state), { loading: true, currentMessageSearchQuery });
    }
    case GET_NEXT_SEARCHED_MESSAGES: {
      var messages = action.payload;
      return __assign(__assign({}, state), { allMessages: __spreadArray(__spreadArray([], state.allMessages, true), messages, true), hasMoreResult: (state === null || state === void 0 ? void 0 : state.currentMessageSearchQuery).hasNext });
    }
    case RESET_SEARCH_STRING: {
      return __assign(__assign({}, state), { allMessages: [] });
    }
    default: {
      return state;
    }
  }
}
var initialState4 = {
  allMessages: [],
  loading: false,
  isInvalid: false,
  initialized: false,
  currentChannel: null,
  currentMessageSearchQuery: null,
  hasMoreResult: false
};
function useSetChannel(_a3, _b2) {
  var channelUrl = _a3.channelUrl, sdkInit = _a3.sdkInit;
  var sdk = _b2.sdk, logger = _b2.logger, messageSearchDispatcher = _b2.messageSearchDispatcher;
  (0, import_react167.useEffect)(function() {
    if (channelUrl && sdkInit && (sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel)) {
      sdk.groupChannel.getChannel(channelUrl).then(function(groupChannel) {
        logger.info("MessageSearch | useSetChannel group channel", groupChannel);
        messageSearchDispatcher({
          type: SET_CURRENT_CHANNEL3,
          payload: groupChannel
        });
      }).catch(function() {
        messageSearchDispatcher({
          type: CHANNEL_INVALID,
          payload: null
        });
      });
    }
  }, [channelUrl, sdkInit]);
}
var MessageSearchOrder;
(function(MessageSearchOrder2) {
  MessageSearchOrder2["SCORE"] = "score";
  MessageSearchOrder2["TIMESTAMP"] = "ts";
})(MessageSearchOrder || (MessageSearchOrder = {}));
function useGetSearchedMessages(_a3, _b2) {
  var currentChannel = _a3.currentChannel, channelUrl = _a3.channelUrl, requestString = _a3.requestString, messageSearchQuery = _a3.messageSearchQuery, onResultLoaded = _a3.onResultLoaded, retryCount = _a3.retryCount;
  var sdk = _b2.sdk, logger = _b2.logger, messageSearchDispatcher = _b2.messageSearchDispatcher;
  (0, import_react167.useEffect)(function() {
    messageSearchDispatcher({
      type: START_MESSAGE_SEARCH,
      payload: null
    });
    if (sdk && channelUrl && sdk.createMessageSearchQuery && currentChannel) {
      if (requestString) {
        currentChannel.refresh().then(function(channel) {
          var inputSearchMessageQueryObject = __assign({ order: MessageSearchOrder.TIMESTAMP, channelUrl, messageTimestampFrom: channel.invitedAt, keyword: requestString }, messageSearchQuery);
          var createdQuery = sdk.createMessageSearchQuery(inputSearchMessageQueryObject);
          createdQuery.next().then(function(messages) {
            logger.info("MessageSearch | useGetSearchedMessages: succeeded getting messages", messages);
            messageSearchDispatcher({
              type: GET_SEARCHED_MESSAGES,
              payload: {
                messages,
                createdQuery
              }
            });
            if (onResultLoaded && typeof onResultLoaded === "function") {
              onResultLoaded(messages, void 0);
            }
          }).catch(function(error) {
            logger.warning("MessageSearch | useGetSearchedMessages: failed getting search messages.", error);
            messageSearchDispatcher({
              type: SET_QUERY_INVALID,
              payload: null
            });
            if (onResultLoaded && typeof onResultLoaded === "function") {
              onResultLoaded(void 0, error);
            }
          });
          messageSearchDispatcher({
            type: START_GETTING_SEARCHED_MESSAGES,
            payload: createdQuery
          });
        }).catch(function(error) {
          logger.warning("MessageSearch | useGetSearchedMessages: failed getting channel.", error);
          messageSearchDispatcher({
            type: SET_QUERY_INVALID,
            payload: null
          });
          if (onResultLoaded && typeof onResultLoaded === "function") {
            onResultLoaded(void 0, error);
          }
        });
      } else {
        logger.info("MessageSearch | useGetSeasrchedMessages: search string is empty");
      }
    }
  }, [channelUrl, messageSearchQuery, requestString, currentChannel, retryCount]);
}
function useScrollCallback2(_a3, _b2) {
  var currentMessageSearchQuery = _a3.currentMessageSearchQuery, hasMoreResult = _a3.hasMoreResult, onResultLoaded = _a3.onResultLoaded;
  var logger = _b2.logger, messageSearchDispatcher = _b2.messageSearchDispatcher;
  return (0, import_react167.useCallback)(function(cb) {
    if (!hasMoreResult) {
      logger.warning("MessageSearch | useScrollCallback: no more searched results", hasMoreResult);
    }
    if (currentMessageSearchQuery && currentMessageSearchQuery.hasNext) {
      currentMessageSearchQuery.next().then(function(messages) {
        logger.info("MessageSearch | useScrollCallback: succeeded getting searched messages", messages);
        messageSearchDispatcher({
          type: GET_NEXT_SEARCHED_MESSAGES,
          payload: messages
        });
        cb(messages, null);
        if (onResultLoaded && typeof onResultLoaded === "function") {
          onResultLoaded(messages, null);
        }
      }).catch(function(error) {
        logger.warning("MessageSearch | useScrollCallback: failed getting searched messages", error);
        cb(null, error);
        if (onResultLoaded && typeof onResultLoaded === "function") {
          onResultLoaded(null, error);
        }
      });
    } else {
      logger.warning("MessageSearch | useScrollCallback: no currentMessageSearchQuery");
    }
  }, [currentMessageSearchQuery, hasMoreResult]);
}
var DEBOUNCING_TIME2 = 500;
function useSearchStringEffect(_a3, _b2) {
  var searchString = _a3.searchString;
  var messageSearchDispatcher = _b2.messageSearchDispatcher;
  var _c = (0, import_react167.useState)(""), requestString = _c[0], setRequestString = _c[1];
  var _d = (0, import_react167.useState)(null), debouncingTimer = _d[0], setDebouncingTimer = _d[1];
  (0, import_react167.useEffect)(function() {
    clearTimeout(debouncingTimer !== null && debouncingTimer !== void 0 ? debouncingTimer : void 0);
    if (searchString) {
      setDebouncingTimer(setTimeout(function() {
        setRequestString(searchString);
      }, DEBOUNCING_TIME2));
    } else {
      setRequestString("");
      messageSearchDispatcher({
        type: RESET_SEARCH_STRING,
        payload: ""
      });
    }
  }, [searchString]);
  return requestString;
}
var MessageSearchContext = import_react167.default.createContext(null);
var MessageSearchProvider = function(props) {
  var _a3, _b2, _c, _d, _e3;
  var channelUrl = props.channelUrl, searchString = props.searchString, messageSearchQuery = props.messageSearchQuery, onResultLoaded = props.onResultLoaded, onResultClick = props.onResultClick;
  var globalState = useSendbirdStateContext();
  var _f = (0, import_react167.useState)(0), retryCount = _f[0], setRetryCount = _f[1];
  var _g2 = (0, import_react167.useState)(0), selectedMessageId = _g2[0], setSelectedMessageId = _g2[1];
  var _h = (0, import_react167.useReducer)(reducer3, initialState4), messageSearchStore = _h[0], messageSearchDispatcher = _h[1];
  var allMessages = messageSearchStore.allMessages, loading = messageSearchStore.loading, isInvalid = messageSearchStore.isInvalid, currentChannel = messageSearchStore.currentChannel, currentMessageSearchQuery = messageSearchStore.currentMessageSearchQuery, hasMoreResult = messageSearchStore.hasMoreResult;
  var logger = (_a3 = globalState === null || globalState === void 0 ? void 0 : globalState.config) === null || _a3 === void 0 ? void 0 : _a3.logger;
  var sdk = (_c = (_b2 = globalState === null || globalState === void 0 ? void 0 : globalState.stores) === null || _b2 === void 0 ? void 0 : _b2.sdkStore) === null || _c === void 0 ? void 0 : _c.sdk;
  var sdkInit = (_e3 = (_d = globalState === null || globalState === void 0 ? void 0 : globalState.stores) === null || _d === void 0 ? void 0 : _d.sdkStore) === null || _e3 === void 0 ? void 0 : _e3.initialized;
  var scrollRef = (0, import_react167.useRef)(null);
  var handleOnScroll = function(e4) {
    var scrollElement = e4.target;
    var scrollTop = scrollElement.scrollTop, scrollHeight = scrollElement.scrollHeight, clientHeight = scrollElement.clientHeight;
    if (!hasMoreResult) {
      return;
    }
    if (scrollTop + clientHeight >= scrollHeight) {
      onScroll(function() {
      });
    }
  };
  useSetChannel({ channelUrl, sdkInit }, { sdk, logger, messageSearchDispatcher });
  var requestString = useSearchStringEffect({ searchString: searchString !== null && searchString !== void 0 ? searchString : "" }, { messageSearchDispatcher });
  useGetSearchedMessages({ currentChannel, channelUrl, requestString, messageSearchQuery, onResultLoaded, retryCount }, { sdk, logger, messageSearchDispatcher });
  var onScroll = useScrollCallback2({ currentMessageSearchQuery, hasMoreResult, onResultLoaded }, { logger, messageSearchDispatcher });
  var handleRetryToConnect = function() {
    setRetryCount(retryCount + 1);
  };
  return import_react167.default.createElement(MessageSearchContext.Provider, { value: {
    channelUrl,
    searchString,
    requestString,
    messageSearchQuery,
    onResultLoaded,
    onResultClick,
    retryCount,
    setRetryCount,
    selectedMessageId,
    setSelectedMessageId,
    messageSearchDispatcher,
    allMessages,
    loading,
    isInvalid,
    currentChannel,
    currentMessageSearchQuery,
    hasMoreResult,
    onScroll,
    scrollRef,
    handleRetryToConnect,
    handleOnScroll
  } }, props === null || props === void 0 ? void 0 : props.children);
};
var useMessageSearchContext = function() {
  var context = import_react167.default.useContext(MessageSearchContext);
  if (!context)
    throw new Error("MessageSearchContext not found. Use within the MessageSearch module.");
  return context;
};

// node_modules/@sendbird/uikit-react/ui/MessageSearchItem.js
var import_react168 = __toESM(require_react(), 1);
function getCreatedAt(_a3) {
  var createdAt = _a3.createdAt, locale2 = _a3.locale, stringSet2 = _a3.stringSet;
  var optionalParam = { locale: locale2 };
  if (!createdAt) {
    return "";
  }
  if (isToday(createdAt)) {
    return format(createdAt, stringSet2.DATE_FORMAT__LAST_MESSAGE_CREATED_AT__TODAY, optionalParam);
  }
  if (isYesterday(createdAt)) {
    return stringSet2.MESSAGE_STATUS__YESTERDAY;
  }
  if (isThisYear(createdAt)) {
    return format(createdAt, stringSet2.DATE_FORMAT__LAST_MESSAGE_CREATED_AT__THIS_YEAR, optionalParam);
  }
  return format(createdAt, stringSet2.DATE_FORMAT__LAST_MESSAGE_CREATED_AT__PREVIOUS_YEAR, optionalParam);
}
function MessageSearchItem(_a3) {
  var className = _a3.className, message = _a3.message, selected = _a3.selected, onClick = _a3.onClick;
  var createdAt = message.createdAt;
  var messageText = message.message;
  var sender = message.sender || message._sender;
  var profileUrl = sender.profileUrl, nickname = sender.nickname;
  var _b2 = useLocalization(), stringSet2 = _b2.stringSet, dateLocale = _b2.dateLocale;
  return import_react168.default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-message-search-item",
      selected ? "sendbird-message-search-item--selected" : ""
    ], false).join(" "), onClick: function(e4) {
      e4.stopPropagation();
      onClick === null || onClick === void 0 ? void 0 : onClick(message);
    } },
    import_react168.default.createElement(
      "div",
      { className: "sendbird-message-search-item__left" },
      import_react168.default.createElement(Avatar$1, { className: "sendbird-message-search-item__left__sender-avatar", src: profileUrl, alt: "profile image", width: "56px", height: "56px" })
    ),
    import_react168.default.createElement(
      "div",
      { className: "sendbird-message-search-item__right" },
      import_react168.default.createElement(Label, { className: "sendbird-message-search-item__right__sender-name", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_1 }, nickname || stringSet2.NO_NAME),
      import_react168.default.createElement(Label, { className: "sendbird-message-search-item__right__message-text", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_3 }, messageText),
      import_react168.default.createElement(Label, { className: "sendbird-message-search-item__right__message-created-at", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, getCreatedAt({ createdAt, locale: dateLocale, stringSet: stringSet2 }))
    ),
    import_react168.default.createElement("div", { className: "sendbird-message-search-item__right-footer" })
  );
}

// node_modules/@sendbird/uikit-react/ui/MessageSearchFileItem.js
var import_react169 = __toESM(require_react(), 1);
function getCreatedAt2(_a3) {
  var createdAt = _a3.createdAt, locale2 = _a3.locale, stringSet2 = _a3.stringSet;
  var optionalParam = { locale: locale2 };
  if (!createdAt) {
    return "";
  }
  if (isToday(createdAt)) {
    return format(createdAt, stringSet2.DATE_FORMAT__LAST_MESSAGE_CREATED_AT__TODAY, optionalParam);
  }
  if (isYesterday(createdAt)) {
    return stringSet2.MESSAGE_STATUS__YESTERDAY;
  }
  if (isThisYear(createdAt)) {
    return format(createdAt, stringSet2.DATE_FORMAT__LAST_MESSAGE_CREATED_AT__THIS_YEAR, optionalParam);
  }
  return format(createdAt, stringSet2.DATE_FORMAT__LAST_MESSAGE_CREATED_AT__PREVIOUS_YEAR, optionalParam);
}
function getIconOfFileType(message) {
  var _a3, _b2, _c;
  var fileMessageUrl = (_a3 = getMessageFirstFileUrl(message)) !== null && _a3 !== void 0 ? _a3 : "";
  var fileExtension = (_c = (_b2 = fileMessageUrl.match(/\.([^.]*?)(?=\?|#|$)/)) === null || _b2 === void 0 ? void 0 : _b2[1]) !== null && _c !== void 0 ? _c : "";
  if (/(jpg|jpeg|png)$/i.test(fileExtension)) {
    return IconTypes.PHOTO;
  } else if (/mp4$/i.test(fileExtension) || isVoiceMessage(message)) {
    return IconTypes.PLAY;
  } else if (/mp3/i.test(fileExtension)) {
    return IconTypes.FILE_AUDIO;
  } else if (/gif/i.test(fileExtension)) {
    return IconTypes.GIF;
  } else {
    return IconTypes.FILE_DOCUMENT;
  }
}
function MessageSearchFileItem(props) {
  var className = props.className, message = props.message, selected = props.selected, onClick = props.onClick;
  var createdAt = message.createdAt;
  var url = getMessageFirstFileUrl(message);
  var name = getMessageFirstFileName(message);
  var sender = message.sender || message._sender;
  var profileUrl = sender.profileUrl, nickname = sender.nickname;
  var _a3 = useLocalization(), stringSet2 = _a3.stringSet, dateLocale = _a3.dateLocale;
  var isVoiceMsg = isVoiceMessage(message);
  var prettyFilename = isVoiceMsg ? stringSet2.VOICE_MESSAGE : name || url;
  return import_react169.default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-message-search-file-item",
      selected ? "sendbird-message-search-file-item--selected" : ""
    ], false).join(" "), onClick: function(e4) {
      e4.stopPropagation();
      onClick === null || onClick === void 0 ? void 0 : onClick(message);
    } },
    import_react169.default.createElement(
      "div",
      { className: "sendbird-message-search-file-item__left" },
      import_react169.default.createElement(Avatar$1, { className: "sendbird-message-search-file-item__left__sender-avatar", src: profileUrl, alt: "profile image", width: "56px", height: "56px" })
    ),
    import_react169.default.createElement(
      "div",
      { className: "sendbird-message-search-file-item__right" },
      import_react169.default.createElement(Label, { className: "sendbird-message-search-file-item__right__sender-name", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_1 }, nickname || stringSet2.NO_NAME),
      import_react169.default.createElement(
        "div",
        { className: "sendbird-message-search-file-item__right__content" },
        !isVoiceMsg && import_react169.default.createElement(
          "div",
          { className: "sendbird-message-search-file-item__right__content__type-icon" },
          import_react169.default.createElement(Icon, { type: getIconOfFileType(message), fillColor: IconColors.PRIMARY, width: "18px", height: "18px" })
        ),
        import_react169.default.createElement(Label, { className: "sendbird-message-search-file-item__right__content__url", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_1 }, prettyFilename)
      )
    ),
    import_react169.default.createElement(Label, { className: "sendbird-message-search-file-item__message-created-at", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, getCreatedAt2({ createdAt, locale: dateLocale, stringSet: stringSet2 })),
    import_react169.default.createElement("div", { className: "sendbird-message-search-file-item__right-footer" })
  );
}

// node_modules/@sendbird/uikit-react/MessageSearch/components/MessageSearchUI.js
var MessageSearchUI = function(_a3) {
  var renderPlaceHolderError = _a3.renderPlaceHolderError, renderPlaceHolderLoading = _a3.renderPlaceHolderLoading, renderPlaceHolderNoString = _a3.renderPlaceHolderNoString, renderPlaceHolderEmptyList = _a3.renderPlaceHolderEmptyList, renderSearchItem = _a3.renderSearchItem;
  var _b2 = useMessageSearchContext(), isInvalid = _b2.isInvalid, searchString = _b2.searchString, requestString = _b2.requestString, currentChannel = _b2.currentChannel, retryCount = _b2.retryCount, setRetryCount = _b2.setRetryCount, loading = _b2.loading, scrollRef = _b2.scrollRef, hasMoreResult = _b2.hasMoreResult, onScroll = _b2.onScroll, allMessages = _b2.allMessages, onResultClick = _b2.onResultClick, selectedMessageId = _b2.selectedMessageId, setSelectedMessageId = _b2.setSelectedMessageId;
  var stringSet2 = (0, import_react170.useContext)(LocalizationContext).stringSet;
  var handleRetryToConnect = function() {
    setRetryCount(retryCount + 1);
  };
  var handleOnScroll = function(e4) {
    var scrollElement = e4.target;
    var scrollTop = scrollElement.scrollTop, scrollHeight = scrollElement.scrollHeight, clientHeight = scrollElement.clientHeight;
    if (!hasMoreResult) {
      return;
    }
    if (scrollTop + clientHeight >= scrollHeight - 1) {
      onScroll(function() {
      });
    }
  };
  var getChannelName = function() {
    if (currentChannel && (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.name) && (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.name) !== "Group Channel") {
      return currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.name;
    }
    if (currentChannel && ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.name) === "Group Channel" || !(currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.name))) {
      return currentChannel.members.map(function(member) {
        return member.nickname || stringSet2.NO_NAME;
      }).join(", ");
    }
    return stringSet2.NO_TITLE;
  };
  if (isInvalid && searchString && requestString) {
    return (renderPlaceHolderError === null || renderPlaceHolderError === void 0 ? void 0 : renderPlaceHolderError()) || import_react170.default.createElement(
      "div",
      { className: "sendbird-message-search" },
      import_react170.default.createElement(PlaceHolder, { type: PlaceHolderTypes.WRONG, retryToConnect: handleRetryToConnect })
    );
  }
  if (loading && searchString && requestString) {
    return (renderPlaceHolderLoading === null || renderPlaceHolderLoading === void 0 ? void 0 : renderPlaceHolderLoading()) || import_react170.default.createElement(
      "div",
      { className: "sendbird-message-search" },
      import_react170.default.createElement(PlaceHolder, { type: PlaceHolderTypes.SEARCHING })
    );
  }
  if (!searchString) {
    return (renderPlaceHolderNoString === null || renderPlaceHolderNoString === void 0 ? void 0 : renderPlaceHolderNoString()) || import_react170.default.createElement(
      "div",
      { className: "sendbird-message-search" },
      import_react170.default.createElement(PlaceHolder, { type: PlaceHolderTypes.SEARCH_IN, searchInString: getChannelName() })
    );
  }
  return import_react170.default.createElement("div", { className: "sendbird-message-search", onScroll: handleOnScroll, ref: scrollRef }, allMessages.length > 0 ? allMessages.map(function(message) {
    if (renderSearchItem) {
      return renderSearchItem({ message, onResultClick });
    }
    if (message.messageType === "file") {
      return import_react170.default.createElement(MessageSearchFileItem, { className: "sendbird-message-search__message-search-item", message, key: message.messageId, selected: selectedMessageId === message.messageId, onClick: function() {
        onResultClick === null || onResultClick === void 0 ? void 0 : onResultClick(message);
        setSelectedMessageId(message.messageId);
      } });
    }
    return import_react170.default.createElement(MessageSearchItem, { className: "sendbird-message-search__message-search-item", message, key: message.messageId, selected: selectedMessageId === message.messageId, onClick: function() {
      onResultClick === null || onResultClick === void 0 ? void 0 : onResultClick(message);
      setSelectedMessageId(message.messageId);
    } });
  }) : (renderPlaceHolderEmptyList === null || renderPlaceHolderEmptyList === void 0 ? void 0 : renderPlaceHolderEmptyList()) || import_react170.default.createElement(PlaceHolder, { type: PlaceHolderTypes.NO_RESULTS }));
};

// node_modules/@sendbird/uikit-react/MessageSearch.js
function MessageSearchPannel(props) {
  var channelUrl = props.channelUrl, onResultClick = props.onResultClick, onCloseClick = props.onCloseClick, messageSearchQuery = props.messageSearchQuery, renderPlaceHolderError = props.renderPlaceHolderError, renderPlaceHolderLoading = props.renderPlaceHolderLoading, renderPlaceHolderNoString = props.renderPlaceHolderNoString, renderPlaceHolderEmptyList = props.renderPlaceHolderEmptyList, renderSearchItem = props.renderSearchItem;
  var _a3 = (0, import_react171.useState)(""), searchString = _a3[0], setSearchString = _a3[1];
  var _b2 = (0, import_react171.useState)(""), inputString = _b2[0], setInputString = _b2[1];
  var _c = (0, import_react171.useState)(false), loading = _c[0], setLoading = _c[1];
  var stringSet2 = (0, import_react171.useContext)(LocalizationContext).stringSet;
  var timeout = null;
  (0, import_react171.useEffect)(function() {
    if (timeout) {
      clearTimeout(timeout);
    }
    timeout = setTimeout(function() {
      setSearchString(inputString);
      setLoading(true);
      timeout = null;
    }, 500);
  }, [inputString]);
  var handleOnChangeInputString = function(e4) {
    setInputString(e4.target.value);
  };
  var handleOnResultLoaded = function() {
    setLoading(false);
  };
  var handleOnClickResetStringButton = function(e4) {
    e4.stopPropagation();
    setInputString("");
    setSearchString("");
  };
  return import_react171.default.createElement(
    "div",
    { className: "sendbird-message-search-pannel" },
    import_react171.default.createElement(Header$1, { className: "sendbird-message-search-pannel__header", renderMiddle: function() {
      return import_react171.default.createElement(Header$1.Title, { title: stringSet2.SEARCH_IN_CHANNEL });
    }, renderRight: function() {
      return import_react171.default.createElement(Header$1.IconButton, { className: "sendbird-message-search-pannel__header__close-button", onClick: onCloseClick, type: IconTypes.CLOSE, color: IconColors.ON_BACKGROUND_1 });
    } }),
    import_react171.default.createElement(
      "div",
      { className: "sendbird-message-search-pannel__input" },
      import_react171.default.createElement(
        "div",
        { className: "sendbird-message-search-pannel__input__container" },
        import_react171.default.createElement(Icon, { className: "sendbird-message-search-pannel__input__container__search-icon", type: IconTypes.SEARCH, fillColor: IconColors.ON_BACKGROUND_3, width: "24px", height: "24px" }),
        import_react171.default.createElement("input", { className: "sendbird-message-search-pannel__input__container__input-area", placeholder: stringSet2.SEARCH, value: inputString, onChange: handleOnChangeInputString }),
        inputString && loading && import_react171.default.createElement(
          Loader,
          { className: "sendbird-message-search-pannel__input__container__spinner", width: "20px", height: "20px" },
          import_react171.default.createElement(Icon, { type: IconTypes.SPINNER, fillColor: IconColors.PRIMARY, width: "20px", height: "20px" })
        ),
        !loading && inputString && import_react171.default.createElement(Icon, { className: "sendbird-message-search-pannel__input__container__reset-input-button", type: IconTypes.REMOVE, fillColor: IconColors.ON_BACKGROUND_3, width: "20px", height: "20px", onClick: handleOnClickResetStringButton })
      )
    ),
    import_react171.default.createElement(
      "div",
      { className: "sendbird-message-search-pannel__message-search" },
      import_react171.default.createElement(
        MessageSearchProvider,
        { channelUrl, searchString, onResultClick, onResultLoaded: handleOnResultLoaded, messageSearchQuery },
        import_react171.default.createElement(MessageSearchUI, { renderPlaceHolderError, renderPlaceHolderLoading, renderPlaceHolderNoString, renderPlaceHolderEmptyList, renderSearchItem })
      )
    )
  );
}

// node_modules/@sendbird/uikit-react/Thread.js
var import_react183 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/Thread/context.js
var import_react172 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/Thread/context/types.js
var ChannelStateTypes;
(function(ChannelStateTypes2) {
  ChannelStateTypes2["NIL"] = "NIL";
  ChannelStateTypes2["LOADING"] = "LOADING";
  ChannelStateTypes2["INVALID"] = "INVALID";
  ChannelStateTypes2["INITIALIZED"] = "INITIALIZED";
})(ChannelStateTypes || (ChannelStateTypes = {}));
var ParentMessageStateTypes;
(function(ParentMessageStateTypes2) {
  ParentMessageStateTypes2["NIL"] = "NIL";
  ParentMessageStateTypes2["LOADING"] = "LOADING";
  ParentMessageStateTypes2["INVALID"] = "INVALID";
  ParentMessageStateTypes2["INITIALIZED"] = "INITIALIZED";
})(ParentMessageStateTypes || (ParentMessageStateTypes = {}));
var ThreadListStateTypes;
(function(ThreadListStateTypes2) {
  ThreadListStateTypes2["NIL"] = "NIL";
  ThreadListStateTypes2["LOADING"] = "LOADING";
  ThreadListStateTypes2["INVALID"] = "INVALID";
  ThreadListStateTypes2["INITIALIZED"] = "INITIALIZED";
})(ThreadListStateTypes || (ThreadListStateTypes = {}));

// node_modules/@sendbird/uikit-react/Thread/context.js
var import_react_dom66 = __toESM(require_react_dom(), 1);
var PREV_THREADS_FETCH_SIZE = 30;
var NEXT_THREADS_FETCH_SIZE = 30;
var ThreadContextActionTypes;
(function(ThreadContextActionTypes2) {
  ThreadContextActionTypes2["INIT_USER_ID"] = "INIT_USER_ID";
  ThreadContextActionTypes2["GET_CHANNEL_START"] = "GET_CHANNEL_START";
  ThreadContextActionTypes2["GET_CHANNEL_SUCCESS"] = "GET_CHANNEL_SUCCESS";
  ThreadContextActionTypes2["GET_CHANNEL_FAILURE"] = "GET_CHANNEL_FAILURE";
  ThreadContextActionTypes2["SET_EMOJI_CONTAINER"] = "SET_EMOJI_CONTAINER";
  ThreadContextActionTypes2["GET_PARENT_MESSAGE_START"] = "GET_PARENT_MESSAGE_START";
  ThreadContextActionTypes2["GET_PARENT_MESSAGE_SUCCESS"] = "GET_PARENT_MESSAGE_SUCCESS";
  ThreadContextActionTypes2["GET_PARENT_MESSAGE_FAILURE"] = "GET_PARENT_MESSAGE_FAILURE";
  ThreadContextActionTypes2["INITIALIZE_THREAD_LIST_START"] = "INITIALIZE_THREAD_LIST_START";
  ThreadContextActionTypes2["INITIALIZE_THREAD_LIST_SUCCESS"] = "INITIALIZE_THREAD_LIST_SUCCESS";
  ThreadContextActionTypes2["INITIALIZE_THREAD_LIST_FAILURE"] = "INITIALIZE_THREAD_LIST_FAILURE";
  ThreadContextActionTypes2["GET_PREV_MESSAGES_START"] = "GET_PREV_MESSAGES_START";
  ThreadContextActionTypes2["GET_PREV_MESSAGES_SUCESS"] = "GET_PREV_MESSAGES_SUCESS";
  ThreadContextActionTypes2["GET_PREV_MESSAGES_FAILURE"] = "GET_PREV_MESSAGES_FAILURE";
  ThreadContextActionTypes2["GET_NEXT_MESSAGES_START"] = "GET_NEXT_MESSAGES_START";
  ThreadContextActionTypes2["GET_NEXT_MESSAGES_SUCESS"] = "GET_NEXT_MESSAGES_SUCESS";
  ThreadContextActionTypes2["GET_NEXT_MESSAGES_FAILURE"] = "GET_NEXT_MESSAGES_FAILURE";
  ThreadContextActionTypes2["SEND_MESSAGE_START"] = "SEND_MESSAGE_START";
  ThreadContextActionTypes2["SEND_MESSAGE_SUCESS"] = "SEND_MESSAGE_SUCESS";
  ThreadContextActionTypes2["SEND_MESSAGE_FAILURE"] = "SEND_MESSAGE_FAILURE";
  ThreadContextActionTypes2["RESEND_MESSAGE_START"] = "RESEND_MESSAGE_START";
  ThreadContextActionTypes2["ON_MESSAGE_DELETED_BY_REQ_ID"] = "ON_MESSAGE_DELETED_BY_REQ_ID";
  ThreadContextActionTypes2["ON_MESSAGE_RECEIVED"] = "ON_MESSAGE_RECEIVED";
  ThreadContextActionTypes2["ON_MESSAGE_UPDATED"] = "ON_MESSAGE_UPDATED";
  ThreadContextActionTypes2["ON_MESSAGE_DELETED"] = "ON_MESSAGE_DELETED";
  ThreadContextActionTypes2["ON_REACTION_UPDATED"] = "ON_REACTION_UPDATED";
  ThreadContextActionTypes2["ON_FILE_INFO_UPLOADED"] = "ON_FILE_INFO_UPLOADED";
  ThreadContextActionTypes2["ON_USER_MUTED"] = "ON_USER_MUTED";
  ThreadContextActionTypes2["ON_USER_UNMUTED"] = "ON_USER_UNMUTED";
  ThreadContextActionTypes2["ON_USER_BANNED"] = "ON_USER_BANNED";
  ThreadContextActionTypes2["ON_USER_UNBANNED"] = "ON_USER_UNBANNED";
  ThreadContextActionTypes2["ON_USER_LEFT"] = "ON_USER_LEFT";
  ThreadContextActionTypes2["ON_CHANNEL_FROZEN"] = "ON_CHANNEL_FROZEN";
  ThreadContextActionTypes2["ON_CHANNEL_UNFROZEN"] = "ON_CHANNEL_UNFROZEN";
  ThreadContextActionTypes2["ON_OPERATOR_UPDATED"] = "ON_OPERATOR_UPDATED";
  ThreadContextActionTypes2["ON_TYPING_STATUS_UPDATED"] = "ON_TYPING_STATUS_UPDATED";
})(ThreadContextActionTypes || (ThreadContextActionTypes = {}));
function reducer4(state, action) {
  var _a3, _b2, _c, _d, _e3, _f, _g2, _h, _j, _k, _l, _m, _o2, _p, _q, _r2, _s4, _t3, _u, _v, _w, _x, _y;
  switch (action.type) {
    case ThreadContextActionTypes.INIT_USER_ID: {
      return __assign(__assign({}, state), { currentUserId: action.payload });
    }
    case ThreadContextActionTypes.GET_CHANNEL_START: {
      return __assign(__assign({}, state), { channelState: ChannelStateTypes.LOADING, currentChannel: null });
    }
    case ThreadContextActionTypes.GET_CHANNEL_SUCCESS: {
      var groupChannel = action.payload.groupChannel;
      return __assign(__assign({}, state), {
        channelState: ChannelStateTypes.INITIALIZED,
        currentChannel: groupChannel,
        // only support in normal group channel
        isMuted: ((_b2 = (_a3 = groupChannel === null || groupChannel === void 0 ? void 0 : groupChannel.members) === null || _a3 === void 0 ? void 0 : _a3.find(function(member) {
          return (member === null || member === void 0 ? void 0 : member.userId) === state.currentUserId;
        })) === null || _b2 === void 0 ? void 0 : _b2.isMuted) || false,
        isChannelFrozen: (groupChannel === null || groupChannel === void 0 ? void 0 : groupChannel.isFrozen) || false
      });
    }
    case ThreadContextActionTypes.GET_CHANNEL_FAILURE: {
      return __assign(__assign({}, state), { channelState: ChannelStateTypes.INVALID, currentChannel: null });
    }
    case ThreadContextActionTypes.SET_EMOJI_CONTAINER: {
      var emojiContainer = action.payload.emojiContainer;
      return __assign(__assign({}, state), { emojiContainer });
    }
    case ThreadContextActionTypes.GET_PARENT_MESSAGE_START: {
      return __assign(__assign({}, state), { parentMessageState: ParentMessageStateTypes.LOADING, parentMessage: null });
    }
    case ThreadContextActionTypes.GET_PARENT_MESSAGE_SUCCESS: {
      return __assign(__assign({}, state), { parentMessageState: ParentMessageStateTypes.INITIALIZED, parentMessage: action.payload.parentMessage });
    }
    case ThreadContextActionTypes.GET_PARENT_MESSAGE_FAILURE: {
      return __assign(__assign({}, state), { parentMessageState: ParentMessageStateTypes.INVALID, parentMessage: null });
    }
    case ThreadContextActionTypes.INITIALIZE_THREAD_LIST_START: {
      return __assign(__assign({}, state), { threadListState: ThreadListStateTypes.LOADING, allThreadMessages: [] });
    }
    case ThreadContextActionTypes.INITIALIZE_THREAD_LIST_SUCCESS: {
      var _z = action.payload, parentMessage = _z.parentMessage, anchorMessage = _z.anchorMessage, threadedMessages = _z.threadedMessages;
      var anchorMessageCreatedAt_1 = !(anchorMessage === null || anchorMessage === void 0 ? void 0 : anchorMessage.messageId) ? parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.createdAt : anchorMessage === null || anchorMessage === void 0 ? void 0 : anchorMessage.createdAt;
      var anchorIndex = threadedMessages.findIndex(function(message2) {
        return (message2 === null || message2 === void 0 ? void 0 : message2.createdAt) > anchorMessageCreatedAt_1;
      });
      var prevThreadMessages = anchorIndex > -1 ? threadedMessages.slice(0, anchorIndex) : threadedMessages;
      var anchorThreadMessage = (anchorMessage === null || anchorMessage === void 0 ? void 0 : anchorMessage.messageId) ? [anchorMessage] : [];
      var nextThreadMessages = anchorIndex > -1 ? threadedMessages.slice(anchorIndex) : [];
      return __assign(__assign({}, state), { threadListState: ThreadListStateTypes.INITIALIZED, hasMorePrev: anchorIndex === -1 || anchorIndex === PREV_THREADS_FETCH_SIZE, hasMoreNext: threadedMessages.length - anchorIndex === NEXT_THREADS_FETCH_SIZE, allThreadMessages: [prevThreadMessages, anchorThreadMessage, nextThreadMessages].flat() });
    }
    case ThreadContextActionTypes.INITIALIZE_THREAD_LIST_FAILURE: {
      return __assign(__assign({}, state), { threadListState: ThreadListStateTypes.INVALID, allThreadMessages: [] });
    }
    case ThreadContextActionTypes.GET_NEXT_MESSAGES_START: {
      return __assign({}, state);
    }
    case ThreadContextActionTypes.GET_NEXT_MESSAGES_SUCESS: {
      var threadedMessages = action.payload.threadedMessages;
      return __assign(__assign({}, state), { hasMoreNext: threadedMessages.length === NEXT_THREADS_FETCH_SIZE, allThreadMessages: __spreadArray(__spreadArray([], state.allThreadMessages, true), threadedMessages, true) });
    }
    case ThreadContextActionTypes.GET_NEXT_MESSAGES_FAILURE: {
      return __assign(__assign({}, state), { hasMoreNext: false });
    }
    case ThreadContextActionTypes.GET_PREV_MESSAGES_START: {
      return __assign({}, state);
    }
    case ThreadContextActionTypes.GET_PREV_MESSAGES_SUCESS: {
      var threadedMessages = action.payload.threadedMessages;
      return __assign(__assign({}, state), { hasMorePrev: threadedMessages.length === PREV_THREADS_FETCH_SIZE, allThreadMessages: __spreadArray(__spreadArray([], threadedMessages, true), state.allThreadMessages, true) });
    }
    case ThreadContextActionTypes.GET_PREV_MESSAGES_FAILURE: {
      return __assign(__assign({}, state), { hasMorePrev: false });
    }
    case ThreadContextActionTypes.ON_MESSAGE_RECEIVED: {
      var _0 = action.payload, channel = _0.channel, message_1 = _0.message;
      if (((_c = state.currentChannel) === null || _c === void 0 ? void 0 : _c.url) !== (channel === null || channel === void 0 ? void 0 : channel.url) || state.hasMoreNext || ((_d = message_1 === null || message_1 === void 0 ? void 0 : message_1.parentMessage) === null || _d === void 0 ? void 0 : _d.messageId) !== ((_e3 = state === null || state === void 0 ? void 0 : state.parentMessage) === null || _e3 === void 0 ? void 0 : _e3.messageId)) {
        return state;
      }
      var isAlreadyReceived = state.allThreadMessages.findIndex(function(m5) {
        return m5.messageId === message_1.messageId;
      }) > -1;
      return __assign(__assign({}, state), { parentMessage: ((_f = state.parentMessage) === null || _f === void 0 ? void 0 : _f.messageId) === (message_1 === null || message_1 === void 0 ? void 0 : message_1.messageId) ? message_1 : state.parentMessage, allThreadMessages: isAlreadyReceived ? state.allThreadMessages.map(function(m5) {
        return m5.messageId === message_1.messageId ? message_1 : m5;
      }) : __spreadArray(__spreadArray([], state.allThreadMessages.filter(function(m5) {
        return (m5 === null || m5 === void 0 ? void 0 : m5.reqId) !== (message_1 === null || message_1 === void 0 ? void 0 : message_1.reqId);
      }), true), [
        message_1
      ], false) });
    }
    case ThreadContextActionTypes.ON_MESSAGE_UPDATED: {
      var _1 = action.payload, channel = _1.channel, message_2 = _1.message;
      if (((_g2 = state.currentChannel) === null || _g2 === void 0 ? void 0 : _g2.url) !== (channel === null || channel === void 0 ? void 0 : channel.url)) {
        return state;
      }
      return __assign(__assign({}, state), { parentMessage: ((_h = state.parentMessage) === null || _h === void 0 ? void 0 : _h.messageId) === (message_2 === null || message_2 === void 0 ? void 0 : message_2.messageId) ? message_2 : state.parentMessage, allThreadMessages: (_j = state.allThreadMessages) === null || _j === void 0 ? void 0 : _j.map(function(msg) {
        return (msg === null || msg === void 0 ? void 0 : msg.messageId) === (message_2 === null || message_2 === void 0 ? void 0 : message_2.messageId) ? message_2 : msg;
      }) });
    }
    case ThreadContextActionTypes.ON_MESSAGE_DELETED: {
      var _2 = action.payload, channel = _2.channel, messageId_1 = _2.messageId;
      if (((_k = state.currentChannel) === null || _k === void 0 ? void 0 : _k.url) !== (channel === null || channel === void 0 ? void 0 : channel.url)) {
        return state;
      }
      if (((_l = state === null || state === void 0 ? void 0 : state.parentMessage) === null || _l === void 0 ? void 0 : _l.messageId) === messageId_1) {
        return __assign(__assign({}, state), { parentMessage: null, parentMessageState: ParentMessageStateTypes.NIL, allThreadMessages: [] });
      }
      return __assign(__assign({}, state), { allThreadMessages: (_m = state.allThreadMessages) === null || _m === void 0 ? void 0 : _m.filter(function(msg) {
        return (msg === null || msg === void 0 ? void 0 : msg.messageId) !== messageId_1;
      }), localThreadMessages: (_o2 = state.localThreadMessages) === null || _o2 === void 0 ? void 0 : _o2.filter(function(msg) {
        return (msg === null || msg === void 0 ? void 0 : msg.messageId) !== messageId_1;
      }) });
    }
    case ThreadContextActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID: {
      return __assign(__assign({}, state), { localThreadMessages: state.localThreadMessages.filter(function(m5) {
        return !compareIds2(m5.reqId, action.payload);
      }) });
    }
    case ThreadContextActionTypes.ON_REACTION_UPDATED: {
      var reactionEvent_1 = (_p = action.payload) === null || _p === void 0 ? void 0 : _p.reactionEvent;
      if (((_q = state === null || state === void 0 ? void 0 : state.parentMessage) === null || _q === void 0 ? void 0 : _q.messageId) === (reactionEvent_1 === null || reactionEvent_1 === void 0 ? void 0 : reactionEvent_1.messageId)) {
        (_s4 = (_r2 = state.parentMessage) === null || _r2 === void 0 ? void 0 : _r2.applyReactionEvent) === null || _s4 === void 0 ? void 0 : _s4.call(_r2, reactionEvent_1);
      }
      return __assign(__assign({}, state), { allThreadMessages: state.allThreadMessages.map(function(m5) {
        var _a4;
        if ((reactionEvent_1 === null || reactionEvent_1 === void 0 ? void 0 : reactionEvent_1.messageId) === (m5 === null || m5 === void 0 ? void 0 : m5.messageId)) {
          (_a4 = m5 === null || m5 === void 0 ? void 0 : m5.applyReactionEvent) === null || _a4 === void 0 ? void 0 : _a4.call(m5, reactionEvent_1);
          return m5;
        }
        return m5;
      }) });
    }
    case ThreadContextActionTypes.ON_USER_MUTED: {
      var _3 = action.payload, channel = _3.channel, user = _3.user;
      if (((_t3 = state.currentChannel) === null || _t3 === void 0 ? void 0 : _t3.url) !== (channel === null || channel === void 0 ? void 0 : channel.url) || state.currentUserId !== (user === null || user === void 0 ? void 0 : user.userId)) {
        return state;
      }
      return __assign(__assign({}, state), { isMuted: true });
    }
    case ThreadContextActionTypes.ON_USER_UNMUTED: {
      var _4 = action.payload, channel = _4.channel, user = _4.user;
      if (((_u = state.currentChannel) === null || _u === void 0 ? void 0 : _u.url) !== (channel === null || channel === void 0 ? void 0 : channel.url) || state.currentUserId !== (user === null || user === void 0 ? void 0 : user.userId)) {
        return state;
      }
      return __assign(__assign({}, state), { isMuted: false });
    }
    case ThreadContextActionTypes.ON_USER_BANNED: {
      return __assign(__assign({}, state), { channelState: ChannelStateTypes.NIL, threadListState: ThreadListStateTypes.NIL, parentMessageState: ParentMessageStateTypes.NIL, currentChannel: null, parentMessage: null, allThreadMessages: [], hasMorePrev: false, hasMoreNext: false });
    }
    case ThreadContextActionTypes.ON_USER_UNBANNED: {
      return __assign({}, state);
    }
    case ThreadContextActionTypes.ON_USER_LEFT: {
      return __assign(__assign({}, state), { channelState: ChannelStateTypes.NIL, threadListState: ThreadListStateTypes.NIL, parentMessageState: ParentMessageStateTypes.NIL, currentChannel: null, parentMessage: null, allThreadMessages: [], hasMorePrev: false, hasMoreNext: false });
    }
    case ThreadContextActionTypes.ON_CHANNEL_FROZEN: {
      return __assign(__assign({}, state), { isChannelFrozen: true });
    }
    case ThreadContextActionTypes.ON_CHANNEL_UNFROZEN: {
      return __assign(__assign({}, state), { isChannelFrozen: false });
    }
    case ThreadContextActionTypes.ON_OPERATOR_UPDATED: {
      var channel = action.payload.channel;
      if ((channel === null || channel === void 0 ? void 0 : channel.url) === ((_v = state.currentChannel) === null || _v === void 0 ? void 0 : _v.url)) {
        return __assign(__assign({}, state), { currentChannel: channel });
      }
      return state;
    }
    case ThreadContextActionTypes.SEND_MESSAGE_START: {
      var message = action.payload.message;
      return __assign(__assign({}, state), { localThreadMessages: __spreadArray(__spreadArray([], state.localThreadMessages, true), [
        message
      ], false) });
    }
    case ThreadContextActionTypes.SEND_MESSAGE_SUCESS: {
      var message_3 = action.payload.message;
      return __assign(__assign({}, state), { allThreadMessages: __spreadArray(__spreadArray([], state.allThreadMessages.filter(function(m5) {
        return !compareIds2(m5 === null || m5 === void 0 ? void 0 : m5.reqId, message_3 === null || message_3 === void 0 ? void 0 : message_3.reqId);
      }), true), [
        message_3
      ], false), localThreadMessages: state.localThreadMessages.filter(function(m5) {
        return !compareIds2(m5 === null || m5 === void 0 ? void 0 : m5.reqId, message_3 === null || message_3 === void 0 ? void 0 : message_3.reqId);
      }) });
    }
    case ThreadContextActionTypes.SEND_MESSAGE_FAILURE: {
      var message_4 = action.payload.message;
      return __assign(__assign({}, state), { localThreadMessages: state.localThreadMessages.map(function(m5) {
        return compareIds2(m5 === null || m5 === void 0 ? void 0 : m5.reqId, message_4 === null || message_4 === void 0 ? void 0 : message_4.reqId) ? message_4 : m5;
      }) });
    }
    case ThreadContextActionTypes.RESEND_MESSAGE_START: {
      var message_5 = action.payload.message;
      return __assign(__assign({}, state), { localThreadMessages: state.localThreadMessages.map(function(m5) {
        return compareIds2(m5 === null || m5 === void 0 ? void 0 : m5.reqId, message_5 === null || message_5 === void 0 ? void 0 : message_5.reqId) ? message_5 : m5;
      }) });
    }
    case ThreadContextActionTypes.ON_FILE_INFO_UPLOADED: {
      var _5 = action.payload, channelUrl = _5.channelUrl, requestId_1 = _5.requestId, index = _5.index, uploadableFileInfo = _5.uploadableFileInfo, error = _5.error;
      if (!compareIds2(channelUrl, (_w = state.currentChannel) === null || _w === void 0 ? void 0 : _w.url)) {
        return state;
      }
      if (error)
        return state;
      var localThreadMessages = state.localThreadMessages;
      var messageToUpdate = localThreadMessages.find(function(message2) {
        return compareIds2(hasReqId2(message2) && message2.reqId, requestId_1);
      });
      var fileInfoList = (_x = messageToUpdate.messageParams) === null || _x === void 0 ? void 0 : _x.fileInfoList;
      if (Array.isArray(fileInfoList)) {
        fileInfoList[index] = uploadableFileInfo;
      }
      return __assign(__assign({}, state), { localThreadMessages });
    }
    case ThreadContextActionTypes.ON_TYPING_STATUS_UPDATED: {
      var _6 = action.payload, channel = _6.channel, typingMembers = _6.typingMembers;
      if (!compareIds2(channel.url, (_y = state.currentChannel) === null || _y === void 0 ? void 0 : _y.url)) {
        return state;
      }
      return __assign(__assign({}, state), { typingMembers });
    }
    default: {
      return state;
    }
  }
}
function hasReqId2(message) {
  return "reqId" in message;
}
var initialState5 = {
  currentChannel: null,
  allThreadMessages: [],
  localThreadMessages: [],
  parentMessage: null,
  channelState: ChannelStateTypes.NIL,
  parentMessageState: ParentMessageStateTypes.NIL,
  threadListState: ThreadListStateTypes.NIL,
  hasMorePrev: false,
  hasMoreNext: false,
  emojiContainer: {},
  isMuted: false,
  isChannelFrozen: false,
  currentUserId: "",
  typingMembers: []
};
function useGetChannel2(_a3, _b2) {
  var channelUrl = _a3.channelUrl, sdkInit = _a3.sdkInit, message = _a3.message;
  var sdk = _b2.sdk, logger = _b2.logger, threadDispatcher = _b2.threadDispatcher;
  (0, import_react172.useEffect)(function() {
    var _a4, _b3;
    if (sdkInit && channelUrl && (sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel)) {
      threadDispatcher({
        type: ThreadContextActionTypes.GET_CHANNEL_START,
        payload: null
      });
      (_b3 = (_a4 = sdk.groupChannel).getChannel) === null || _b3 === void 0 ? void 0 : _b3.call(_a4, channelUrl).then(function(groupChannel) {
        logger.info("Thread | useInitialize: Get channel succeeded", groupChannel);
        threadDispatcher({
          type: ThreadContextActionTypes.GET_CHANNEL_SUCCESS,
          payload: { groupChannel }
        });
      }).catch(function(error) {
        logger.info("Thread | useInitialize: Get channel failed", error);
        threadDispatcher({
          type: ThreadContextActionTypes.GET_CHANNEL_FAILURE,
          payload: error
        });
      });
    }
  }, [message, sdkInit]);
}
function useGetAllEmoji(_a3, _b2) {
  var sdk = _a3.sdk;
  var logger = _b2.logger, threadDispatcher = _b2.threadDispatcher;
  (0, import_react172.useEffect)(function() {
    if (sdk === null || sdk === void 0 ? void 0 : sdk.getAllEmoji) {
      sdk === null || sdk === void 0 ? void 0 : sdk.getAllEmoji().then(function(emojiContainer) {
        logger.info("Thread | useGetAllEmoji: Getting emojis succeeded.", emojiContainer);
        threadDispatcher({
          type: ThreadContextActionTypes.SET_EMOJI_CONTAINER,
          payload: { emojiContainer }
        });
      }).catch(function(error) {
        logger.info("Thread | useGetAllEmoji: Getting emojis failed.", error);
      });
    }
  }, [sdk]);
}
function useGetParentMessage(_a3, _b2) {
  var channelUrl = _a3.channelUrl, sdkInit = _a3.sdkInit, parentMessage = _a3.parentMessage;
  var sdk = _b2.sdk, logger = _b2.logger, threadDispatcher = _b2.threadDispatcher;
  (0, import_react172.useEffect)(function() {
    var _a4, _b3, _c;
    if (sdkInit && ((_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.message) === null || _a4 === void 0 ? void 0 : _a4.getMessage) && parentMessage) {
      threadDispatcher({
        type: ThreadContextActionTypes.GET_PARENT_MESSAGE_START,
        payload: null
      });
      var params = {
        channelUrl,
        channelType: q.GROUP,
        messageId: parentMessage.messageId,
        includeMetaArray: true,
        includeReactions: true,
        includeThreadInfo: true,
        includeParentMessageInfo: true
      };
      logger.info("Thread | useGetParentMessage: Get parent message start.", params);
      (_c = (_b3 = sdk.message).getMessage) === null || _c === void 0 ? void 0 : _c.call(_b3, params).then(function(parentMsg) {
        logger.info("Thread | useGetParentMessage: Get parent message succeeded.", parentMessage);
        parentMsg.ogMetaData = (parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.ogMetaData) || null;
        threadDispatcher({
          type: ThreadContextActionTypes.GET_PARENT_MESSAGE_SUCCESS,
          payload: { parentMessage: parentMsg }
        });
      }).catch(function(error) {
        logger.info("Thread | useGetParentMessage: Get parent message failed.", error);
        threadDispatcher({
          type: ThreadContextActionTypes.GET_PARENT_MESSAGE_FAILURE,
          payload: error
        });
      });
    }
  }, [sdkInit, parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.messageId]);
}
function useHandleThreadPubsubEvents(_a3, _b2) {
  var sdkInit = _a3.sdkInit, currentChannel = _a3.currentChannel, parentMessage = _a3.parentMessage;
  var pubSub = _b2.pubSub, threadDispatcher = _b2.threadDispatcher;
  (0, import_react172.useEffect)(function() {
    var subscriber = /* @__PURE__ */ new Map();
    if (pubSub === null || pubSub === void 0 ? void 0 : pubSub.subscribe) {
      subscriber.set(pubSubTopics.SEND_MESSAGE_START, pubSub.subscribe(pubSubTopics.SEND_MESSAGE_START, function(props) {
        var _a4, _b3;
        var channel = props.channel, message = props.message, publishingModules = props.publishingModules;
        if ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) === (channel === null || channel === void 0 ? void 0 : channel.url) && (message === null || message === void 0 ? void 0 : message.parentMessageId) === (parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.messageId) && shouldPubSubPublishToThread(publishingModules)) {
          var pendingMessage = __assign({}, message);
          if (message.isMultipleFilesMessage()) {
            pendingMessage.fileInfoList = (_b3 = (_a4 = message === null || message === void 0 ? void 0 : message.messageParams) === null || _a4 === void 0 ? void 0 : _a4.fileInfoList.map(function(fileInfo) {
              return __assign(__assign({}, fileInfo), { url: URL.createObjectURL(fileInfo.file) });
            })) !== null && _b3 !== void 0 ? _b3 : [];
          }
          threadDispatcher({
            type: ThreadContextActionTypes.SEND_MESSAGE_START,
            payload: {
              message: pendingMessage
            }
          });
        }
        scrollIntoLast2 === null || scrollIntoLast2 === void 0 ? void 0 : scrollIntoLast2();
      }));
      subscriber.set(PUBSUB_TOPICS.ON_FILE_INFO_UPLOADED, pubSub.subscribe(PUBSUB_TOPICS.ON_FILE_INFO_UPLOADED, function(props) {
        var response = props.response, publishingModules = props.publishingModules;
        if ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) === response.channelUrl && shouldPubSubPublishToThread(publishingModules)) {
          threadDispatcher({
            type: ON_FILE_INFO_UPLOADED,
            payload: response
          });
        }
      }));
      subscriber.set(pubSubTopics.SEND_USER_MESSAGE, pubSub.subscribe(pubSubTopics.SEND_USER_MESSAGE, function(props) {
        var _a4 = props, channel = _a4.channel, message = _a4.message;
        if ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) === (channel === null || channel === void 0 ? void 0 : channel.url) && (message === null || message === void 0 ? void 0 : message.parentMessageId) === (parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.messageId)) {
          threadDispatcher({
            type: ThreadContextActionTypes.SEND_MESSAGE_SUCESS,
            payload: { message }
          });
        }
        scrollIntoLast2 === null || scrollIntoLast2 === void 0 ? void 0 : scrollIntoLast2();
      }));
      subscriber.set(pubSubTopics.SEND_MESSAGE_FAILED, pubSub.subscribe(pubSubTopics.SEND_MESSAGE_FAILED, function(props) {
        var channel = props.channel, message = props.message, publishingModules = props.publishingModules;
        if ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) === (channel === null || channel === void 0 ? void 0 : channel.url) && (message === null || message === void 0 ? void 0 : message.parentMessageId) === (parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.messageId) && shouldPubSubPublishToThread(publishingModules)) {
          threadDispatcher({
            type: ThreadContextActionTypes.SEND_MESSAGE_FAILURE,
            payload: { message }
          });
        }
      }));
      subscriber.set(pubSubTopics.SEND_FILE_MESSAGE, pubSub.subscribe(pubSubTopics.SEND_FILE_MESSAGE, function(props) {
        var channel = props.channel, message = props.message, publishingModules = props.publishingModules;
        if ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) === (channel === null || channel === void 0 ? void 0 : channel.url) && shouldPubSubPublishToThread(publishingModules)) {
          threadDispatcher({
            type: ThreadContextActionTypes.SEND_MESSAGE_SUCESS,
            payload: { message }
          });
        }
        scrollIntoLast2 === null || scrollIntoLast2 === void 0 ? void 0 : scrollIntoLast2();
      }));
      subscriber.set(pubSubTopics.UPDATE_USER_MESSAGE, pubSub.subscribe(pubSubTopics.UPDATE_USER_MESSAGE, function(props) {
        var _a4 = props, channel = _a4.channel, message = _a4.message;
        if ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) === (channel === null || channel === void 0 ? void 0 : channel.url)) {
          threadDispatcher({
            type: ThreadContextActionTypes.ON_MESSAGE_UPDATED,
            payload: { channel, message }
          });
        }
      }));
      subscriber.set(pubSubTopics.DELETE_MESSAGE, pubSub.subscribe(pubSubTopics.DELETE_MESSAGE, function(props) {
        var _a4 = props, channel = _a4.channel, messageId = _a4.messageId;
        if ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) === (channel === null || channel === void 0 ? void 0 : channel.url)) {
          threadDispatcher({
            type: ThreadContextActionTypes.ON_MESSAGE_DELETED,
            payload: { messageId }
          });
        }
      }));
    }
    return function() {
      subscriber === null || subscriber === void 0 ? void 0 : subscriber.forEach(function(s6) {
        try {
          s6 === null || s6 === void 0 ? void 0 : s6.remove();
        } catch (_a4) {
        }
      });
    };
  }, [sdkInit, currentChannel, parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.messageId]);
}
function useHandleChannelEvents2(_a3, _b2) {
  var sdk = _a3.sdk, currentChannel = _a3.currentChannel;
  var logger = _b2.logger, threadDispatcher = _b2.threadDispatcher;
  (0, import_react172.useEffect)(function() {
    var _a4, _b3, _c;
    var handlerId = uuidv4();
    if (((_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a4 === void 0 ? void 0 : _a4.addGroupChannelHandler) && currentChannel) {
      var channelHandlerParams = {
        // message status change
        onMessageReceived: function(channel, message) {
          logger.info("Thread | useHandleChannelEvents: onMessageReceived", { channel, message });
          threadDispatcher({
            type: ThreadContextActionTypes.ON_MESSAGE_RECEIVED,
            payload: { channel, message }
          });
        },
        onMessageUpdated: function(channel, message) {
          logger.info("Thread | useHandleChannelEvents: onMessageUpdated", { channel, message });
          threadDispatcher({
            type: ThreadContextActionTypes.ON_MESSAGE_UPDATED,
            payload: { channel, message }
          });
        },
        onMessageDeleted: function(channel, messageId) {
          logger.info("Thread | useHandleChannelEvents: onMessageDeleted", { channel, messageId });
          threadDispatcher({
            type: ThreadContextActionTypes.ON_MESSAGE_DELETED,
            payload: { channel, messageId }
          });
        },
        onReactionUpdated: function(channel, reactionEvent) {
          logger.info("Thread | useHandleChannelEvents: onReactionUpdated", { channel, reactionEvent });
          threadDispatcher({
            type: ThreadContextActionTypes.ON_REACTION_UPDATED,
            payload: { channel, reactionEvent }
          });
        },
        // user status change
        onUserMuted: function(channel, user) {
          logger.info("Thread | useHandleChannelEvents: onUserMuted", { channel, user });
          threadDispatcher({
            type: ThreadContextActionTypes.ON_USER_MUTED,
            payload: { channel, user }
          });
        },
        onUserUnmuted: function(channel, user) {
          logger.info("Thread | useHandleChannelEvents: onUserUnmuted", { channel, user });
          threadDispatcher({
            type: ThreadContextActionTypes.ON_USER_UNMUTED,
            payload: { channel, user }
          });
        },
        onUserBanned: function(channel, user) {
          logger.info("Thread | useHandleChannelEvents: onUserBanned", { channel, user });
          threadDispatcher({
            type: ThreadContextActionTypes.ON_USER_BANNED,
            payload: { channel, user }
          });
        },
        onUserUnbanned: function(channel, user) {
          logger.info("Thread | useHandleChannelEvents: onUserUnbanned", { channel, user });
          threadDispatcher({
            type: ThreadContextActionTypes.ON_USER_UNBANNED,
            payload: { channel, user }
          });
        },
        onUserLeft: function(channel, user) {
          logger.info("Thread | useHandleChannelEvents: onUserLeft", { channel, user });
          threadDispatcher({
            type: ThreadContextActionTypes.ON_USER_LEFT,
            payload: { channel, user }
          });
        },
        // channel status change
        onChannelFrozen: function(channel) {
          logger.info("Thread | useHandleChannelEvents: onChannelFrozen", { channel });
          threadDispatcher({
            type: ThreadContextActionTypes.ON_CHANNEL_FROZEN,
            payload: { channel }
          });
        },
        onChannelUnfrozen: function(channel) {
          logger.info("Thread | useHandleChannelEvents: onChannelUnfrozen", { channel });
          threadDispatcher({
            type: ThreadContextActionTypes.ON_CHANNEL_UNFROZEN,
            payload: { channel }
          });
        },
        onOperatorUpdated: function(channel, users) {
          logger.info("Thread | useHandleChannelEvents: onOperatorUpdated", { channel, users });
          threadDispatcher({
            type: ThreadContextActionTypes.ON_OPERATOR_UPDATED,
            payload: { channel, users }
          });
        },
        onTypingStatusUpdated: function(channel) {
          if (compareIds(channel === null || channel === void 0 ? void 0 : channel.url, currentChannel.url)) {
            logger.info("Channel | onTypingStatusUpdated", { channel });
            var typingMembers = channel.getTypingUsers();
            threadDispatcher({
              type: ON_TYPING_STATUS_UPDATED,
              payload: {
                channel,
                typingMembers
              }
            });
          }
        }
      };
      var channelHandler = new Ye3(channelHandlerParams);
      (_c = (_b3 = sdk.groupChannel).addGroupChannelHandler) === null || _c === void 0 ? void 0 : _c.call(_b3, handlerId, channelHandler);
      logger.info("Thread | useHandleChannelEvents: Added channelHandler in Thread", { handlerId, channelHandler });
    }
    return function() {
      var _a5, _b4, _c2;
      if (handlerId && ((_a5 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a5 === void 0 ? void 0 : _a5.removeGroupChannelHandler)) {
        (_c2 = (_b4 = sdk.groupChannel).removeGroupChannelHandler) === null || _c2 === void 0 ? void 0 : _c2.call(_b4, handlerId);
        logger.info("Thread | useHandleChannelEvents: Removed channelHandler in Thread.", handlerId);
      }
    };
  }, [
    sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel,
    currentChannel
  ]);
}
function useSendFileMessageCallback2(_a3, _b2) {
  var currentChannel = _a3.currentChannel, onBeforeSendFileMessage = _a3.onBeforeSendFileMessage;
  var logger = _b2.logger, pubSub = _b2.pubSub, threadDispatcher = _b2.threadDispatcher;
  return (0, import_react172.useCallback)(function(file, quoteMessage) {
    return new Promise(function(resolve, reject) {
      var _a4;
      var createParamsDefault = function() {
        var params2 = {};
        params2.file = file;
        if (quoteMessage) {
          params2.isReplyToChannel = true;
          params2.parentMessageId = quoteMessage.messageId;
        }
        return params2;
      };
      var params = (_a4 = onBeforeSendFileMessage === null || onBeforeSendFileMessage === void 0 ? void 0 : onBeforeSendFileMessage(file, quoteMessage)) !== null && _a4 !== void 0 ? _a4 : createParamsDefault();
      logger.info("Thread | useSendFileMessageCallback: Sending file message start.", params);
      currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.sendFileMessage(params).onPending(function(pendingMessage) {
        threadDispatcher({
          type: ThreadContextActionTypes.SEND_MESSAGE_START,
          payload: {
            /* pubSub is used instead of messagesDispatcher
              to avoid redundantly calling `messageActionTypes.SEND_MESSAGE_START` */
            // TODO: remove data pollution
            message: __assign(__assign({}, pendingMessage), {
              url: URL.createObjectURL(file),
              // pending thumbnail message seems to be failed
              requestState: "pending",
              isUserMessage: pendingMessage.isUserMessage,
              isFileMessage: pendingMessage.isFileMessage,
              isAdminMessage: pendingMessage.isAdminMessage,
              isMultipleFilesMessage: pendingMessage.isMultipleFilesMessage
            })
          }
        });
        setTimeout(function() {
          return scrollIntoLast2();
        }, SCROLL_BOTTOM_DELAY_FOR_SEND);
      }).onFailed(function(error, message) {
        message.localUrl = URL.createObjectURL(file);
        message.file = file;
        logger.info("Thread | useSendFileMessageCallback: Sending file message failed.", { message, error });
        threadDispatcher({
          type: ThreadContextActionTypes.SEND_MESSAGE_FAILURE,
          payload: { message, error }
        });
        reject(error);
      }).onSucceeded(function(message) {
        logger.info("Thread | useSendFileMessageCallback: Sending file message succeeded.", message);
        pubSub.publish(pubSubTopics.SEND_FILE_MESSAGE, {
          channel: currentChannel,
          message,
          publishingModules: [PublishingModuleType.THREAD]
        });
        resolve(message);
      });
    });
  }, [currentChannel]);
}
function useUpdateMessageCallback2(_a3, _b2) {
  var currentChannel = _a3.currentChannel, isMentionEnabled = _a3.isMentionEnabled;
  var logger = _b2.logger, pubSub = _b2.pubSub, threadDispatcher = _b2.threadDispatcher;
  return (0, import_react172.useCallback)(function(props) {
    var _a4;
    var messageId = props.messageId, message = props.message, mentionedUsers = props.mentionedUsers, mentionTemplate = props.mentionTemplate;
    var createParamsDefault = function() {
      var params2 = {};
      params2.message = message;
      if (isMentionEnabled && mentionedUsers && (mentionedUsers === null || mentionedUsers === void 0 ? void 0 : mentionedUsers.length) > 0) {
        params2.mentionedUsers = mentionedUsers;
      }
      if (isMentionEnabled && mentionTemplate) {
        params2.mentionedMessageTemplate = mentionTemplate;
      } else {
        params2.mentionedMessageTemplate = message;
      }
      return params2;
    };
    var params = createParamsDefault();
    logger.info("Thread | useUpdateMessageCallback: Message update start.", params);
    (_a4 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.updateUserMessage) === null || _a4 === void 0 ? void 0 : _a4.call(currentChannel, messageId, params).then(function(message2) {
      logger.info("Thread | useUpdateMessageCallback: Message update succeeded.", message2);
      threadDispatcher({
        type: ThreadContextActionTypes.ON_MESSAGE_UPDATED,
        payload: {
          channel: currentChannel,
          message: message2
        }
      });
      pubSub.publish(pubSubTopics.UPDATE_USER_MESSAGE, {
        fromSelector: true,
        channel: currentChannel,
        message: message2,
        publishingModules: [PublishingModuleType.THREAD]
      });
    });
  }, [currentChannel, isMentionEnabled]);
}
function useDeleteMessageCallback2(_a3, _b2) {
  var currentChannel = _a3.currentChannel, threadDispatcher = _a3.threadDispatcher;
  var logger = _b2.logger;
  return (0, import_react172.useCallback)(function(message) {
    logger.info("Thread | useDeleteMessageCallback: Deleting message.", message);
    var sendingStatus = message.sendingStatus;
    return new Promise(function(resolve, reject) {
      var _a4;
      logger.info("Thread | useDeleteMessageCallback: Deleting message requestState:", sendingStatus);
      if (sendingStatus === "failed" || sendingStatus === "pending") {
        logger.info("Thread | useDeleteMessageCallback: Deleted message from local:", message);
        threadDispatcher({
          type: ThreadContextActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,
          payload: message.reqId
        });
        resolve();
      }
      logger.info("Thread | useDeleteMessageCallback: Deleting message from remote:", sendingStatus);
      (_a4 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.deleteMessage) === null || _a4 === void 0 ? void 0 : _a4.call(currentChannel, message).then(function() {
        logger.info("Thread | useDeleteMessageCallback: Deleting message success!", message);
        threadDispatcher({
          type: ThreadContextActionTypes.ON_MESSAGE_DELETED,
          payload: { message, channel: currentChannel }
        });
        resolve();
      }).catch(function(err) {
        logger.warning("Thread | useDeleteMessageCallback: Deleting message failed!", err);
        reject(err);
      });
    });
  }, [currentChannel]);
}
function useToggleReactionCallback2(_a3, _b2) {
  var currentChannel = _a3.currentChannel;
  var logger = _b2.logger;
  return (0, import_react172.useCallback)(function(message, key, isReacted) {
    var _a4, _b3;
    if (isReacted) {
      (_a4 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.deleteReaction) === null || _a4 === void 0 ? void 0 : _a4.call(currentChannel, message, key).then(function(res) {
        logger.info("Thread | useToggleReactionsCallback: Delete reaction succeeded.", res);
      }).catch(function(err) {
        logger.warning("Thread | useToggleReactionsCallback: Delete reaction failed.", err);
      });
      return;
    }
    (_b3 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.addReaction) === null || _b3 === void 0 ? void 0 : _b3.call(currentChannel, message, key).then(function(res) {
      logger.info("Thread | useToggleReactionsCallback: Add reaction succeeded.", res);
    }).catch(function(err) {
      logger.warning("Thread | useToggleReactionsCallback: Add reaction failed.", err);
    });
  }, [currentChannel]);
}
function useSendUserMessageCallback(_a3, _b2) {
  var isMentionEnabled = _a3.isMentionEnabled, currentChannel = _a3.currentChannel, onBeforeSendUserMessage = _a3.onBeforeSendUserMessage;
  var logger = _b2.logger, pubSub = _b2.pubSub, threadDispatcher = _b2.threadDispatcher;
  var sendMessage = (0, import_react172.useCallback)(function(props) {
    var _a4;
    var message = props.message, quoteMessage = props.quoteMessage, mentionTemplate = props.mentionTemplate, mentionedUsers = props.mentionedUsers;
    var createDefaultParams = function() {
      var params2 = {};
      params2.message = message;
      var mentionedUsersLength = (mentionedUsers === null || mentionedUsers === void 0 ? void 0 : mentionedUsers.length) || 0;
      if (isMentionEnabled && mentionedUsersLength) {
        params2.mentionedUsers = mentionedUsers;
      }
      if (isMentionEnabled && mentionTemplate && mentionedUsersLength) {
        params2.mentionedMessageTemplate = mentionTemplate;
      }
      if (quoteMessage) {
        params2.isReplyToChannel = true;
        params2.parentMessageId = quoteMessage.messageId;
      }
      return params2;
    };
    var params = (_a4 = onBeforeSendUserMessage === null || onBeforeSendUserMessage === void 0 ? void 0 : onBeforeSendUserMessage(message, quoteMessage)) !== null && _a4 !== void 0 ? _a4 : createDefaultParams();
    logger.info("Thread | useSendUserMessageCallback: Sending user message start.", params);
    if (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.sendUserMessage) {
      currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.sendUserMessage(params).onPending(function(pendingMessage) {
        threadDispatcher({
          type: ThreadContextActionTypes.SEND_MESSAGE_START,
          payload: { message: pendingMessage }
        });
      }).onFailed(function(error, message2) {
        logger.info("Thread | useSendUserMessageCallback: Sending user message failed.", { message: message2, error });
        threadDispatcher({
          type: ThreadContextActionTypes.SEND_MESSAGE_FAILURE,
          payload: { error, message: message2 }
        });
      }).onSucceeded(function(message2) {
        logger.info("Thread | useSendUserMessageCallback: Sending user message succeeded.", message2);
        pubSub.publish(pubSubTopics.SEND_USER_MESSAGE, {
          channel: currentChannel,
          message: message2,
          publishingModules: [PublishingModuleType.THREAD]
        });
      });
    }
  }, [isMentionEnabled, currentChannel]);
  return sendMessage;
}
function useResendMessageCallback2(_a3, _b2) {
  var currentChannel = _a3.currentChannel;
  var logger = _b2.logger, pubSub = _b2.pubSub, threadDispatcher = _b2.threadDispatcher;
  return (0, import_react172.useCallback)(function(failedMessage) {
    var _a4, _b3, _c, _d, _e3;
    if (failedMessage === null || failedMessage === void 0 ? void 0 : failedMessage.isResendable) {
      logger.info("Thread | useResendMessageCallback: Resending failedMessage start.", failedMessage);
      if (((_a4 = failedMessage === null || failedMessage === void 0 ? void 0 : failedMessage.isUserMessage) === null || _a4 === void 0 ? void 0 : _a4.call(failedMessage)) || (failedMessage === null || failedMessage === void 0 ? void 0 : failedMessage.messageType) === z.USER) {
        try {
          currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.resendMessage(failedMessage).onPending(function(message) {
            logger.info("Thread | useResendMessageCallback: Resending user message started.", message);
            threadDispatcher({
              type: ThreadContextActionTypes.RESEND_MESSAGE_START,
              payload: { message }
            });
          }).onSucceeded(function(message) {
            logger.info("Thread | useResendMessageCallback: Resending user message succeeded.", message);
            threadDispatcher({
              type: ThreadContextActionTypes.SEND_MESSAGE_SUCESS,
              payload: { message }
            });
            pubSub.publish(pubSubTopics.SEND_USER_MESSAGE, {
              channel: currentChannel,
              message,
              publishingModules: [PublishingModuleType.THREAD]
            });
          }).onFailed(function(error) {
            logger.warning("Thread | useResendMessageCallback: Resending user message failed.", error);
            failedMessage.sendingStatus = W.FAILED;
            threadDispatcher({
              type: ThreadContextActionTypes.SEND_MESSAGE_FAILURE,
              payload: { message: failedMessage }
            });
          });
        } catch (err) {
          logger.warning("Thread | useResendMessageCallback: Resending user message failed.", err);
          failedMessage.sendingStatus = W.FAILED;
          threadDispatcher({
            type: ThreadContextActionTypes.SEND_MESSAGE_FAILURE,
            payload: { message: failedMessage }
          });
        }
      } else if ((_b3 = failedMessage === null || failedMessage === void 0 ? void 0 : failedMessage.isFileMessage) === null || _b3 === void 0 ? void 0 : _b3.call(failedMessage)) {
        try {
          (_c = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.resendMessage) === null || _c === void 0 ? void 0 : _c.call(currentChannel, failedMessage).onPending(function(message) {
            logger.info("Thread | useResendMessageCallback: Resending file message started.", message);
            threadDispatcher({
              type: ThreadContextActionTypes.RESEND_MESSAGE_START,
              payload: { message }
            });
          }).onSucceeded(function(message) {
            logger.info("Thread | useResendMessageCallback: Resending file message succeeded.", message);
            threadDispatcher({
              type: ThreadContextActionTypes.SEND_MESSAGE_SUCESS,
              payload: { message }
            });
            pubSub.publish(pubSubTopics.SEND_FILE_MESSAGE, {
              channel: currentChannel,
              message: failedMessage,
              publishingModules: [PublishingModuleType.THREAD]
            });
          }).onFailed(function(error) {
            logger.warning("Thread | useResendMessageCallback: Resending file message failed.", error);
            failedMessage.sendingStatus = W.FAILED;
            threadDispatcher({
              type: ThreadContextActionTypes.SEND_MESSAGE_FAILURE,
              payload: { message: failedMessage }
            });
          });
        } catch (err) {
          logger.warning("Thread | useResendMessageCallback: Resending file message failed.", err);
          failedMessage.sendingStatus = W.FAILED;
          threadDispatcher({
            type: ThreadContextActionTypes.SEND_MESSAGE_FAILURE,
            payload: { message: failedMessage }
          });
        }
      } else if ((_d = failedMessage === null || failedMessage === void 0 ? void 0 : failedMessage.isMultipleFilesMessage) === null || _d === void 0 ? void 0 : _d.call(failedMessage)) {
        try {
          (_e3 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.resendMessage) === null || _e3 === void 0 ? void 0 : _e3.call(currentChannel, failedMessage).onPending(function(message) {
            logger.info("Thread | useResendMessageCallback: Resending multiple files message started.", message);
            threadDispatcher({
              type: ThreadContextActionTypes.RESEND_MESSAGE_START,
              payload: { message }
            });
          }).onFileUploaded(function(requestId, index, uploadableFileInfo, error) {
            logger.info("Thread | useResendMessageCallback: onFileUploaded during resending multiple files message.", {
              requestId,
              index,
              error,
              uploadableFileInfo
            });
            pubSub.publish(pubSubTopics.ON_FILE_INFO_UPLOADED, {
              response: {
                channelUrl: currentChannel.url,
                requestId,
                index,
                uploadableFileInfo,
                error
              },
              publishingModules: [PublishingModuleType.THREAD]
            });
          }).onSucceeded(function(message) {
            logger.info("Thread | useResendMessageCallback: Resending MFM succeeded.", message);
            threadDispatcher({
              type: ThreadContextActionTypes.SEND_MESSAGE_SUCESS,
              payload: { message }
            });
            pubSub.publish(pubSubTopics.SEND_FILE_MESSAGE, {
              channel: currentChannel,
              message,
              publishingModules: [PublishingModuleType.THREAD]
            });
          }).onFailed(function(error, message) {
            logger.warning("Thread | useResendMessageCallback: Resending MFM failed.", error);
            threadDispatcher({
              type: ThreadContextActionTypes.SEND_MESSAGE_FAILURE,
              payload: { message }
            });
          });
        } catch (err) {
          logger.warning("Thread | useResendMessageCallback: Resending MFM failed.", err);
          threadDispatcher({
            type: ThreadContextActionTypes.SEND_MESSAGE_FAILURE,
            payload: { message: failedMessage }
          });
        }
      } else {
        logger.warning("Thread | useResendMessageCallback: Message is not resendable.", failedMessage);
        failedMessage.sendingStatus = W.FAILED;
        threadDispatcher({
          type: ThreadContextActionTypes.SEND_MESSAGE_FAILURE,
          payload: { message: failedMessage }
        });
      }
    }
  }, [currentChannel]);
}
var useSendVoiceMessageCallback2 = function(_a3, _b2) {
  var currentChannel = _a3.currentChannel, onBeforeSendVoiceMessage = _a3.onBeforeSendVoiceMessage;
  var logger = _b2.logger, pubSub = _b2.pubSub, threadDispatcher = _b2.threadDispatcher;
  var sendMessage = (0, import_react172.useCallback)(function(file, duration, quoteMessage) {
    var messageParams = onBeforeSendVoiceMessage && typeof onBeforeSendVoiceMessage === "function" ? onBeforeSendVoiceMessage(file, quoteMessage) : {
      file,
      fileName: VOICE_MESSAGE_FILE_NAME,
      mimeType: VOICE_MESSAGE_MIME_TYPE,
      metaArrays: [
        new je({
          key: META_ARRAY_VOICE_DURATION_KEY,
          value: ["".concat(duration)]
        }),
        new je({
          key: META_ARRAY_MESSAGE_TYPE_KEY,
          value: [META_ARRAY_MESSAGE_TYPE_VALUE__VOICE]
        })
      ]
    };
    if (quoteMessage) {
      messageParams.isReplyToChannel = true;
      messageParams.parentMessageId = quoteMessage.messageId;
    }
    logger.info("Thread | useSendVoiceMessageCallback:  Start sending voice message", messageParams);
    currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.sendFileMessage(messageParams).onPending(function(pendingMessage) {
      threadDispatcher({
        type: ThreadContextActionTypes.SEND_MESSAGE_START,
        payload: {
          /* pubSub is used instead of messagesDispatcher
          to avoid redundantly calling `messageActionTypes.SEND_MESSAGE_START` */
          // TODO: remove data pollution
          message: __assign(__assign({}, pendingMessage), {
            url: URL.createObjectURL(file),
            // pending thumbnail message seems to be failed
            requestState: "pending",
            isUserMessage: pendingMessage.isUserMessage,
            isFileMessage: pendingMessage.isFileMessage,
            isAdminMessage: pendingMessage.isAdminMessage,
            isMultipleFilesMessage: pendingMessage.isMultipleFilesMessage
          })
        }
      });
      setTimeout(function() {
        return scrollIntoLast2();
      }, SCROLL_BOTTOM_DELAY_FOR_SEND);
    }).onFailed(function(error, message) {
      message.localUrl = URL.createObjectURL(file);
      message.file = file;
      logger.info("Thread | useSendVoiceMessageCallback: Sending voice message failed.", { message, error });
      threadDispatcher({
        type: ThreadContextActionTypes.SEND_MESSAGE_FAILURE,
        payload: { message, error }
      });
    }).onSucceeded(function(message) {
      logger.info("Thread | useSendVoiceMessageCallback: Sending voice message succeeded.", message);
      pubSub.publish(pubSubTopics.SEND_FILE_MESSAGE, {
        channel: currentChannel,
        message,
        publishingModules: [PublishingModuleType.THREAD]
      });
    });
  }, [
    currentChannel,
    onBeforeSendVoiceMessage
  ]);
  return sendMessage;
};
function getThreadMessageListParams(params) {
  return __assign({ prevResultSize: PREV_THREADS_FETCH_SIZE, nextResultSize: NEXT_THREADS_FETCH_SIZE, includeMetaArray: true }, params);
}
var useThreadFetchers = function(_a3) {
  var isReactionEnabled = _a3.isReactionEnabled, anchorMessage = _a3.anchorMessage, staleParentMessage = _a3.parentMessage, threadDispatcher = _a3.threadDispatcher, logger = _a3.logger, oldestMessageTimeStamp = _a3.oldestMessageTimeStamp, latestMessageTimeStamp = _a3.latestMessageTimeStamp, threadListState = _a3.threadListState;
  var stores = useSendbirdStateContext().stores;
  var timestamp = (anchorMessage === null || anchorMessage === void 0 ? void 0 : anchorMessage.createdAt) || 0;
  var initialize = (0, import_react172.useCallback)(function(callback) {
    return __awaiter(void 0, void 0, void 0, function() {
      var params, _a4, threadedMessages_1, parentMessage, error_1;
      return __generator(this, function(_b2) {
        switch (_b2.label) {
          case 0:
            if (!stores.sdkStore.initialized || !staleParentMessage)
              return [
                2
                /*return*/
              ];
            threadDispatcher({
              type: ThreadContextActionTypes.INITIALIZE_THREAD_LIST_START,
              payload: null
            });
            _b2.label = 1;
          case 1:
            _b2.trys.push([1, 3, , 4]);
            params = getThreadMessageListParams({ includeReactions: isReactionEnabled });
            logger.info("Thread | useGetThreadList: Initialize thread list start.", { timestamp, params });
            return [4, staleParentMessage.getThreadedMessagesByTimestamp(timestamp, params)];
          case 2:
            _a4 = _b2.sent(), threadedMessages_1 = _a4.threadedMessages, parentMessage = _a4.parentMessage;
            logger.info("Thread | useGetThreadList: Initialize thread list succeeded.", { staleParentMessage, threadedMessages: threadedMessages_1 });
            threadDispatcher({
              type: ThreadContextActionTypes.INITIALIZE_THREAD_LIST_SUCCESS,
              payload: { parentMessage, anchorMessage, threadedMessages: threadedMessages_1 }
            });
            setTimeout(function() {
              return callback === null || callback === void 0 ? void 0 : callback(threadedMessages_1);
            });
            return [3, 4];
          case 3:
            error_1 = _b2.sent();
            logger.info("Thread | useGetThreadList: Initialize thread list failed.", error_1);
            threadDispatcher({
              type: ThreadContextActionTypes.INITIALIZE_THREAD_LIST_FAILURE,
              payload: error_1
            });
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [stores.sdkStore.initialized, staleParentMessage, anchorMessage, isReactionEnabled]);
  var loadPrevious = (0, import_react172.useCallback)(function(callback) {
    return __awaiter(void 0, void 0, void 0, function() {
      var params, _a4, threadedMessages_2, parentMessage, error_2;
      return __generator(this, function(_b2) {
        switch (_b2.label) {
          case 0:
            if (threadListState !== ThreadListStateTypes.INITIALIZED || oldestMessageTimeStamp === 0 || !staleParentMessage)
              return [
                2
                /*return*/
              ];
            threadDispatcher({
              type: ThreadContextActionTypes.GET_PREV_MESSAGES_START,
              payload: null
            });
            _b2.label = 1;
          case 1:
            _b2.trys.push([1, 3, , 4]);
            params = getThreadMessageListParams({ nextResultSize: 0, includeReactions: isReactionEnabled });
            return [4, staleParentMessage.getThreadedMessagesByTimestamp(oldestMessageTimeStamp, params)];
          case 2:
            _a4 = _b2.sent(), threadedMessages_2 = _a4.threadedMessages, parentMessage = _a4.parentMessage;
            logger.info("Thread | useGetPrevThreadsCallback: Fetch prev threads succeeded.", { parentMessage, threadedMessages: threadedMessages_2 });
            threadDispatcher({
              type: ThreadContextActionTypes.GET_PREV_MESSAGES_SUCESS,
              payload: { parentMessage, threadedMessages: threadedMessages_2 }
            });
            setTimeout(function() {
              return callback === null || callback === void 0 ? void 0 : callback(threadedMessages_2);
            });
            return [3, 4];
          case 3:
            error_2 = _b2.sent();
            logger.info("Thread | useGetPrevThreadsCallback: Fetch prev threads failed.", error_2);
            threadDispatcher({
              type: ThreadContextActionTypes.GET_PREV_MESSAGES_FAILURE,
              payload: error_2
            });
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [threadListState, oldestMessageTimeStamp, isReactionEnabled, staleParentMessage]);
  var loadNext = (0, import_react172.useCallback)(function(callback) {
    return __awaiter(void 0, void 0, void 0, function() {
      var params, _a4, threadedMessages_3, parentMessage, error_3;
      return __generator(this, function(_b2) {
        switch (_b2.label) {
          case 0:
            if (threadListState !== ThreadListStateTypes.INITIALIZED || latestMessageTimeStamp === 0 || !staleParentMessage)
              return [
                2
                /*return*/
              ];
            threadDispatcher({
              type: ThreadContextActionTypes.GET_NEXT_MESSAGES_START,
              payload: null
            });
            _b2.label = 1;
          case 1:
            _b2.trys.push([1, 3, , 4]);
            params = getThreadMessageListParams({ prevResultSize: 0, includeReactions: isReactionEnabled });
            return [4, staleParentMessage.getThreadedMessagesByTimestamp(latestMessageTimeStamp, params)];
          case 2:
            _a4 = _b2.sent(), threadedMessages_3 = _a4.threadedMessages, parentMessage = _a4.parentMessage;
            logger.info("Thread | useGetNextThreadsCallback: Fetch next threads succeeded.", { parentMessage, threadedMessages: threadedMessages_3 });
            threadDispatcher({
              type: ThreadContextActionTypes.GET_NEXT_MESSAGES_SUCESS,
              payload: { parentMessage, threadedMessages: threadedMessages_3 }
            });
            setTimeout(function() {
              return callback === null || callback === void 0 ? void 0 : callback(threadedMessages_3);
            });
            return [3, 4];
          case 3:
            error_3 = _b2.sent();
            logger.info("Thread | useGetNextThreadsCallback: Fetch next threads failed.", error_3);
            threadDispatcher({
              type: ThreadContextActionTypes.GET_NEXT_MESSAGES_FAILURE,
              payload: error_3
            });
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [threadListState, latestMessageTimeStamp, isReactionEnabled, staleParentMessage]);
  return {
    initialize,
    loadPrevious,
    loadNext
  };
};
var ThreadContext = import_react172.default.createContext(null);
var ThreadProvider = function(props) {
  var _a3, _b2;
  var children = props.children, channelUrl = props.channelUrl, onHeaderActionClick = props.onHeaderActionClick, onMoveToParentMessage = props.onMoveToParentMessage, onBeforeSendUserMessage = props.onBeforeSendUserMessage, onBeforeSendFileMessage = props.onBeforeSendFileMessage, onBeforeSendVoiceMessage = props.onBeforeSendVoiceMessage, onBeforeSendMultipleFilesMessage = props.onBeforeSendMultipleFilesMessage, onBeforeDownloadFileMessage = props.onBeforeDownloadFileMessage, isMultipleFilesMessageEnabled = props.isMultipleFilesMessageEnabled, filterEmojiCategoryIds = props.filterEmojiCategoryIds;
  var propsMessage = props === null || props === void 0 ? void 0 : props.message;
  var propsParentMessage = getParentMessageFrom(propsMessage);
  var globalStore = useSendbirdStateContext();
  var stores = globalStore.stores, config = globalStore.config;
  var sdkStore = stores.sdkStore, userStore = stores.userStore;
  var sdk = sdkStore.sdk;
  var user = userStore.user;
  var sdkInit = sdkStore === null || sdkStore === void 0 ? void 0 : sdkStore.initialized;
  var logger = config.logger, pubSub = config.pubSub, htmlTextDirection = config.htmlTextDirection, forceLeftToRightMessageLayout = config.forceLeftToRightMessageLayout;
  var isMentionEnabled = config.groupChannel.enableMention;
  var isReactionEnabled = config.groupChannel.enableReactions;
  var _c = (0, import_react172.useReducer)(reducer4, initialState5), threadStore = _c[0], threadDispatcher = _c[1];
  var currentChannel = threadStore.currentChannel, allThreadMessages = threadStore.allThreadMessages, localThreadMessages = threadStore.localThreadMessages, parentMessage = threadStore.parentMessage, channelState = threadStore.channelState, threadListState = threadStore.threadListState, parentMessageState = threadStore.parentMessageState, hasMorePrev = threadStore.hasMorePrev, hasMoreNext = threadStore.hasMoreNext, emojiContainer = threadStore.emojiContainer, isMuted = threadStore.isMuted, isChannelFrozen = threadStore.isChannelFrozen, currentUserId = threadStore.currentUserId, typingMembers = threadStore.typingMembers;
  (0, import_react172.useEffect)(function() {
    threadDispatcher({
      type: ThreadContextActionTypes.INIT_USER_ID,
      payload: user === null || user === void 0 ? void 0 : user.userId
    });
  }, [user]);
  useGetChannel2({
    channelUrl,
    sdkInit,
    message: propsMessage
  }, { sdk, logger, threadDispatcher });
  useGetParentMessage({
    channelUrl,
    sdkInit,
    parentMessage: propsParentMessage
  }, { sdk, logger, threadDispatcher });
  useGetAllEmoji({ sdk }, { logger, threadDispatcher });
  useHandleChannelEvents2({
    sdk,
    currentChannel
  }, { logger, threadDispatcher });
  useHandleThreadPubsubEvents({
    sdkInit,
    currentChannel,
    parentMessage
  }, { logger, pubSub, threadDispatcher });
  var _d = useThreadFetchers({
    parentMessage,
    // anchorMessage should be null when parentMessage doesn't exist
    anchorMessage: (propsMessage === null || propsMessage === void 0 ? void 0 : propsMessage.messageId) !== (propsParentMessage === null || propsParentMessage === void 0 ? void 0 : propsParentMessage.messageId) ? propsMessage || void 0 : void 0,
    logger,
    isReactionEnabled,
    threadDispatcher,
    threadListState,
    oldestMessageTimeStamp: ((_a3 = allThreadMessages[0]) === null || _a3 === void 0 ? void 0 : _a3.createdAt) || 0,
    latestMessageTimeStamp: ((_b2 = allThreadMessages[allThreadMessages.length - 1]) === null || _b2 === void 0 ? void 0 : _b2.createdAt) || 0
  }), initialize = _d.initialize, loadPrevious = _d.loadPrevious, loadNext = _d.loadNext;
  (0, import_react172.useEffect)(function() {
    if (stores.sdkStore.initialized && config.isOnline) {
      initialize();
    }
  }, [stores.sdkStore.initialized, config.isOnline, initialize]);
  useMessageLayoutDirection(htmlTextDirection, forceLeftToRightMessageLayout, channelState === ChannelStateTypes.LOADING || threadListState === ThreadListStateTypes.LOADING || parentMessageState === ParentMessageStateTypes.LOADING);
  var toggleReaction = useToggleReactionCallback2({ currentChannel }, { logger });
  var sendMessage = useSendUserMessageCallback({
    isMentionEnabled,
    currentChannel,
    onBeforeSendUserMessage
  }, {
    logger,
    pubSub,
    threadDispatcher
  });
  var sendFileMessage = useSendFileMessageCallback2({
    currentChannel,
    onBeforeSendFileMessage
  }, {
    logger,
    pubSub,
    threadDispatcher
  });
  var sendVoiceMessage = useSendVoiceMessageCallback2({
    currentChannel,
    onBeforeSendVoiceMessage
  }, {
    logger,
    pubSub,
    threadDispatcher
  });
  var sendMultipleFilesMessage = useSendMultipleFilesMessage({
    currentChannel,
    onBeforeSendMultipleFilesMessage,
    publishingModules: [PublishingModuleType.THREAD]
  }, {
    logger,
    pubSub
  })[0];
  var resendMessage = useResendMessageCallback2({
    currentChannel
  }, { logger, pubSub, threadDispatcher });
  var updateMessage = useUpdateMessageCallback2({
    currentChannel,
    isMentionEnabled
  }, { logger, pubSub, threadDispatcher });
  var deleteMessage = useDeleteMessageCallback2({ currentChannel, threadDispatcher }, { logger });
  var nicknamesMap = (0, import_react172.useMemo)(function() {
    return config.groupChannel.replyType !== "none" && currentChannel ? getNicknamesMapFromMembers2(currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.members) : /* @__PURE__ */ new Map();
  }, [currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.members]);
  return import_react172.default.createElement(
    ThreadContext.Provider,
    { value: {
      // ThreadProviderProps
      channelUrl,
      message: propsMessage,
      onHeaderActionClick,
      onMoveToParentMessage,
      isMultipleFilesMessageEnabled,
      onBeforeDownloadFileMessage,
      // ThreadContextInitialState
      currentChannel,
      allThreadMessages,
      localThreadMessages,
      parentMessage,
      channelState,
      threadListState,
      parentMessageState,
      hasMorePrev,
      hasMoreNext,
      emojiContainer,
      // hooks
      fetchPrevThreads: loadPrevious,
      fetchNextThreads: loadNext,
      toggleReaction,
      sendMessage,
      sendFileMessage,
      sendVoiceMessage,
      sendMultipleFilesMessage,
      resendMessage,
      updateMessage,
      deleteMessage,
      // context
      nicknamesMap,
      isMuted,
      isChannelFrozen,
      currentUserId,
      typingMembers,
      filterEmojiCategoryIds
    } },
    import_react172.default.createElement(UserProfileProvider, __assign({}, props), children)
  );
};
var useThreadContext = function() {
  var context = import_react172.default.useContext(ThreadContext);
  if (!context)
    throw new Error("ThreadContext not found. Use within the Thread module");
  return context;
};

// node_modules/@sendbird/uikit-react/Thread/components/ThreadUI.js
var import_react182 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/Thread/components/ParentMessageInfo.js
var import_react176 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-BkDHtL7_.js
var import_react173 = __toESM(require_react(), 1);
var RemoveMessage = function(props) {
  var _a3, _b2;
  var onCancel = props.onCancel, onSubmit = props.onSubmit, message = props.message;
  var stringSet2 = (0, import_react173.useContext)(LocalizationContext).stringSet;
  var deleteMessage = useThreadContext().deleteMessage;
  return import_react173.default.createElement(Modal, { type: ButtonTypes.DANGER, disabled: ((_b2 = (_a3 = message.threadInfo) === null || _a3 === void 0 ? void 0 : _a3.replyCount) !== null && _b2 !== void 0 ? _b2 : 0) > 0, onCancel, onSubmit: function() {
    deleteMessage(message).then(function() {
      onCancel === null || onCancel === void 0 ? void 0 : onCancel();
      onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit();
    });
  }, submitText: stringSet2.MESSAGE_MENU__DELETE, titleText: getModalDeleteMessageTitle(stringSet2, message) });
};

// node_modules/@sendbird/uikit-react/Thread/components/ParentMessageInfoItem.js
var import_react174 = __toESM(require_react(), 1);
var import_react_dom67 = __toESM(require_react_dom(), 1);
function ParentMessageInfoItem(_a3) {
  var _this = this;
  var _b2, _c, _d, _e3, _f, _g2, _h, _j;
  var className = _a3.className, message = _a3.message, showFileViewer = _a3.showFileViewer, _k = _a3.onBeforeDownloadFileMessage, onBeforeDownloadFileMessage = _k === void 0 ? null : _k;
  var _l = useSendbirdStateContext(), stores = _l.stores, config = _l.config, eventHandlers = _l.eventHandlers;
  var logger = config.logger;
  var onPressUserProfileHandler = (_b2 = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.reaction) === null || _b2 === void 0 ? void 0 : _b2.onPressUserProfile;
  var currentUserId = (_d = (_c = stores === null || stores === void 0 ? void 0 : stores.userStore) === null || _c === void 0 ? void 0 : _c.user) === null || _d === void 0 ? void 0 : _d.userId;
  var stringSet2 = useLocalization().stringSet;
  var _m = useThreadContext(), currentChannel = _m.currentChannel, emojiContainer = _m.emojiContainer, nicknamesMap = _m.nicknamesMap, toggleReaction = _m.toggleReaction, filterEmojiCategoryIds = _m.filterEmojiCategoryIds;
  var isMobile = useMediaQueryContext().isMobile;
  var isReactionEnabled = config.groupChannel.enableReactions;
  var isMentionEnabled = config.groupChannel.enableMention;
  var threadMessageKindKey = useThreadMessageKindKeySelector({
    threadMessageKind: ThreadMessageKind.PARENT,
    isMobile
  });
  var statefulFileInfoList = useFileInfoListWithUploaded(message);
  var isMentionedMessage = isMentionEnabled && ((_e3 = message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate) === null || _e3 === void 0 ? void 0 : _e3.length) > 0 && (message === null || message === void 0 ? void 0 : message.mentionedUsers) && message.mentionedUsers.length > 0;
  var isReactionActivated = isReactionEnabled && config.groupChannel.replyType === "thread" && ((_f = message === null || message === void 0 ? void 0 : message.reactions) === null || _f === void 0 ? void 0 : _f.length) > 0;
  var tokens = (0, import_react174.useMemo)(function() {
    var _a4;
    if (isMentionedMessage) {
      return tokenizeMessage({
        mentionedUsers: (_a4 = message === null || message === void 0 ? void 0 : message.mentionedUsers) !== null && _a4 !== void 0 ? _a4 : void 0,
        messageText: message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate,
        includeMarkdown: config.groupChannel.enableMarkdownForUserMessage
      });
    }
    return tokenizeMessage({
      messageText: message === null || message === void 0 ? void 0 : message.message,
      includeMarkdown: config.groupChannel.enableMarkdownForUserMessage
    });
  }, [message === null || message === void 0 ? void 0 : message.updatedAt, message === null || message === void 0 ? void 0 : message.message]);
  var downloadFileWithUrl = function() {
    if (isFileMessage(message))
      openURL(message.url);
  };
  var handleOnClickTextButton = onBeforeDownloadFileMessage ? function() {
    return __awaiter(_this, void 0, void 0, function() {
      var allowDownload, err_1;
      var _a4, _b3;
      return __generator(this, function(_c2) {
        switch (_c2.label) {
          case 0:
            if (!(message.messageType === "file")) return [3, 4];
            _c2.label = 1;
          case 1:
            _c2.trys.push([1, 3, , 4]);
            return [4, onBeforeDownloadFileMessage({ message })];
          case 2:
            allowDownload = _c2.sent();
            if (allowDownload) {
              downloadFileWithUrl();
            } else {
              (_a4 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "ParentMessageInfoItem: Not allowed to download.");
            }
            return [3, 4];
          case 3:
            err_1 = _c2.sent();
            (_b3 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _b3 === void 0 ? void 0 : _b3.call(logger, "ParentMessageInfoItem: Error occurred while determining download continuation:", err_1);
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  } : downloadFileWithUrl;
  var _o2 = (0, import_react174.useState)(false), isImageRendered = _o2[0], setImageRendered = _o2[1];
  var thumbnailUrl = ((_g2 = message === null || message === void 0 ? void 0 : message.thumbnails) === null || _g2 === void 0 ? void 0 : _g2.length) > 0 ? (_h = message === null || message === void 0 ? void 0 : message.thumbnails[0]) === null || _h === void 0 ? void 0 : _h.url : "";
  return import_react174.default.createElement(
    "div",
    { className: "sendbird-parent-message-info-item ".concat(className) },
    isUserMessage(message) && import_react174.default.createElement(
      Label,
      { className: "sendbird-parent-message-info-item__text-message", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_1 },
      import_react174.default.createElement(TextFragment, { tokens }),
      isEditedMessage(message) && import_react174.default.createElement(Label, { className: "sendbird-parent-message-info-item__text-message edited", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, " ".concat(stringSet2.MESSAGE_EDITED, " "))
    ),
    // Instead of the FileMessageItemBody component
    getUIKitMessageType(message) === getUIKitMessageTypes().FILE && import_react174.default.createElement(
      "div",
      { className: "sendbird-parent-message-info-item__file-message" },
      import_react174.default.createElement(
        "div",
        { className: "sendbird-parent-message-info-item__file-message__file-icon" },
        import_react174.default.createElement(Icon, { className: "sendbird-parent-message-info-item__file-message__file-icon__icon", type: {
          IMAGE: IconTypes.PHOTO,
          VIDEO: IconTypes.PLAY,
          AUDIO: IconTypes.FILE_AUDIO,
          GIF: IconTypes.GIF,
          OTHERS: IconTypes.FILE_DOCUMENT
        }[getUIKitFileType(message === null || message === void 0 ? void 0 : message.type)], fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
      ),
      import_react174.default.createElement(
        TextButton,
        { className: "sendbird-parent-message-info-item__file-message__file-name", onClick: handleOnClickTextButton, color: Colors3.ONBACKGROUND_1 },
        import_react174.default.createElement(Label, { className: "sendbird-parent-message-info-item__file-message__file-name__text", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_1 }, truncateString((message === null || message === void 0 ? void 0 : message.name) || (message === null || message === void 0 ? void 0 : message.url), 30))
      )
    ),
    isMultipleFilesMessage(message) && import_react174.default.createElement(MultipleFilesMessageItemBody, { className: "sendbird-parent-message-info-item__multiple-files-message-wrapper", message, isByMe: false, isReactionEnabled, threadMessageKindKey, statefulFileInfoList, onBeforeDownloadFileMessage }),
    isVoiceMessage(message) && import_react174.default.createElement(
      "div",
      { className: "sendbird-parent-message-info-item__voice-message" },
      import_react174.default.createElement(VoiceMessageItemBody, { className: "sendbird-parent-message-info-item__voice-message__item", message, channelUrl: currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url, isByMe: false, isReactionEnabled })
    ),
    isThumbnailMessage(message) && import_react174.default.createElement(
      "div",
      { className: "sendbird-parent-message-info-item__thumbnail-message", onClick: function() {
        if (isSentMessage(message)) {
          showFileViewer === null || showFileViewer === void 0 ? void 0 : showFileViewer(true);
        }
      } },
      import_react174.default.createElement(ImageRenderer, { className: "sendbird-parent-message-info-item__thumbnail-message__thumbnail", url: thumbnailUrl || (message === null || message === void 0 ? void 0 : message.url) || (message === null || message === void 0 ? void 0 : message.plainUrl), alt: message === null || message === void 0 ? void 0 : message.type, width: "200px", height: "148px", onLoad: function() {
        setImageRendered(true);
      }, placeHolder: function(_a4) {
        var style = _a4.style;
        return import_react174.default.createElement(
          "div",
          { className: "sendbird-parent-message-info-item__thumbnail-message__placeholder", style },
          import_react174.default.createElement(
            "div",
            { className: "sendbird-parent-message-info-item__thumbnail-message__placeholder__icon" },
            import_react174.default.createElement(Icon, { type: isVideoMessage(message) ? IconTypes.PLAY : IconTypes.PHOTO, fillColor: IconColors.ON_BACKGROUND_2, width: "34px", height: "34px" })
          )
        );
      } }),
      isVideoMessage(message) && !thumbnailUrl && !isImageRendered && import_react174.default.createElement(
        "video",
        { className: "sendbird-parent-message-info-item__thumbnail-message__video" },
        import_react174.default.createElement("source", { src: (message === null || message === void 0 ? void 0 : message.url) || (message === null || message === void 0 ? void 0 : message.plainUrl), type: message === null || message === void 0 ? void 0 : message.type })
      ),
      import_react174.default.createElement("div", { className: "sendbird-parent-message-info-item__thumbnail-message__image-cover" }),
      (isVideoMessage(message) || isGifMessage(message)) && import_react174.default.createElement(
        "div",
        { className: "sendbird-parent-message-info-item__thumbnail-message__icon-wrapper" },
        import_react174.default.createElement(
          "div",
          { className: "sendbird-parent-message-info-item__thumbnail-message__icon-wrapper__icon" },
          import_react174.default.createElement(Icon, { type: isVideoMessage(message) ? IconTypes.PLAY : IconTypes.GIF, fillColor: IconColors.ON_BACKGROUND_2, width: "34px", height: "34px" })
        )
      )
    ),
    getUIKitMessageType(message) === ((_j = getUIKitMessageTypes === null || getUIKitMessageTypes === void 0 ? void 0 : getUIKitMessageTypes()) === null || _j === void 0 ? void 0 : _j.UNKNOWN) && import_react174.default.createElement(
      "div",
      { className: "sendbird-parent-message-info-item__unknown-message" },
      import_react174.default.createElement(Label, { className: "sendbird-parent-message-info-item__unknown-message__header", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.UNKNOWN__UNKNOWN_MESSAGE_TYPE),
      import_react174.default.createElement(Label, { className: "sendbird-parent-message-info-item__unknown-message__description", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, stringSet2.UNKNOWN__CANNOT_READ_MESSAGE)
    ),
    isReactionActivated && import_react174.default.createElement(
      "div",
      { className: "sendbird-parent-message-info__reactions" },
      import_react174.default.createElement(EmojiReactions, { userId: currentUserId, message, channel: currentChannel, isByMe: false, emojiContainer, memberNicknamesMap: nicknamesMap, toggleReaction, onPressUserProfile: onPressUserProfileHandler, filterEmojiCategoryIds })
    )
  );
}

// node_modules/@sendbird/uikit-react/chunks/bundle-CXPOT202.js
var import_react175 = __toESM(require_react(), 1);
var SuggestedMentionList2 = function(props) {
  var currentChannel = useThreadContext().currentChannel;
  return import_react175.default.createElement(SuggestedMentionListView, __assign({}, props, { currentChannel }));
};

// node_modules/@sendbird/uikit-react/chunks/bundle-BdZX50Kw.js
var Role = {
  OPERATOR: "operator",
  NONE: "none"
};

// node_modules/@sendbird/uikit-react/Thread/components/ParentMessageInfo.js
var import_react_dom68 = __toESM(require_react_dom(), 1);
function ParentMessageInfo(_a3) {
  var _this = this;
  var _b2, _c, _d, _e3, _f, _g2;
  var className = _a3.className, _h = _a3.renderEmojiMenu, renderEmojiMenu = _h === void 0 ? function(props) {
    return import_react176.default.createElement(MessageEmojiMenu, __assign({}, props));
  } : _h, _j = _a3.renderMessageMenu, renderMessageMenu = _j === void 0 ? function(props) {
    return import_react176.default.createElement(MessageMenu, __assign({}, props));
  } : _j;
  var _k = useSendbirdStateContext(), stores = _k.stores, config = _k.config;
  var isOnline = config.isOnline, userMention = config.userMention, logger = config.logger, groupChannel = config.groupChannel;
  var userId = (_c = (_b2 = stores.userStore.user) === null || _b2 === void 0 ? void 0 : _b2.userId) !== null && _c !== void 0 ? _c : "";
  var _l = useLocalization(), dateLocale = _l.dateLocale, stringSet2 = _l.stringSet;
  var _m = useThreadContext(), currentChannel = _m.currentChannel, parentMessage = _m.parentMessage, allThreadMessages = _m.allThreadMessages, emojiContainer = _m.emojiContainer, toggleReaction = _m.toggleReaction, updateMessage = _m.updateMessage, deleteMessage = _m.deleteMessage, onMoveToParentMessage = _m.onMoveToParentMessage, onHeaderActionClick = _m.onHeaderActionClick, isMuted = _m.isMuted, isChannelFrozen = _m.isChannelFrozen, onBeforeDownloadFileMessage = _m.onBeforeDownloadFileMessage, filterEmojiCategoryIds = _m.filterEmojiCategoryIds;
  var isMobile = useMediaQueryContext().isMobile;
  var isMenuMounted = useElementObserver("#".concat(getObservingId(parentMessage.messageId), ".").concat(MENU_OBSERVING_CLASS_NAME), [
    document.getElementById(MENU_ROOT_ID),
    document.getElementById(EMOJI_MENU_ROOT_ID)
  ]);
  var _o2 = (0, import_react176.useState)(false), showRemove = _o2[0], setShowRemove = _o2[1];
  var _p = (0, import_react176.useState)(false), showFileViewer = _p[0], setShowFileViewer = _p[1];
  var isReactionEnabled = getIsReactionEnabled({
    channel: currentChannel,
    config
  });
  var isMentionEnabled = groupChannel.enableMention;
  var replyType = getCaseResolvedReplyType(groupChannel.replyType).upperCase;
  var isByMe = userId === parentMessage.sender.userId;
  var mobileMenuRef = (0, import_react176.useRef)(null);
  var _q = (0, import_react176.useState)(false), showMobileMenu = _q[0], setShowMobileMenu = _q[1];
  var longPress = useLongPress({
    onLongPress: function() {
      if (isMobile) {
        setShowMobileMenu(true);
      }
    }
  }, {
    shouldPreventDefault: false
  });
  var _r2 = (0, import_react176.useState)(false), showEditInput = _r2[0], setShowEditInput = _r2[1];
  var disabled = !isOnline || isMuted || isChannelFrozen && !((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.myRole) === Role.OPERATOR);
  var editMessageInputRef = (0, import_react176.useRef)(null);
  var _s4 = (0, import_react176.useState)(""), mentionNickname = _s4[0], setMentionNickname = _s4[1];
  var _t3 = (0, import_react176.useState)([]), mentionedUsers = _t3[0], setMentionedUsers = _t3[1];
  var _u = (0, import_react176.useState)([]), mentionedUserIds = _u[0], setMentionedUserIds = _u[1];
  var _v = (0, import_react176.useState)(null), messageInputEvent = _v[0], setMessageInputEvent = _v[1];
  var _w = (0, import_react176.useState)(null), selectedUser = _w[0], setSelectedUser = _w[1];
  var _x = (0, import_react176.useState)([]), mentionSuggestedUsers = _x[0], setMentionSuggestedUsers = _x[1];
  var displaySuggestedMentionList = isOnline && isMentionEnabled && mentionNickname.length > 0 && !isMuted && !(isChannelFrozen && !(currentChannel.myRole === Role.OPERATOR));
  var mentionNodes = useDirtyGetMentions({ ref: editMessageInputRef }, { logger });
  var ableMention = (mentionNodes === null || mentionNodes === void 0 ? void 0 : mentionNodes.length) < (userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount);
  (0, import_react176.useEffect)(function() {
    setMentionedUsers(mentionedUsers.filter(function(_a4) {
      var userId2 = _a4.userId;
      var i4 = mentionedUserIds.indexOf(userId2);
      if (i4 < 0) {
        return false;
      } else {
        mentionedUserIds.splice(i4, 1);
        return true;
      }
    }));
  }, [mentionedUserIds]);
  var handleOnDownloadClick = function(e4) {
    return __awaiter(_this, void 0, void 0, function() {
      var allowDownload, err_1;
      var _a4, _b3;
      return __generator(this, function(_c2) {
        switch (_c2.label) {
          case 0:
            if (!onBeforeDownloadFileMessage)
              return [
                2
                /*return*/
              ];
            _c2.label = 1;
          case 1:
            _c2.trys.push([1, 3, , 4]);
            return [4, onBeforeDownloadFileMessage({ message: parentMessage })];
          case 2:
            allowDownload = _c2.sent();
            if (!allowDownload) {
              e4.preventDefault();
              (_a4 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "ParentMessageInfo: Not allowed to download.");
            }
            return [3, 4];
          case 3:
            err_1 = _c2.sent();
            (_b3 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _b3 === void 0 ? void 0 : _b3.call(logger, "ParentMessageInfo: Error occurred while determining download continuation:", err_1);
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  var avatarRef = (0, import_react176.useRef)(null);
  var _y = useUserProfileContext(), disableUserProfile = _y.disableUserProfile, renderUserProfile = _y.renderUserProfile;
  if (showEditInput && ((_d = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.isUserMessage) === null || _d === void 0 ? void 0 : _d.call(parentMessage))) {
    return import_react176.default.createElement(
      import_react176.default.Fragment,
      null,
      displaySuggestedMentionList && import_react176.default.createElement(SuggestedMentionList2, {
        className: "parent-message-info--suggested-mention-list",
        targetNickname: mentionNickname,
        inputEvent: messageInputEvent !== null && messageInputEvent !== void 0 ? messageInputEvent : void 0,
        // renderUserMentionItem={renderUserMentionItem}
        onUserItemClick: function(user) {
          if (user) {
            setMentionedUsers(__spreadArray(__spreadArray([], mentionedUsers, true), [user], false));
          }
          setMentionNickname("");
          setSelectedUser(user);
          setMessageInputEvent(null);
        },
        onFocusItemChange: function() {
          setMessageInputEvent(null);
        },
        onFetchUsers: function(users) {
          setMentionSuggestedUsers(users);
        },
        ableAddMention: ableMention,
        maxMentionCount: userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount,
        maxSuggestionCount: userMention === null || userMention === void 0 ? void 0 : userMention.maxSuggestionCount
      }),
      import_react176.default.createElement(MessageInput, { channel: currentChannel, isEdit: true, disabled, ref: editMessageInputRef, mentionSelectedUser: selectedUser, isMentionEnabled, message: parentMessage, onStartTyping: function() {
        var _a4;
        (_a4 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.startTyping) === null || _a4 === void 0 ? void 0 : _a4.call(currentChannel);
      }, onUpdateMessage: function(_a4) {
        var _b3;
        var messageId = _a4.messageId, message = _a4.message, mentionTemplate = _a4.mentionTemplate;
        updateMessage({
          messageId,
          message,
          mentionedUsers,
          mentionTemplate
        });
        setShowEditInput(false);
        (_b3 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.endTyping) === null || _b3 === void 0 ? void 0 : _b3.call(currentChannel);
      }, onCancelEdit: function() {
        var _a4;
        setMentionNickname("");
        setMentionedUsers([]);
        setMentionedUserIds([]);
        setMentionSuggestedUsers([]);
        setShowEditInput(false);
        (_a4 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.endTyping) === null || _a4 === void 0 ? void 0 : _a4.call(currentChannel);
      }, onUserMentioned: function(user) {
        if ((selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.userId) === (user === null || user === void 0 ? void 0 : user.userId)) {
          setSelectedUser(null);
          setMentionNickname("");
        }
      }, onMentionStringChange: function(mentionText) {
        setMentionNickname(mentionText);
      }, onMentionedUserIdsUpdated: function(userIds) {
        setMentionedUserIds(userIds);
      }, onKeyDown: function(e4) {
        if (displaySuggestedMentionList && (mentionSuggestedUsers === null || mentionSuggestedUsers === void 0 ? void 0 : mentionSuggestedUsers.length) > 0 && (e4.key === MessageInputKeys.Enter && ableMention || e4.key === MessageInputKeys.ArrowUp || e4.key === MessageInputKeys.ArrowDown)) {
          setMessageInputEvent(e4);
          return true;
        }
        return false;
      } })
    );
  }
  return import_react176.default.createElement(
    "div",
    __assign({ className: "sendbird-parent-message-info ".concat(className) }, isMobile ? __assign({}, longPress) : {}, { ref: mobileMenuRef }),
    import_react176.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
      var _a4, _b3, _c2;
      return import_react176.default.createElement(Avatar$1, { className: "sendbird-parent-message-info__sender", ref: avatarRef, src: ((_b3 = (_a4 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.members) === null || _a4 === void 0 ? void 0 : _a4.find(function(m5) {
        var _a5;
        return (m5 === null || m5 === void 0 ? void 0 : m5.userId) === ((_a5 = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender) === null || _a5 === void 0 ? void 0 : _a5.userId);
      })) === null || _b3 === void 0 ? void 0 : _b3.profileUrl) || ((_c2 = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender) === null || _c2 === void 0 ? void 0 : _c2.profileUrl), alt: "thread message sender", width: "40px", height: "40px", onClick: function() {
        if (!disableUserProfile) {
          toggleDropdown();
        }
      } });
    }, menuItems: function(closeDropdown) {
      return renderUserProfile ? renderUserProfile({
        user: parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender,
        close: closeDropdown,
        currentUserId: userId,
        avatarRef
      }) : import_react176.default.createElement(
        MenuItems,
        { parentRef: avatarRef, parentContainRef: avatarRef, closeDropdown, style: { paddingTop: "0px", paddingBottom: "0px" } },
        import_react176.default.createElement(UserProfile, { user: parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender, currentUserId: userId, onSuccess: closeDropdown })
      );
    } }),
    import_react176.default.createElement(
      "div",
      { className: "sendbird-parent-message-info__content" },
      import_react176.default.createElement(
        "div",
        { className: "sendbird-parent-message-info__content__info" },
        import_react176.default.createElement(Label, { className: isReactionEnabled ? "sendbird-parent-message-info__content__info__sender-name--use-reaction" : "sendbird-parent-message-info__content__info__sender-name", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, ((_f = (_e3 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.members) === null || _e3 === void 0 ? void 0 : _e3.find(function(member) {
          var _a4;
          return (member === null || member === void 0 ? void 0 : member.userId) === ((_a4 = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender) === null || _a4 === void 0 ? void 0 : _a4.userId);
        })) === null || _f === void 0 ? void 0 : _f.nickname) || (getSenderName === null || getSenderName === void 0 ? void 0 : getSenderName(parentMessage))),
        import_react176.default.createElement(Label, { className: "sendbird-parent-message-info__content__info__sent-at", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, format((parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.createdAt) || 0, stringSet2.DATE_FORMAT__MESSAGE_CREATED_AT, { locale: dateLocale }))
      ),
      import_react176.default.createElement(ParentMessageInfoItem, { message: parentMessage, showFileViewer: setShowFileViewer, onBeforeDownloadFileMessage })
    ),
    !isMobile && import_react176.default.createElement(
      "div",
      { className: "sendbird-parent-message-info__menu-container" },
      renderMessageMenu({
        className: classnames("sendbird-parent-message-info__context-menu", isReactionEnabled && "use-reaction", isMenuMounted && "sendbird-mouse-hover"),
        channel: currentChannel,
        message: parentMessage,
        isByMe: userId === ((_g2 = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender) === null || _g2 === void 0 ? void 0 : _g2.userId),
        disableDeleteMessage: allThreadMessages.length > 0,
        replyType,
        showEdit: setShowEditInput,
        showRemove: setShowRemove,
        onMoveToParentMessage: function() {
          onMoveToParentMessage === null || onMoveToParentMessage === void 0 ? void 0 : onMoveToParentMessage({ message: parentMessage, channel: currentChannel });
        },
        deleteMessage
      }),
      isReactionEnabled && renderEmojiMenu({
        className: classnames("sendbird-parent-message-info__reaction-menu", isMenuMounted && "sendbird-mouse-hover"),
        message: parentMessage,
        userId,
        emojiContainer,
        toggleReaction,
        filterEmojiCategoryIds
      })
    ),
    showRemove && import_react176.default.createElement(RemoveMessage, { onCancel: function() {
      return setShowRemove(false);
    }, onSubmit: function() {
      onHeaderActionClick === null || onHeaderActionClick === void 0 ? void 0 : onHeaderActionClick();
    }, message: parentMessage }),
    showFileViewer && import_react176.default.createElement(FileViewer, { message: parentMessage, onClose: function() {
      return setShowFileViewer(false);
    }, onDelete: function() {
      deleteMessage(parentMessage).then(function() {
        setShowFileViewer(false);
      });
    }, onDownloadClick: handleOnDownloadClick }),
    showMobileMenu && import_react176.default.createElement(MobileMenu, { parentRef: mobileMenuRef, channel: currentChannel, message: parentMessage, userId, replyType, hideMenu: function() {
      setShowMobileMenu(false);
    }, deleteMessage, deleteMenuState: (allThreadMessages === null || allThreadMessages === void 0 ? void 0 : allThreadMessages.length) === 0 ? "ACTIVE" : "HIDE", isReactionEnabled, isByMe, emojiContainer, showEdit: setShowEditInput, showRemove: setShowRemove, toggleReaction, isOpenedFromThread: true, onDownloadClick: handleOnDownloadClick })
  );
}

// node_modules/@sendbird/uikit-react/Thread/components/ThreadHeader.js
var import_react177 = __toESM(require_react(), 1);
function ThreadHeader(_a3) {
  var className = _a3.className, channelName = _a3.channelName, renderActionIcon = _a3.renderActionIcon, onActionIconClick = _a3.onActionIconClick, onChannelNameClick = _a3.onChannelNameClick;
  var stringSet2 = useLocalization().stringSet;
  var MemoizedActionIcon = (0, import_react177.useMemo)(function() {
    if (typeof renderActionIcon === "function" && onActionIconClick) {
      return renderActionIcon({ onActionIconClick });
    }
    return null;
  }, [renderActionIcon]);
  return import_react177.default.createElement(Header$1, { className: "sendbird-thread-header ".concat(className), renderMiddle: function() {
    return import_react177.default.createElement(Header$1.Title, { title: stringSet2.THREAD__HEADER_TITLE, subtitle: channelName, onClickSubtitle: onChannelNameClick });
  }, renderRight: function() {
    return MemoizedActionIcon || import_react177.default.createElement(
      "div",
      { className: "sendbird-thread-header__action" },
      import_react177.default.createElement(Header$1.IconButton, { onClick: function(e4) {
        return onActionIconClick(e4);
      }, type: IconTypes.CLOSE, color: IconColors.ON_BACKGROUND_1 })
    );
  } });
}

// node_modules/@sendbird/uikit-react/Thread/components/ThreadList.js
var import_react179 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/Thread/components/ThreadListItem.js
var import_react178 = __toESM(require_react(), 1);
var import_react_dom69 = __toESM(require_react_dom(), 1);
function ThreadListItemContent(props) {
  var _this = this;
  var _a3, _b2, _c;
  var className = props.className, userId = props.userId, channel = props.channel, message = props.message, _d = props.chainTop, chainTop = _d === void 0 ? false : _d, _e3 = props.chainBottom, chainBottom = _e3 === void 0 ? false : _e3, _f = props.isReactionEnabled, isReactionEnabled = _f === void 0 ? false : _f, _g2 = props.disableQuoteMessage, disableQuoteMessage = _g2 === void 0 ? false : _g2, replyType = props.replyType, nicknamesMap = props.nicknamesMap, emojiContainer = props.emojiContainer, showEdit = props.showEdit, showRemove = props.showRemove, showFileViewer = props.showFileViewer, resendMessage = props.resendMessage, toggleReaction = props.toggleReaction, onReplyInThread = props.onReplyInThread;
  var _h = deleteNullish(props), _j = _h.renderSenderProfile, renderSenderProfile = _j === void 0 ? function(props2) {
    return import_react178.default.createElement(MessageProfile, __assign({}, props2));
  } : _j, _k = _h.renderMessageBody, renderMessageBody = _k === void 0 ? function(props2) {
    return import_react178.default.createElement(MessageBody, __assign({}, props2));
  } : _k, _l = _h.renderMessageHeader, renderMessageHeader = _l === void 0 ? function(props2) {
    return import_react178.default.createElement(MessageHeader, __assign({}, props2));
  } : _l, _m = _h.renderMessageMenu, renderMessageMenu = _m === void 0 ? function(props2) {
    return import_react178.default.createElement(MessageMenu, __assign({}, props2));
  } : _m, _o2 = _h.renderEmojiMenu, renderEmojiMenu = _o2 === void 0 ? function() {
    return import_react178.default.createElement(MessageEmojiMenu, __assign({}, props));
  } : _o2, _p = _h.renderEmojiReactions, renderEmojiReactions = _p === void 0 ? function(props2) {
    return import_react178.default.createElement(EmojiReactions, __assign({}, props2));
  } : _p, _q = _h.renderMobileMenuOnLongPress, renderMobileMenuOnLongPress = _q === void 0 ? function(props2) {
    return import_react178.default.createElement(MobileMenu, __assign({}, props2));
  } : _q;
  var isMobile = useMediaQueryContext().isMobile;
  var _r2 = useLocalization(), dateLocale = _r2.dateLocale, stringSet2 = _r2.stringSet;
  var _s4 = (useSendbirdStateContext === null || useSendbirdStateContext === void 0 ? void 0 : useSendbirdStateContext()) || {}, config = _s4.config, eventHandlers = _s4.eventHandlers;
  var logger = config.logger;
  var onPressUserProfileHandler = (_a3 = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.reaction) === null || _a3 === void 0 ? void 0 : _a3.onPressUserProfile;
  var isMenuMounted = useElementObserver("#".concat(getObservingId(message.messageId), ".").concat(MENU_OBSERVING_CLASS_NAME), [
    document.getElementById(MENU_ROOT_ID),
    document.getElementById(EMOJI_MENU_ROOT_ID)
  ]);
  var _t3 = useThreadContext(), deleteMessage = _t3.deleteMessage, onBeforeDownloadFileMessage = _t3.onBeforeDownloadFileMessage, filterEmojiCategoryIds = _t3.filterEmojiCategoryIds;
  var isByMe = userId === ((_b2 = message === null || message === void 0 ? void 0 : message.sender) === null || _b2 === void 0 ? void 0 : _b2.userId) || (message === null || message === void 0 ? void 0 : message.sendingStatus) === "pending" || (message === null || message === void 0 ? void 0 : message.sendingStatus) === "failed";
  var useReplying = !!((replyType === "QUOTE_REPLY" || replyType === "THREAD") && (message === null || message === void 0 ? void 0 : message.parentMessageId) && (message === null || message === void 0 ? void 0 : message.parentMessage) && !disableQuoteMessage);
  var supposedHoverClassName = isMenuMounted ? "sendbird-mouse-hover" : "";
  var isReactionEnabledInChannel = isReactionEnabled && !(channel === null || channel === void 0 ? void 0 : channel.isEphemeral);
  var isOgMessageEnabledInGroupChannel = channel.isGroupChannel() && config.groupChannel.enableOgtag;
  var mobileMenuRef = (0, import_react178.useRef)(null);
  var _u = (0, import_react178.useState)(false), showMobileMenu = _u[0], setShowMobileMenu = _u[1];
  var longPress = useLongPress({
    onLongPress: function() {
      if (isMobile) {
        setShowMobileMenu(true);
      }
    }
  }, {
    shouldPreventDefault: false
  });
  var threadMessageKindKey = useThreadMessageKindKeySelector({
    threadMessageKind: ThreadMessageKind.CHILD,
    isMobile
  });
  var statefulFileInfoList = useFileInfoListWithUploaded(message);
  return import_react178.default.createElement(
    "div",
    { className: classnames("sendbird-thread-list-item-content", className, isByMe ? "outgoing" : "incoming"), ref: mobileMenuRef },
    import_react178.default.createElement(
      "div",
      { className: classnames("sendbird-thread-list-item-content__left", isReactionEnabledInChannel && "use-reaction", isByMe ? "outgoing" : "incoming") },
      !isByMe && !chainBottom && renderSenderProfile(__assign(__assign({}, props), { className: "sendbird-thread-list-item-content__left__avatar", isByMe, displayThreadReplies: false })),
      isByMe && !isMobile && import_react178.default.createElement(
        "div",
        { className: classnames("sendbird-thread-list-item-content-menu", isReactionEnabledInChannel && "use-reaction", isByMe ? "outgoing" : "incoming", supposedHoverClassName) },
        renderMessageMenu({
          className: "sendbird-thread-list-item-content-menu__normal-menu",
          channel,
          message,
          isByMe,
          replyType,
          showEdit,
          showRemove,
          resendMessage,
          onReplyInThread,
          deleteMessage
        }),
        isReactionEnabledInChannel && import_react178.default.createElement(import_react178.default.Fragment, null, renderEmojiMenu({
          className: "sendbird-thread-list-item-content-menu__reaction-menu",
          message,
          userId,
          emojiContainer,
          toggleReaction,
          filterEmojiCategoryIds
        }))
      )
    ),
    import_react178.default.createElement(
      "div",
      __assign({ className: "sendbird-thread-list-item-content__middle" }, isMobile ? __assign({}, longPress) : {}),
      !isByMe && !chainTop && !useReplying && renderMessageHeader(props),
      import_react178.default.createElement(
        "div",
        { className: getClassName(["sendbird-thread-list-item-content__middle__body-container"]) },
        isByMe && !chainBottom && import_react178.default.createElement(
          "div",
          { className: getClassName(["sendbird-thread-list-item-content__middle__body-container__created-at", "left", supposedHoverClassName]) },
          import_react178.default.createElement(
            "div",
            { className: "sendbird-thread-list-item-content__middle__body-container__created-at__component-container" },
            import_react178.default.createElement(MessageStatus, { message, channel })
          )
        ),
        renderMessageBody({
          className: "sendbird-thread-list-item-content__middle__message-item-body",
          message,
          channel,
          showFileViewer,
          mouseHover: false,
          isMobile,
          config,
          isReactionEnabledInChannel,
          isByMe,
          onBeforeDownloadFileMessage,
          /** This is for internal customization to keep the legacy */
          customSubcomponentsProps: {
            ThumbnailMessageItemBody: {
              style: {
                width: isMobile ? "100%" : "200px",
                height: "148px"
              }
            },
            MultipleFilesMessageItemBody: {
              threadMessageKindKey,
              statefulFileInfoList
            }
          }
          // TODO: Support these props in Thread
          // onMessageHeightChange,
          // onTemplateMessageRenderedCallback,
        }),
        isReactionEnabledInChannel && ((_c = message === null || message === void 0 ? void 0 : message.reactions) === null || _c === void 0 ? void 0 : _c.length) > 0 && import_react178.default.createElement("div", { className: getClassName([
          "sendbird-thread-list-item-content-reactions",
          !isByMe || isThumbnailMessage(message) || isOgMessageEnabledInGroupChannel && isOGMessage(message) || isMultipleFilesMessage(message) ? "" : "primary"
        ]) }, renderEmojiReactions({
          userId,
          message,
          channel,
          isByMe,
          emojiContainer,
          memberNicknamesMap: nicknamesMap,
          toggleReaction,
          onPressUserProfile: onPressUserProfileHandler,
          filterEmojiCategoryIds
        })),
        !isByMe && !chainBottom && import_react178.default.createElement(Label, { className: getClassName(["sendbird-thread-list-item-content__middle__body-container__created-at", "right", supposedHoverClassName]), type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, format((message === null || message === void 0 ? void 0 : message.createdAt) || 0, stringSet2.DATE_FORMAT__MESSAGE_CREATED_AT, {
          locale: dateLocale
        }))
      )
    ),
    import_react178.default.createElement("div", { className: classnames("sendbird-thread-list-item-content__right", chainTop && "chain-top", isByMe ? "outgoing" : "incoming") }, !isByMe && !isMobile && import_react178.default.createElement(
      "div",
      { className: "sendbird-thread-list-item-content-menu ".concat(supposedHoverClassName) },
      isReactionEnabledInChannel && renderEmojiMenu({
        className: "sendbird-thread-list-item-content-menu__reaction-menu",
        message,
        userId,
        emojiContainer,
        toggleReaction,
        filterEmojiCategoryIds
      }),
      renderMessageMenu({
        className: "sendbird-thread-list-item-content-menu__normal-menu",
        channel,
        message,
        isByMe,
        replyType,
        showRemove,
        resendMessage,
        onReplyInThread,
        deleteMessage
      })
    )),
    showMobileMenu && renderMobileMenuOnLongPress({
      parentRef: mobileMenuRef,
      channel,
      message,
      userId,
      replyType,
      hideMenu: function() {
        setShowMobileMenu(false);
      },
      isReactionEnabled,
      isByMe,
      emojiContainer,
      showEdit,
      showRemove,
      toggleReaction,
      isOpenedFromThread: true,
      deleteMessage,
      onDownloadClick: function(e4) {
        return __awaiter(_this, void 0, void 0, function() {
          var allowDownload, err_1;
          var _a4, _b3;
          return __generator(this, function(_c2) {
            switch (_c2.label) {
              case 0:
                if (!onBeforeDownloadFileMessage)
                  return [
                    2
                    /*return*/
                  ];
                _c2.label = 1;
              case 1:
                _c2.trys.push([1, 3, , 4]);
                return [4, onBeforeDownloadFileMessage({ message })];
              case 2:
                allowDownload = _c2.sent();
                if (!allowDownload) {
                  e4.preventDefault();
                  (_a4 = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "ThreadListItemContent: Not allowed to download.");
                }
                return [3, 4];
              case 3:
                err_1 = _c2.sent();
                (_b3 = logger === null || logger === void 0 ? void 0 : logger.error) === null || _b3 === void 0 ? void 0 : _b3.call(logger, "ThreadListItemContent: Error occurred while determining download continuation:", err_1);
                return [3, 4];
              case 4:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }
    })
  );
}
function ThreadListItem(props) {
  var _this = this;
  var _a3, _b2, _c, _d;
  var className = props.className, message = props.message, chainTop = props.chainTop, chainBottom = props.chainBottom, hasSeparator = props.hasSeparator, renderCustomSeparator = props.renderCustomSeparator, handleScroll = props.handleScroll;
  var _e3 = useSendbirdStateContext(), stores = _e3.stores, config = _e3.config;
  var isOnline = config.isOnline, userMention = config.userMention, logger = config.logger, groupChannel = config.groupChannel;
  var userId = (_b2 = (_a3 = stores === null || stores === void 0 ? void 0 : stores.userStore) === null || _a3 === void 0 ? void 0 : _a3.user) === null || _b2 === void 0 ? void 0 : _b2.userId;
  var _f = useLocalization(), dateLocale = _f.dateLocale, stringSet2 = _f.stringSet;
  var threadContext = useThreadContext === null || useThreadContext === void 0 ? void 0 : useThreadContext();
  var currentChannel = threadContext.currentChannel, nicknamesMap = threadContext.nicknamesMap, emojiContainer = threadContext.emojiContainer, toggleReaction = threadContext.toggleReaction, threadListState = threadContext.threadListState, updateMessage = threadContext.updateMessage, resendMessage = threadContext.resendMessage, deleteMessage = threadContext.deleteMessage, isMuted = threadContext.isMuted, isChannelFrozen = threadContext.isChannelFrozen, onBeforeDownloadFileMessage = threadContext.onBeforeDownloadFileMessage;
  var openingMessage = threadContext === null || threadContext === void 0 ? void 0 : threadContext.message;
  var _g2 = (0, import_react178.useState)(false), showEdit = _g2[0], setShowEdit = _g2[1];
  var _h = (0, import_react178.useState)(false), showRemove = _h[0], setShowRemove = _h[1];
  var _j = (0, import_react178.useState)(false), showFileViewer = _j[0], setShowFileViewer = _j[1];
  var isReactionEnabled = getIsReactionEnabled({
    channel: currentChannel,
    config
  });
  var isMentionEnabled = groupChannel.enableMention;
  var replyType = getCaseResolvedReplyType(groupChannel.replyType).upperCase;
  var messageScrollRef = (0, import_react178.useRef)(null);
  (0, import_react178.useLayoutEffect)(function() {
    var _a4;
    if ((openingMessage === null || openingMessage === void 0 ? void 0 : openingMessage.messageId) === (message === null || message === void 0 ? void 0 : message.messageId) && (messageScrollRef === null || messageScrollRef === void 0 ? void 0 : messageScrollRef.current)) {
      (_a4 = messageScrollRef.current) === null || _a4 === void 0 ? void 0 : _a4.scrollIntoView({ block: "center", inline: "center" });
    }
  }, [openingMessage, messageScrollRef === null || messageScrollRef === void 0 ? void 0 : messageScrollRef.current]);
  (0, import_react178.useLayoutEffect)(function() {
    handleScroll === null || handleScroll === void 0 ? void 0 : handleScroll();
  }, [showEdit, (_c = message === null || message === void 0 ? void 0 : message.reactions) === null || _c === void 0 ? void 0 : _c.length]);
  var editMessageInputRef = (0, import_react178.useRef)(null);
  var _k = (0, import_react178.useState)(""), mentionNickname = _k[0], setMentionNickname = _k[1];
  var _l = (0, import_react178.useState)([]), mentionedUsers = _l[0], setMentionedUsers = _l[1];
  var _m = (0, import_react178.useState)([]), mentionedUserIds = _m[0], setMentionedUserIds = _m[1];
  var _o2 = (0, import_react178.useState)(null), messageInputEvent = _o2[0], setMessageInputEvent = _o2[1];
  var _p = (0, import_react178.useState)(null), selectedUser = _p[0], setSelectedUser = _p[1];
  var _q = (0, import_react178.useState)([]), mentionSuggestedUsers = _q[0], setMentionSuggestedUsers = _q[1];
  var displaySuggestedMentionList = isOnline && isMentionEnabled && mentionNickname.length > 0 && !isMuted && !(isChannelFrozen && !(currentChannel.myRole === Role.OPERATOR));
  var mentionNodes = useDirtyGetMentions({ ref: editMessageInputRef }, { logger });
  var ableMention = (mentionNodes === null || mentionNodes === void 0 ? void 0 : mentionNodes.length) < (userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount);
  (0, import_react178.useEffect)(function() {
    setMentionedUsers(mentionedUsers.filter(function(_a4) {
      var userId2 = _a4.userId;
      var i4 = mentionedUserIds.indexOf(userId2);
      if (i4 < 0) {
        return false;
      } else {
        mentionedUserIds.splice(i4, 1);
        return true;
      }
    }));
  }, [mentionedUserIds]);
  var disabled = !(threadListState === ThreadListStateTypes.INITIALIZED) || !isOnline || isMuted || isChannelFrozen;
  var MemorizedSeparator = (0, import_react178.useMemo)(function() {
    if (typeof renderCustomSeparator === "function") {
      return renderCustomSeparator === null || renderCustomSeparator === void 0 ? void 0 : renderCustomSeparator({ message });
    }
  }, [message, renderCustomSeparator]);
  if (showEdit && message.isUserMessage()) {
    return import_react178.default.createElement(
      import_react178.default.Fragment,
      null,
      displaySuggestedMentionList && import_react178.default.createElement(SuggestedMentionList2, {
        targetNickname: mentionNickname,
        inputEvent: messageInputEvent !== null && messageInputEvent !== void 0 ? messageInputEvent : void 0,
        // renderUserMentionItem={renderUserMentionItem}
        onUserItemClick: function(user) {
          if (user) {
            setMentionedUsers(__spreadArray(__spreadArray([], mentionedUsers, true), [user], false));
          }
          setMentionNickname("");
          setSelectedUser(user);
          setMessageInputEvent(null);
        },
        onFocusItemChange: function() {
          setMessageInputEvent(null);
        },
        onFetchUsers: function(users) {
          setMentionSuggestedUsers(users);
        },
        ableAddMention: ableMention,
        maxMentionCount: userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount,
        maxSuggestionCount: userMention === null || userMention === void 0 ? void 0 : userMention.maxSuggestionCount
      }),
      import_react178.default.createElement(MessageInput, { isEdit: true, channel: currentChannel, disabled, ref: editMessageInputRef, mentionSelectedUser: selectedUser, isMentionEnabled, message, onStartTyping: function() {
        var _a4;
        (_a4 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.startTyping) === null || _a4 === void 0 ? void 0 : _a4.call(currentChannel);
      }, onUpdateMessage: function(_a4) {
        var _b3;
        var messageId = _a4.messageId, message2 = _a4.message, mentionTemplate = _a4.mentionTemplate;
        updateMessage({
          messageId,
          message: message2,
          mentionedUsers,
          mentionTemplate
        });
        setShowEdit(false);
        (_b3 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.endTyping) === null || _b3 === void 0 ? void 0 : _b3.call(currentChannel);
      }, onCancelEdit: function() {
        var _a4;
        setMentionNickname("");
        setMentionedUsers([]);
        setMentionedUserIds([]);
        setMentionSuggestedUsers([]);
        setShowEdit(false);
        (_a4 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.endTyping) === null || _a4 === void 0 ? void 0 : _a4.call(currentChannel);
      }, onUserMentioned: function(user) {
        if ((selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.userId) === (user === null || user === void 0 ? void 0 : user.userId)) {
          setSelectedUser(null);
          setMentionNickname("");
        }
      }, onMentionStringChange: function(mentionText) {
        setMentionNickname(mentionText);
      }, onMentionedUserIdsUpdated: function(userIds) {
        setMentionedUserIds(userIds);
      }, onKeyDown: function(e4) {
        if (displaySuggestedMentionList && (mentionSuggestedUsers === null || mentionSuggestedUsers === void 0 ? void 0 : mentionSuggestedUsers.length) > 0 && (e4.key === MessageInputKeys.Enter && ableMention || e4.key === MessageInputKeys.ArrowUp || e4.key === MessageInputKeys.ArrowDown)) {
          setMessageInputEvent(e4);
          return true;
        }
        return false;
      } })
    );
  }
  return import_react178.default.createElement(
    "div",
    { ref: messageScrollRef, className: classnames("sendbird-thread-list-item", className), "data-testid": "sendbird-thread-list-item" },
    hasSeparator && (message === null || message === void 0 ? void 0 : message.createdAt) && (MemorizedSeparator || import_react178.default.createElement(
      DateSeparator,
      null,
      import_react178.default.createElement(Label, { type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, format(message === null || message === void 0 ? void 0 : message.createdAt, stringSet2.DATE_FORMAT__THREAD_LIST__DATE_SEPARATOR, { locale: dateLocale }))
    )),
    import_react178.default.createElement(ThreadListItemContent, __assign({}, props, { userId, channel: currentChannel, message, chainTop, chainBottom, isReactionEnabled, disableQuoteMessage: true, replyType, nicknamesMap, emojiContainer, resendMessage, showRemove: setShowRemove, showFileViewer: setShowFileViewer, toggleReaction, showEdit: setShowEdit })),
    showRemove && import_react178.default.createElement(RemoveMessage, { message, onCancel: function() {
      return setShowRemove(false);
    } }),
    showFileViewer && import_react178.default.createElement(FileViewer, { message, isByMe: ((_d = message === null || message === void 0 ? void 0 : message.sender) === null || _d === void 0 ? void 0 : _d.userId) === userId, onClose: function() {
      return setShowFileViewer(false);
    }, onDelete: function() {
      deleteMessage(message);
      setShowFileViewer(false);
    }, onDownloadClick: function(e4) {
      return __awaiter(_this, void 0, void 0, function() {
        var allowDownload, err_1;
        var _a4, _b3;
        return __generator(this, function(_c2) {
          switch (_c2.label) {
            case 0:
              if (!onBeforeDownloadFileMessage)
                return [
                  2
                  /*return*/
                ];
              _c2.label = 1;
            case 1:
              _c2.trys.push([1, 3, , 4]);
              return [4, onBeforeDownloadFileMessage({ message })];
            case 2:
              allowDownload = _c2.sent();
              if (!allowDownload) {
                e4.preventDefault();
                (_a4 = logger.info) === null || _a4 === void 0 ? void 0 : _a4.call(logger, "ThreadListItem: Not allowed to download.");
              }
              return [3, 4];
            case 3:
              err_1 = _c2.sent();
              (_b3 = logger.error) === null || _b3 === void 0 ? void 0 : _b3.call(logger, "ThreadListItem: Error occurred while determining download continuation:", err_1);
              return [3, 4];
            case 4:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    } })
  );
}

// node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof2(o3) {
  "@babel/helpers - typeof";
  return _typeof2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o4) {
    return typeof o4;
  } : function(o4) {
    return o4 && "function" == typeof Symbol && o4.constructor === Symbol && o4 !== Symbol.prototype ? "symbol" : typeof o4;
  }, _typeof2(o3);
}

// node_modules/date-fns/esm/_lib/toInteger/index.js
function toInteger2(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }
  var number = Number(dirtyNumber);
  if (isNaN(number)) {
    return number;
  }
  return number < 0 ? Math.ceil(number) : Math.floor(number);
}

// node_modules/date-fns/esm/_lib/requiredArgs/index.js
function requiredArgs2(required, args) {
  if (args.length < required) {
    throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
  }
}

// node_modules/date-fns/esm/toDate/index.js
function toDate2(argument) {
  requiredArgs2(1, arguments);
  var argStr = Object.prototype.toString.call(argument);
  if (argument instanceof Date || _typeof2(argument) === "object" && argStr === "[object Date]") {
    return new Date(argument.getTime());
  } else if (typeof argument === "number" || argStr === "[object Number]") {
    return new Date(argument);
  } else {
    if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments");
      console.warn(new Error().stack);
    }
    return /* @__PURE__ */ new Date(NaN);
  }
}

// node_modules/date-fns/esm/_lib/defaultOptions/index.js
var defaultOptions2 = {};
function getDefaultOptions2() {
  return defaultOptions2;
}

// node_modules/date-fns/esm/startOfDay/index.js
function startOfDay2(dirtyDate) {
  requiredArgs2(1, arguments);
  var date = toDate2(dirtyDate);
  date.setHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/constants/index.js
var daysInYear = 365.2425;
var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1e3;
var millisecondsInMinute = 6e4;
var millisecondsInHour = 36e5;
var millisecondsInSecond = 1e3;
var minTime = -maxTime;
var secondsInHour = 3600;
var secondsInDay = secondsInHour * 24;
var secondsInWeek = secondsInDay * 7;
var secondsInYear = secondsInDay * daysInYear;
var secondsInMonth = secondsInYear / 12;
var secondsInQuarter = secondsInMonth * 3;

// node_modules/date-fns/esm/isSameDay/index.js
function isSameDay2(dirtyDateLeft, dirtyDateRight) {
  requiredArgs2(2, arguments);
  var dateLeftStartOfDay = startOfDay2(dirtyDateLeft);
  var dateRightStartOfDay = startOfDay2(dirtyDateRight);
  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
}

// node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js
function startOfUTCISOWeek2(dirtyDate) {
  requiredArgs2(1, arguments);
  var weekStartsOn = 1;
  var date = toDate2(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js
function getUTCISOWeekYear2(dirtyDate) {
  requiredArgs2(1, arguments);
  var date = toDate2(dirtyDate);
  var year = date.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = /* @__PURE__ */ new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCISOWeek2(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = /* @__PURE__ */ new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCISOWeek2(fourthOfJanuaryOfThisYear);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js
function startOfUTCISOWeekYear2(dirtyDate) {
  requiredArgs2(1, arguments);
  var year = getUTCISOWeekYear2(dirtyDate);
  var fourthOfJanuary = /* @__PURE__ */ new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCISOWeek2(fourthOfJanuary);
  return date;
}

// node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js
var MILLISECONDS_IN_WEEK2 = 6048e5;
function getUTCISOWeek2(dirtyDate) {
  requiredArgs2(1, arguments);
  var date = toDate2(dirtyDate);
  var diff = startOfUTCISOWeek2(date).getTime() - startOfUTCISOWeekYear2(date).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK2) + 1;
}

// node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js
function startOfUTCWeek2(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs2(1, arguments);
  var defaultOptions3 = getDefaultOptions2();
  var weekStartsOn = toInteger2((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions3.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions3.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date = toDate2(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js
function getUTCWeekYear2(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs2(1, arguments);
  var date = toDate2(dirtyDate);
  var year = date.getUTCFullYear();
  var defaultOptions3 = getDefaultOptions2();
  var firstWeekContainsDate = toInteger2((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions3.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions3.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var firstWeekOfNextYear = /* @__PURE__ */ new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCWeek2(firstWeekOfNextYear, options);
  var firstWeekOfThisYear = /* @__PURE__ */ new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCWeek2(firstWeekOfThisYear, options);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js
function startOfUTCWeekYear2(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs2(1, arguments);
  var defaultOptions3 = getDefaultOptions2();
  var firstWeekContainsDate = toInteger2((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions3.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions3.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  var year = getUTCWeekYear2(dirtyDate, options);
  var firstWeek = /* @__PURE__ */ new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCWeek2(firstWeek, options);
  return date;
}

// node_modules/date-fns/esm/_lib/getUTCWeek/index.js
var MILLISECONDS_IN_WEEK3 = 6048e5;
function getUTCWeek2(dirtyDate, options) {
  requiredArgs2(1, arguments);
  var date = toDate2(dirtyDate);
  var diff = startOfUTCWeek2(date, options).getTime() - startOfUTCWeekYear2(date, options).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK3) + 1;
}

// node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js
function buildFormatLongFn2(args) {
  return function() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format3 = args.formats[width] || args.formats[args.defaultWidth];
    return format3;
  };
}

// node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js
var dateFormats2 = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy"
};
var timeFormats2 = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a"
};
var dateTimeFormats2 = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}"
};
var formatLong2 = {
  date: buildFormatLongFn2({
    formats: dateFormats2,
    defaultWidth: "full"
  }),
  time: buildFormatLongFn2({
    formats: timeFormats2,
    defaultWidth: "full"
  }),
  dateTime: buildFormatLongFn2({
    formats: dateTimeFormats2,
    defaultWidth: "full"
  })
};

// node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js
function buildLocalizeFn2(args) {
  return function(dirtyIndex, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : "standalone";
    var valuesArray;
    if (context === "formatting" && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    return valuesArray[index];
  };
}

// node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js
var eraValues2 = {
  narrow: ["B", "A"],
  abbreviated: ["BC", "AD"],
  wide: ["Before Christ", "Anno Domini"]
};
var quarterValues2 = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
};
var monthValues2 = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
  wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
};
var dayValues2 = {
  narrow: ["S", "M", "T", "W", "T", "F", "S"],
  short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
  abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
};
var dayPeriodValues2 = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  }
};
var formattingDayPeriodValues2 = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  }
};
var ordinalNumber3 = function ordinalNumber4(dirtyNumber, _options) {
  var number = Number(dirtyNumber);
  var rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + "st";
      case 2:
        return number + "nd";
      case 3:
        return number + "rd";
    }
  }
  return number + "th";
};
var localize2 = {
  ordinalNumber: ordinalNumber3,
  era: buildLocalizeFn2({
    values: eraValues2,
    defaultWidth: "wide"
  }),
  quarter: buildLocalizeFn2({
    values: quarterValues2,
    defaultWidth: "wide",
    argumentCallback: function argumentCallback2(quarter) {
      return quarter - 1;
    }
  }),
  month: buildLocalizeFn2({
    values: monthValues2,
    defaultWidth: "wide"
  }),
  day: buildLocalizeFn2({
    values: dayValues2,
    defaultWidth: "wide"
  }),
  dayPeriod: buildLocalizeFn2({
    values: dayPeriodValues2,
    defaultWidth: "wide",
    formattingValues: formattingDayPeriodValues2,
    defaultFormattingWidth: "wide"
  })
};

// node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js
function buildMatchFn2(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex2(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    }) : findKey2(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    });
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}
function findKey2(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }
  return void 0;
}
function findIndex2(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return void 0;
}

// node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js
function buildMatchPatternFn2(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult) return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult) return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}

// node_modules/date-fns/esm/locale/en-US/_lib/match/index.js
var matchOrdinalNumberPattern2 = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern2 = /\d+/i;
var matchEraPatterns2 = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns2 = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns2 = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns2 = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns2 = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns2 = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns2 = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns2 = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns2 = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns2 = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match2 = {
  ordinalNumber: buildMatchPatternFn2({
    matchPattern: matchOrdinalNumberPattern2,
    parsePattern: parseOrdinalNumberPattern2,
    valueCallback: function valueCallback3(value) {
      return parseInt(value, 10);
    }
  }),
  era: buildMatchFn2({
    matchPatterns: matchEraPatterns2,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns2,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn2({
    matchPatterns: matchQuarterPatterns2,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns2,
    defaultParseWidth: "any",
    valueCallback: function valueCallback4(index) {
      return index + 1;
    }
  }),
  month: buildMatchFn2({
    matchPatterns: matchMonthPatterns2,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns2,
    defaultParseWidth: "any"
  }),
  day: buildMatchFn2({
    matchPatterns: matchDayPatterns2,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns2,
    defaultParseWidth: "any"
  }),
  dayPeriod: buildMatchFn2({
    matchPatterns: matchDayPeriodPatterns2,
    defaultMatchWidth: "any",
    parsePatterns: parseDayPeriodPatterns2,
    defaultParseWidth: "any"
  })
};

// node_modules/date-fns/esm/formatDistanceStrict/index.js
var MILLISECONDS_IN_MINUTE = 1e3 * 60;
var MINUTES_IN_DAY = 60 * 24;
var MINUTES_IN_MONTH = MINUTES_IN_DAY * 30;
var MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;

// node_modules/date-fns/esm/getOverlappingDaysInIntervals/index.js
var MILLISECONDS_IN_DAY2 = 24 * 60 * 60 * 1e3;

// node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(e4) {
  if (void 0 === e4) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e4;
}

// node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(t7, e4) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t8, e5) {
    return t8.__proto__ = e5, t8;
  }, _setPrototypeOf(t7, e4);
}

// node_modules/@babel/runtime/helpers/esm/inherits.js
function _inherits(t7, e4) {
  if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
  t7.prototype = Object.create(e4 && e4.prototype, {
    constructor: {
      value: t7,
      writable: true,
      configurable: true
    }
  }), Object.defineProperty(t7, "prototype", {
    writable: false
  }), e4 && _setPrototypeOf(t7, e4);
}

// node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
function _getPrototypeOf(t7) {
  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t8) {
    return t8.__proto__ || Object.getPrototypeOf(t8);
  }, _getPrototypeOf(t7);
}

// node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js
function _isNativeReflectConstruct() {
  try {
    var t7 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t8) {
  }
  return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
    return !!t7;
  })();
}

// node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js
function _possibleConstructorReturn(t7, e4) {
  if (e4 && ("object" == _typeof2(e4) || "function" == typeof e4)) return e4;
  if (void 0 !== e4) throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized(t7);
}

// node_modules/@babel/runtime/helpers/esm/createSuper.js
function _createSuper(t7) {
  var r4 = _isNativeReflectConstruct();
  return function() {
    var e4, o3 = _getPrototypeOf(t7);
    if (r4) {
      var s6 = _getPrototypeOf(this).constructor;
      e4 = Reflect.construct(o3, arguments, s6);
    } else e4 = o3.apply(this, arguments);
    return _possibleConstructorReturn(this, e4);
  };
}

// node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function _classCallCheck(a5, n3) {
  if (!(a5 instanceof n3)) throw new TypeError("Cannot call a class as a function");
}

// node_modules/@babel/runtime/helpers/esm/toPrimitive.js
function toPrimitive(t7, r4) {
  if ("object" != _typeof2(t7) || !t7) return t7;
  var e4 = t7[Symbol.toPrimitive];
  if (void 0 !== e4) {
    var i4 = e4.call(t7, r4 || "default");
    if ("object" != _typeof2(i4)) return i4;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r4 ? String : Number)(t7);
}

// node_modules/@babel/runtime/helpers/esm/toPropertyKey.js
function toPropertyKey(t7) {
  var i4 = toPrimitive(t7, "string");
  return "symbol" == _typeof2(i4) ? i4 : i4 + "";
}

// node_modules/@babel/runtime/helpers/esm/createClass.js
function _defineProperties(e4, r4) {
  for (var t7 = 0; t7 < r4.length; t7++) {
    var o3 = r4[t7];
    o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e4, toPropertyKey(o3.key), o3);
  }
}
function _createClass(e4, r4, t7) {
  return r4 && _defineProperties(e4.prototype, r4), t7 && _defineProperties(e4, t7), Object.defineProperty(e4, "prototype", {
    writable: false
  }), e4;
}

// node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(e4, r4, t7) {
  return (r4 = toPropertyKey(r4)) in e4 ? Object.defineProperty(e4, r4, {
    value: t7,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e4[r4] = t7, e4;
}

// node_modules/date-fns/esm/parse/_lib/Setter.js
var TIMEZONE_UNIT_PRIORITY = 10;
var Setter = function() {
  function Setter2() {
    _classCallCheck(this, Setter2);
    _defineProperty(this, "priority", void 0);
    _defineProperty(this, "subPriority", 0);
  }
  _createClass(Setter2, [{
    key: "validate",
    value: function validate(_utcDate, _options) {
      return true;
    }
  }]);
  return Setter2;
}();
var ValueSetter = function(_Setter) {
  _inherits(ValueSetter2, _Setter);
  var _super = _createSuper(ValueSetter2);
  function ValueSetter2(value, validateValue, setValue, priority, subPriority) {
    var _this;
    _classCallCheck(this, ValueSetter2);
    _this = _super.call(this);
    _this.value = value;
    _this.validateValue = validateValue;
    _this.setValue = setValue;
    _this.priority = priority;
    if (subPriority) {
      _this.subPriority = subPriority;
    }
    return _this;
  }
  _createClass(ValueSetter2, [{
    key: "validate",
    value: function validate(utcDate, options) {
      return this.validateValue(utcDate, this.value, options);
    }
  }, {
    key: "set",
    value: function set2(utcDate, flags, options) {
      return this.setValue(utcDate, flags, this.value, options);
    }
  }]);
  return ValueSetter2;
}(Setter);
var DateToSystemTimezoneSetter = function(_Setter2) {
  _inherits(DateToSystemTimezoneSetter2, _Setter2);
  var _super2 = _createSuper(DateToSystemTimezoneSetter2);
  function DateToSystemTimezoneSetter2() {
    var _this2;
    _classCallCheck(this, DateToSystemTimezoneSetter2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this2 = _super2.call.apply(_super2, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this2), "priority", TIMEZONE_UNIT_PRIORITY);
    _defineProperty(_assertThisInitialized(_this2), "subPriority", -1);
    return _this2;
  }
  _createClass(DateToSystemTimezoneSetter2, [{
    key: "set",
    value: function set2(date, flags) {
      if (flags.timestampIsSet) {
        return date;
      }
      var convertedDate = /* @__PURE__ */ new Date(0);
      convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());
      convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());
      return convertedDate;
    }
  }]);
  return DateToSystemTimezoneSetter2;
}(Setter);

// node_modules/date-fns/esm/parse/_lib/Parser.js
var Parser = function() {
  function Parser2() {
    _classCallCheck(this, Parser2);
    _defineProperty(this, "incompatibleTokens", void 0);
    _defineProperty(this, "priority", void 0);
    _defineProperty(this, "subPriority", void 0);
  }
  _createClass(Parser2, [{
    key: "run",
    value: function run(dateString, token, match3, options) {
      var result = this.parse(dateString, token, match3, options);
      if (!result) {
        return null;
      }
      return {
        setter: new ValueSetter(result.value, this.validate, this.set, this.priority, this.subPriority),
        rest: result.rest
      };
    }
  }, {
    key: "validate",
    value: function validate(_utcDate, _value, _options) {
      return true;
    }
  }]);
  return Parser2;
}();

// node_modules/date-fns/esm/parse/_lib/parsers/EraParser.js
var EraParser = function(_Parser) {
  _inherits(EraParser2, _Parser);
  var _super = _createSuper(EraParser2);
  function EraParser2() {
    var _this;
    _classCallCheck(this, EraParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 140);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["R", "u", "t", "T"]);
    return _this;
  }
  _createClass(EraParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      switch (token) {
        case "G":
        case "GG":
        case "GGG":
          return match3.era(dateString, {
            width: "abbreviated"
          }) || match3.era(dateString, {
            width: "narrow"
          });
        case "GGGGG":
          return match3.era(dateString, {
            width: "narrow"
          });
        case "GGGG":
        default:
          return match3.era(dateString, {
            width: "wide"
          }) || match3.era(dateString, {
            width: "abbreviated"
          }) || match3.era(dateString, {
            width: "narrow"
          });
      }
    }
  }, {
    key: "set",
    value: function set2(date, flags, value) {
      flags.era = value;
      date.setUTCFullYear(value, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return EraParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/constants.js
var numericPatterns = {
  month: /^(1[0-2]|0?\d)/,
  // 0 to 12
  date: /^(3[0-1]|[0-2]?\d)/,
  // 0 to 31
  dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
  // 0 to 366
  week: /^(5[0-3]|[0-4]?\d)/,
  // 0 to 53
  hour23h: /^(2[0-3]|[0-1]?\d)/,
  // 0 to 23
  hour24h: /^(2[0-4]|[0-1]?\d)/,
  // 0 to 24
  hour11h: /^(1[0-1]|0?\d)/,
  // 0 to 11
  hour12h: /^(1[0-2]|0?\d)/,
  // 0 to 12
  minute: /^[0-5]?\d/,
  // 0 to 59
  second: /^[0-5]?\d/,
  // 0 to 59
  singleDigit: /^\d/,
  // 0 to 9
  twoDigits: /^\d{1,2}/,
  // 0 to 99
  threeDigits: /^\d{1,3}/,
  // 0 to 999
  fourDigits: /^\d{1,4}/,
  // 0 to 9999
  anyDigitsSigned: /^-?\d+/,
  singleDigitSigned: /^-?\d/,
  // 0 to 9, -0 to -9
  twoDigitsSigned: /^-?\d{1,2}/,
  // 0 to 99, -0 to -99
  threeDigitsSigned: /^-?\d{1,3}/,
  // 0 to 999, -0 to -999
  fourDigitsSigned: /^-?\d{1,4}/
  // 0 to 9999, -0 to -9999
};
var timezonePatterns = {
  basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
  basic: /^([+-])(\d{2})(\d{2})|Z/,
  basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
  extended: /^([+-])(\d{2}):(\d{2})|Z/,
  extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
};

// node_modules/date-fns/esm/parse/_lib/utils.js
function mapValue(parseFnResult, mapFn) {
  if (!parseFnResult) {
    return parseFnResult;
  }
  return {
    value: mapFn(parseFnResult.value),
    rest: parseFnResult.rest
  };
}
function parseNumericPattern(pattern, dateString) {
  var matchResult = dateString.match(pattern);
  if (!matchResult) {
    return null;
  }
  return {
    value: parseInt(matchResult[0], 10),
    rest: dateString.slice(matchResult[0].length)
  };
}
function parseTimezonePattern(pattern, dateString) {
  var matchResult = dateString.match(pattern);
  if (!matchResult) {
    return null;
  }
  if (matchResult[0] === "Z") {
    return {
      value: 0,
      rest: dateString.slice(1)
    };
  }
  var sign = matchResult[1] === "+" ? 1 : -1;
  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;
  return {
    value: sign * (hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * millisecondsInSecond),
    rest: dateString.slice(matchResult[0].length)
  };
}
function parseAnyDigitsSigned(dateString) {
  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);
}
function parseNDigits(n3, dateString) {
  switch (n3) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigit, dateString);
    case 2:
      return parseNumericPattern(numericPatterns.twoDigits, dateString);
    case 3:
      return parseNumericPattern(numericPatterns.threeDigits, dateString);
    case 4:
      return parseNumericPattern(numericPatterns.fourDigits, dateString);
    default:
      return parseNumericPattern(new RegExp("^\\d{1," + n3 + "}"), dateString);
  }
}
function parseNDigitsSigned(n3, dateString) {
  switch (n3) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);
    case 2:
      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);
    case 3:
      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);
    case 4:
      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);
    default:
      return parseNumericPattern(new RegExp("^-?\\d{1," + n3 + "}"), dateString);
  }
}
function dayPeriodEnumToHours(dayPeriod) {
  switch (dayPeriod) {
    case "morning":
      return 4;
    case "evening":
      return 17;
    case "pm":
    case "noon":
    case "afternoon":
      return 12;
    case "am":
    case "midnight":
    case "night":
    default:
      return 0;
  }
}
function normalizeTwoDigitYear(twoDigitYear, currentYear) {
  var isCommonEra = currentYear > 0;
  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;
  var result;
  if (absCurrentYear <= 50) {
    result = twoDigitYear || 100;
  } else {
    var rangeEnd = absCurrentYear + 50;
    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;
    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;
    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
  }
  return isCommonEra ? result : 1 - result;
}
function isLeapYearIndex(year) {
  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}

// node_modules/date-fns/esm/parse/_lib/parsers/YearParser.js
var YearParser = function(_Parser) {
  _inherits(YearParser2, _Parser);
  var _super = _createSuper(YearParser2);
  function YearParser2() {
    var _this;
    _classCallCheck(this, YearParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 130);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "u", "w", "I", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(YearParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      var valueCallback5 = function valueCallback6(year) {
        return {
          year,
          isTwoDigitYear: token === "yy"
        };
      };
      switch (token) {
        case "y":
          return mapValue(parseNDigits(4, dateString), valueCallback5);
        case "yo":
          return mapValue(match3.ordinalNumber(dateString, {
            unit: "year"
          }), valueCallback5);
        default:
          return mapValue(parseNDigits(token.length, dateString), valueCallback5);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value.isTwoDigitYear || value.year > 0;
    }
  }, {
    key: "set",
    value: function set2(date, flags, value) {
      var currentYear = date.getUTCFullYear();
      if (value.isTwoDigitYear) {
        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);
        date.setUTCHours(0, 0, 0, 0);
        return date;
      }
      var year = !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
      date.setUTCFullYear(year, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return YearParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/LocalWeekYearParser.js
var LocalWeekYearParser = function(_Parser) {
  _inherits(LocalWeekYearParser2, _Parser);
  var _super = _createSuper(LocalWeekYearParser2);
  function LocalWeekYearParser2() {
    var _this;
    _classCallCheck(this, LocalWeekYearParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 130);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "R", "u", "Q", "q", "M", "L", "I", "d", "D", "i", "t", "T"]);
    return _this;
  }
  _createClass(LocalWeekYearParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      var valueCallback5 = function valueCallback6(year) {
        return {
          year,
          isTwoDigitYear: token === "YY"
        };
      };
      switch (token) {
        case "Y":
          return mapValue(parseNDigits(4, dateString), valueCallback5);
        case "Yo":
          return mapValue(match3.ordinalNumber(dateString, {
            unit: "year"
          }), valueCallback5);
        default:
          return mapValue(parseNDigits(token.length, dateString), valueCallback5);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value.isTwoDigitYear || value.year > 0;
    }
  }, {
    key: "set",
    value: function set2(date, flags, value, options) {
      var currentYear = getUTCWeekYear2(date, options);
      if (value.isTwoDigitYear) {
        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);
        date.setUTCHours(0, 0, 0, 0);
        return startOfUTCWeek2(date, options);
      }
      var year = !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);
      date.setUTCHours(0, 0, 0, 0);
      return startOfUTCWeek2(date, options);
    }
  }]);
  return LocalWeekYearParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/ISOWeekYearParser.js
var ISOWeekYearParser = function(_Parser) {
  _inherits(ISOWeekYearParser2, _Parser);
  var _super = _createSuper(ISOWeekYearParser2);
  function ISOWeekYearParser2() {
    var _this;
    _classCallCheck(this, ISOWeekYearParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 130);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["G", "y", "Y", "u", "Q", "q", "M", "L", "w", "d", "D", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(ISOWeekYearParser2, [{
    key: "parse",
    value: function parse2(dateString, token) {
      if (token === "R") {
        return parseNDigitsSigned(4, dateString);
      }
      return parseNDigitsSigned(token.length, dateString);
    }
  }, {
    key: "set",
    value: function set2(_date, _flags, value) {
      var firstWeekOfYear = /* @__PURE__ */ new Date(0);
      firstWeekOfYear.setUTCFullYear(value, 0, 4);
      firstWeekOfYear.setUTCHours(0, 0, 0, 0);
      return startOfUTCISOWeek2(firstWeekOfYear);
    }
  }]);
  return ISOWeekYearParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/ExtendedYearParser.js
var ExtendedYearParser = function(_Parser) {
  _inherits(ExtendedYearParser2, _Parser);
  var _super = _createSuper(ExtendedYearParser2);
  function ExtendedYearParser2() {
    var _this;
    _classCallCheck(this, ExtendedYearParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 130);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["G", "y", "Y", "R", "w", "I", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(ExtendedYearParser2, [{
    key: "parse",
    value: function parse2(dateString, token) {
      if (token === "u") {
        return parseNDigitsSigned(4, dateString);
      }
      return parseNDigitsSigned(token.length, dateString);
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      date.setUTCFullYear(value, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return ExtendedYearParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/QuarterParser.js
var QuarterParser = function(_Parser) {
  _inherits(QuarterParser2, _Parser);
  var _super = _createSuper(QuarterParser2);
  function QuarterParser2() {
    var _this;
    _classCallCheck(this, QuarterParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 120);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(QuarterParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      switch (token) {
        case "Q":
        case "QQ":
          return parseNDigits(token.length, dateString);
        case "Qo":
          return match3.ordinalNumber(dateString, {
            unit: "quarter"
          });
        case "QQQ":
          return match3.quarter(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match3.quarter(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "QQQQQ":
          return match3.quarter(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "QQQQ":
        default:
          return match3.quarter(dateString, {
            width: "wide",
            context: "formatting"
          }) || match3.quarter(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match3.quarter(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 4;
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      date.setUTCMonth((value - 1) * 3, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return QuarterParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/StandAloneQuarterParser.js
var StandAloneQuarterParser = function(_Parser) {
  _inherits(StandAloneQuarterParser2, _Parser);
  var _super = _createSuper(StandAloneQuarterParser2);
  function StandAloneQuarterParser2() {
    var _this;
    _classCallCheck(this, StandAloneQuarterParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 120);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "Q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(StandAloneQuarterParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      switch (token) {
        case "q":
        case "qq":
          return parseNDigits(token.length, dateString);
        case "qo":
          return match3.ordinalNumber(dateString, {
            unit: "quarter"
          });
        case "qqq":
          return match3.quarter(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match3.quarter(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "qqqqq":
          return match3.quarter(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "qqqq":
        default:
          return match3.quarter(dateString, {
            width: "wide",
            context: "standalone"
          }) || match3.quarter(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match3.quarter(dateString, {
            width: "narrow",
            context: "standalone"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 4;
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      date.setUTCMonth((value - 1) * 3, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return StandAloneQuarterParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/MonthParser.js
var MonthParser = function(_Parser) {
  _inherits(MonthParser2, _Parser);
  var _super = _createSuper(MonthParser2);
  function MonthParser2() {
    var _this;
    _classCallCheck(this, MonthParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "Q", "L", "w", "I", "D", "i", "e", "c", "t", "T"]);
    _defineProperty(_assertThisInitialized(_this), "priority", 110);
    return _this;
  }
  _createClass(MonthParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      var valueCallback5 = function valueCallback6(value) {
        return value - 1;
      };
      switch (token) {
        case "M":
          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback5);
        case "MM":
          return mapValue(parseNDigits(2, dateString), valueCallback5);
        case "Mo":
          return mapValue(match3.ordinalNumber(dateString, {
            unit: "month"
          }), valueCallback5);
        case "MMM":
          return match3.month(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match3.month(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "MMMMM":
          return match3.month(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "MMMM":
        default:
          return match3.month(dateString, {
            width: "wide",
            context: "formatting"
          }) || match3.month(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match3.month(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      date.setUTCMonth(value, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return MonthParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/StandAloneMonthParser.js
var StandAloneMonthParser = function(_Parser) {
  _inherits(StandAloneMonthParser2, _Parser);
  var _super = _createSuper(StandAloneMonthParser2);
  function StandAloneMonthParser2() {
    var _this;
    _classCallCheck(this, StandAloneMonthParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 110);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "Q", "M", "w", "I", "D", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(StandAloneMonthParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      var valueCallback5 = function valueCallback6(value) {
        return value - 1;
      };
      switch (token) {
        case "L":
          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback5);
        case "LL":
          return mapValue(parseNDigits(2, dateString), valueCallback5);
        case "Lo":
          return mapValue(match3.ordinalNumber(dateString, {
            unit: "month"
          }), valueCallback5);
        case "LLL":
          return match3.month(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match3.month(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "LLLLL":
          return match3.month(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "LLLL":
        default:
          return match3.month(dateString, {
            width: "wide",
            context: "standalone"
          }) || match3.month(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match3.month(dateString, {
            width: "narrow",
            context: "standalone"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      date.setUTCMonth(value, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return StandAloneMonthParser2;
}(Parser);

// node_modules/date-fns/esm/_lib/setUTCWeek/index.js
function setUTCWeek(dirtyDate, dirtyWeek, options) {
  requiredArgs2(2, arguments);
  var date = toDate2(dirtyDate);
  var week = toInteger2(dirtyWeek);
  var diff = getUTCWeek2(date, options) - week;
  date.setUTCDate(date.getUTCDate() - diff * 7);
  return date;
}

// node_modules/date-fns/esm/parse/_lib/parsers/LocalWeekParser.js
var LocalWeekParser = function(_Parser) {
  _inherits(LocalWeekParser2, _Parser);
  var _super = _createSuper(LocalWeekParser2);
  function LocalWeekParser2() {
    var _this;
    _classCallCheck(this, LocalWeekParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 100);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "i", "t", "T"]);
    return _this;
  }
  _createClass(LocalWeekParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      switch (token) {
        case "w":
          return parseNumericPattern(numericPatterns.week, dateString);
        case "wo":
          return match3.ordinalNumber(dateString, {
            unit: "week"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 53;
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value, options) {
      return startOfUTCWeek2(setUTCWeek(date, value, options), options);
    }
  }]);
  return LocalWeekParser2;
}(Parser);

// node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js
function setUTCISOWeek(dirtyDate, dirtyISOWeek) {
  requiredArgs2(2, arguments);
  var date = toDate2(dirtyDate);
  var isoWeek = toInteger2(dirtyISOWeek);
  var diff = getUTCISOWeek2(date) - isoWeek;
  date.setUTCDate(date.getUTCDate() - diff * 7);
  return date;
}

// node_modules/date-fns/esm/parse/_lib/parsers/ISOWeekParser.js
var ISOWeekParser = function(_Parser) {
  _inherits(ISOWeekParser2, _Parser);
  var _super = _createSuper(ISOWeekParser2);
  function ISOWeekParser2() {
    var _this;
    _classCallCheck(this, ISOWeekParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 100);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(ISOWeekParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      switch (token) {
        case "I":
          return parseNumericPattern(numericPatterns.week, dateString);
        case "Io":
          return match3.ordinalNumber(dateString, {
            unit: "week"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 53;
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      return startOfUTCISOWeek2(setUTCISOWeek(date, value));
    }
  }]);
  return ISOWeekParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/DateParser.js
var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var DateParser = function(_Parser) {
  _inherits(DateParser2, _Parser);
  var _super = _createSuper(DateParser2);
  function DateParser2() {
    var _this;
    _classCallCheck(this, DateParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "subPriority", 1);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "Q", "w", "I", "D", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(DateParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      switch (token) {
        case "d":
          return parseNumericPattern(numericPatterns.date, dateString);
        case "do":
          return match3.ordinalNumber(dateString, {
            unit: "date"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(date, value) {
      var year = date.getUTCFullYear();
      var isLeapYear2 = isLeapYearIndex(year);
      var month = date.getUTCMonth();
      if (isLeapYear2) {
        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];
      } else {
        return value >= 1 && value <= DAYS_IN_MONTH[month];
      }
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      date.setUTCDate(value);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return DateParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/DayOfYearParser.js
var DayOfYearParser = function(_Parser) {
  _inherits(DayOfYearParser2, _Parser);
  var _super = _createSuper(DayOfYearParser2);
  function DayOfYearParser2() {
    var _this;
    _classCallCheck(this, DayOfYearParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "subpriority", 1);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "Q", "M", "L", "w", "I", "d", "E", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(DayOfYearParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      switch (token) {
        case "D":
        case "DD":
          return parseNumericPattern(numericPatterns.dayOfYear, dateString);
        case "Do":
          return match3.ordinalNumber(dateString, {
            unit: "date"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(date, value) {
      var year = date.getUTCFullYear();
      var isLeapYear2 = isLeapYearIndex(year);
      if (isLeapYear2) {
        return value >= 1 && value <= 366;
      } else {
        return value >= 1 && value <= 365;
      }
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      date.setUTCMonth(0, value);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return DayOfYearParser2;
}(Parser);

// node_modules/date-fns/esm/_lib/setUTCDay/index.js
function setUTCDay(dirtyDate, dirtyDay, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs2(2, arguments);
  var defaultOptions3 = getDefaultOptions2();
  var weekStartsOn = toInteger2((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions3.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions3.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date = toDate2(dirtyDate);
  var day = toInteger2(dirtyDay);
  var currentDay = date.getUTCDay();
  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;
  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}

// node_modules/date-fns/esm/parse/_lib/parsers/DayParser.js
var DayParser = function(_Parser) {
  _inherits(DayParser2, _Parser);
  var _super = _createSuper(DayParser2);
  function DayParser2() {
    var _this;
    _classCallCheck(this, DayParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["D", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(DayParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      switch (token) {
        case "E":
        case "EE":
        case "EEE":
          return match3.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "EEEEE":
          return match3.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "EEEEEE":
          return match3.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "EEEE":
        default:
          return match3.day(dateString, {
            width: "wide",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return DayParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/LocalDayParser.js
var LocalDayParser = function(_Parser) {
  _inherits(LocalDayParser2, _Parser);
  var _super = _createSuper(LocalDayParser2);
  function LocalDayParser2() {
    var _this;
    _classCallCheck(this, LocalDayParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "c", "t", "T"]);
    return _this;
  }
  _createClass(LocalDayParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3, options) {
      var valueCallback5 = function valueCallback6(value) {
        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
      };
      switch (token) {
        case "e":
        case "ee":
          return mapValue(parseNDigits(token.length, dateString), valueCallback5);
        case "eo":
          return mapValue(match3.ordinalNumber(dateString, {
            unit: "day"
          }), valueCallback5);
        case "eee":
          return match3.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "eeeee":
          return match3.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "eeeeee":
          return match3.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "eeee":
        default:
          return match3.day(dateString, {
            width: "wide",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return LocalDayParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/StandAloneLocalDayParser.js
var StandAloneLocalDayParser = function(_Parser) {
  _inherits(StandAloneLocalDayParser2, _Parser);
  var _super = _createSuper(StandAloneLocalDayParser2);
  function StandAloneLocalDayParser2() {
    var _this;
    _classCallCheck(this, StandAloneLocalDayParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "e", "t", "T"]);
    return _this;
  }
  _createClass(StandAloneLocalDayParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3, options) {
      var valueCallback5 = function valueCallback6(value) {
        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
      };
      switch (token) {
        case "c":
        case "cc":
          return mapValue(parseNDigits(token.length, dateString), valueCallback5);
        case "co":
          return mapValue(match3.ordinalNumber(dateString, {
            unit: "day"
          }), valueCallback5);
        case "ccc":
          return match3.day(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match3.day(dateString, {
            width: "short",
            context: "standalone"
          }) || match3.day(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "ccccc":
          return match3.day(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "cccccc":
          return match3.day(dateString, {
            width: "short",
            context: "standalone"
          }) || match3.day(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "cccc":
        default:
          return match3.day(dateString, {
            width: "wide",
            context: "standalone"
          }) || match3.day(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match3.day(dateString, {
            width: "short",
            context: "standalone"
          }) || match3.day(dateString, {
            width: "narrow",
            context: "standalone"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return StandAloneLocalDayParser2;
}(Parser);

// node_modules/date-fns/esm/_lib/setUTCISODay/index.js
function setUTCISODay(dirtyDate, dirtyDay) {
  requiredArgs2(2, arguments);
  var day = toInteger2(dirtyDay);
  if (day % 7 === 0) {
    day = day - 7;
  }
  var weekStartsOn = 1;
  var date = toDate2(dirtyDate);
  var currentDay = date.getUTCDay();
  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;
  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}

// node_modules/date-fns/esm/parse/_lib/parsers/ISODayParser.js
var ISODayParser = function(_Parser) {
  _inherits(ISODayParser2, _Parser);
  var _super = _createSuper(ISODayParser2);
  function ISODayParser2() {
    var _this;
    _classCallCheck(this, ISODayParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "E", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(ISODayParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      var valueCallback5 = function valueCallback6(value) {
        if (value === 0) {
          return 7;
        }
        return value;
      };
      switch (token) {
        case "i":
        case "ii":
          return parseNDigits(token.length, dateString);
        case "io":
          return match3.ordinalNumber(dateString, {
            unit: "day"
          });
        case "iii":
          return mapValue(match3.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "narrow",
            context: "formatting"
          }), valueCallback5);
        case "iiiii":
          return mapValue(match3.day(dateString, {
            width: "narrow",
            context: "formatting"
          }), valueCallback5);
        case "iiiiii":
          return mapValue(match3.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "narrow",
            context: "formatting"
          }), valueCallback5);
        case "iiii":
        default:
          return mapValue(match3.day(dateString, {
            width: "wide",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match3.day(dateString, {
            width: "narrow",
            context: "formatting"
          }), valueCallback5);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 7;
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      date = setUTCISODay(date, value);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return ISODayParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/AMPMParser.js
var AMPMParser = function(_Parser) {
  _inherits(AMPMParser2, _Parser);
  var _super = _createSuper(AMPMParser2);
  function AMPMParser2() {
    var _this;
    _classCallCheck(this, AMPMParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 80);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["b", "B", "H", "k", "t", "T"]);
    return _this;
  }
  _createClass(AMPMParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      switch (token) {
        case "a":
        case "aa":
        case "aaa":
          return match3.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match3.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "aaaaa":
          return match3.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "aaaa":
        default:
          return match3.dayPeriod(dateString, {
            width: "wide",
            context: "formatting"
          }) || match3.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match3.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    }
  }]);
  return AMPMParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/AMPMMidnightParser.js
var AMPMMidnightParser = function(_Parser) {
  _inherits(AMPMMidnightParser2, _Parser);
  var _super = _createSuper(AMPMMidnightParser2);
  function AMPMMidnightParser2() {
    var _this;
    _classCallCheck(this, AMPMMidnightParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 80);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["a", "B", "H", "k", "t", "T"]);
    return _this;
  }
  _createClass(AMPMMidnightParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      switch (token) {
        case "b":
        case "bb":
        case "bbb":
          return match3.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match3.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "bbbbb":
          return match3.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "bbbb":
        default:
          return match3.dayPeriod(dateString, {
            width: "wide",
            context: "formatting"
          }) || match3.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match3.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    }
  }]);
  return AMPMMidnightParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/DayPeriodParser.js
var DayPeriodParser = function(_Parser) {
  _inherits(DayPeriodParser2, _Parser);
  var _super = _createSuper(DayPeriodParser2);
  function DayPeriodParser2() {
    var _this;
    _classCallCheck(this, DayPeriodParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 80);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["a", "b", "t", "T"]);
    return _this;
  }
  _createClass(DayPeriodParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      switch (token) {
        case "B":
        case "BB":
        case "BBB":
          return match3.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match3.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "BBBBB":
          return match3.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "BBBB":
        default:
          return match3.dayPeriod(dateString, {
            width: "wide",
            context: "formatting"
          }) || match3.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match3.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    }
  }]);
  return DayPeriodParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/Hour1to12Parser.js
var Hour1to12Parser = function(_Parser) {
  _inherits(Hour1to12Parser2, _Parser);
  var _super = _createSuper(Hour1to12Parser2);
  function Hour1to12Parser2() {
    var _this;
    _classCallCheck(this, Hour1to12Parser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 70);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["H", "K", "k", "t", "T"]);
    return _this;
  }
  _createClass(Hour1to12Parser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      switch (token) {
        case "h":
          return parseNumericPattern(numericPatterns.hour12h, dateString);
        case "ho":
          return match3.ordinalNumber(dateString, {
            unit: "hour"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 12;
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      var isPM = date.getUTCHours() >= 12;
      if (isPM && value < 12) {
        date.setUTCHours(value + 12, 0, 0, 0);
      } else if (!isPM && value === 12) {
        date.setUTCHours(0, 0, 0, 0);
      } else {
        date.setUTCHours(value, 0, 0, 0);
      }
      return date;
    }
  }]);
  return Hour1to12Parser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/Hour0to23Parser.js
var Hour0to23Parser = function(_Parser) {
  _inherits(Hour0to23Parser2, _Parser);
  var _super = _createSuper(Hour0to23Parser2);
  function Hour0to23Parser2() {
    var _this;
    _classCallCheck(this, Hour0to23Parser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 70);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["a", "b", "h", "K", "k", "t", "T"]);
    return _this;
  }
  _createClass(Hour0to23Parser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      switch (token) {
        case "H":
          return parseNumericPattern(numericPatterns.hour23h, dateString);
        case "Ho":
          return match3.ordinalNumber(dateString, {
            unit: "hour"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 23;
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      date.setUTCHours(value, 0, 0, 0);
      return date;
    }
  }]);
  return Hour0to23Parser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/Hour0To11Parser.js
var Hour0To11Parser = function(_Parser) {
  _inherits(Hour0To11Parser2, _Parser);
  var _super = _createSuper(Hour0To11Parser2);
  function Hour0To11Parser2() {
    var _this;
    _classCallCheck(this, Hour0To11Parser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 70);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["h", "H", "k", "t", "T"]);
    return _this;
  }
  _createClass(Hour0To11Parser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      switch (token) {
        case "K":
          return parseNumericPattern(numericPatterns.hour11h, dateString);
        case "Ko":
          return match3.ordinalNumber(dateString, {
            unit: "hour"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      var isPM = date.getUTCHours() >= 12;
      if (isPM && value < 12) {
        date.setUTCHours(value + 12, 0, 0, 0);
      } else {
        date.setUTCHours(value, 0, 0, 0);
      }
      return date;
    }
  }]);
  return Hour0To11Parser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/Hour1To24Parser.js
var Hour1To24Parser = function(_Parser) {
  _inherits(Hour1To24Parser2, _Parser);
  var _super = _createSuper(Hour1To24Parser2);
  function Hour1To24Parser2() {
    var _this;
    _classCallCheck(this, Hour1To24Parser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 70);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["a", "b", "h", "H", "K", "t", "T"]);
    return _this;
  }
  _createClass(Hour1To24Parser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      switch (token) {
        case "k":
          return parseNumericPattern(numericPatterns.hour24h, dateString);
        case "ko":
          return match3.ordinalNumber(dateString, {
            unit: "hour"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 24;
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      var hours = value <= 24 ? value % 24 : value;
      date.setUTCHours(hours, 0, 0, 0);
      return date;
    }
  }]);
  return Hour1To24Parser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/MinuteParser.js
var MinuteParser = function(_Parser) {
  _inherits(MinuteParser2, _Parser);
  var _super = _createSuper(MinuteParser2);
  function MinuteParser2() {
    var _this;
    _classCallCheck(this, MinuteParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 60);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T"]);
    return _this;
  }
  _createClass(MinuteParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      switch (token) {
        case "m":
          return parseNumericPattern(numericPatterns.minute, dateString);
        case "mo":
          return match3.ordinalNumber(dateString, {
            unit: "minute"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 59;
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      date.setUTCMinutes(value, 0, 0);
      return date;
    }
  }]);
  return MinuteParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/SecondParser.js
var SecondParser = function(_Parser) {
  _inherits(SecondParser2, _Parser);
  var _super = _createSuper(SecondParser2);
  function SecondParser2() {
    var _this;
    _classCallCheck(this, SecondParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 50);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T"]);
    return _this;
  }
  _createClass(SecondParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match3) {
      switch (token) {
        case "s":
          return parseNumericPattern(numericPatterns.second, dateString);
        case "so":
          return match3.ordinalNumber(dateString, {
            unit: "second"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 59;
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      date.setUTCSeconds(value, 0);
      return date;
    }
  }]);
  return SecondParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/FractionOfSecondParser.js
var FractionOfSecondParser = function(_Parser) {
  _inherits(FractionOfSecondParser2, _Parser);
  var _super = _createSuper(FractionOfSecondParser2);
  function FractionOfSecondParser2() {
    var _this;
    _classCallCheck(this, FractionOfSecondParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 30);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T"]);
    return _this;
  }
  _createClass(FractionOfSecondParser2, [{
    key: "parse",
    value: function parse2(dateString, token) {
      var valueCallback5 = function valueCallback6(value) {
        return Math.floor(value * Math.pow(10, -token.length + 3));
      };
      return mapValue(parseNDigits(token.length, dateString), valueCallback5);
    }
  }, {
    key: "set",
    value: function set2(date, _flags, value) {
      date.setUTCMilliseconds(value);
      return date;
    }
  }]);
  return FractionOfSecondParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/ISOTimezoneWithZParser.js
var ISOTimezoneWithZParser = function(_Parser) {
  _inherits(ISOTimezoneWithZParser2, _Parser);
  var _super = _createSuper(ISOTimezoneWithZParser2);
  function ISOTimezoneWithZParser2() {
    var _this;
    _classCallCheck(this, ISOTimezoneWithZParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 10);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T", "x"]);
    return _this;
  }
  _createClass(ISOTimezoneWithZParser2, [{
    key: "parse",
    value: function parse2(dateString, token) {
      switch (token) {
        case "X":
          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);
        case "XX":
          return parseTimezonePattern(timezonePatterns.basic, dateString);
        case "XXXX":
          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);
        case "XXXXX":
          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);
        case "XXX":
        default:
          return parseTimezonePattern(timezonePatterns.extended, dateString);
      }
    }
  }, {
    key: "set",
    value: function set2(date, flags, value) {
      if (flags.timestampIsSet) {
        return date;
      }
      return new Date(date.getTime() - value);
    }
  }]);
  return ISOTimezoneWithZParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/ISOTimezoneParser.js
var ISOTimezoneParser = function(_Parser) {
  _inherits(ISOTimezoneParser2, _Parser);
  var _super = _createSuper(ISOTimezoneParser2);
  function ISOTimezoneParser2() {
    var _this;
    _classCallCheck(this, ISOTimezoneParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 10);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T", "X"]);
    return _this;
  }
  _createClass(ISOTimezoneParser2, [{
    key: "parse",
    value: function parse2(dateString, token) {
      switch (token) {
        case "x":
          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);
        case "xx":
          return parseTimezonePattern(timezonePatterns.basic, dateString);
        case "xxxx":
          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);
        case "xxxxx":
          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);
        case "xxx":
        default:
          return parseTimezonePattern(timezonePatterns.extended, dateString);
      }
    }
  }, {
    key: "set",
    value: function set2(date, flags, value) {
      if (flags.timestampIsSet) {
        return date;
      }
      return new Date(date.getTime() - value);
    }
  }]);
  return ISOTimezoneParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/TimestampSecondsParser.js
var TimestampSecondsParser = function(_Parser) {
  _inherits(TimestampSecondsParser2, _Parser);
  var _super = _createSuper(TimestampSecondsParser2);
  function TimestampSecondsParser2() {
    var _this;
    _classCallCheck(this, TimestampSecondsParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 40);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", "*");
    return _this;
  }
  _createClass(TimestampSecondsParser2, [{
    key: "parse",
    value: function parse2(dateString) {
      return parseAnyDigitsSigned(dateString);
    }
  }, {
    key: "set",
    value: function set2(_date, _flags, value) {
      return [new Date(value * 1e3), {
        timestampIsSet: true
      }];
    }
  }]);
  return TimestampSecondsParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/TimestampMillisecondsParser.js
var TimestampMillisecondsParser = function(_Parser) {
  _inherits(TimestampMillisecondsParser2, _Parser);
  var _super = _createSuper(TimestampMillisecondsParser2);
  function TimestampMillisecondsParser2() {
    var _this;
    _classCallCheck(this, TimestampMillisecondsParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 20);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", "*");
    return _this;
  }
  _createClass(TimestampMillisecondsParser2, [{
    key: "parse",
    value: function parse2(dateString) {
      return parseAnyDigitsSigned(dateString);
    }
  }, {
    key: "set",
    value: function set2(_date, _flags, value) {
      return [new Date(value), {
        timestampIsSet: true
      }];
    }
  }]);
  return TimestampMillisecondsParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/index.js
var parsers = {
  G: new EraParser(),
  y: new YearParser(),
  Y: new LocalWeekYearParser(),
  R: new ISOWeekYearParser(),
  u: new ExtendedYearParser(),
  Q: new QuarterParser(),
  q: new StandAloneQuarterParser(),
  M: new MonthParser(),
  L: new StandAloneMonthParser(),
  w: new LocalWeekParser(),
  I: new ISOWeekParser(),
  d: new DateParser(),
  D: new DayOfYearParser(),
  E: new DayParser(),
  e: new LocalDayParser(),
  c: new StandAloneLocalDayParser(),
  i: new ISODayParser(),
  a: new AMPMParser(),
  b: new AMPMMidnightParser(),
  B: new DayPeriodParser(),
  h: new Hour1to12Parser(),
  H: new Hour0to23Parser(),
  K: new Hour0To11Parser(),
  k: new Hour1To24Parser(),
  m: new MinuteParser(),
  s: new SecondParser(),
  S: new FractionOfSecondParser(),
  X: new ISOTimezoneWithZParser(),
  x: new ISOTimezoneParser(),
  t: new TimestampSecondsParser(),
  T: new TimestampMillisecondsParser()
};

// node_modules/@sendbird/uikit-react/Thread/components/ThreadList.js
var import_react_dom70 = __toESM(require_react_dom(), 1);
function ThreadList(_a3) {
  var className = _a3.className, _b2 = _a3.renderMessage, renderMessage = _b2 === void 0 ? function(props) {
    return import_react179.default.createElement(ThreadListItem, __assign({}, props));
  } : _b2, renderCustomSeparator = _a3.renderCustomSeparator, scrollRef = _a3.scrollRef, scrollBottom = _a3.scrollBottom;
  var config = useSendbirdStateContext().config;
  var userId = config.userId;
  var _c = useThreadContext(), currentChannel = _c.currentChannel, allThreadMessages = _c.allThreadMessages, localThreadMessages = _c.localThreadMessages;
  return import_react179.default.createElement(
    "div",
    { className: "sendbird-thread-list ".concat(className) },
    allThreadMessages.map(function(message, idx) {
      var _a4;
      var isByMe = ((_a4 = message === null || message === void 0 ? void 0 : message.sender) === null || _a4 === void 0 ? void 0 : _a4.userId) === userId;
      var prevMessage = allThreadMessages[idx - 1];
      var nextMessage = allThreadMessages[idx + 1];
      var _b3 = compareMessagesForGrouping(prevMessage, message, nextMessage, currentChannel, getCaseResolvedReplyType(config.groupChannel.replyType).upperCase), chainTop = _b3[0], chainBottom = _b3[1];
      var hasSeparator = !((prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt) > 0 && isSameDay2(message === null || message === void 0 ? void 0 : message.createdAt, prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt));
      var handleScroll = function() {
        var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
        if (current && scrollBottom) {
          var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;
          if (scrollBottom < bottom) {
            current.scrollTop += bottom - scrollBottom;
          }
        }
      };
      return import_react179.default.createElement(MessageProvider, { message, isByMe, key: message === null || message === void 0 ? void 0 : message.messageId }, renderMessage({
        message,
        chainTop,
        chainBottom,
        hasSeparator,
        renderCustomSeparator,
        handleScroll
      }));
    }),
    localThreadMessages.map(function(message) {
      var _a4;
      var isByMe = ((_a4 = message === null || message === void 0 ? void 0 : message.sender) === null || _a4 === void 0 ? void 0 : _a4.userId) === userId;
      var handleScroll = function() {
        var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
        if (current) {
          var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;
          if (scrollBottom < bottom) {
            current.scrollTop += bottom - scrollBottom;
          }
        }
      };
      return import_react179.default.createElement(MessageProvider, { message, isByMe, key: message === null || message === void 0 ? void 0 : message.messageId }, renderMessage({
        message,
        hasSeparator: false,
        renderCustomSeparator,
        handleScroll
      }));
    })
  );
}

// node_modules/@sendbird/uikit-react/Thread/components/ThreadMessageInput.js
var import_react181 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/Channel/hooks/useHandleUploadFiles.js
var import_react180 = __toESM(require_react(), 1);
var import_react_dom71 = __toESM(require_react_dom(), 1);
var useHandleUploadFiles2 = function(_a3, _b2) {
  var sendFileMessage = _a3.sendFileMessage, sendMultipleFilesMessage = _a3.sendMultipleFilesMessage, quoteMessage = _a3.quoteMessage;
  var logger = _b2.logger;
  var stringSet2 = useLocalization().stringSet;
  var config = useSendbirdStateContext().config;
  var imageCompression = config.imageCompression;
  var uikitUploadSizeLimit = config === null || config === void 0 ? void 0 : config.uikitUploadSizeLimit;
  var uikitMultipleFilesMessageLimit = config === null || config === void 0 ? void 0 : config.uikitMultipleFilesMessageLimit;
  var openModal = useGlobalModalContext().openModal;
  var handleUploadFiles = (0, import_react180.useCallback)(function(files) {
    return __awaiter(void 0, void 0, void 0, function() {
      var compressedFiles, sendingFiles, file, imageFiles_1, otherFiles_1;
      return __generator(this, function(_a4) {
        switch (_a4.label) {
          case 0:
            if (!sendFileMessage || !sendMultipleFilesMessage) {
              logger.warning("Channel|useHandleUploadFiles: required functions are undefined", { sendFileMessage, sendMultipleFilesMessage });
              return [
                2
                /*return*/
              ];
            }
            if (files.length === 0) {
              logger.warning("Channel|useHandleUploadFiles: given file list is empty.", { files });
              return [
                2
                /*return*/
              ];
            }
            if (files.length > uikitMultipleFilesMessageLimit) {
              logger.info("Channel|useHandleUploadFiles: Cannot upload files more than ".concat(uikitMultipleFilesMessageLimit));
              openModal({
                modalProps: {
                  titleText: stringSet2.FILE_UPLOAD_NOTIFICATION__COUNT_LIMIT.replace("%d", "".concat(uikitMultipleFilesMessageLimit)),
                  hideFooter: true
                },
                childElement: function(_a5) {
                  var closeModal = _a5.closeModal;
                  return import_react180.default.createElement(ModalFooter, { type: ButtonTypes.PRIMARY, submitText: stringSet2.BUTTON__OK, hideCancelButton: true, onCancel: closeModal, onSubmit: closeModal });
                }
              });
              return [
                2
                /*return*/
              ];
            }
            if (files.some(function(file2) {
              return file2.size > uikitUploadSizeLimit;
            })) {
              logger.info("Channel|useHandleUploadFiles: Cannot upload file size exceeding ".concat(uikitUploadSizeLimit));
              openModal({
                modalProps: {
                  titleText: stringSet2.FILE_UPLOAD_NOTIFICATION__SIZE_LIMIT.replace("%d", "".concat(Math.floor(uikitUploadSizeLimit / ONE_MiB))),
                  hideFooter: true
                },
                childElement: function(_a5) {
                  var closeModal = _a5.closeModal;
                  return import_react180.default.createElement(ModalFooter, { type: ButtonTypes.PRIMARY, submitText: stringSet2.BUTTON__OK, hideCancelButton: true, onCancel: closeModal, onSubmit: closeModal });
                }
              });
              return [
                2
                /*return*/
              ];
            }
            return [4, compressImages({
              files,
              imageCompression,
              logger
            })];
          case 1:
            compressedFiles = _a4.sent().compressedFiles;
            sendingFiles = compressedFiles;
            if (sendingFiles.length === 1) {
              logger.info("Channel|useHandleUploadFiles: sending one file.");
              file = sendingFiles[0];
              sendFileMessage(file, quoteMessage);
            } else if (sendingFiles.length > 1) {
              logger.info("Channel|useHandleUploadFiles: sending multiple files.");
              imageFiles_1 = [];
              otherFiles_1 = [];
              sendingFiles.forEach(function(file2) {
                if (isImage(file2.type)) {
                  imageFiles_1.push(file2);
                } else {
                  otherFiles_1.push(file2);
                }
              });
              return [2, otherFiles_1.reduce(function(previousPromise, item) {
                return previousPromise.then(function() {
                  return sendFileMessage(item, quoteMessage);
                });
              }, function() {
                if (imageFiles_1.length === 0) {
                  return Promise.resolve();
                } else if (imageFiles_1.length === 1) {
                  return sendFileMessage(imageFiles_1[0], quoteMessage);
                } else {
                  return sendMultipleFilesMessage(imageFiles_1, quoteMessage);
                }
              }())];
            }
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [
    sendFileMessage,
    sendMultipleFilesMessage,
    quoteMessage
  ]);
  return handleUploadFiles;
};

// node_modules/@sendbird/uikit-react/Thread/components/ThreadMessageInput.js
var import_react_dom72 = __toESM(require_react_dom(), 1);
var ThreadMessageInput = function(props, ref) {
  var _a3;
  var className = props.className, renderFileUploadIcon = props.renderFileUploadIcon, renderVoiceMessageIcon = props.renderVoiceMessageIcon, renderSendMessageIcon = props.renderSendMessageIcon, acceptableMimeTypes = props.acceptableMimeTypes;
  var config = useSendbirdStateContext().config;
  var isMobile = useMediaQueryContext().isMobile;
  var stringSet2 = useLocalization().stringSet;
  var isOnline = config.isOnline, userMention = config.userMention, logger = config.logger, groupChannel = config.groupChannel;
  var threadContext = useThreadContext();
  var currentChannel = threadContext.currentChannel, parentMessage = threadContext.parentMessage, sendMessage = threadContext.sendMessage, sendFileMessage = threadContext.sendFileMessage, sendVoiceMessage = threadContext.sendVoiceMessage, sendMultipleFilesMessage = threadContext.sendMultipleFilesMessage, isMuted = threadContext.isMuted, isChannelFrozen = threadContext.isChannelFrozen, allThreadMessages = threadContext.allThreadMessages;
  var messageInputRef = (0, import_react181.useRef)();
  var isMentionEnabled = groupChannel.enableMention;
  var isVoiceMessageEnabled = groupChannel.enableVoiceMessage;
  var isMultipleFilesMessageEnabled = (_a3 = threadContext.isMultipleFilesMessageEnabled) !== null && _a3 !== void 0 ? _a3 : config.isMultipleFilesMessageEnabled;
  var threadInputDisabled = props.disabled || !isOnline || isMuted || !((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.myRole) === Role.OPERATOR) && isChannelFrozen || parentMessage === null;
  var handleUploadFiles = useHandleUploadFiles2({
    sendFileMessage,
    sendMultipleFilesMessage,
    quoteMessage: parentMessage
  }, {
    logger
  });
  var _b2 = (0, import_react181.useState)(""), mentionNickname = _b2[0], setMentionNickname = _b2[1];
  var _c = (0, import_react181.useState)([]), mentionedUsers = _c[0], setMentionedUsers = _c[1];
  var _d = (0, import_react181.useState)([]), mentionedUserIds = _d[0], setMentionedUserIds = _d[1];
  var _e3 = (0, import_react181.useState)(null), selectedUser = _e3[0], setSelectedUser = _e3[1];
  var _f = (0, import_react181.useState)([]), mentionSuggestedUsers = _f[0], setMentionSuggestedUsers = _f[1];
  var _g2 = (0, import_react181.useState)(null), messageInputEvent = _g2[0], setMessageInputEvent = _g2[1];
  var _h = (0, import_react181.useState)(false), showVoiceMessageInput = _h[0], setShowVoiceMessageInput = _h[1];
  var displaySuggestedMentionList = isOnline && isMentionEnabled && mentionNickname.length > 0 && !isDisabledBecauseFrozen2(currentChannel) && !isDisabledBecauseMuted2(currentChannel) && !(currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.isBroadcast);
  (0, import_react181.useEffect)(function() {
    setShowVoiceMessageInput(false);
  }, [currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url]);
  var mentionNodes = useDirtyGetMentions({ ref: ref || messageInputRef }, { logger });
  var ableMention = (mentionNodes === null || mentionNodes === void 0 ? void 0 : mentionNodes.length) < (userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount);
  (0, import_react181.useEffect)(function() {
    setMentionedUsers(mentionedUsers.filter(function(_a4) {
      var userId = _a4.userId;
      var i4 = mentionedUserIds.indexOf(userId);
      if (i4 < 0) {
        return false;
      } else {
        mentionedUserIds.splice(i4, 1);
        return true;
      }
    }));
  }, [mentionedUserIds]);
  if ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.isBroadcast) && (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.myRole) !== Role.OPERATOR) {
    return import_react181.default.createElement(import_react181.default.Fragment, null);
  }
  return import_react181.default.createElement(
    "div",
    { className: classnames(showVoiceMessageInput ? "sendbird-thread-message-input--voice-message" : "sendbird-thread-message-input", className) },
    displaySuggestedMentionList && import_react181.default.createElement(SuggestedMentionList2, {
      targetNickname: mentionNickname,
      inputEvent: messageInputEvent !== null && messageInputEvent !== void 0 ? messageInputEvent : void 0,
      // renderUserMentionItem={renderUserMentionItem}
      onUserItemClick: function(user) {
        if (user) {
          setMentionedUsers(__spreadArray(__spreadArray([], mentionedUsers, true), [user], false));
        }
        setMentionNickname("");
        setSelectedUser(user);
        setMessageInputEvent(null);
      },
      onFocusItemChange: function() {
        setMessageInputEvent(null);
      },
      onFetchUsers: function(users) {
        setMentionSuggestedUsers(users);
      },
      ableAddMention: ableMention,
      maxMentionCount: userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount,
      maxSuggestionCount: userMention === null || userMention === void 0 ? void 0 : userMention.maxSuggestionCount
    }),
    showVoiceMessageInput ? import_react181.default.createElement(VoiceMessageInputWrapper, { channel: currentChannel, onSubmitClick: function(recordedFile, duration) {
      sendVoiceMessage(recordedFile, duration, parentMessage);
      setShowVoiceMessageInput(false);
    }, onCancelClick: function() {
      setShowVoiceMessageInput(false);
    } }) : import_react181.default.createElement(MessageInput, { className: "sendbird-thread-message-input__message-input", messageFieldId: "sendbird-message-input-text-field--thread", channel: currentChannel, channelUrl: currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url, isMobile, disabled: threadInputDisabled, acceptableMimeTypes, setMentionedUsers, mentionSelectedUser: selectedUser, isMentionEnabled, isVoiceMessageEnabled, isSelectingMultipleFilesEnabled: isMultipleFilesMessageEnabled, onVoiceMessageIconClick: function() {
      setShowVoiceMessageInput(true);
    }, renderFileUploadIcon, renderVoiceMessageIcon, renderSendMessageIcon, ref: ref || messageInputRef, placeholder: (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.isFrozen) && !((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.myRole) === Role.OPERATOR) && stringSet2.MESSAGE_INPUT__PLACE_HOLDER__DISABLED || (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.myMutedState) === H.MUTED && stringSet2.MESSAGE_INPUT__PLACE_HOLDER__MUTED_SHORT || (allThreadMessages.length > 0 ? stringSet2.THREAD__INPUT__REPLY_TO_THREAD : stringSet2.THREAD__INPUT__REPLY_IN_THREAD), onStartTyping: function() {
      var _a4;
      (_a4 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.startTyping) === null || _a4 === void 0 ? void 0 : _a4.call(currentChannel);
    }, onSendMessage: function(_a4) {
      var _b3;
      var message = _a4.message, mentionTemplate = _a4.mentionTemplate;
      sendMessage({
        message,
        mentionedUsers,
        mentionTemplate,
        quoteMessage: parentMessage
      });
      setMentionNickname("");
      setMentionedUsers([]);
      (_b3 = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.endTyping) === null || _b3 === void 0 ? void 0 : _b3.call(currentChannel);
    }, onFileUpload: handleUploadFiles, onUserMentioned: function(user) {
      if ((selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.userId) === (user === null || user === void 0 ? void 0 : user.userId)) {
        setSelectedUser(null);
        setMentionNickname("");
      }
    }, onMentionStringChange: function(mentionText) {
      setMentionNickname(mentionText);
    }, onMentionedUserIdsUpdated: function(userIds) {
      setMentionedUserIds(userIds);
    }, onKeyDown: function(e4) {
      if (displaySuggestedMentionList && (mentionSuggestedUsers === null || mentionSuggestedUsers === void 0 ? void 0 : mentionSuggestedUsers.length) > 0 && (e4.key === MessageInputKeys.Enter && ableMention || e4.key === MessageInputKeys.ArrowUp || e4.key === MessageInputKeys.ArrowDown)) {
        setMessageInputEvent(e4);
        return true;
      }
      return false;
    } })
  );
};
var ThreadMessageInput$1 = import_react181.default.forwardRef(ThreadMessageInput);

// node_modules/@sendbird/uikit-react/Thread/components/ThreadUI.js
var import_react_dom73 = __toESM(require_react_dom(), 1);
var useMemorizedHeader = function(_a3) {
  var renderHeader = _a3.renderHeader;
  return (0, import_react182.useMemo)(function() {
    if (typeof renderHeader === "function") {
      return renderHeader();
    }
    return null;
  }, [renderHeader]);
};
var useMemorizedParentMessageInfo = function(_a3) {
  var parentMessage = _a3.parentMessage, parentMessageState = _a3.parentMessageState, renderParentMessageInfo = _a3.renderParentMessageInfo, renderParentMessageInfoPlaceholder = _a3.renderParentMessageInfoPlaceholder;
  return (0, import_react182.useMemo)(function() {
    if (parentMessageState === ParentMessageStateTypes.NIL || parentMessageState === ParentMessageStateTypes.LOADING || parentMessageState === ParentMessageStateTypes.INVALID) {
      if (typeof renderParentMessageInfoPlaceholder === "function") {
        return renderParentMessageInfoPlaceholder(parentMessageState);
      }
      switch (parentMessageState) {
        case ParentMessageStateTypes.NIL: {
          return import_react182.default.createElement(PlaceHolder, { className: "sendbird-thread-ui__parent-message-info placeholder-nil", type: PlaceHolderTypes.NO_RESULTS, iconSize: "64px" });
        }
        case ParentMessageStateTypes.LOADING: {
          return import_react182.default.createElement(PlaceHolder, { className: "sendbird-thread-ui__parent-message-info placeholder-loading", type: PlaceHolderTypes.LOADING, iconSize: "64px" });
        }
        case ParentMessageStateTypes.INVALID: {
          return import_react182.default.createElement(PlaceHolder, { className: "sendbird-thread-ui__parent-message-info placeholder-invalid", type: PlaceHolderTypes.WRONG, iconSize: "64px" });
        }
        default: {
          return null;
        }
      }
    } else if (parentMessageState === ParentMessageStateTypes.INITIALIZED) {
      if (typeof renderParentMessageInfo === "function") {
        return renderParentMessageInfo();
      }
    }
    return null;
  }, [
    parentMessage,
    parentMessageState,
    renderParentMessageInfo,
    renderParentMessageInfoPlaceholder
  ]);
};
var useMemorizedThreadList = function(_a3) {
  var threadListState = _a3.threadListState, renderThreadListPlaceHolder = _a3.renderThreadListPlaceHolder;
  return (0, import_react182.useMemo)(function() {
    if (threadListState === ThreadListStateTypes.NIL || threadListState === ThreadListStateTypes.LOADING || threadListState === ThreadListStateTypes.INVALID) {
      if (typeof renderThreadListPlaceHolder === "function") {
        return renderThreadListPlaceHolder(threadListState);
      }
      switch (threadListState) {
        case ThreadListStateTypes.LOADING: {
          return import_react182.default.createElement(PlaceHolder, { className: "sendbird-thread-ui__thread-list placeholder-loading", type: PlaceHolderTypes.LOADING, iconSize: "64px" });
        }
        case ThreadListStateTypes.INVALID: {
          return import_react182.default.createElement(PlaceHolder, { className: "sendbird-thread-ui__thread-list placeholder-invalid", type: PlaceHolderTypes.WRONG, iconSize: "64px" });
        }
        case ThreadListStateTypes.NIL: {
          return import_react182.default.createElement(import_react182.default.Fragment, null);
        }
        default: {
          return null;
        }
      }
    }
    return null;
  }, [
    threadListState,
    renderThreadListPlaceHolder
  ]);
};
var ThreadUI = function(_a3) {
  var _b2, _c, _d, _e3;
  var renderHeader = _a3.renderHeader, _f = _a3.renderParentMessageInfo, renderParentMessageInfo = _f === void 0 ? function() {
    return import_react182.default.createElement(ParentMessageInfo, { className: "sendbird-thread-ui__parent-message-info" });
  } : _f, renderMessage = _a3.renderMessage, renderMessageInput = _a3.renderMessageInput, renderCustomSeparator = _a3.renderCustomSeparator, renderParentMessageInfoPlaceholder = _a3.renderParentMessageInfoPlaceholder, renderThreadListPlaceHolder = _a3.renderThreadListPlaceHolder, renderFileUploadIcon = _a3.renderFileUploadIcon, renderVoiceMessageIcon = _a3.renderVoiceMessageIcon, renderSendMessageIcon = _a3.renderSendMessageIcon;
  var stores = useSendbirdStateContext().stores;
  var currentUserId = (_d = (_c = (_b2 = stores === null || stores === void 0 ? void 0 : stores.sdkStore) === null || _b2 === void 0 ? void 0 : _b2.sdk) === null || _c === void 0 ? void 0 : _c.currentUser) === null || _d === void 0 ? void 0 : _d.userId;
  var stringSet2 = useLocalization().stringSet;
  var _g2 = useThreadContext(), currentChannel = _g2.currentChannel, allThreadMessages = _g2.allThreadMessages, parentMessage = _g2.parentMessage, parentMessageState = _g2.parentMessageState, threadListState = _g2.threadListState, hasMorePrev = _g2.hasMorePrev, hasMoreNext = _g2.hasMoreNext, fetchPrevThreads = _g2.fetchPrevThreads, fetchNextThreads = _g2.fetchNextThreads, onHeaderActionClick = _g2.onHeaderActionClick, onMoveToParentMessage = _g2.onMoveToParentMessage;
  var replyCount = allThreadMessages.length;
  var isByMe = currentUserId === ((_e3 = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender) === null || _e3 === void 0 ? void 0 : _e3.userId);
  var MemorizedHeader = useMemorizedHeader({ renderHeader });
  var MemorizedParentMessageInfo = useMemorizedParentMessageInfo({
    parentMessage,
    parentMessageState,
    renderParentMessageInfo,
    renderParentMessageInfoPlaceholder
  });
  var MemorizedThreadList = useMemorizedThreadList({
    threadListState,
    renderThreadListPlaceHolder
  });
  var _h = (0, import_react182.useState)(0), scrollBottom = _h[0], setScrollBottom = _h[1];
  var scrollRef = (0, import_react182.useRef)(null);
  var onScroll = function(e4) {
    var _a4;
    var element = e4.target;
    var scrollTop = element.scrollTop, clientHeight = element.clientHeight, scrollHeight = element.scrollHeight;
    var threadItemNodes = (_a4 = scrollRef.current) === null || _a4 === void 0 ? void 0 : _a4.querySelectorAll(".sendbird-thread-list-item");
    var firstNode = threadItemNodes === null || threadItemNodes === void 0 ? void 0 : threadItemNodes[0];
    if (isAboutSame2(scrollTop, 0, 10) && hasMorePrev) {
      fetchPrevThreads(function(messages) {
        var _a5;
        if (messages) {
          try {
            (_a5 = firstNode === null || firstNode === void 0 ? void 0 : firstNode.scrollIntoView) === null || _a5 === void 0 ? void 0 : _a5.call(firstNode, { block: "start", inline: "nearest" });
          } catch (error) {
          }
        }
      });
    }
    if (isAboutSame2(clientHeight + scrollTop, scrollHeight, 10) && hasMoreNext) {
      var scrollTop_1 = scrollTop;
      fetchNextThreads(function(messages) {
        if (messages) {
          try {
            element.scrollTop = scrollTop_1;
            if (scrollRef.current) {
              scrollRef.current.scrollTop = scrollTop_1;
            }
          } catch (error) {
          }
        }
      });
    }
    if (scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current) {
      var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
      setScrollBottom(current.scrollHeight - current.scrollTop - current.offsetHeight);
    }
  };
  return import_react182.default.createElement(
    "div",
    { className: "sendbird-thread-ui" },
    MemorizedHeader || import_react182.default.createElement(ThreadHeader, { className: "sendbird-thread-ui__header", channelName: getChannelTitle(currentChannel, currentUserId !== null && currentUserId !== void 0 ? currentUserId : "", stringSet2), onActionIconClick: onHeaderActionClick, onChannelNameClick: function() {
      onMoveToParentMessage === null || onMoveToParentMessage === void 0 ? void 0 : onMoveToParentMessage({ message: parentMessage, channel: currentChannel });
    } }),
    import_react182.default.createElement(
      "div",
      { className: classnames("sendbird-thread-ui--scroll", "sendbird-conversation__messages"), ref: scrollRef, onScroll },
      import_react182.default.createElement(MessageProvider, { message: parentMessage, isByMe }, MemorizedParentMessageInfo),
      replyCount > 0 && import_react182.default.createElement(
        "div",
        { className: "sendbird-thread-ui__reply-counts" },
        import_react182.default.createElement(Label, { type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_3 }, "".concat(replyCount, " ").concat(replyCount > 1 ? stringSet2.THREAD__THREAD_REPLIES : stringSet2.THREAD__THREAD_REPLY))
      ),
      MemorizedThreadList || import_react182.default.createElement(ThreadList, { className: "sendbird-thread-ui__thread-list", renderMessage, renderCustomSeparator, scrollRef, scrollBottom })
    ),
    (renderMessageInput === null || renderMessageInput === void 0 ? void 0 : renderMessageInput()) || import_react182.default.createElement(ThreadMessageInput$1, { className: "sendbird-thread-ui__message-input", renderFileUploadIcon, renderVoiceMessageIcon, renderSendMessageIcon })
  );
};

// node_modules/@sendbird/uikit-react/Thread.js
var import_react_dom74 = __toESM(require_react_dom(), 1);
var Thread = function(props) {
  var _a3;
  return import_react183.default.createElement(
    "div",
    { className: classnames("sendbird-thread", (_a3 = props === null || props === void 0 ? void 0 : props.className) !== null && _a3 !== void 0 ? _a3 : "") },
    import_react183.default.createElement(
      ThreadProvider,
      __assign({}, props),
      import_react183.default.createElement(ThreadUI, __assign({}, props))
    )
  );
};

// node_modules/@sendbird/uikit-react/App.js
var import_react_dom75 = __toESM(require_react_dom(), 1);
var DesktopLayout = function(props) {
  var isReactionEnabled = props.isReactionEnabled, replyType = props.replyType, isMessageGroupingEnabled = props.isMessageGroupingEnabled, isMultipleFilesMessageEnabled = props.isMultipleFilesMessageEnabled, allowProfileEdit = props.allowProfileEdit, showSearchIcon = props.showSearchIcon, onProfileEditSuccess = props.onProfileEditSuccess, disableAutoSelect = props.disableAutoSelect, currentChannel = props.currentChannel, setCurrentChannel = props.setCurrentChannel, showSettings = props.showSettings, setShowSettings = props.setShowSettings, showSearch = props.showSearch, setShowSearch = props.setShowSearch, highlightedMessage = props.highlightedMessage, setHighlightedMessage = props.setHighlightedMessage, startingPoint = props.startingPoint, setStartingPoint = props.setStartingPoint, showThread = props.showThread, setShowThread = props.setShowThread, threadTargetMessage = props.threadTargetMessage, setThreadTargetMessage = props.setThreadTargetMessage, enableLegacyChannelModules = props.enableLegacyChannelModules;
  var updateFocusedChannel = function(channel) {
    setStartingPoint === null || setStartingPoint === void 0 ? void 0 : setStartingPoint(null);
    setHighlightedMessage === null || setHighlightedMessage === void 0 ? void 0 : setHighlightedMessage(null);
    if (channel) {
      setCurrentChannel(channel);
    } else {
      setCurrentChannel(void 0);
    }
  };
  var onClickThreadReply = function(_a3) {
    var message = _a3.message;
    setShowSettings(false);
    setShowSearch(false);
    if (replyType === "THREAD") {
      setThreadTargetMessage(message);
      setShowThread(true);
    }
  };
  var channelListProps = {
    allowProfileEdit,
    activeChannelUrl: currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url,
    onProfileEditSuccess,
    disableAutoSelect,
    onChannelSelect: updateFocusedChannel,
    // for GroupChannelList
    selectedChannelUrl: currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url,
    onChannelCreated: updateFocusedChannel,
    onUserProfileUpdated: onProfileEditSuccess
  };
  var channelProps = {
    channelUrl: (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) || "",
    onChatHeaderActionClick: function() {
      setShowSearch(false);
      setShowThread(false);
      setShowSettings(!showSettings);
    },
    onSearchClick: function() {
      setShowSettings(false);
      setShowThread(false);
      setShowSearch(!showSearch);
    },
    onReplyInThread: onClickThreadReply,
    onQuoteMessageClick: function(_a3) {
      var message = _a3.message;
      setShowSettings(false);
      setShowSearch(false);
      if (replyType === "THREAD") {
        setThreadTargetMessage(message);
        setShowThread(true);
      }
    },
    animatedMessage: highlightedMessage,
    onMessageAnimated: function() {
      return setHighlightedMessage === null || setHighlightedMessage === void 0 ? void 0 : setHighlightedMessage(null);
    },
    showSearchIcon,
    startingPoint: startingPoint !== null && startingPoint !== void 0 ? startingPoint : void 0,
    isReactionEnabled,
    replyType,
    isMessageGroupingEnabled,
    isMultipleFilesMessageEnabled,
    // for GroupChannel
    animatedMessageId: highlightedMessage,
    onReplyInThreadClick: onClickThreadReply
  };
  return import_react184.default.createElement(
    "div",
    { className: "sendbird-app__wrap", id: APP_LAYOUT_ROOT },
    import_react184.default.createElement("div", { className: "sendbird-app__channellist-wrap" }, enableLegacyChannelModules ? import_react184.default.createElement(ChannelList, __assign({}, channelListProps)) : import_react184.default.createElement(GroupChannelList, __assign({}, channelListProps))),
    import_react184.default.createElement("div", { className: classnames("sendbird-app__conversation-wrap", showSettings && "sendbird-app__conversation--settings-open", showSearch && "sendbird-app__conversation--search-open") }, enableLegacyChannelModules ? import_react184.default.createElement(Channel, __assign({}, channelProps)) : import_react184.default.createElement(GroupChannel, __assign({}, channelProps))),
    showSettings && import_react184.default.createElement(
      "div",
      { className: "sendbird-app__settingspanel-wrap" },
      import_react184.default.createElement(ChannelSettings, { className: "sendbird-channel-settings", channelUrl: (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) || "", onCloseClick: function() {
        setShowSettings(false);
      } })
    ),
    showSearch && import_react184.default.createElement(
      "div",
      { className: "sendbird-app__searchpanel-wrap" },
      import_react184.default.createElement(MessageSearchPannel, { channelUrl: (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) || "", onResultClick: function(message) {
        if (message.messageId === highlightedMessage) {
          setHighlightedMessage === null || setHighlightedMessage === void 0 ? void 0 : setHighlightedMessage(null);
          setTimeout(function() {
            setHighlightedMessage === null || setHighlightedMessage === void 0 ? void 0 : setHighlightedMessage(message.messageId);
          });
        } else {
          setStartingPoint === null || setStartingPoint === void 0 ? void 0 : setStartingPoint(message.createdAt);
          setHighlightedMessage === null || setHighlightedMessage === void 0 ? void 0 : setHighlightedMessage(message.messageId);
        }
      }, onCloseClick: function() {
        setShowSearch(false);
      } })
    ),
    showThread && import_react184.default.createElement(Thread, { className: "sendbird-app__thread", channelUrl: (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) || "", message: threadTargetMessage, onHeaderActionClick: function() {
      setShowThread(false);
    }, onMoveToParentMessage: function(_a3) {
      var message = _a3.message, channel = _a3.channel;
      if ((channel === null || channel === void 0 ? void 0 : channel.url) !== (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url)) {
        setCurrentChannel(channel);
      }
      if ((message === null || message === void 0 ? void 0 : message.messageId) !== highlightedMessage) {
        setStartingPoint === null || setStartingPoint === void 0 ? void 0 : setStartingPoint(message === null || message === void 0 ? void 0 : message.createdAt);
      }
      setTimeout(function() {
        setStartingPoint === null || setStartingPoint === void 0 ? void 0 : setStartingPoint(null);
        setHighlightedMessage === null || setHighlightedMessage === void 0 ? void 0 : setHighlightedMessage(message === null || message === void 0 ? void 0 : message.messageId);
      }, 500);
    } })
  );
};
var PANELS;
(function(PANELS2) {
  PANELS2["CHANNEL_LIST"] = "CHANNEL_LIST";
  PANELS2["CHANNEL"] = "CHANNEL";
  PANELS2["CHANNEL_SETTINGS"] = "CHANNEL_SETTINGS";
  PANELS2["MESSAGE_SEARCH"] = "MESSAGE_SEARCH";
  PANELS2["THREAD"] = "THREAD";
})(PANELS || (PANELS = {}));
var MobileLayout = function(props) {
  var _a3, _b2, _c;
  var replyType = props.replyType, isMessageGroupingEnabled = props.isMessageGroupingEnabled, isMultipleFilesMessageEnabled = props.isMultipleFilesMessageEnabled, allowProfileEdit = props.allowProfileEdit, isReactionEnabled = props.isReactionEnabled, showSearchIcon = props.showSearchIcon, onProfileEditSuccess = props.onProfileEditSuccess, currentChannel = props.currentChannel, setCurrentChannel = props.setCurrentChannel, startingPoint = props.startingPoint, setStartingPoint = props.setStartingPoint, threadTargetMessage = props.threadTargetMessage, setThreadTargetMessage = props.setThreadTargetMessage, highlightedMessage = props.highlightedMessage, setHighlightedMessage = props.setHighlightedMessage, enableLegacyChannelModules = props.enableLegacyChannelModules;
  var _d = (0, import_react184.useState)(PANELS.CHANNEL_LIST), panel = _d[0], setPanel = _d[1];
  var store = useSendbirdStateContext();
  var sdk = (_b2 = (_a3 = store === null || store === void 0 ? void 0 : store.stores) === null || _a3 === void 0 ? void 0 : _a3.sdkStore) === null || _b2 === void 0 ? void 0 : _b2.sdk;
  var userId = (_c = store === null || store === void 0 ? void 0 : store.config) === null || _c === void 0 ? void 0 : _c.userId;
  var pause = useVoicePlayerContext().pause;
  var goToMessage = function(message, timeoutCb) {
    setStartingPoint === null || setStartingPoint === void 0 ? void 0 : setStartingPoint((message === null || message === void 0 ? void 0 : message.createdAt) || null);
    setTimeout(function() {
      timeoutCb === null || timeoutCb === void 0 ? void 0 : timeoutCb((message === null || message === void 0 ? void 0 : message.messageId) || null);
    }, 500);
  };
  (0, import_react184.useEffect)(function() {
    if (panel !== PANELS.CHANNEL) {
      goToMessage(null, function() {
        return setHighlightedMessage === null || setHighlightedMessage === void 0 ? void 0 : setHighlightedMessage(null);
      });
    }
  }, [panel]);
  (0, import_react184.useEffect)(function() {
    var _a4, _b3;
    var handlerId = uuidv4();
    if ((_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a4 === void 0 ? void 0 : _a4.addGroupChannelHandler) {
      var handler = new Ye3({
        onUserBanned: function(groupChannel, user) {
          if (groupChannel.url === (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) && (user === null || user === void 0 ? void 0 : user.userId) === userId) {
            setPanel(PANELS.CHANNEL_LIST);
          }
        },
        onChannelDeleted: function(channelUrl) {
          if (channelUrl === (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url)) {
            setPanel(PANELS.CHANNEL_LIST);
          }
        },
        onUserLeft: function(groupChannel, user) {
          if (groupChannel.url === (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) && (user === null || user === void 0 ? void 0 : user.userId) === userId) {
            setPanel(PANELS.CHANNEL_LIST);
          }
        }
      });
      (_b3 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _b3 === void 0 ? void 0 : _b3.addGroupChannelHandler(handlerId, handler);
    }
    return function() {
      var _a5, _b4;
      (_b4 = (_a5 = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a5 === void 0 ? void 0 : _a5.removeGroupChannelHandler) === null || _b4 === void 0 ? void 0 : _b4.call(_a5, handlerId);
    };
  }, [sdk, currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url]);
  (0, import_react184.useEffect)(function() {
    if (panel === PANELS.THREAD) {
      setPanel(PANELS.CHANNEL);
    }
  }, [currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url]);
  var channelListProps = {
    allowProfileEdit,
    onProfileEditSuccess,
    disableAutoSelect: true,
    onChannelSelect: function(channel) {
      setCurrentChannel(channel !== null && channel !== void 0 ? channel : void 0);
      if (channel) {
        setPanel(PANELS.CHANNEL);
      } else {
        setPanel(PANELS.CHANNEL_LIST);
      }
    },
    // for GroupChannelList
    onChannelCreated: function(channel) {
      setCurrentChannel(channel);
      setPanel(PANELS.CHANNEL);
    },
    onUserProfileUpdated: onProfileEditSuccess
  };
  var channelProps = {
    channelUrl: (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) || "",
    onChatHeaderActionClick: function() {
      setPanel(PANELS.CHANNEL_SETTINGS);
    },
    onBackClick: function() {
      setPanel(PANELS.CHANNEL_LIST);
      pause(ALL);
    },
    onSearchClick: function() {
      setPanel(PANELS.MESSAGE_SEARCH);
    },
    onReplyInThread: function(_a4) {
      var message = _a4.message;
      if (replyType === "THREAD") {
        setPanel(PANELS.THREAD);
        setThreadTargetMessage(message);
      }
    },
    onQuoteMessageClick: function(_a4) {
      var message = _a4.message;
      if (replyType === "THREAD") {
        setThreadTargetMessage(message);
        setPanel(PANELS.THREAD);
      }
    },
    animatedMessage: highlightedMessage,
    onMessageAnimated: function() {
      return setHighlightedMessage === null || setHighlightedMessage === void 0 ? void 0 : setHighlightedMessage(null);
    },
    showSearchIcon,
    startingPoint: startingPoint !== null && startingPoint !== void 0 ? startingPoint : void 0,
    isReactionEnabled,
    replyType,
    isMessageGroupingEnabled,
    isMultipleFilesMessageEnabled,
    // for GroupChannel
    animatedMessageId: highlightedMessage,
    onReplyInThreadClick: function(_a4) {
      var message = _a4.message;
      if (replyType === "THREAD") {
        setPanel(PANELS.THREAD);
        setThreadTargetMessage(message);
      }
    }
  };
  return import_react184.default.createElement(
    "div",
    { className: "sb_mobile", id: APP_LAYOUT_ROOT },
    panel === PANELS.CHANNEL_LIST && import_react184.default.createElement("div", { className: "sb_mobile__panelwrap" }, enableLegacyChannelModules ? import_react184.default.createElement(ChannelList, __assign({}, channelListProps)) : import_react184.default.createElement(GroupChannelList, __assign({}, channelListProps))),
    panel === PANELS.CHANNEL && import_react184.default.createElement("div", { className: "sb_mobile__panelwrap" }, enableLegacyChannelModules ? import_react184.default.createElement(Channel, __assign({}, channelProps)) : import_react184.default.createElement(GroupChannel, __assign({}, channelProps))),
    panel === PANELS.CHANNEL_SETTINGS && import_react184.default.createElement(
      "div",
      { className: "sb_mobile__panelwrap" },
      import_react184.default.createElement(ChannelSettings, { channelUrl: (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) || "", onCloseClick: function() {
        setPanel(PANELS.CHANNEL);
      }, onLeaveChannel: function() {
        setPanel(PANELS.CHANNEL_LIST);
      } })
    ),
    panel === PANELS.MESSAGE_SEARCH && import_react184.default.createElement(
      "div",
      { className: "sb_mobile__panelwrap" },
      import_react184.default.createElement(MessageSearchPannel, { channelUrl: (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) || "", onCloseClick: function() {
        setPanel(PANELS.CHANNEL);
      }, onResultClick: function(message) {
        setPanel(PANELS.CHANNEL);
        goToMessage(message, function(messageId) {
          setHighlightedMessage === null || setHighlightedMessage === void 0 ? void 0 : setHighlightedMessage(messageId);
        });
      } })
    ),
    panel === PANELS.THREAD && import_react184.default.createElement(
      "div",
      { className: "sb_mobile__panelwrap" },
      import_react184.default.createElement(Thread, { channelUrl: (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) || "", message: threadTargetMessage, onHeaderActionClick: function() {
        setPanel(PANELS.CHANNEL);
        pause(ALL);
      }, onMoveToParentMessage: function(_a4) {
        var message = _a4.message, channel = _a4.channel;
        setCurrentChannel(channel);
        goToMessage(message, function(messageId) {
          setPanel(PANELS.CHANNEL);
          setHighlightedMessage === null || setHighlightedMessage === void 0 ? void 0 : setHighlightedMessage(messageId);
        });
      } })
    )
  );
};
var AppLayout = function(props) {
  var _a3, _b2, _c;
  var isMessageGroupingEnabled = props.isMessageGroupingEnabled, allowProfileEdit = props.allowProfileEdit, onProfileEditSuccess = props.onProfileEditSuccess, disableAutoSelect = props.disableAutoSelect, currentChannel = props.currentChannel, setCurrentChannel = props.setCurrentChannel, enableLegacyChannelModules = props.enableLegacyChannelModules;
  var globalStore = useSendbirdStateContext();
  var globalConfigs = globalStore.config;
  var _d = (0, import_react184.useState)(false), showThread = _d[0], setShowThread = _d[1];
  var _e3 = (0, import_react184.useState)(null), threadTargetMessage = _e3[0], setThreadTargetMessage = _e3[1];
  var _f = (0, import_react184.useState)(false), showSettings = _f[0], setShowSettings = _f[1];
  var _g2 = (0, import_react184.useState)(false), showSearch = _g2[0], setShowSearch = _g2[1];
  var _h = (0, import_react184.useState)(null), highlightedMessage = _h[0], setHighlightedMessage = _h[1];
  var _j = (0, import_react184.useState)(null), startingPoint = _j[0], setStartingPoint = _j[1];
  var isMobile = useMediaQueryContext().isMobile;
  var replyType = (_a3 = props.replyType) !== null && _a3 !== void 0 ? _a3 : getCaseResolvedReplyType(globalConfigs.groupChannel.replyType).upperCase;
  var isReactionEnabled = (_b2 = props.isReactionEnabled) !== null && _b2 !== void 0 ? _b2 : globalConfigs.groupChannel.enableReactions;
  var showSearchIcon = (_c = props.showSearchIcon) !== null && _c !== void 0 ? _c : globalConfigs.groupChannelSettings.enableMessageSearch;
  return import_react184.default.createElement(import_react184.default.Fragment, null, isMobile ? import_react184.default.createElement(MobileLayout, { replyType, showSearchIcon, isReactionEnabled, isMessageGroupingEnabled, allowProfileEdit, onProfileEditSuccess, currentChannel, setCurrentChannel, highlightedMessage, setHighlightedMessage, startingPoint, setStartingPoint, threadTargetMessage, setThreadTargetMessage, enableLegacyChannelModules }) : import_react184.default.createElement(DesktopLayout, { replyType, isReactionEnabled, showSearchIcon, isMessageGroupingEnabled, allowProfileEdit, onProfileEditSuccess, disableAutoSelect, currentChannel, setCurrentChannel, showThread, setShowThread, threadTargetMessage, setThreadTargetMessage, showSettings, setShowSettings, showSearch, setShowSearch, highlightedMessage, setHighlightedMessage, startingPoint, setStartingPoint, enableLegacyChannelModules }));
};
function App(props) {
  var appId = props.appId, userId = props.userId, _a3 = props.accessToken, accessToken = _a3 === void 0 ? "" : _a3, _b2 = props.customApiHost, customApiHost = _b2 === void 0 ? "" : _b2, _c = props.customWebSocketHost, customWebSocketHost = _c === void 0 ? "" : _c, breakpoint = props.breakpoint, _d = props.theme, theme = _d === void 0 ? "light" : _d, userListQuery = props.userListQuery, _e3 = props.nickname, nickname = _e3 === void 0 ? "" : _e3, _f = props.profileUrl, profileUrl = _f === void 0 ? "" : _f, dateLocale = props.dateLocale, _g2 = props.config, config = _g2 === void 0 ? {} : _g2, voiceRecord = props.voiceRecord, _h = props.isMessageGroupingEnabled, isMessageGroupingEnabled = _h === void 0 ? true : _h, colorSet = props.colorSet, stringSet2 = props.stringSet, _j = props.allowProfileEdit, allowProfileEdit = _j === void 0 ? false : _j, _k = props.disableMarkAsDelivered, disableMarkAsDelivered = _k === void 0 ? false : _k, renderUserProfile = props.renderUserProfile, onProfileEditSuccess = props.onProfileEditSuccess, _l = props.imageCompression, imageCompression = _l === void 0 ? {} : _l, _m = props.disableAutoSelect, disableAutoSelect = _m === void 0 ? false : _m, sdkInitParams = props.sdkInitParams, customExtensionParams = props.customExtensionParams, eventHandlers = props.eventHandlers, isMultipleFilesMessageEnabled = props.isMultipleFilesMessageEnabled, _o2 = props.isUserIdUsedForNickname, isUserIdUsedForNickname = _o2 === void 0 ? true : _o2, _p = props.enableLegacyChannelModules, enableLegacyChannelModules = _p === void 0 ? false : _p, uikitOptions = props.uikitOptions, _q = props.htmlTextDirection, htmlTextDirection = _q === void 0 ? "ltr" : _q, _r2 = props.forceLeftToRightMessageLayout, forceLeftToRightMessageLayout = _r2 === void 0 ? false : _r2, showSearchIcon = props.showSearchIcon, isMentionEnabled = props.isMentionEnabled, isReactionEnabled = props.isReactionEnabled, replyType = props.replyType, disableUserProfile = props.disableUserProfile, isVoiceMessageEnabled = props.isVoiceMessageEnabled, isTypingIndicatorEnabledOnChannelList = props.isTypingIndicatorEnabledOnChannelList, isMessageReceiptStatusEnabledOnChannelList = props.isMessageReceiptStatusEnabledOnChannelList;
  var _s4 = (0, import_react184.useState)(), currentChannel = _s4[0], setCurrentChannel = _s4[1];
  return import_react184.default.createElement(
    SendbirdProvider,
    { stringSet: stringSet2, appId, userId, accessToken, customApiHost, customWebSocketHost, breakpoint, theme, nickname, profileUrl, dateLocale, userListQuery, config, colorSet, disableMarkAsDelivered, renderUserProfile, imageCompression, isMultipleFilesMessageEnabled, voiceRecord, onStartDirectMessage: function(channel) {
      setCurrentChannel(channel);
    }, uikitOptions, isUserIdUsedForNickname, sdkInitParams, customExtensionParams, eventHandlers, isTypingIndicatorEnabledOnChannelList, isMessageReceiptStatusEnabledOnChannelList, replyType, showSearchIcon, disableUserProfile, isReactionEnabled, isMentionEnabled, isVoiceMessageEnabled, htmlTextDirection, forceLeftToRightMessageLayout },
    import_react184.default.createElement(AppLayout, { isMessageGroupingEnabled, allowProfileEdit, onProfileEditSuccess, disableAutoSelect, currentChannel, setCurrentChannel, enableLegacyChannelModules, isReactionEnabled, replyType, showSearchIcon })
  );
}

// node_modules/@sendbird/uikit-react/OpenChannel.js
var import_react198 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/OpenChannel/components/OpenChannelUI.js
var import_react197 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-Dil0V6Tg.js
var import_react185 = __toESM(require_react(), 1);
var shouldFetchMore = function(messageLength, maxMessages) {
  if (typeof maxMessages !== "number") {
    return true;
  }
  return maxMessages > messageLength;
};
var scrollIntoLast3 = function(initialTry, scrollRef) {
  if (initialTry === void 0) {
    initialTry = 0;
  }
  var MAX_TRIES = 10;
  var currentTry = initialTry;
  if (currentTry > MAX_TRIES) {
    return;
  }
  try {
    var scrollDOM = (scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current) || document.querySelector(".sendbird-openchannel-conversation-scroll__container__item-container");
    if (scrollDOM) {
      scrollDOM.scrollTop = scrollDOM.scrollHeight;
    }
  } catch (error) {
    setTimeout(function() {
      scrollIntoLast3(currentTry + 1, scrollRef);
    }, 500 * currentTry);
  }
};
var kFormatter2 = function(num) {
  if (Math.abs(num) > 999999) {
    return "".concat((Math.abs(num) / 1e6).toFixed(1), "M");
  }
  if (Math.abs(num) > 999) {
    return "".concat((Math.abs(num) / 1e3).toFixed(1), "K");
  }
  return "".concat(num);
};
var isOperator2 = function(openChannel, userId) {
  var operators = openChannel === null || openChannel === void 0 ? void 0 : openChannel.operators;
  if (operators.map(function(operator) {
    return operator.userId;
  }).indexOf(userId) < 0) {
    return false;
  }
  return true;
};
var isDisabledBecauseFrozen3 = function(openChannel, userId) {
  if (!openChannel)
    return false;
  var isFrozen2 = openChannel.isFrozen;
  return isFrozen2 && !isOperator2(openChannel, userId);
};
var isDisabledBecauseMuted3 = function(mutedParticipantIds, userId) {
  return mutedParticipantIds.indexOf(userId) > -1;
};
var fetchWithListQuery = function(listQuery, logger, eachQueryNextCallback) {
  var fetchList = function(query) {
    var hasNext = query.hasNext;
    if (hasNext) {
      query.next().then(function(users) {
        eachQueryNextCallback(users);
        fetchList(query);
      }).catch(function(error) {
        logger.warning("OpenChannel | FetchUserList failed", error);
      });
    } else {
      logger.info("OpenChannel | FetchUserList finished");
    }
  };
  logger.info("OpenChannel | FetchUserList start", listQuery);
  fetchList(listQuery);
};
var SET_CURRENT_CHANNEL4 = "SET_CURRENT_CHANNEL";
var SET_CHANNEL_INVALID2 = "SET_CHANNEL_INVALID";
var RESET_MESSAGES2 = "RESET_MESSAGES";
var EXIT_CURRENT_CHANNEL = "EXIT_CURRENT_CHANNEL";
var GET_PREV_MESSAGES_START = "GET_PREV_MESSAGES_START";
var GET_PREV_MESSAGES_SUCESS = "GET_PREV_MESSAGES_SUCESS";
var GET_PREV_MESSAGES_FAIL = "GET_PREV_MESSAGES_FAIL";
var SENDING_MESSAGE_FAILED = "SENDING_MESSAGE_FAILED";
var SENDING_MESSAGE_SUCCEEDED = "SENDING_MESSAGE_SUCCEEDED";
var SENDING_MESSAGE_START = "SENDING_MESSAGE_START";
var RESENDING_MESSAGE_START = "RESENDING_MESSAGE_START";
var FETCH_PARTICIPANT_LIST = "FETCH_PARTICIPANT_LIST";
var FETCH_BANNED_USER_LIST = "FETCH_BANNED_USER_LIST";
var FETCH_MUTED_USER_LIST = "FETCH_MUTED_USER_LIST";
var TRIM_MESSAGE_LIST = "TRIM_MESSAGE_LIST";
var ON_MESSAGE_RECEIVED2 = "ON_MESSAGE_RECEIVED";
var ON_MESSAGE_UPDATED2 = "ON_MESSAGE_UPDATED";
var ON_MESSAGE_DELETED2 = "ON_MESSAGE_DELETED";
var ON_MESSAGE_DELETED_BY_REQ_ID2 = "ON_MESSAGE_DELETED_BY_REQ_ID";
var ON_OPERATOR_UPDATED = "ON_OPERATOR_UPDATED";
var ON_USER_ENTERED = "ON_USER_ENTERED";
var ON_USER_EXITED = "ON_USER_EXITED";
var ON_USER_MUTED = "ON_USER_MUTED";
var ON_USER_UNMUTED = "ON_USER_UNMUTED";
var ON_USER_BANNED = "ON_USER_BANNED";
var ON_USER_UNBANNED = "ON_USER_UNBANNED";
var ON_CHANNEL_FROZEN2 = "ON_CHANNEL_FROZEN";
var ON_CHANNEL_UNFROZEN2 = "ON_CHANNEL_UNFROZEN";
var ON_CHANNEL_CHANGED2 = "ON_CHANNEL_CHANGED";
var ON_CHANNEL_DELETED2 = "ON_CHANNEL_DELETED";
var ON_META_DATA_CREATED = "ON_META_DATA_CREATED";
var ON_META_DATA_UPDATED = "ON_META_DATA_UPDATED";
var ON_META_DATA_DELETED = "ON_META_DATA_DELETED";
var ON_META_COUNTERS_CREATED = "ON_META_COUNTERS_CREATED";
var ON_META_COUNTERS_UPDATED = "ON_META_COUNTERS_UPDATED";
var ON_META_COUNTERS_DELETED = "ON_META_COUNTERS_DELETED";
var ON_MENTION_RECEIVED = "ON_MENTION_RECEIVED";
function reducer5(state, action) {
  var _a3, _b2, _c, _d, _e3, _f, _g2, _h;
  switch (action.type) {
    case RESET_MESSAGES2: {
      return __assign(__assign({}, state), { allMessages: [] });
    }
    case EXIT_CURRENT_CHANNEL: {
      if (((_a3 = action.payload) === null || _a3 === void 0 ? void 0 : _a3.url) === ((_b2 = state.currentOpenChannel) === null || _b2 === void 0 ? void 0 : _b2.url)) {
        return __assign(__assign({}, state), { currentOpenChannel: null });
      }
      return state;
    }
    case SET_CURRENT_CHANNEL4: {
      var gottenChannel = action.payload;
      var operators = gottenChannel.operators;
      if (!state.isInvalid && state.currentOpenChannel && state.currentOpenChannel.url && state.currentOpenChannel.url === gottenChannel.url) {
        return state;
      }
      return __assign(__assign({}, state), { currentOpenChannel: gottenChannel, isInvalid: false, operators, participants: operators, bannedParticipantIds: [], mutedParticipantIds: [] });
    }
    case SET_CHANNEL_INVALID2: {
      return __assign(__assign({}, state), { isInvalid: true });
    }
    case GET_PREV_MESSAGES_START: {
      return __assign(__assign({}, state), { loading: true });
    }
    case GET_PREV_MESSAGES_SUCESS:
    case GET_PREV_MESSAGES_FAIL: {
      var isFailed = action.type === GET_PREV_MESSAGES_FAIL;
      var _j = action.payload, _k = _j.currentOpenChannel, currentOpenChannel = _k === void 0 ? {} : _k, _l = _j.messages, messages = _l === void 0 ? [] : _l, hasMore = _j.hasMore, lastMessageTimestamp = _j.lastMessageTimestamp;
      var actionChannelUrl = currentOpenChannel.url;
      var receivedMessages_1 = isFailed ? [] : messages;
      var _hasMore = isFailed ? false : hasMore;
      var _lastMessageTimestamp = isFailed ? 0 : lastMessageTimestamp;
      var stateChannel = state.currentOpenChannel;
      var stateChannelUrl = stateChannel === null || stateChannel === void 0 ? void 0 : stateChannel.url;
      if (actionChannelUrl !== stateChannelUrl) {
        return state;
      }
      var filteredAllMessages = state.allMessages.filter(function(message) {
        return !receivedMessages_1.find(function(_a4) {
          var messageId = _a4.messageId;
          return compareIds(messageId, message.messageId);
        });
      });
      return __assign(__assign({}, state), { loading: false, initialized: true, hasMore: _hasMore, lastMessageTimestamp: _lastMessageTimestamp, allMessages: __spreadArray(__spreadArray([], receivedMessages_1, true), filteredAllMessages, true) });
    }
    case SENDING_MESSAGE_START: {
      var _m = action.payload, message_1 = _m.message, channel = _m.channel;
      if ((channel === null || channel === void 0 ? void 0 : channel.url) !== ((_c = state.currentOpenChannel) === null || _c === void 0 ? void 0 : _c.url) || state.allMessages.some(function(m5) {
        return m5.reqId === message_1.reqId;
      })) {
        return state;
      }
      return __assign(__assign({}, state), { allMessages: __spreadArray(__spreadArray([], state.allMessages, true), [
        message_1
      ], false) });
    }
    case SENDING_MESSAGE_SUCCEEDED: {
      var sentMessage_1 = action.payload;
      var newMessages = state.allMessages.map(function(m5) {
        return compareIds(m5.reqId, sentMessage_1.reqId) ? sentMessage_1 : m5;
      });
      return __assign(__assign({}, state), { allMessages: newMessages });
    }
    case SENDING_MESSAGE_FAILED: {
      var sentMessage_2 = action.payload;
      sentMessage_2.sendingStatus = "failed";
      if (!state.allMessages.some(function(m5) {
        return (m5 === null || m5 === void 0 ? void 0 : m5.reqId) === (sentMessage_2 === null || sentMessage_2 === void 0 ? void 0 : sentMessage_2.reqId);
      })) {
        return __assign(__assign({}, state), { allMessages: __spreadArray(__spreadArray([], state.allMessages.filter(function(m5) {
          return !compareIds(m5.reqId, sentMessage_2);
        }), true), [
          sentMessage_2
        ], false) });
      } else {
        return __assign(__assign({}, state), { allMessages: state.allMessages.map(function(m5) {
          return compareIds(m5.reqId, sentMessage_2.reqId) ? sentMessage_2 : m5;
        }) });
      }
    }
    case TRIM_MESSAGE_LIST: {
      var allMessages = state.allMessages;
      var messageLimit = (_d = action.payload) === null || _d === void 0 ? void 0 : _d.messageLimit;
      if (messageLimit && messageLimit > 0 && (allMessages === null || allMessages === void 0 ? void 0 : allMessages.length) > messageLimit) {
        var sliceAt = allMessages.length - messageLimit;
        return __assign(__assign({}, state), { allMessages: allMessages.slice(sliceAt) });
      }
      return state;
    }
    case RESENDING_MESSAGE_START: {
      var eventedChannel = action.payload.channel;
      var resentMessage_1 = action.payload.message;
      if (eventedChannel.url !== ((_e3 = state.currentOpenChannel) === null || _e3 === void 0 ? void 0 : _e3.url)) {
        return state;
      }
      return __assign(__assign({}, state), { allMessages: state.allMessages.map(function(m5) {
        return compareIds(m5.reqId, resentMessage_1.reqId) ? resentMessage_1 : m5;
      }) });
    }
    case FETCH_PARTICIPANT_LIST: {
      var eventedChannel = action.payload.channel;
      var fetchedParticipantList = action.payload.users;
      if (eventedChannel.url !== ((_f = state.currentOpenChannel) === null || _f === void 0 ? void 0 : _f.url)) {
        return state;
      }
      return __assign(__assign({}, state), { participants: __spreadArray(__spreadArray([], state.participants, true), fetchedParticipantList, true) });
    }
    case FETCH_BANNED_USER_LIST: {
      var eventedChannel = action.payload.channel;
      var fetchedBannedUserList = action.payload.users;
      if (eventedChannel.url !== ((_g2 = state.currentOpenChannel) === null || _g2 === void 0 ? void 0 : _g2.url) || !fetchedBannedUserList.every(function(user) {
        return typeof user.userId === "string";
      })) {
        return state;
      }
      return __assign(__assign({}, state), { bannedParticipantIds: __spreadArray(__spreadArray([], state.bannedParticipantIds, true), fetchedBannedUserList.map(function(user) {
        return user.userId;
      }), true) });
    }
    case FETCH_MUTED_USER_LIST: {
      var eventedChannel = action.payload.channel;
      var fetchedMutedUserList = action.payload.users;
      if (eventedChannel.url !== ((_h = state.currentOpenChannel) === null || _h === void 0 ? void 0 : _h.url) || !fetchedMutedUserList.every(function(user) {
        return typeof user.userId === "string";
      })) {
        return state;
      }
      return __assign(__assign({}, state), { mutedParticipantIds: __spreadArray(__spreadArray([], state.mutedParticipantIds, true), fetchedMutedUserList.map(function(user) {
        return user.userId;
      }), true) });
    }
    case ON_MESSAGE_RECEIVED2: {
      var eventedChannel = action.payload.channel;
      var receivedMessage = action.payload.message;
      var currentOpenChannel = state.currentOpenChannel;
      if (!compareIds(eventedChannel.url, currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.url) || !(state.allMessages.map(function(message) {
        return message.messageId;
      }).indexOf(receivedMessage.messageId) < 0)) {
        return state;
      }
      return __assign(__assign({}, state), { allMessages: __spreadArray(__spreadArray([], state.allMessages, true), [receivedMessage], false) });
    }
    case ON_MESSAGE_UPDATED2: {
      var eventedChannel = action.payload.channel;
      var updatedMessage_1 = action.payload.message;
      var currentChannel = state.currentOpenChannel;
      if (!currentChannel || currentChannel.url && currentChannel.url !== eventedChannel.url) {
        return state;
      }
      return __assign(__assign({}, state), { allMessages: state.allMessages.map(function(message) {
        return message.isIdentical(updatedMessage_1) ? updatedMessage_1 : message;
      }) });
    }
    case ON_MESSAGE_DELETED2: {
      var eventedChannel = action.payload.channel;
      var deletedMessageId_1 = action.payload.messageId;
      var currentChannel = state.currentOpenChannel;
      if (!currentChannel || currentChannel.url && currentChannel.url !== eventedChannel.url) {
        return state;
      }
      return __assign(__assign({}, state), { allMessages: state.allMessages.filter(function(message) {
        return !compareIds(message.messageId, deletedMessageId_1);
      }) });
    }
    case ON_MESSAGE_DELETED_BY_REQ_ID2: {
      return __assign(__assign({}, state), { allMessages: state.allMessages.filter(function(m5) {
        return !compareIds(m5.reqId, action.payload);
      }) });
    }
    case ON_OPERATOR_UPDATED: {
      var eventedChannel = action.payload.channel;
      var updatedOperators = action.payload.operators;
      var currentChannel = state.currentOpenChannel;
      if (!currentChannel || currentChannel.url && currentChannel.url !== eventedChannel.url) {
        return state;
      }
      return __assign(__assign({}, state), { currentOpenChannel: eventedChannel, operators: updatedOperators });
    }
    case ON_USER_ENTERED: {
      var eventedChannel = action.payload.channel;
      var enteredUser = action.payload.user;
      var currentChannel = state.currentOpenChannel;
      if (!currentChannel || currentChannel.url && currentChannel.url !== eventedChannel.url) {
        return state;
      }
      return __assign(__assign({}, state), { participants: __spreadArray(__spreadArray([], state.participants, true), [enteredUser], false) });
    }
    case ON_USER_EXITED: {
      var eventedChannel = action.payload.channel;
      var exitedUser_1 = action.payload.user;
      var currentChannel = state.currentOpenChannel;
      if (!currentChannel || currentChannel.url && currentChannel.url !== eventedChannel.url) {
        return state;
      }
      return __assign(__assign({}, state), { participants: state.participants.filter(function(participant) {
        return !compareIds(participant.userId, exitedUser_1.userId);
      }) });
    }
    case ON_USER_MUTED: {
      var eventedChannel = action.payload.channel;
      var mutedUser = action.payload.user;
      var currentChannel = state.currentOpenChannel;
      if (!currentChannel || currentChannel.url && currentChannel.url !== eventedChannel.url || state.mutedParticipantIds.indexOf(mutedUser.userId) >= 0) {
        return state;
      }
      return __assign(__assign({}, state), { mutedParticipantIds: __spreadArray(__spreadArray([], state.mutedParticipantIds, true), [mutedUser.userId], false) });
    }
    case ON_USER_UNMUTED: {
      var eventedChannel = action.payload.channel;
      var unmutedUser_1 = action.payload.user;
      var currentChannel = state.currentOpenChannel;
      if (!currentChannel || currentChannel.url && currentChannel.url !== eventedChannel.url || state.mutedParticipantIds.indexOf(unmutedUser_1.userId) < 0) {
        return state;
      }
      return __assign(__assign({}, state), { mutedParticipantIds: state.mutedParticipantIds.filter(function(userId) {
        return userId !== unmutedUser_1.userId;
      }) });
    }
    case ON_USER_BANNED: {
      var eventedChannel = action.payload.channel;
      var bannedUser = action.payload.user;
      var currentUser = action.payload.currentUser;
      var currentChannel = state.currentOpenChannel;
      if ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) === (eventedChannel === null || eventedChannel === void 0 ? void 0 : eventedChannel.url) && (bannedUser === null || bannedUser === void 0 ? void 0 : bannedUser.userId) === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.userId)) {
        return __assign(__assign({}, state), { currentOpenChannel: null });
      } else if ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) === (eventedChannel === null || eventedChannel === void 0 ? void 0 : eventedChannel.url)) {
        return __assign(__assign({}, state), { bannedParticipantIds: __spreadArray(__spreadArray([], state.bannedParticipantIds, true), [bannedUser.userId], false) });
      }
      return state;
    }
    case ON_USER_UNBANNED: {
      var eventedChannel = action.payload.channel;
      var unbannedUser_1 = action.payload.user;
      var currentChannel = state.currentOpenChannel;
      if ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) === (eventedChannel === null || eventedChannel === void 0 ? void 0 : eventedChannel.url)) {
        return __assign(__assign({}, state), { bannedParticipantIds: state.bannedParticipantIds.filter(function(userId) {
          return userId !== unbannedUser_1.userId;
        }) });
      }
      return state;
    }
    case ON_CHANNEL_FROZEN2: {
      var frozenChannel = action.payload;
      var currentChannel = state.currentOpenChannel;
      if (!currentChannel || currentChannel.url && currentChannel.url !== frozenChannel.url) {
        return state;
      }
      return __assign(__assign({}, state), { frozen: true });
    }
    case ON_CHANNEL_UNFROZEN2: {
      var unfrozenChannel = action.payload;
      var currentChannel = state.currentOpenChannel;
      if (!currentChannel || currentChannel.url && currentChannel.url !== unfrozenChannel.url) {
        return state;
      }
      return __assign(__assign({}, state), { frozen: false });
    }
    case ON_CHANNEL_CHANGED2: {
      var changedChannel = action.payload;
      var currentChannel = state.currentOpenChannel;
      if (!currentChannel || currentChannel.url && currentChannel.url !== changedChannel.url) {
        return state;
      }
      return __assign(__assign({}, state), { currentOpenChannel: changedChannel });
    }
    case ON_CHANNEL_DELETED2: {
      var deletedChannelUrl = action.payload;
      var currentChannel = state === null || state === void 0 ? void 0 : state.currentOpenChannel;
      if ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) === deletedChannelUrl) {
        return __assign(__assign({}, state), { currentOpenChannel: null });
      }
      return state;
    }
    case ON_META_DATA_CREATED: {
      return state;
    }
    case ON_META_DATA_UPDATED: {
      return state;
    }
    case ON_META_DATA_DELETED: {
      return state;
    }
    case ON_META_COUNTERS_CREATED: {
      return state;
    }
    case ON_META_COUNTERS_UPDATED: {
      return state;
    }
    case ON_META_COUNTERS_DELETED: {
      return state;
    }
    case ON_MENTION_RECEIVED: {
      return state;
    }
    default:
      return state;
  }
}
var initialState6 = {
  allMessages: [],
  loading: false,
  initialized: false,
  currentOpenChannel: null,
  isInvalid: false,
  hasMore: false,
  lastMessageTimestamp: 0,
  frozen: false,
  operators: [],
  participants: [],
  bannedParticipantIds: [],
  mutedParticipantIds: []
};
function useSetChannel2(_a3, _b2) {
  var channelUrl = _a3.channelUrl, sdkInit = _a3.sdkInit, fetchingParticipants = _a3.fetchingParticipants, userId = _a3.userId, currentOpenChannel = _a3.currentOpenChannel;
  var sdk = _b2.sdk, logger = _b2.logger, messagesDispatcher = _b2.messagesDispatcher;
  (0, import_react185.useEffect)(function() {
    var _a4;
    if (channelUrl && sdkInit && (sdk === null || sdk === void 0 ? void 0 : sdk.openChannel)) {
      if (currentOpenChannel && (currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.exit)) {
        (_a4 = currentOpenChannel.exit) === null || _a4 === void 0 ? void 0 : _a4.call(currentOpenChannel).then(function() {
          logger.info("OpenChannel | useSetChannel: Exit from the previous open channel", currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.url);
          messagesDispatcher({
            type: EXIT_CURRENT_CHANNEL,
            payload: currentOpenChannel
          });
        });
      }
      logger.info("OpenChannel | useSetChannel: Fetching channel", channelUrl);
      sdk.openChannel.getChannel(channelUrl).then(function(openChannel) {
        logger.info("OpenChannel | useSetChannel: Succeeded to fetch channel", openChannel);
        messagesDispatcher({
          type: SET_CURRENT_CHANNEL4,
          payload: openChannel
        });
        openChannel.enter().then(function() {
          if (openChannel.isOperator(userId)) {
            var bannedParticipantListQuery = openChannel.createBannedUserListQuery();
            var mutedParticipantListQuery = openChannel.createMutedUserListQuery();
            fetchWithListQuery(bannedParticipantListQuery, logger, function(users) {
              messagesDispatcher({
                type: FETCH_BANNED_USER_LIST,
                payload: {
                  channel: openChannel,
                  users
                }
              });
            });
            fetchWithListQuery(mutedParticipantListQuery, logger, function(users) {
              messagesDispatcher({
                type: FETCH_MUTED_USER_LIST,
                payload: {
                  channel: openChannel,
                  users
                }
              });
            });
          } else {
            openChannel.getMyMutedInfo().then(function(mutedInfo) {
              if (mutedInfo === null || mutedInfo === void 0 ? void 0 : mutedInfo.isMuted) {
                messagesDispatcher({
                  type: FETCH_MUTED_USER_LIST,
                  payload: {
                    channel: openChannel,
                    users: [sdk === null || sdk === void 0 ? void 0 : sdk.currentUser]
                  }
                });
              }
            });
          }
          if (fetchingParticipants) {
            var participantListQuery = openChannel.createParticipantListQuery({
              limit: openChannel.participantCount
            });
            fetchWithListQuery(participantListQuery, logger, function(users) {
              messagesDispatcher({
                type: FETCH_PARTICIPANT_LIST,
                payload: {
                  channel: openChannel,
                  users
                }
              });
            });
          }
        }).catch(function(error) {
          logger.warning("OpenChannel | useSetChannel: Failed to enter channel", { channelUrl, error });
          messagesDispatcher({
            type: SET_CHANNEL_INVALID2,
            payload: null
          });
        });
      }).catch(function(error) {
        logger.warning("OpenChannel | useSetChannel: Failed to fetch channel", { channelUrl, error });
        messagesDispatcher({
          type: SET_CHANNEL_INVALID2,
          payload: null
        });
      });
    }
  }, [channelUrl, sdkInit, fetchingParticipants]);
}
function useHandleChannelEvents3(_a3, _b2) {
  var currentOpenChannel = _a3.currentOpenChannel, checkScrollBottom = _a3.checkScrollBottom;
  var sdk = _b2.sdk, logger = _b2.logger, messagesDispatcher = _b2.messagesDispatcher, scrollRef = _b2.scrollRef;
  (0, import_react185.useEffect)(function() {
    var _a4, _b3;
    var messageReceiverId = uuidv4();
    if (currentOpenChannel && currentOpenChannel.url && ((_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.openChannel) === null || _a4 === void 0 ? void 0 : _a4.addOpenChannelHandler)) {
      logger.info("OpenChannel | useHandleChannelEvents: Setup evnet handler", messageReceiverId);
      var channelHandlerParams = {
        onMessageReceived: function(channel, message) {
          var scrollToEnd = checkScrollBottom();
          var channelUrl = channel === null || channel === void 0 ? void 0 : channel.url;
          logger.info("OpenChannel | useHandleChannelEvents: onMessageReceived", { channelUrl, message });
          messagesDispatcher({
            type: ON_MESSAGE_RECEIVED2,
            payload: { channel, message }
          });
          if (scrollToEnd) {
            try {
              setTimeout(function() {
                scrollIntoLast3(0, scrollRef);
              });
            } catch (error) {
              logger.warning("OpenChannel | onMessageReceived | scroll to end failed");
            }
          }
        },
        onMessageUpdated: function(channel, message) {
          var channelUrl = channel === null || channel === void 0 ? void 0 : channel.url;
          logger.info("OpenChannel | useHandleChannelEvents: onMessageUpdated", { channelUrl, message });
          messagesDispatcher({
            type: ON_MESSAGE_UPDATED2,
            payload: { channel, message }
          });
        },
        onMessageDeleted: function(channel, messageId) {
          var channelUrl = channel === null || channel === void 0 ? void 0 : channel.url;
          logger.info("OpenChannel | useHandleChannelEvents: onMessageDeleted", { channelUrl, messageId });
          messagesDispatcher({
            type: ON_MESSAGE_DELETED2,
            payload: { channel, messageId }
          });
        },
        onOperatorUpdated: function(channel, operators) {
          var channelUrl = channel === null || channel === void 0 ? void 0 : channel.url;
          logger.info("OpenChannel | useHandleChannelEvents: onOperatorUpdated", { channelUrl, operators });
          messagesDispatcher({
            type: ON_OPERATOR_UPDATED,
            payload: { channel, operators }
          });
        },
        onUserEntered: function(channel, user) {
          var channelUrl = channel === null || channel === void 0 ? void 0 : channel.url;
          logger.info("OpenChannel | useHandleChannelEvents: onUserEntered", { channelUrl, user });
          messagesDispatcher({
            type: ON_USER_ENTERED,
            payload: { channel, user }
          });
        },
        onUserExited: function(channel, user) {
          var channelUrl = channel === null || channel === void 0 ? void 0 : channel.url;
          logger.info("OpenChannel | useHandleChannelEvents: onUserExited", { channelUrl, user });
          messagesDispatcher({
            type: ON_USER_EXITED,
            payload: { channel, user }
          });
        },
        onUserMuted: function(channel, user) {
          var channelUrl = channel === null || channel === void 0 ? void 0 : channel.url;
          logger.info("OpenChannel | useHandleChannelEvents: onUserMuted", { channelUrl, user });
          messagesDispatcher({
            type: ON_USER_MUTED,
            payload: { channel, user }
          });
        },
        onUserUnmuted: function(channel, user) {
          var channelUrl = channel === null || channel === void 0 ? void 0 : channel.url;
          logger.info("OpenChannel | useHandleChannelEvents: onUserUnmuted", { channelUrl, user });
          messagesDispatcher({
            type: ON_USER_UNMUTED,
            payload: { channel, user }
          });
        },
        onUserBanned: function(channel, user) {
          var channelUrl = channel === null || channel === void 0 ? void 0 : channel.url;
          logger.info("OpenChannel | useHandleChannelEvents: onUserBanned", { channelUrl, user });
          messagesDispatcher({
            type: ON_USER_BANNED,
            payload: { channel, user, currentUser: sdk === null || sdk === void 0 ? void 0 : sdk.currentUser }
          });
        },
        onUserUnbanned: function(channel, user) {
          var channelUrl = channel === null || channel === void 0 ? void 0 : channel.url;
          logger.info("OpenChannel | useHandleChannelEvents: onUserUnbanned", { channelUrl, user });
          messagesDispatcher({
            type: ON_USER_UNBANNED,
            payload: { channel, user }
          });
        },
        onChannelFrozen: function(channel) {
          logger.info("OpenChannel | useHandleChannelEvents: onChannelFrozen", channel);
          messagesDispatcher({
            type: ON_CHANNEL_FROZEN2,
            payload: channel
          });
        },
        onChannelUnfrozen: function(channel) {
          logger.info("OpenChannel | useHandleChannelEvents: onChannelUnfrozen", channel);
          messagesDispatcher({
            type: ON_CHANNEL_UNFROZEN2,
            payload: channel
          });
        },
        onChannelChanged: function(channel) {
          logger.info("OpenChannel | useHandleChannelEvents: onChannelChanged", channel);
          messagesDispatcher({
            type: ON_CHANNEL_CHANGED2,
            payload: channel
          });
        },
        onMetaDataCreated: function(channel, metaData) {
          var channelUrl = channel === null || channel === void 0 ? void 0 : channel.url;
          logger.info("OpenChannel | useHandleChannelEvents: onMetaDataCreated", { channelUrl, metaData });
          messagesDispatcher({
            type: ON_META_DATA_CREATED,
            payload: { channel, metaData }
          });
        },
        onMetaDataUpdated: function(channel, metaData) {
          var channelUrl = channel === null || channel === void 0 ? void 0 : channel.url;
          logger.info("OpenChannel | useHandleChannelEvents: onMetaDataUpdated", { channelUrl, metaData });
          messagesDispatcher({
            type: ON_META_DATA_UPDATED,
            payload: { channel, metaData }
          });
        },
        onMetaDataDeleted: function(channel, metaDataKeys) {
          var channelUrl = channel === null || channel === void 0 ? void 0 : channel.url;
          logger.info("OpenChannel | useHandleChannelEvents: onMetaDataDeleted", { channelUrl, metaDataKeys });
          messagesDispatcher({
            type: ON_META_DATA_DELETED,
            payload: { channel, metaDataKeys }
          });
        },
        onMetaCounterCreated: function(channel, metaCounter) {
          var channelUrl = channel === null || channel === void 0 ? void 0 : channel.url;
          logger.info("OpenChannel | useHandleChannelEvents: onMetaCountersCreated", { channelUrl, metaCounter });
          messagesDispatcher({
            type: ON_META_COUNTERS_CREATED,
            payload: { channel, metaCounter }
          });
        },
        onMetaCounterUpdated: function(channel, metaCounter) {
          var channelUrl = channel === null || channel === void 0 ? void 0 : channel.url;
          logger.info("OpenChannel | useHandleChannelEvents: onMetaCountersUpdated", { channelUrl, metaCounter });
          messagesDispatcher({
            type: ON_META_COUNTERS_UPDATED,
            payload: { channel, metaCounter }
          });
        },
        onMetaCounterDeleted: function(channel, metaCounterKeys) {
          var channelUrl = channel === null || channel === void 0 ? void 0 : channel.url;
          logger.info("OpenChannel | useHandleChannelEvents: onMetaCountersDeleted", { channelUrl, metaCounterKeys });
          messagesDispatcher({
            type: ON_META_COUNTERS_DELETED,
            payload: { channel, metaCounterKeys }
          });
        },
        onMentionReceived: function(channel, message) {
          var channelUrl = channel === null || channel === void 0 ? void 0 : channel.url;
          logger.info("OpenChannel | useHandleChannelEvents: onMentionReceived", { channelUrl, message });
          messagesDispatcher({
            type: ON_MENTION_RECEIVED,
            payload: { channel, message }
          });
        },
        onChannelDeleted: function(channelUrl, channelType) {
          if (channelType === q.OPEN && (currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.url) === channelUrl) {
            messagesDispatcher({
              type: ON_CHANNEL_DELETED2,
              payload: channelUrl
            });
          }
        }
      };
      var ChannelHandler = new Ae2(channelHandlerParams);
      (_b3 = sdk === null || sdk === void 0 ? void 0 : sdk.openChannel) === null || _b3 === void 0 ? void 0 : _b3.addOpenChannelHandler(messageReceiverId, ChannelHandler);
    }
    return function() {
      var _a5;
      if ((_a5 = sdk === null || sdk === void 0 ? void 0 : sdk.openChannel) === null || _a5 === void 0 ? void 0 : _a5.removeOpenChannelHandler) {
        logger.info("OpenChannel | useHandleChannelEvents: Removing message receiver handler", messageReceiverId);
        sdk.openChannel.removeOpenChannelHandler(messageReceiverId);
      }
    };
  }, [currentOpenChannel]);
}
function useInitialMessagesFetch2(_a3, _b2) {
  var currentOpenChannel = _a3.currentOpenChannel, userFilledMessageListParams = _a3.userFilledMessageListParams;
  var logger = _b2.logger, messagesDispatcher = _b2.messagesDispatcher, scrollRef = _b2.scrollRef;
  (0, import_react185.useEffect)(function() {
    logger.info("OpenChannel | useInitialMessagesFetch: Setup started", currentOpenChannel);
    messagesDispatcher({
      type: RESET_MESSAGES2,
      payload: null
    });
    if (currentOpenChannel && currentOpenChannel.getMessagesByTimestamp) {
      var messageListParams_1 = {
        nextResultSize: 0,
        prevResultSize: 30,
        isInclusive: true,
        includeReactions: false
      };
      if (userFilledMessageListParams) {
        Object.keys(userFilledMessageListParams).forEach(function(key) {
          messageListParams_1[key] = userFilledMessageListParams[key];
        });
        logger.info("OpenChannel | useInitialMessagesFetch: Used customizedMessageListParams");
      }
      logger.info("OpenChannel | useInitialMessagesFetch: Fetching messages", { currentOpenChannel, messageListParams: messageListParams_1 });
      messagesDispatcher({
        type: GET_PREV_MESSAGES_START,
        payload: null
      });
      currentOpenChannel.getMessagesByTimestamp((/* @__PURE__ */ new Date()).getTime(), messageListParams_1).then(function(messages) {
        logger.info("OpenChannel | useInitialMessagesFetch: Fetching messages succeeded", messages);
        var hasMore = messages && messages.length > 0;
        var lastMessageTimestamp = hasMore ? messages[0].createdAt : null;
        messagesDispatcher({
          type: GET_PREV_MESSAGES_SUCESS,
          payload: {
            currentOpenChannel,
            messages,
            hasMore,
            lastMessageTimestamp
          }
        });
        setTimeout(function() {
          scrollIntoLast3(0, scrollRef);
        });
      }).catch(function(error) {
        logger.error("OpenChannel | useInitialMessagesFetch: Fetching messages failed", error);
        messagesDispatcher({
          type: GET_PREV_MESSAGES_FAIL,
          payload: {
            currentOpenChannel,
            messages: [],
            hasMore: false,
            lastMessageTimestamp: 0
          }
        });
      });
    }
  }, [currentOpenChannel, userFilledMessageListParams]);
}
function useScrollCallback3(_a3, _b2) {
  var currentOpenChannel = _a3.currentOpenChannel, lastMessageTimestamp = _a3.lastMessageTimestamp, fetchMore = _a3.fetchMore;
  var sdk = _b2.sdk, logger = _b2.logger, messagesDispatcher = _b2.messagesDispatcher, hasMore = _b2.hasMore, userFilledMessageListParams = _b2.userFilledMessageListParams;
  return (0, import_react185.useCallback)(function(callback) {
    if (fetchMore && hasMore) {
      logger.info("OpenChannel | useScrollCallback: start");
      var messageListParams_1 = {
        prevResultSize: 30,
        includeReactions: false,
        nextResultSize: 0
      };
      if (userFilledMessageListParams) {
        Object.keys(userFilledMessageListParams).forEach(function(key) {
          messageListParams_1[key] = userFilledMessageListParams[key];
        });
        logger.info("OpenChannel | useScrollCallback: Used userFilledMessageListParams", userFilledMessageListParams);
      }
      logger.info("OpenChannel | useScrollCallback: Fetching messages", { currentOpenChannel, messageListParams: messageListParams_1 });
      currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.getMessagesByTimestamp(lastMessageTimestamp || (/* @__PURE__ */ new Date()).getTime(), messageListParams_1).then(function(messages) {
        logger.info("OpenChannel | useScrollCallback: Fetching messages succeeded", messages);
        var hasMore2 = messages && messages.length > 0;
        var lastMessageTimestamp2 = hasMore2 ? messages[0].createdAt : null;
        messagesDispatcher({
          type: GET_PREV_MESSAGES_SUCESS,
          payload: {
            currentOpenChannel,
            messages,
            hasMore: hasMore2,
            lastMessageTimestamp: lastMessageTimestamp2
          }
        });
        setTimeout(function() {
          callback();
        });
      }).catch(function(error) {
        logger.error("OpenChannel | useScrollCallback: Fetching messages failed", error);
        messagesDispatcher({
          type: GET_PREV_MESSAGES_FAIL,
          payload: {
            currentOpenChannel,
            messages: [],
            hasMore: false,
            lastMessageTimestamp: 0
          }
        });
      });
    }
  }, [currentOpenChannel, lastMessageTimestamp, fetchMore, sdk]);
}
function useCheckScrollBottom(_a3, _b2) {
  var conversationScrollRef = _a3.conversationScrollRef;
  var logger = _b2.logger;
  return (0, import_react185.useCallback)(function() {
    var isBottom = true;
    if (conversationScrollRef && (conversationScrollRef === null || conversationScrollRef === void 0 ? void 0 : conversationScrollRef.current)) {
      try {
        var conversationScroll = conversationScrollRef.current;
        isBottom = conversationScroll.scrollHeight <= conversationScroll.scrollTop + conversationScroll.clientHeight;
      } catch (error) {
        logger.error("OpenChannel | useCheckScrollBottom", error);
      }
    }
    return isBottom;
  }, [conversationScrollRef]);
}
function useSendMessageCallback2(_a3, _b2) {
  var currentOpenChannel = _a3.currentOpenChannel, onBeforeSendUserMessage = _a3.onBeforeSendUserMessage, messageInputRef = _a3.messageInputRef;
  var sdk = _b2.sdk, logger = _b2.logger, messagesDispatcher = _b2.messagesDispatcher, scrollRef = _b2.scrollRef;
  return (0, import_react185.useCallback)(function() {
    var _a4;
    if (sdk) {
      var text2 = (_a4 = messageInputRef.current) === null || _a4 === void 0 ? void 0 : _a4.innerText;
      var createParamsDefault = function(txt) {
        var message = txt;
        var params2 = {
          message
        };
        return params2;
      };
      var createCustomParams = onBeforeSendUserMessage && typeof onBeforeSendUserMessage === "function";
      if (createCustomParams) {
        logger.info("OpenChannel | useSendMessageCallback: Creating params using onBeforeSendUserMessage", onBeforeSendUserMessage);
      }
      var params = onBeforeSendUserMessage ? onBeforeSendUserMessage(text2 !== null && text2 !== void 0 ? text2 : "") : createParamsDefault(text2 !== null && text2 !== void 0 ? text2 : "");
      logger.info("OpenChannel | useSendMessageCallback: Sending message has started", params);
      var pendingMsg_1;
      currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.sendUserMessage(params).onPending(function(pendingMessage) {
        messagesDispatcher({
          type: SENDING_MESSAGE_START,
          payload: {
            message: pendingMessage,
            channel: currentOpenChannel
          }
        });
        pendingMsg_1 = pendingMessage;
        setTimeout(function() {
          return scrollIntoLast3(0, scrollRef);
        });
      }).onSucceeded(function(message) {
        logger.info("OpenChannel | useSendMessageCallback: Sending message succeeded", message);
        messagesDispatcher({
          type: SENDING_MESSAGE_SUCCEEDED,
          payload: message
        });
      }).onFailed(function(error) {
        logger.warning("OpenChannel | useSendMessageCallback: Sending message failed", error);
        messagesDispatcher({
          type: SENDING_MESSAGE_FAILED,
          payload: pendingMsg_1
        });
        if ((error === null || error === void 0 ? void 0 : error.code) === 900041) {
          messagesDispatcher({
            type: ON_USER_MUTED,
            payload: {
              channel: currentOpenChannel,
              user: sdk.currentUser
            }
          });
        }
      });
    }
  }, [currentOpenChannel, onBeforeSendUserMessage, messageInputRef]);
}
function useFileUploadCallback(_a3, _b2) {
  var _this = this;
  var currentOpenChannel = _a3.currentOpenChannel, _c = _a3.imageCompression, imageCompression = _c === void 0 ? {} : _c, onBeforeSendFileMessage = _a3.onBeforeSendFileMessage;
  var sdk = _b2.sdk, logger = _b2.logger, messagesDispatcher = _b2.messagesDispatcher, scrollRef = _b2.scrollRef;
  var stringSet2 = useLocalization().stringSet;
  var openModal = useGlobalModalContext().openModal;
  var config = useSendbirdStateContext().config;
  var uikitUploadSizeLimit = config.uikitUploadSizeLimit;
  return (0, import_react185.useCallback)(function(files) {
    return __awaiter(_this, void 0, void 0, function() {
      var file_1, createCustomParams, createParamsDefault, compressedFiles, compressedFile, params;
      return __generator(this, function(_a4) {
        switch (_a4.label) {
          case 0:
            if (!sdk) return [3, 2];
            file_1 = Array.isArray(files) ? files[0] : files;
            createCustomParams = onBeforeSendFileMessage && typeof onBeforeSendFileMessage === "function";
            createParamsDefault = function(file) {
              var params2 = {};
              params2.file = file;
              return params2;
            };
            if (file_1.size > uikitUploadSizeLimit) {
              logger.info("OpenChannel | useFileUploadCallback: Cannot upload file size exceeding ".concat(uikitUploadSizeLimit));
              openModal({
                modalProps: {
                  titleText: stringSet2.FILE_UPLOAD_NOTIFICATION__SIZE_LIMIT.replace("%d", "".concat(Math.floor(uikitUploadSizeLimit / ONE_MiB))),
                  hideFooter: true
                },
                childElement: function(_a5) {
                  var closeModal = _a5.closeModal;
                  return import_react185.default.createElement(ModalFooter, { type: ButtonTypes.PRIMARY, submitText: stringSet2.BUTTON__OK, hideCancelButton: true, onCancel: closeModal, onSubmit: closeModal });
                }
              });
              return [
                2
                /*return*/
              ];
            }
            return [4, compressImages({
              files: [file_1],
              imageCompression,
              logger
            })];
          case 1:
            compressedFiles = _a4.sent().compressedFiles;
            compressedFile = compressedFiles[0];
            if (createCustomParams) {
              logger.info("OpenChannel | useFileUploadCallback: Creating params using onBeforeSendFileMessage", onBeforeSendFileMessage);
            }
            params = onBeforeSendFileMessage ? onBeforeSendFileMessage(compressedFile) : createParamsDefault(compressedFile);
            logger.info("OpenChannel | useFileUploadCallback: Uploading file message start", params);
            currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.sendFileMessage(params).onPending(function(pendingMessage) {
              messagesDispatcher({
                type: SENDING_MESSAGE_START,
                payload: {
                  // TODO: remove data pollution
                  message: __assign(__assign({}, pendingMessage), {
                    url: URL.createObjectURL(file_1),
                    // pending thumbnail message seems to be failed
                    requestState: "pending",
                    isUserMessage: pendingMessage.isUserMessage,
                    isFileMessage: pendingMessage.isFileMessage,
                    isAdminMessage: pendingMessage.isAdminMessage,
                    isMultipleFilesMessage: pendingMessage.isMultipleFilesMessage
                  }),
                  channel: currentOpenChannel
                }
              });
              setTimeout(function() {
                return scrollIntoLast3(0, scrollRef);
              });
            }).onSucceeded(function(message) {
              logger.info("OpenChannel | useFileUploadCallback: Sending message succeeded", message);
              messagesDispatcher({
                type: SENDING_MESSAGE_SUCCEEDED,
                payload: message
              });
            }).onFailed(function(error, message) {
              logger.error("OpenChannel | useFileUploadCallback: Sending file message failed", { message, error });
              message.localUrl = URL.createObjectURL(file_1);
              message.file = file_1;
              messagesDispatcher({
                type: SENDING_MESSAGE_FAILED,
                payload: message
              });
            });
            _a4.label = 2;
          case 2:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [currentOpenChannel, onBeforeSendFileMessage, imageCompression]);
}
function useUpdateMessageCallback3(_a3, _b2) {
  var currentOpenChannel = _a3.currentOpenChannel, onBeforeSendUserMessage = _a3.onBeforeSendUserMessage;
  var logger = _b2.logger, messagesDispatcher = _b2.messagesDispatcher;
  return (0, import_react185.useCallback)(function(messageId, text2, callback) {
    var createParamsDefault = function(txt) {
      return {
        message: txt
      };
    };
    if (onBeforeSendUserMessage && typeof onBeforeSendUserMessage === "function") {
      logger.info("OpenChannel | useUpdateMessageCallback: Creating params using onBeforeUpdateUserMessage");
    }
    var params = onBeforeSendUserMessage ? onBeforeSendUserMessage(text2) : createParamsDefault(text2);
    currentOpenChannel.updateUserMessage(messageId, params).then(function(message) {
      if (callback) {
        callback();
      }
      logger.info("OpenChannel | useUpdateMessageCallback: Updating message succeeded", { message, params });
      messagesDispatcher({
        type: ON_MESSAGE_UPDATED2,
        payload: {
          channel: currentOpenChannel,
          message
        }
      });
    });
  }, [currentOpenChannel, onBeforeSendUserMessage]);
}
function useDeleteMessageCallback3(_a3, _b2) {
  var currentOpenChannel = _a3.currentOpenChannel;
  var logger = _b2.logger, messagesDispatcher = _b2.messagesDispatcher;
  return (0, import_react185.useCallback)(function(message, callback) {
    logger.info("OpenChannel | useDeleteMessageCallback: Deleting message", message);
    var sendingStatus = message.sendingStatus;
    logger.info("OpenChannel | useDeleteMessageCallback: Deleting message requestState", sendingStatus);
    if (sendingStatus === "failed" || sendingStatus === "pending") {
      logger.info("OpenChannel | useDeleteMessageCallback: Deleted message from local", message);
      messagesDispatcher({
        type: ON_MESSAGE_DELETED_BY_REQ_ID2,
        payload: message.reqId
      });
      if (callback) {
        callback();
      }
    } else {
      if (!(message.messageType === "file" || message.messageType === "user")) {
        return;
      }
      var messageToDelete = message;
      currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.deleteMessage(messageToDelete).then(function() {
        logger.info("OpenChannel | useDeleteMessageCallback: Deleting message on server", sendingStatus);
        if (callback) {
          callback();
        }
        logger.info("OpenChannel | useDeleteMessageCallback: Deleting message succeeded", message);
        messagesDispatcher({
          type: ON_MESSAGE_DELETED2,
          payload: {
            channel: currentOpenChannel,
            messageId: message.messageId
          }
        });
      }).catch(function(error) {
        logger.warning("OpenChannel | useDeleteMessageCallback: Deleting message failed", error);
      });
    }
  }, [currentOpenChannel]);
}
function useResendMessageCallback3(_a3, _b2) {
  var currentOpenChannel = _a3.currentOpenChannel;
  var logger = _b2.logger, messagesDispatcher = _b2.messagesDispatcher;
  return (0, import_react185.useCallback)(function(failedMessage) {
    logger.info("OpenChannel | useResendMessageCallback: Resending message has started", failedMessage);
    if (typeof (failedMessage === null || failedMessage === void 0 ? void 0 : failedMessage.isResendable) === "boolean" && failedMessage.isResendable) {
      if (failedMessage.isUserMessage()) {
        currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.resendMessage(failedMessage).onPending(function(message) {
          messagesDispatcher({
            type: RESENDING_MESSAGE_START,
            payload: {
              channel: currentOpenChannel,
              message
            }
          });
        }).onSucceeded(function(message) {
          logger.info("OpenChannel | useResendMessageCallback: Reseding message succeeded", message);
          messagesDispatcher({
            type: SENDING_MESSAGE_SUCCEEDED,
            payload: message
          });
        }).onFailed(function(error, message) {
          logger.warning("OpenChannel | useResendMessageCallback: Resending message failed", error);
          messagesDispatcher({
            type: SENDING_MESSAGE_FAILED,
            payload: message
          });
        });
      }
      if (failedMessage.isFileMessage()) {
        currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.resendMessage(failedMessage).onPending(function(message) {
          messagesDispatcher({
            type: RESENDING_MESSAGE_START,
            payload: {
              channel: currentOpenChannel,
              message
            }
          });
        }).onSucceeded(function(message) {
          logger.info("OpenChannel | useResendMessageCallback: Resending file message succeeded", message);
          messagesDispatcher({
            type: SENDING_MESSAGE_SUCCEEDED,
            payload: message
          });
        }).onFailed(function(error, message) {
          logger.warning("OpenChannel | useResendMessageCallback: Resending file message failed", error);
          messagesDispatcher({
            type: SENDING_MESSAGE_FAILED,
            payload: message
          });
        });
      }
    } else {
      console.error("OpenChannel | useResendMessageCallback: Message is not resendable");
      logger.warning("OpenChannel | useResendMessageCallback: Message is not resendable", failedMessage);
    }
  }, [currentOpenChannel]);
}
var THROTTLE_TIMER = 5e3;
function useTrimMessageList(_a3, _b2) {
  var messagesLength = _a3.messagesLength, messageLimit = _a3.messageLimit;
  var messagesDispatcher = _b2.messagesDispatcher, logger = _b2.logger;
  var _c = (0, import_react185.useState)(false), inProgress = _c[0], setInProgress = _c[1];
  (0, import_react185.useEffect)(function() {
    if (inProgress) {
      return;
    }
    if (typeof messagesLength === "number" && typeof messageLimit === "number" && messagesLength > messageLimit) {
      logger.info("Trimming MessageList");
      messagesDispatcher({
        type: TRIM_MESSAGE_LIST,
        payload: { messageLimit }
      });
    }
    setInProgress(true);
    setTimeout(function() {
      setInProgress(false);
    }, THROTTLE_TIMER);
  }, [messagesLength, messageLimit]);
}
var OpenChannelContext = import_react185.default.createContext(null);
var OpenChannelProvider = function(props) {
  var _a3, _b2, _c, _d, _e3, _f, _g2;
  var channelUrl = props.channelUrl, children = props.children, _h = props.isMessageGroupingEnabled, isMessageGroupingEnabled = _h === void 0 ? true : _h, queries = props.queries, onBeforeSendUserMessage = props.onBeforeSendUserMessage, messageLimit = props.messageLimit, onBeforeSendFileMessage = props.onBeforeSendFileMessage, onChatHeaderActionClick = props.onChatHeaderActionClick, onBackClick = props.onBackClick, disableUserProfile = props.disableUserProfile, renderUserProfile = props.renderUserProfile;
  var fetchingParticipants = false;
  var globalStore = useSendbirdStateContext();
  var sdk = (_b2 = (_a3 = globalStore === null || globalStore === void 0 ? void 0 : globalStore.stores) === null || _a3 === void 0 ? void 0 : _a3.sdkStore) === null || _b2 === void 0 ? void 0 : _b2.sdk;
  var sdkInit = (_d = (_c = globalStore === null || globalStore === void 0 ? void 0 : globalStore.stores) === null || _c === void 0 ? void 0 : _c.sdkStore) === null || _d === void 0 ? void 0 : _d.initialized;
  var user = (_f = (_e3 = globalStore === null || globalStore === void 0 ? void 0 : globalStore.stores) === null || _e3 === void 0 ? void 0 : _e3.userStore) === null || _f === void 0 ? void 0 : _f.user;
  var config = globalStore === null || globalStore === void 0 ? void 0 : globalStore.config;
  var userId = config.userId, isOnline = config.isOnline, logger = config.logger, pubSub = config.pubSub, imageCompression = config.imageCompression;
  var _j = (0, import_react185.useReducer)(reducer5, initialState6), messagesStore = _j[0], messagesDispatcher = _j[1];
  var allMessages = messagesStore.allMessages, loading = messagesStore.loading, initialized = messagesStore.initialized, currentOpenChannel = messagesStore.currentOpenChannel, isInvalid = messagesStore.isInvalid, hasMore = messagesStore.hasMore, lastMessageTimestamp = messagesStore.lastMessageTimestamp, operators = messagesStore.operators, bannedParticipantIds = messagesStore.bannedParticipantIds, mutedParticipantIds = messagesStore.mutedParticipantIds;
  var messageInputRef = (0, import_react185.useRef)(null);
  var conversationScrollRef = (0, import_react185.useRef)(null);
  var userFilledMessageListParams = queries === null || queries === void 0 ? void 0 : queries.messageListParams;
  var disabled = !initialized || !isOnline || isDisabledBecauseFrozen3(currentOpenChannel, userId) || isDisabledBecauseMuted3(mutedParticipantIds, userId);
  var amIBanned = (0, import_react185.useMemo)(function() {
    return bannedParticipantIds.indexOf(user.userId) >= 0;
  }, [channelUrl, bannedParticipantIds, user]);
  var amIMuted = (0, import_react185.useMemo)(function() {
    return mutedParticipantIds.indexOf(user.userId) >= 0;
  }, [channelUrl, mutedParticipantIds, user]);
  var amIOperator = (0, import_react185.useMemo)(function() {
    return operators.map(function(operator) {
      return operator.userId;
    }).indexOf(user.userId) >= 0;
  }, [channelUrl, operators, user]);
  useSetChannel2({ channelUrl, sdkInit, fetchingParticipants, userId, currentOpenChannel }, { sdk, logger, messagesDispatcher });
  var checkScrollBottom = useCheckScrollBottom({ conversationScrollRef }, { logger });
  useHandleChannelEvents3({ currentOpenChannel, checkScrollBottom }, { sdk, logger, messagesDispatcher, scrollRef: conversationScrollRef });
  useInitialMessagesFetch2({ currentOpenChannel, userFilledMessageListParams }, { logger, messagesDispatcher, scrollRef: conversationScrollRef });
  var fetchMore = shouldFetchMore(allMessages === null || allMessages === void 0 ? void 0 : allMessages.length, messageLimit);
  var onScroll = useScrollCallback3({ currentOpenChannel, lastMessageTimestamp, fetchMore }, { sdk, logger, messagesDispatcher, hasMore, userFilledMessageListParams });
  var handleSendMessage = useSendMessageCallback2({ currentOpenChannel, onBeforeSendUserMessage, checkScrollBottom, messageInputRef }, { sdk, logger, messagesDispatcher, scrollRef: conversationScrollRef });
  var handleFileUpload = useFileUploadCallback({ currentOpenChannel, onBeforeSendFileMessage, checkScrollBottom, imageCompression }, { sdk, logger, messagesDispatcher, scrollRef: conversationScrollRef });
  var updateMessage = useUpdateMessageCallback3({ currentOpenChannel, onBeforeSendUserMessage }, { logger, messagesDispatcher });
  var deleteMessage = useDeleteMessageCallback3({ currentOpenChannel }, { logger, messagesDispatcher });
  var resendMessage = useResendMessageCallback3({ currentOpenChannel }, { logger, messagesDispatcher });
  useTrimMessageList({ messagesLength: allMessages === null || allMessages === void 0 ? void 0 : allMessages.length, messageLimit }, { messagesDispatcher, logger });
  (0, import_react185.useEffect)(function() {
    var subscriber = /* @__PURE__ */ new Map();
    if (!pubSub || !pubSub.subscribe) {
      return;
    }
    subscriber.set(pubSubTopics.SEND_USER_MESSAGE, pubSub.subscribe(pubSubTopics.SEND_USER_MESSAGE, function(msg) {
      var channel = msg.channel, message = msg.message;
      scrollIntoLast3(0, conversationScrollRef);
      if (channel && channelUrl === (channel === null || channel === void 0 ? void 0 : channel.url)) {
        messagesDispatcher({
          type: SENDING_MESSAGE_SUCCEEDED,
          payload: message
        });
      }
    }));
    subscriber.set(pubSubTopics.SEND_MESSAGE_START, pubSub.subscribe(pubSubTopics.SEND_MESSAGE_START, function(msg) {
      var channel = msg.channel, message = msg.message;
      if (channel && channelUrl === (channel === null || channel === void 0 ? void 0 : channel.url)) {
        messagesDispatcher({
          type: SENDING_MESSAGE_START,
          payload: { message, channel }
        });
      }
    }));
    subscriber.set(pubSubTopics.SEND_FILE_MESSAGE, pubSub.subscribe(pubSubTopics.SEND_FILE_MESSAGE, function(msg) {
      var channel = msg.channel, message = msg.message;
      scrollIntoLast3(0, conversationScrollRef);
      if (channel && channelUrl === (channel === null || channel === void 0 ? void 0 : channel.url)) {
        messagesDispatcher({
          type: SENDING_MESSAGE_SUCCEEDED,
          payload: { message, channel }
        });
      }
    }));
    subscriber.set(pubSubTopics.UPDATE_USER_MESSAGE, pubSub.subscribe(pubSubTopics.UPDATE_USER_MESSAGE, function(msg) {
      var channel = msg.channel, message = msg.message, fromSelector = msg.fromSelector;
      if (fromSelector && channel && channelUrl === (channel === null || channel === void 0 ? void 0 : channel.url)) {
        messagesDispatcher({
          type: ON_MESSAGE_UPDATED2,
          payload: { channel, message }
        });
      }
    }));
    subscriber.set(pubSubTopics.DELETE_MESSAGE, pubSub.subscribe(pubSubTopics.DELETE_MESSAGE, function(msg) {
      var channel = msg.channel, messageId = msg.messageId;
      if (channel && channelUrl === (channel === null || channel === void 0 ? void 0 : channel.url)) {
        messagesDispatcher({
          type: ON_MESSAGE_DELETED2,
          payload: messageId
        });
      }
    }));
    return function() {
      if (subscriber) {
        subscriber.forEach(function(s6) {
          try {
            s6.remove();
          } catch (_a4) {
          }
        });
      }
    };
  }, [channelUrl, sdkInit]);
  return import_react185.default.createElement(
    OpenChannelContext.Provider,
    { value: {
      // props
      channelUrl,
      children,
      isMessageGroupingEnabled,
      queries,
      onBeforeSendUserMessage,
      messageLimit,
      onBeforeSendFileMessage,
      onChatHeaderActionClick,
      onBackClick,
      // store
      allMessages,
      loading,
      initialized,
      currentOpenChannel,
      isInvalid,
      hasMore,
      lastMessageTimestamp,
      operators,
      bannedParticipantIds,
      mutedParticipantIds,
      // derived/utils
      messageInputRef,
      conversationScrollRef,
      disabled,
      amIBanned,
      amIMuted,
      amIOperator,
      checkScrollBottom,
      fetchMore,
      onScroll,
      handleSendMessage,
      handleFileUpload,
      updateMessage,
      deleteMessage,
      resendMessage,
      frozen: messagesStore.frozen,
      disableUserProfile,
      renderUserProfile,
      participants: messagesStore.participants
    } },
    import_react185.default.createElement(UserProfileProvider, { isOpenChannel: true, renderUserProfile: props === null || props === void 0 ? void 0 : props.renderUserProfile, disableUserProfile: (_g2 = props === null || props === void 0 ? void 0 : props.disableUserProfile) !== null && _g2 !== void 0 ? _g2 : config === null || config === void 0 ? void 0 : config.disableUserProfile }, children)
  );
};
var useOpenChannelContext = function() {
  var context = import_react185.default.useContext(OpenChannelContext);
  if (!context)
    throw new Error("OpenChannelContext not found. Use within the OpenChannel module");
  return context;
};

// node_modules/@sendbird/uikit-react/OpenChannel/components/OpenChannelInput.js
var import_react186 = __toESM(require_react(), 1);
var import_react_dom76 = __toESM(require_react_dom(), 1);
var OpenChannelInput = import_react186.default.forwardRef(function(props, ref) {
  var _a3 = useOpenChannelContext(), currentOpenChannel = _a3.currentOpenChannel, disabled = _a3.disabled, handleSendMessage = _a3.handleSendMessage, handleFileUpload = _a3.handleFileUpload, amIMuted = _a3.amIMuted;
  var channel = currentOpenChannel;
  var stringSet2 = (0, import_react186.useContext)(LocalizationContext).stringSet;
  var value = props.value;
  function getPlaceHolderString() {
    if (amIMuted) {
      return stringSet2.MESSAGE_INPUT__PLACE_HOLDER__MUTED;
    }
    if (disabled) {
      return stringSet2.MESSAGE_INPUT__PLACE_HOLDER__DISABLED;
    }
    return "";
  }
  if (!channel) {
    return null;
  }
  return import_react186.default.createElement(
    "div",
    { className: "sendbird-openchannel-footer" },
    import_react186.default.createElement(MessageInput, { channel: currentOpenChannel, ref, value, disabled, isVoiceMessageEnabled: false, onSendMessage: handleSendMessage, onFileUpload: handleFileUpload, placeholder: getPlaceHolderString() })
  );
});

// node_modules/@sendbird/uikit-react/OpenChannel/components/FrozenChannelNotification.js
var import_react187 = __toESM(require_react(), 1);
var FrozenNotification2 = function() {
  var stringSet2 = (0, import_react187.useContext)(LocalizationContext).stringSet;
  return import_react187.default.createElement(
    "div",
    { className: "sendbird-frozen-channel-notification" },
    import_react187.default.createElement(Label, { className: "sendbird-frozen-channel-notification__text", type: LabelTypography.CAPTION_2 }, stringSet2.CHANNEL_FROZEN)
  );
};

// node_modules/@sendbird/uikit-react/OpenChannel/components/OpenChannelHeader.js
var import_react188 = __toESM(require_react(), 1);
var import_react_dom77 = __toESM(require_react_dom(), 1);
function OpenchannelConversationHeader() {
  var stringSet2 = (0, import_react188.useContext)(LocalizationContext).stringSet;
  var _a3 = useOpenChannelContext(), currentOpenChannel = _a3.currentOpenChannel, onChatHeaderActionClick = _a3.onChatHeaderActionClick, amIOperator = _a3.amIOperator, onBackClick = _a3.onBackClick;
  var title = currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.name;
  var subTitle = "".concat(kFormatter2(currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.participantCount), " ").concat(stringSet2.OPEN_CHANNEL_CONVERSATION__TITLE_PARTICIPANTS);
  var coverImage = currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.coverUrl;
  var isMobile = useMediaQueryContext().isMobile;
  return import_react188.default.createElement(
    "div",
    { className: "sendbird-openchannel-conversation-header" },
    import_react188.default.createElement(
      "div",
      { className: "sendbird-openchannel-conversation-header__left" },
      isMobile && import_react188.default.createElement(Icon, { className: "sendbird-oepnchannel-header__icon_back", onClick: onBackClick, fillColor: IconColors.PRIMARY, width: "24px", height: "24px", type: IconTypes.ARROW_LEFT }),
      coverImage ? import_react188.default.createElement(Avatar$1, { className: "sendbird-openchannel-conversation-header__left__cover-image", src: coverImage, alt: "channel cover image", width: "32px", height: "32px" }) : import_react188.default.createElement(
        "div",
        { className: "sendbird-openchannel-conversation-header__left__cover-image--icon", style: { width: 32, height: 32 } },
        import_react188.default.createElement(Icon, { type: IconTypes.CHANNELS, fillColor: IconColors.CONTENT, width: "18px", height: "18px" })
      ),
      import_react188.default.createElement(Label, { className: "sendbird-openchannel-conversation-header__left__title", type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, title || stringSet2.NO_TITLE),
      import_react188.default.createElement(Label, { className: "sendbird-openchannel-conversation-header__left__sub-title", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_2 }, subTitle || stringSet2.NO_TITLE)
    ),
    import_react188.default.createElement(
      "div",
      { className: "sendbird-openchannel-conversation-header__right" },
      import_react188.default.createElement(
        IconButton,
        { className: "sendbird-openchannel-conversation-header__right__trigger", width: "32px", height: "32px", onClick: onChatHeaderActionClick },
        import_react188.default.createElement(Icon, { type: amIOperator ? IconTypes.INFO : IconTypes.MEMBERS, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })
      )
    )
  );
}

// node_modules/@sendbird/uikit-react/OpenChannel/components/OpenChannelMessageList.js
var import_react196 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/OpenChannel/components/OpenChannelMessage.js
var import_react195 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ui/OpenchannelUserMessage.js
var import_react190 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/chunks/bundle-BzaTQdTK.js
var copyToClipboard2 = function(text2) {
  if (window.clipboardData && window.clipboardData.setData) {
    return window.clipboardData.setData("Text", text2);
  }
  if (document.queryCommandSupported && document.queryCommandSupported("copy")) {
    var textarea = document.createElement("textarea");
    textarea.textContent = text2;
    textarea.style.position = "fixed";
    document.body.appendChild(textarea);
    textarea.select();
    try {
      return document.execCommand("copy");
    } catch (ex) {
      return false;
    } finally {
      document.body.removeChild(textarea);
    }
  }
  return false;
};

// node_modules/@sendbird/uikit-react/chunks/bundle-D40MS86F.js
var import_react189 = __toESM(require_react(), 1);
var OpenChannelMessageStatusTypes = {
  NONE: "none",
  PENDING: "pending",
  FAILED: "failed",
  CANCELED: "canceled",
  SUCCEEDED: "succeeded"
};
var getSenderFromMessage = function(message) {
  return message.sender || message._sender;
};
var checkIsSent = function(status) {
  return status === OpenChannelMessageStatusTypes.SUCCEEDED;
};
var checkIsPending = function(status) {
  return status === OpenChannelMessageStatusTypes.PENDING;
};
var checkIsFailed = function(status) {
  return status === OpenChannelMessageStatusTypes.FAILED;
};
var checkIsByMe = function(message, userId) {
  return getSenderFromMessage(message).userId === userId;
};
var isFineCopy = function(_a3) {
  var _b2;
  var message = _a3.message;
  return (message === null || message === void 0 ? void 0 : message.messageType) === "user" && ((_b2 = message === null || message === void 0 ? void 0 : message.message) === null || _b2 === void 0 ? void 0 : _b2.length) > 0;
};
var isFineResend = function(_a3) {
  var message = _a3.message, status = _a3.status, userId = _a3.userId;
  return checkIsByMe(message, userId) && checkIsFailed(status) && (message === null || message === void 0 ? void 0 : message.isResendable);
};
var isFineEdit = function(_a3) {
  var _b2;
  var message = _a3.message, status = _a3.status, userId = _a3.userId;
  return checkIsByMe(message, userId) && checkIsSent(status) && ((_b2 = message === null || message === void 0 ? void 0 : message.isUserMessage) === null || _b2 === void 0 ? void 0 : _b2.call(message));
};
var isFineDelete = function(_a3) {
  var message = _a3.message, userId = _a3.userId;
  return checkIsByMe(message, userId);
};
var isFineDownload = function(_a3) {
  var _b2;
  var message = _a3.message, status = _a3.status;
  if (((_b2 = message === null || message === void 0 ? void 0 : message.isFileMessage) === null || _b2 === void 0 ? void 0 : _b2.call(message)) && checkIsSent(status)) {
    return true;
  }
  return false;
};
var showMenuTrigger = function(props) {
  var message = props.message, status = props.status, userId = props.userId;
  if (message.messageType === "user") {
    return isFineDelete({ message, status, userId }) || isFineEdit({ message, status, userId }) || isFineCopy({ message, status, userId }) || isFineResend({ message, status, userId });
  } else {
    return isFineDelete({ message, status, userId }) || isFineResend({ message, status, userId });
  }
};
var OpenChannelMobileMenu = function(props) {
  var _a3, _b2;
  var message = props.message, parentRef = props.parentRef, resendMessage = props.resendMessage, showEdit = props.showEdit, showRemove = props.showRemove, copyToClipboard4 = props.copyToClipboard, hideMenu = props.hideMenu, _c = props.isEphemeral, isEphemeral = _c === void 0 ? false : _c;
  var userMessage = message;
  var status = message === null || message === void 0 ? void 0 : message.sendingStatus;
  var stringSet2 = useLocalization().stringSet;
  var userId = (_b2 = (_a3 = useSendbirdStateContext()) === null || _a3 === void 0 ? void 0 : _a3.config) === null || _b2 === void 0 ? void 0 : _b2.userId;
  var fileMessage = message;
  return import_react189.default.createElement(ContextMenu, { isOpen: true, menuItems: function() {
    return import_react189.default.createElement(
      MenuItems,
      { className: "sendbird-openchannel__mobile-menu", parentRef, parentContainRef: parentRef, closeDropdown: hideMenu },
      isFineCopy({ message: userMessage, userId, status }) && import_react189.default.createElement(
        MenuItem,
        { className: "sendbird-openchannel-og-message__top__context-menu__copy", onClick: function() {
          copyToClipboard4 === null || copyToClipboard4 === void 0 ? void 0 : copyToClipboard4();
        }, testID: "open_channel_mobile_context_menu_copy" },
        import_react189.default.createElement(import_react189.default.Fragment, null, stringSet2.CONTEXT_MENU_DROPDOWN__COPY)
      ),
      !isEphemeral && isFineEdit({ message, userId, status }) && import_react189.default.createElement(
        MenuItem,
        { className: "sendbird-openchannel-og-message__top__context-menu__edit", onClick: function() {
          showEdit === null || showEdit === void 0 ? void 0 : showEdit();
        }, testID: "open_channel_mobile_context_menu_edit" },
        import_react189.default.createElement(import_react189.default.Fragment, null, stringSet2.CONTEXT_MENU_DROPDOWN__EDIT)
      ),
      isFineResend({ message, userId, status }) && import_react189.default.createElement(
        MenuItem,
        { onClick: function() {
          resendMessage === null || resendMessage === void 0 ? void 0 : resendMessage();
        }, testID: "open_channel_mobile_context_menu_resend" },
        import_react189.default.createElement(import_react189.default.Fragment, null, stringSet2.CONTEXT_MENU_DROPDOWN__RESEND)
      ),
      !isEphemeral && isFineDelete({ message, userId, status }) && import_react189.default.createElement(
        MenuItem,
        { onClick: function() {
          showRemove === null || showRemove === void 0 ? void 0 : showRemove();
        }, testID: "open_channel_mobile_context_menu_delete" },
        import_react189.default.createElement(import_react189.default.Fragment, null, stringSet2.CONTEXT_MENU_DROPDOWN__DELETE)
      ),
      isFineDownload({ message, status }) && import_react189.default.createElement(
        MenuItem,
        { onClick: function() {
          hideMenu();
        }, testID: "open_channel_mobile_context_menu_download_file" },
        import_react189.default.createElement("a", { className: "sendbird-openchannel__mobile-menu-hyperlink", rel: "noopener noreferrer", href: fileMessage === null || fileMessage === void 0 ? void 0 : fileMessage.url, target: "_blank" }, stringSet2.CONTEXT_MENU_DROPDOWN__SAVE)
      )
    );
  } });
};

// node_modules/@sendbird/uikit-react/ui/OpenchannelUserMessage.js
var import_react_dom78 = __toESM(require_react_dom(), 1);
function OpenchannelUserMessage(_a3) {
  var className = _a3.className, message = _a3.message, isOperator3 = _a3.isOperator, _b2 = _a3.isEphemeral, isEphemeral = _b2 === void 0 ? false : _b2, userId = _a3.userId, resendMessage = _a3.resendMessage, disabled = _a3.disabled, showEdit = _a3.showEdit, showRemove = _a3.showRemove, chainTop = _a3.chainTop;
  var _c = useLocalization(), stringSet2 = _c.stringSet, dateLocale = _c.dateLocale;
  var _d = useUserProfileContext(), disableUserProfile = _d.disableUserProfile, renderUserProfile = _d.renderUserProfile;
  var messageRef = (0, import_react190.useRef)();
  var avatarRef = (0, import_react190.useRef)();
  var contextMenuRef = (0, import_react190.useRef)();
  var mobileMenuRef = (0, import_react190.useRef)();
  var _e3 = (0, import_react190.useState)({}), contextStyle = _e3[0], setContextStyle = _e3[1];
  var _f = (0, import_react190.useState)(false), contextMenu = _f[0], setContextMenu = _f[1];
  var status = message === null || message === void 0 ? void 0 : message.sendingStatus;
  var isPending = checkIsPending(status);
  var isFailed = checkIsFailed(status);
  var sender = getSenderFromMessage(message);
  (0, import_react190.useEffect)(function() {
    var _a4;
    if (((_a4 = messageRef === null || messageRef === void 0 ? void 0 : messageRef.current) === null || _a4 === void 0 ? void 0 : _a4.clientHeight) && messageRef.current.clientHeight > 36) {
      setContextStyle({ top: "8px " });
    } else {
      setContextStyle({ top: "2px" });
    }
  }, [window.innerWidth]);
  var onLongPress = useLongPress({
    onLongPress: function() {
      setContextMenu(true);
    }
  });
  var isMobile = useMediaQueryContext().isMobile;
  if (!message || message.messageType !== "user") {
    return import_react190.default.createElement(import_react190.default.Fragment, null);
  }
  return import_react190.default.createElement(
    import_react190.default.Fragment,
    null,
    import_react190.default.createElement(
      "div",
      { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
        "sendbird-openchannel-user-message"
      ], false).join(" "), ref: messageRef },
      import_react190.default.createElement("div", { className: "sendbird-openchannel-user-message__left" }, !chainTop && import_react190.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
        return import_react190.default.createElement(Avatar$1, { className: "sendbird-openchannel-user-message__left__avatar", src: sender.profileUrl || "", ref: avatarRef, width: "28px", height: "28px", onClick: function() {
          if (!disableUserProfile) {
            toggleDropdown();
          }
        } });
      }, menuItems: function(closeDropdown) {
        return renderUserProfile ? renderUserProfile({
          user: sender,
          close: closeDropdown,
          currentUserId: userId,
          avatarRef
        }) : import_react190.default.createElement(
          MenuItems,
          { parentRef: avatarRef, parentContainRef: avatarRef, closeDropdown, style: { paddingTop: "0px", paddingBottom: "0px" } },
          import_react190.default.createElement(UserProfile, { user: sender, onSuccess: closeDropdown, disableMessaging: true })
        );
      } })),
      import_react190.default.createElement(
        "div",
        { className: "sendbird-openchannel-user-message__right" },
        !chainTop && import_react190.default.createElement(
          "div",
          { className: "sendbird-openchannel-user-message__right__top" },
          import_react190.default.createElement(Label, { className: "sendbird-openchannel-user-message__right__top__sender-name", type: LabelTypography.CAPTION_2, color: isOperator3 ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2 }, sender && (sender.friendName || sender.nickname || sender.userId)),
          import_react190.default.createElement(Label, { className: "sendbird-openchannel-user-message__right__top__sent-at", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_3 }, (message === null || message === void 0 ? void 0 : message.createdAt) && format(message === null || message === void 0 ? void 0 : message.createdAt, stringSet2.DATE_FORMAT__MESSAGE_CREATED_AT, {
            locale: dateLocale
          }))
        ),
        import_react190.default.createElement(
          "div",
          __assign({}, isMobile ? __assign({}, onLongPress) : {}, { className: "sendbird-openchannel-user-message__right__bottom", ref: mobileMenuRef }),
          import_react190.default.createElement(
            Label,
            { className: "sendbird-openchannel-user-message__right__bottom__message", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_1 },
            message === null || message === void 0 ? void 0 : message.message,
            isEditedMessage(message) && import_react190.default.createElement(Label, { key: uuidv4(), type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2, className: "sendbird-openchannel-user-message-word" }, " ".concat(stringSet2.MESSAGE_EDITED, " "))
          )
        ),
        (isPending || isFailed) && import_react190.default.createElement(
          "div",
          { className: "sendbird-openchannel-user-message__right__tail" },
          isPending && import_react190.default.createElement(
            Loader,
            { width: "16px", height: "16px" },
            import_react190.default.createElement(Icon, { className: "sendbird-openchannel-user-message__right__tail__pending", type: IconTypes.SPINNER, fillColor: IconColors.PRIMARY, width: "16px", height: "16px" })
          ),
          isFailed && import_react190.default.createElement(Icon, { className: "sendbird-openchannel-user-message__right__tail__failed", type: IconTypes.ERROR, fillColor: IconColors.ERROR, width: "16px", height: "16px" })
        )
      ),
      !isMobile && import_react190.default.createElement(
        "div",
        { className: "sendbird-openchannel-user-message__context-menu", ref: contextMenuRef, style: contextStyle },
        import_react190.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
          return showMenuTrigger({ message, userId, status }) && import_react190.default.createElement(
            IconButton,
            { className: "sendbird-openchannel-user-message__context-menu--icon", width: "32px", height: "32px", onClick: function() {
              toggleDropdown();
            } },
            import_react190.default.createElement(Icon, { type: IconTypes.MORE, fillColor: IconColors.CONTENT_INVERSE, width: "24px", height: "24px" })
          );
        }, menuItems: function(closeDropdown) {
          return import_react190.default.createElement(
            MenuItems,
            { parentRef: contextMenuRef, parentContainRef: contextMenuRef, closeDropdown, openLeft: true },
            isFineCopy({ message, userId, status }) && import_react190.default.createElement(MenuItem, { className: "sendbird-openchannel-user-message__context-menu__copy", onClick: function() {
              copyToClipboard2(message.message);
              closeDropdown();
            }, testID: "open_channel_user_message_menu_copy" }, stringSet2.CONTEXT_MENU_DROPDOWN__COPY),
            !isEphemeral && isFineEdit({ message, userId, status }) && import_react190.default.createElement(MenuItem, { className: "sendbird-openchannel-user-message__context-menu__edit", onClick: function() {
              if (disabled) {
                return;
              }
              showEdit(true);
              closeDropdown();
            }, testID: "open_channel_user_message_menu_edit" }, stringSet2.CONTEXT_MENU_DROPDOWN__EDIT),
            isFineResend({ message, userId, status }) && import_react190.default.createElement(MenuItem, { className: "sendbird-openchannel-user-message__context-menu__resend", onClick: function() {
              resendMessage(message);
              closeDropdown();
            }, testID: "open_channel_user_message_menu_resend" }, stringSet2.CONTEXT_MENU_DROPDOWN__RESEND),
            !isEphemeral && isFineDelete({ message, userId, status }) && import_react190.default.createElement(MenuItem, { className: "sendbird-openchannel-user-message__context-menu__delete", onClick: function() {
              if (disabled) {
                return;
              }
              showRemove(true);
              closeDropdown();
            }, testID: "open_channel_user_message_menu_delete" }, stringSet2.CONTEXT_MENU_DROPDOWN__DELETE)
          );
        } })
      )
    ),
    contextMenu && import_react190.default.createElement(OpenChannelMobileMenu, { message, parentRef: mobileMenuRef, hideMenu: function() {
      setContextMenu(false);
    }, showRemove: function() {
      setContextMenu(false);
      showRemove(true);
    }, showEdit: function() {
      setContextMenu(false);
      showEdit(true);
    }, copyToClipboard: function() {
      setContextMenu(false);
      copyToClipboard2(message === null || message === void 0 ? void 0 : message.message);
    }, resendMessage: function() {
      setContextMenu(false);
      resendMessage(message);
    } })
  );
}

// node_modules/@sendbird/uikit-react/ui/OpenChannelAdminMessage.js
var import_react191 = __toESM(require_react(), 1);
function OpenChannelAdminMessage(_a3) {
  var className = _a3.className, message = _a3.message;
  return import_react191.default.createElement(
    "div",
    { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
      "sendbird-openchannel-admin-message"
    ], false).join(" ") },
    import_react191.default.createElement(Label, { className: "sendbird-openchannel-admin-message__text", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, message.message || "")
  );
}

// node_modules/@sendbird/uikit-react/ui/OpenchannelOGMessage.js
var import_react192 = __toESM(require_react(), 1);
var import_react_dom79 = __toESM(require_react_dom(), 1);
function OpenChannelOGMessage(_a3) {
  var _b2, _c, _d;
  var message = _a3.message, isOperator3 = _a3.isOperator, _e3 = _a3.isEphemeral, isEphemeral = _e3 === void 0 ? false : _e3, className = _a3.className, disabled = _a3.disabled, showEdit = _a3.showEdit, showRemove = _a3.showRemove, resendMessage = _a3.resendMessage, chainTop = _a3.chainTop, userId = _a3.userId;
  var status = message === null || message === void 0 ? void 0 : message.sendingStatus;
  var ogMetaData = (_b2 = message.ogMetaData) !== null && _b2 !== void 0 ? _b2 : null;
  var defaultImage = ogMetaData === null || ogMetaData === void 0 ? void 0 : ogMetaData.defaultImage;
  var _f = useLocalization(), stringSet2 = _f.stringSet, dateLocale = _f.dateLocale;
  var isMobile = useMediaQueryContext().isMobile;
  var _g2 = useUserProfileContext(), disableUserProfile = _g2.disableUserProfile, renderUserProfile = _g2.renderUserProfile;
  var _h = (0, import_react192.useState)({}), contextStyle = _h[0], setContextStyle = _h[1];
  var _j = (0, import_react192.useState)(false), showContextMenu = _j[0], setShowContextMenu = _j[1];
  var openLink = function() {
    return openURL(ogMetaData === null || ogMetaData === void 0 ? void 0 : ogMetaData.url);
  };
  var onLongPress = useLongPress({
    onLongPress: function() {
      return setShowContextMenu(true);
    },
    onClick: openLink
  }, {
    delay: 300
  });
  var messageComponentRef = (0, import_react192.useRef)();
  var contextMenuRef = (0, import_react192.useRef)();
  var mobileMenuRef = (0, import_react192.useRef)();
  var avatarRef = (0, import_react192.useRef)();
  var isPending = checkIsPending(status);
  var isFailed = checkIsFailed(status);
  var sender = getSenderFromMessage(message);
  var tokens = (0, import_react192.useMemo)(function() {
    return tokenizeMessage({
      messageText: message.message
    });
  }, [message === null || message === void 0 ? void 0 : message.updatedAt, message === null || message === void 0 ? void 0 : message.message]);
  (0, import_react192.useEffect)(function() {
    var _a4, _b3;
    if (((_a4 = messageComponentRef === null || messageComponentRef === void 0 ? void 0 : messageComponentRef.current) === null || _a4 === void 0 ? void 0 : _a4.clientHeight) && ((_b3 = messageComponentRef === null || messageComponentRef === void 0 ? void 0 : messageComponentRef.current) === null || _b3 === void 0 ? void 0 : _b3.clientHeight) > 36) {
      setContextStyle({ top: "8px " });
    } else {
      setContextStyle({ top: "2px" });
    }
  }, [window.innerWidth]);
  if (!message || message.messageType !== "user") {
    return import_react192.default.createElement(import_react192.default.Fragment, null);
  }
  return import_react192.default.createElement(
    import_react192.default.Fragment,
    null,
    import_react192.default.createElement(
      "div",
      __assign({ className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
        "sendbird-openchannel-og-message"
      ], false).join(" "), ref: messageComponentRef }, isMobile ? __assign({}, onLongPress) : {}),
      import_react192.default.createElement(
        "div",
        { className: "sendbird-openchannel-og-message__top" },
        import_react192.default.createElement("div", { className: "sendbird-openchannel-og-message__top__left" }, !chainTop && import_react192.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
          return import_react192.default.createElement(Avatar$1, { className: "sendbird-openchannel-og-message__top__left__avatar", src: sender.profileUrl || "", ref: avatarRef, width: "28px", height: "28px", onClick: function() {
            if (!disableUserProfile) {
              toggleDropdown();
            }
          } });
        }, menuItems: function(closeDropdown) {
          return renderUserProfile ? renderUserProfile({
            user: sender,
            close: closeDropdown,
            currentUserId: userId,
            avatarRef
          }) : import_react192.default.createElement(
            MenuItems,
            { parentRef: avatarRef, parentContainRef: avatarRef, closeDropdown, style: { paddingTop: "0px", paddingBottom: "0px" } },
            import_react192.default.createElement(UserProfile, { user: sender, onSuccess: closeDropdown, disableMessaging: true })
          );
        } })),
        import_react192.default.createElement(
          "div",
          { className: "sendbird-openchannel-og-message__top__right" },
          !chainTop && import_react192.default.createElement(
            "div",
            { className: "sendbird-openchannel-og-message__top__right__title" },
            import_react192.default.createElement(Label, { className: "sendbird-openchannel-og-message__top__right__title__sender-name", type: LabelTypography.CAPTION_2, color: isOperator3 ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2 }, sender && (sender.friendName || sender.nickname || sender.userId)),
            import_react192.default.createElement(Label, { className: "sendbird-openchannel-og-message__top__right__title__sent-at", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_3 }, (message === null || message === void 0 ? void 0 : message.createdAt) && format(message === null || message === void 0 ? void 0 : message.createdAt, stringSet2.DATE_FORMAT__MESSAGE_CREATED_AT, {
              locale: dateLocale
            }))
          ),
          import_react192.default.createElement(
            "div",
            { className: "sendbird-openchannel-og-message__top__right__description" },
            import_react192.default.createElement(
              Label,
              { className: "sendbird-openchannel-og-message__top__right__description__message", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_1 },
              import_react192.default.createElement(TextFragment, { tokens }),
              ((_c = message === null || message === void 0 ? void 0 : message.updatedAt) !== null && _c !== void 0 ? _c : 0) > 0 && import_react192.default.createElement(Label, { key: uuidv4(), className: "sendbird-openchannel-og-message--word", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, stringSet2.MESSAGE_EDITED)
            )
          )
        ),
        !isMobile && import_react192.default.createElement(
          "div",
          { className: "sendbird-openchannel-og-message__top__context-menu", ref: contextMenuRef, style: contextStyle },
          import_react192.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
            return showMenuTrigger({ message, userId, status }) && import_react192.default.createElement(
              IconButton,
              { className: "sendbird-openchannel-og-message__top__context-menu--icon", width: "32px", height: "32px", onClick: function() {
                toggleDropdown();
              } },
              import_react192.default.createElement(Icon, { type: IconTypes.MORE, fillColor: IconColors.CONTENT_INVERSE, width: "24px", height: "24px" })
            );
          }, menuItems: function(closeDropdown) {
            return import_react192.default.createElement(
              MenuItems,
              { parentRef: contextMenuRef, parentContainRef: contextMenuRef, closeDropdown, openLeft: true },
              isFineCopy({ message, userId, status }) && import_react192.default.createElement(MenuItem, { className: "sendbird-openchannel-og-message__top__context-menu__copy", onClick: function() {
                copyToClipboard2(message.message);
                closeDropdown();
              }, testID: "open_channel_og_message_menu_copy" }, stringSet2.CONTEXT_MENU_DROPDOWN__COPY),
              !isEphemeral && isFineEdit({ message, userId, status }) && import_react192.default.createElement(MenuItem, { className: "sendbird-openchannel-og-message__top__context-menu__edit", onClick: function() {
                if (disabled) {
                  return;
                }
                showEdit(true);
                closeDropdown();
              }, testID: "open_channel_og_message_menu_edit" }, stringSet2.CONTEXT_MENU_DROPDOWN__EDIT),
              isFineResend({ message, userId, status }) && import_react192.default.createElement(MenuItem, { className: "sendbird-openchannel-og-message__top__context-menu__resend", onClick: function() {
                resendMessage(message);
                closeDropdown();
              }, testID: "open_channel_og_message_menu_resend" }, stringSet2.CONTEXT_MENU_DROPDOWN__RESEND),
              !isEphemeral && isFineDelete({ message, userId, status }) && import_react192.default.createElement(MenuItem, { className: "sendbird-openchannel-og-message__top__context-menu__delete", onClick: function() {
                if (disabled) {
                  return;
                }
                showRemove(true);
                closeDropdown();
              }, testID: "open_channel_og_message_menu_delete" }, stringSet2.CONTEXT_MENU_DROPDOWN__DELETE)
            );
          } })
        )
      ),
      import_react192.default.createElement(
        "div",
        { className: "sendbird-openchannel-og-message__bottom" },
        import_react192.default.createElement(
          "div",
          { className: "sendbird-openchannel-og-message__bottom__og-tag", ref: mobileMenuRef },
          (ogMetaData === null || ogMetaData === void 0 ? void 0 : ogMetaData.url) && import_react192.default.createElement(Label, { className: "sendbird-openchannel-og-message__bottom__og-tag__url", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, ogMetaData.url),
          (ogMetaData === null || ogMetaData === void 0 ? void 0 : ogMetaData.title) && import_react192.default.createElement(LinkLabel, { className: "sendbird-openchannel-og-message__bottom__og-tag__title", src: (_d = ogMetaData.url) !== null && _d !== void 0 ? _d : "", type: LabelTypography.SUBTITLE_2, color: LabelColors.PRIMARY }, ogMetaData.title),
          (ogMetaData === null || ogMetaData === void 0 ? void 0 : ogMetaData.description) && import_react192.default.createElement(Label, { className: "sendbird-openchannel-og-message__bottom__og-tag__description", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_1 }, ogMetaData.description),
          (ogMetaData === null || ogMetaData === void 0 ? void 0 : ogMetaData.url) && import_react192.default.createElement("div", { className: "sendbird-openchannel-og-message__bottom__og-tag__thumbnail", role: "button", onClick: openLink, onKeyDown: openLink, tabIndex: 0 }, defaultImage && import_react192.default.createElement(ImageRenderer, { className: "sendbird-openchannel-og-message__bottom__og-tag__thumbnail__image", url: defaultImage.url || "", alt: defaultImage.alt || "", width: "334px", height: "189px", defaultComponent: import_react192.default.createElement(
            "div",
            { className: "sendbird-openchannel-og-message__bottom__og-tag__thumbnail__image--placeholder" },
            import_react192.default.createElement(Icon, { type: IconTypes.THUMBNAIL_NONE, width: "56px", height: "56px" })
          ) }))
        ),
        (isPending || isFailed) && import_react192.default.createElement(
          "div",
          { className: "sendbird-openchannel-og-message__top__right__tail" },
          isPending && import_react192.default.createElement(
            Loader,
            { width: "16px", height: "16px" },
            import_react192.default.createElement(Icon, { className: "sendbird-openchannel-og-message__top__right__tail__pending", type: IconTypes.SPINNER, fillColor: IconColors.PRIMARY, width: "16px", height: "16px" })
          ),
          isFailed && import_react192.default.createElement(Icon, { className: "sendbird-openchannel-og-message__top__right__tail__failed", type: IconTypes.ERROR, fillColor: IconColors.ERROR, width: "16px", height: "16px" })
        )
      )
    ),
    showContextMenu && import_react192.default.createElement(OpenChannelMobileMenu, { message, parentRef: mobileMenuRef, hideMenu: function() {
      setShowContextMenu(false);
    }, showRemove: function() {
      setShowContextMenu(false);
      showRemove(true);
    }, showEdit: function() {
      setShowContextMenu(false);
      showEdit(true);
    }, copyToClipboard: function() {
      setShowContextMenu(false);
      copyToClipboard2(message === null || message === void 0 ? void 0 : message.message);
    }, resendMessage: function() {
      setShowContextMenu(false);
      resendMessage(message);
    } })
  );
}

// node_modules/@sendbird/uikit-react/ui/OpenchannelThumbnailMessage.js
var import_react193 = __toESM(require_react(), 1);
var import_react_dom80 = __toESM(require_react_dom(), 1);
var SUPPORTING_TYPES = {
  IMAGE: "IMAGE",
  VIDEO: "VIDEO",
  UNSUPPORTED: "UNSUPPORTED"
};
var SUPPORTED_MIMES2 = {
  IMAGE: [
    "image/jpeg",
    "image/jpg",
    "image/png",
    "image/gif",
    "image/webp"
  ],
  VIDEO: [
    "video/mpeg",
    "video/ogg",
    "video/webm",
    "video/mp4"
  ]
};
var getSupportingFileType = function(type) {
  if (SUPPORTED_MIMES2.IMAGE.indexOf(type) >= 0) {
    return SUPPORTING_TYPES.IMAGE;
  }
  if (SUPPORTED_MIMES2.VIDEO.indexOf(type) >= 0) {
    return SUPPORTING_TYPES.VIDEO;
  }
  return SUPPORTING_TYPES.UNSUPPORTED;
};
function OpenchannelThumbnailMessage(_a3) {
  var _b2;
  var className = _a3.className, message = _a3.message, isOperator3 = _a3.isOperator, _c = _a3.isEphemeral, isEphemeral = _c === void 0 ? false : _c, disabled = _a3.disabled, userId = _a3.userId, chainTop = _a3.chainTop, onClick = _a3.onClick, showRemove = _a3.showRemove, resendMessage = _a3.resendMessage;
  var type = message.type, url = message.url, thumbnails = message.thumbnails, localUrl = message.localUrl;
  var status = message === null || message === void 0 ? void 0 : message.sendingStatus;
  var thumbnailUrl = thumbnails && thumbnails.length > 0 && thumbnails[0].url || null;
  var _d = useLocalization(), stringSet2 = _d.stringSet, dateLocale = _d.dateLocale;
  var _e3 = useUserProfileContext(), disableUserProfile = _e3.disableUserProfile, renderUserProfile = _e3.renderUserProfile;
  var _f = (0, import_react193.useState)(360), messageWidth = _f[0], setMessageWidth = _f[1];
  var _g2 = (0, import_react193.useState)(false), contextMenu = _g2[0], setContextMenu = _g2[1];
  var messageRef = (0, import_react193.useRef)(null);
  var mobileMenuRef = (0, import_react193.useRef)(null);
  var contextMenuRef = (0, import_react193.useRef)(null);
  var avatarRef = (0, import_react193.useRef)(null);
  var onLongPress = useLongPress({
    onLongPress: function() {
      setContextMenu(true);
    },
    onClick: function() {
      onClick(true);
    }
  });
  var isMobile = useMediaQueryContext().isMobile;
  var memorizedThumbnailPlaceHolder = (0, import_react193.useMemo)(function() {
    return function(type2) {
      return function(_a4) {
        var style = _a4.style;
        return (
          // eslint-disable-line
          import_react193.default.createElement(
            "div",
            { style },
            import_react193.default.createElement(Icon, { type: type2, fillColor: IconColors.ON_BACKGROUND_2, width: "56px", height: "56px" })
          )
        );
      };
    };
  }, []);
  var isMessageSent = checkIsSent(status);
  var isPending = checkIsPending(status);
  var isFailed = checkIsFailed(status);
  var sender = getSenderFromMessage(message);
  (0, import_react193.useEffect)(function() {
    var _a4, _b3;
    var thumbnailWidth = ((_b3 = (_a4 = messageRef === null || messageRef === void 0 ? void 0 : messageRef.current) === null || _a4 === void 0 ? void 0 : _a4.clientWidth) !== null && _b3 !== void 0 ? _b3 : 0) - 80;
    setMessageWidth(thumbnailWidth > 360 ? 360 : thumbnailWidth);
  }, []);
  return import_react193.default.createElement(
    import_react193.default.Fragment,
    null,
    import_react193.default.createElement(
      "div",
      { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
        "sendbird-openchannel-thumbnail-message"
      ], false).join(" "), ref: messageRef },
      import_react193.default.createElement("div", { className: "sendbird-openchannel-thumbnail-message__left" }, !chainTop && import_react193.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
        return import_react193.default.createElement(Avatar$1, { className: "sendbird-openchannel-thumbnail-message__left__avatar", src: sender.profileUrl || "", ref: avatarRef, width: "28px", height: "28px", onClick: function() {
          if (!disableUserProfile) {
            toggleDropdown();
          }
        } });
      }, menuItems: function(closeDropdown) {
        return renderUserProfile ? renderUserProfile({
          user: sender,
          close: closeDropdown,
          currentUserId: userId,
          avatarRef
        }) : import_react193.default.createElement(
          MenuItems,
          { parentRef: avatarRef, parentContainRef: avatarRef, closeDropdown, style: { paddingTop: "0px", paddingBottom: "0px" } },
          import_react193.default.createElement(UserProfile, { user: sender, onSuccess: closeDropdown, disableMessaging: true })
        );
      } })),
      import_react193.default.createElement(
        "div",
        { className: "sendbird-openchannel-thumbnail-message__right" },
        !chainTop && import_react193.default.createElement(
          "div",
          { className: "sendbird-openchannel-thumbnail-message__right__title" },
          import_react193.default.createElement(Label, { className: "sendbird-openchannel-thumbnail-message__right__title__sender-name", type: LabelTypography.CAPTION_2, color: isOperator3 ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2 }, sender && (sender.friendName || sender.nickname || sender.userId)),
          import_react193.default.createElement(Label, { className: "sendbird-openchannel-thumbnail-message__right__title__sent-at", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_3 }, (message === null || message === void 0 ? void 0 : message.createdAt) && format(message.createdAt, stringSet2.DATE_FORMAT__MESSAGE_CREATED_AT, {
            locale: dateLocale
          }))
        ),
        import_react193.default.createElement(
          "div",
          { className: "sendbird-openchannel-thumbnail-message__right__body", ref: mobileMenuRef },
          import_react193.default.createElement(
            "div",
            __assign({ className: "sendbird-openchannel-thumbnail-message__right__body__wrap", role: "button", onClick: function() {
              if (isMessageSent) {
                onClick(true);
              }
            }, onKeyDown: function() {
              if (isMessageSent) {
                onClick(true);
              }
            }, tabIndex: 0 }, isMobile ? __assign({}, onLongPress) : {}),
            import_react193.default.createElement("div", { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__overlay" }),
            (_b2 = {}, _b2[SUPPORTING_TYPES.VIDEO] = url || localUrl ? import_react193.default.createElement(
              "div",
              { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__video" },
              thumbnailUrl ? import_react193.default.createElement(ImageRenderer, { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__video", url: thumbnailUrl, width: messageWidth, height: "270px", alt: "image", placeHolder: memorizedThumbnailPlaceHolder(IconTypes.PLAY) }) : import_react193.default.createElement(
                "video",
                { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__video__video" },
                import_react193.default.createElement("source", { src: url || localUrl, type })
              ),
              import_react193.default.createElement(Icon, { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__video__icon", type: IconTypes.PLAY, fillColor: IconColors.ON_BACKGROUND_2, width: "56px", height: "56px" })
            ) : import_react193.default.createElement(Icon, { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__video--icon", type: IconTypes.PHOTO, fillColor: IconColors.ON_BACKGROUND_2, width: "56px", height: "56px" }), _b2[SUPPORTING_TYPES.IMAGE] = url || localUrl ? import_react193.default.createElement(ImageRenderer, { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__image", url: thumbnailUrl || url || localUrl || "", alt: "image", width: messageWidth, height: "270px", placeHolder: memorizedThumbnailPlaceHolder(IconTypes.PHOTO) }) : import_react193.default.createElement(Icon, { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__image--icon", type: IconTypes.PHOTO, fillColor: IconColors.ON_BACKGROUND_2, width: "56px", height: "56px" }), _b2[SUPPORTING_TYPES.UNSUPPORTED] = import_react193.default.createElement(Icon, { className: "sendbird-openchannel-thumbnail-message__right__body__wrap__unknown", type: IconTypes.PHOTO, fillColor: IconColors.ON_BACKGROUND_2, width: "56px", height: "56px" }), _b2)[getSupportingFileType(type)]
          )
        ),
        (isPending || isFailed) && import_react193.default.createElement(
          "div",
          { className: "sendbird-openchannel-thumbnail-message__right__tail" },
          isPending && import_react193.default.createElement(
            Loader,
            { width: "16px", height: "16px" },
            import_react193.default.createElement(Icon, { className: "sendbird-openchannel-thumbnail-message__right__tail__pending", type: IconTypes.SPINNER, fillColor: IconColors.PRIMARY, width: "16px", height: "16px" })
          ),
          isFailed && import_react193.default.createElement(Icon, { className: "sendbird-openchannel-thumbnail-message__right__tail__failed", type: IconTypes.ERROR, fillColor: IconColors.ERROR, width: "16px", height: "16px" })
        )
      ),
      !isMobile && import_react193.default.createElement("div", { className: "sendbird-openchannel-thumbnail-message__context-menu", ref: contextMenuRef }, (isFineResend({ message, userId, status }) || !isEphemeral) && import_react193.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
        return showMenuTrigger({ message, userId, status }) && import_react193.default.createElement(
          IconButton,
          { className: "sendbird-openchannel-thumbnail-message__context-menu--icon", width: "32px", height: "32px", onClick: toggleDropdown },
          import_react193.default.createElement(Icon, { type: IconTypes.MORE, fillColor: IconColors.CONTENT_INVERSE, width: "24px", height: "24px" })
        );
      }, menuItems: function(closeDropdown) {
        return import_react193.default.createElement(
          MenuItems,
          { parentRef: contextMenuRef, parentContainRef: contextMenuRef, closeDropdown, openLeft: true },
          isFineResend({ message, userId, status }) && import_react193.default.createElement(MenuItem, { onClick: function() {
            resendMessage(message);
            closeDropdown();
          }, testID: "open_channel_thumbnail_message_menu_resend" }, stringSet2.CONTEXT_MENU_DROPDOWN__RESEND),
          !isEphemeral && isFineDelete({ message, userId, status }) && import_react193.default.createElement(MenuItem, { onClick: function() {
            if (disabled) {
              return;
            }
            showRemove(true);
            closeDropdown();
          }, testID: "open_channel_thumbnail_message_menu_delete" }, stringSet2.CONTEXT_MENU_DROPDOWN__DELETE)
        );
      } }))
    ),
    contextMenu && import_react193.default.createElement(OpenChannelMobileMenu, { message, parentRef: mobileMenuRef, hideMenu: function() {
      setContextMenu(false);
    }, showRemove: function() {
      setContextMenu(false);
      showRemove(true);
    }, resendMessage: function() {
      setContextMenu(false);
      resendMessage(message);
    } })
  );
}

// node_modules/@sendbird/uikit-react/ui/OpenchannelFileMessage.js
var import_react194 = __toESM(require_react(), 1);
var import_react_dom81 = __toESM(require_react_dom(), 1);
var checkFileType = function(fileUrl) {
  var audioFile = /(\.mp3)$/i;
  var gifFile = /(\.gif)$/i;
  if (audioFile.test(fileUrl)) {
    return IconTypes.FILE_AUDIO;
  }
  if (gifFile.test(fileUrl)) {
    return IconTypes.GIF;
  }
  return IconTypes.FILE_DOCUMENT;
};
var truncate = function(fullStr, strLen) {
  if (fullStr === null || fullStr === void 0)
    return "";
  if (fullStr.length <= strLen)
    return fullStr;
  var separator = "...";
  var sepLen = separator.length;
  var charsToShow = strLen - sepLen;
  var frontChars = Math.ceil(charsToShow / 2);
  var backChars = Math.floor(charsToShow / 2);
  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);
};
function OpenChannelFileMessage(_a3) {
  var className = _a3.className, message = _a3.message, isOperator3 = _a3.isOperator, _b2 = _a3.isEphemeral, isEphemeral = _b2 === void 0 ? false : _b2, userId = _a3.userId, disabled = _a3.disabled, chainTop = _a3.chainTop, showRemove = _a3.showRemove, resendMessage = _a3.resendMessage;
  var status = message === null || message === void 0 ? void 0 : message.sendingStatus;
  var _c = useLocalization(), dateLocale = _c.dateLocale, stringSet2 = _c.stringSet;
  var contextMenuRef = (0, import_react194.useRef)(null);
  var mobileMenuRef = (0, import_react194.useRef)(null);
  var avatarRef = (0, import_react194.useRef)(null);
  var _d = useUserProfileContext(), disableUserProfile = _d.disableUserProfile, renderUserProfile = _d.renderUserProfile;
  var isMobile = useMediaQueryContext().isMobile;
  var openFileUrl = function() {
    return openURL(message.url);
  };
  var isPending = checkIsPending(status);
  var isFailed = checkIsFailed(status);
  var sender = getSenderFromMessage(message);
  var _e3 = (0, import_react194.useState)(false), contextMenu = _e3[0], setContextMenu = _e3[1];
  var longPress = useLongPress({
    onLongPress: function() {
      if (isMobile) {
        setContextMenu(true);
      }
    },
    onClick: openFileUrl
  }, { delay: 300 });
  return import_react194.default.createElement(
    import_react194.default.Fragment,
    null,
    import_react194.default.createElement(
      "div",
      { className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), [
        "sendbird-openchannel-file-message"
      ], false).join(" "), ref: mobileMenuRef },
      import_react194.default.createElement("div", { className: "sendbird-openchannel-file-message__left" }, !chainTop && import_react194.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
        return import_react194.default.createElement(Avatar$1, { className: "sendbird-openchannel-file-message__left__avatar", src: sender.profileUrl || "", ref: avatarRef, width: "28px", height: "28px", onClick: function() {
          if (!disableUserProfile) {
            toggleDropdown();
          }
        } });
      }, menuItems: function(closeDropdown) {
        return renderUserProfile ? renderUserProfile({
          user: sender,
          close: closeDropdown,
          currentUserId: userId,
          avatarRef
        }) : import_react194.default.createElement(
          MenuItems,
          { parentRef: avatarRef, parentContainRef: avatarRef, closeDropdown, style: { paddingTop: "0px", paddingBottom: "0px" } },
          import_react194.default.createElement(UserProfile, { user: sender, onSuccess: closeDropdown, disableMessaging: true })
        );
      } })),
      import_react194.default.createElement(
        "div",
        { className: "sendbird-openchannel-file-message__right" },
        !chainTop && import_react194.default.createElement(
          "div",
          { className: "sendbird-openchannel-file-message__right__title" },
          import_react194.default.createElement(Label, { className: "sendbird-openchannel-file-message__right__title__sender-name", type: LabelTypography.CAPTION_2, color: isOperator3 ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2 }, sender && (sender.friendName || sender.nickname || sender.userId)),
          import_react194.default.createElement(Label, { className: "sendbird-openchannel-file-message__right__title__sent-at", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_3 }, (message === null || message === void 0 ? void 0 : message.createdAt) && format(message.createdAt, stringSet2.DATE_FORMAT__MESSAGE_CREATED_AT, {
            locale: dateLocale
          }))
        ),
        import_react194.default.createElement(
          "div",
          __assign({ className: "sendbird-openchannel-file-message__right__body" }, isMobile ? __assign({}, longPress) : {}),
          checkFileType(message.url) && import_react194.default.createElement(Icon, { className: "sendbird-openchannel-file-message__right__body__icon", type: checkFileType(message.url), fillColor: IconColors.PRIMARY, width: "48px", height: "48px" }),
          import_react194.default.createElement(
            TextButton,
            { className: "sendbird-openchannel-file-message__right__body__file-name", onClick: openFileUrl },
            import_react194.default.createElement(Label, { type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_1 }, truncate(message.name || message.url, 40))
          )
        ),
        (isPending || isFailed) && import_react194.default.createElement(
          "div",
          { className: "sendbird-openchannel-file-message__right__tail" },
          isPending && import_react194.default.createElement(
            Loader,
            { width: "16px", height: "16px" },
            import_react194.default.createElement(Icon, { className: "sendbird-openchannel-file-message__right__tail__pending", type: IconTypes.SPINNER, fillColor: IconColors.PRIMARY, width: "16px", height: "16px" })
          ),
          isFailed && import_react194.default.createElement(Icon, { className: "sendbird-openchannel-file-message__right__tail__failed", type: IconTypes.ERROR, fillColor: IconColors.ERROR, width: "16px", height: "16px" })
        )
      ),
      !isMobile && import_react194.default.createElement("div", { className: "sendbird-openchannel-file-message__context-menu", ref: contextMenuRef }, (isFineResend({ message, userId, status }) || !isEphemeral) && import_react194.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
        return showMenuTrigger({ message, userId, status }) && import_react194.default.createElement(
          IconButton,
          { className: "sendbird-openchannel-file-message__context-menu__icon", width: "32px", height: "32px", onClick: toggleDropdown },
          import_react194.default.createElement(Icon, { type: IconTypes.MORE, width: "24px", height: "24px" })
        );
      }, menuItems: function(closeDropdown) {
        return import_react194.default.createElement(
          MenuItems,
          { parentRef: contextMenuRef, parentContainRef: contextMenuRef, closeDropdown, openLeft: true },
          isFineResend({ message, userId, status }) && import_react194.default.createElement(MenuItem, { onClick: function() {
            if (disabled) {
              return;
            }
            resendMessage(message);
            closeDropdown();
          }, testID: "open_channel_file_message_context_menu_resend" }, stringSet2.CONTEXT_MENU_DROPDOWN__RESEND),
          !isEphemeral && isFineDelete({ message, userId, status }) && import_react194.default.createElement(MenuItem, { onClick: function() {
            if (disabled) {
              return;
            }
            showRemove(true);
            closeDropdown();
          }, testID: "open_channel_file_message_context_menu_delete" }, stringSet2.CONTEXT_MENU_DROPDOWN__DELETE)
        );
      } }))
    ),
    contextMenu && import_react194.default.createElement(OpenChannelMobileMenu, { message, hideMenu: function() {
      setContextMenu(false);
    }, parentRef: mobileMenuRef, showRemove: function() {
      setContextMenu(false);
      showRemove(true);
    } })
  );
}

// node_modules/@sendbird/uikit-react/OpenChannel/components/OpenChannelMessage.js
var import_react_dom82 = __toESM(require_react_dom(), 1);
function RemoveMessageModal3(_a3) {
  var message = _a3.message, onCloseModal = _a3.onCloseModal, onDeleteMessage = _a3.onDeleteMessage;
  var stringSet2 = (0, import_react195.useContext)(LocalizationContext).stringSet;
  return import_react195.default.createElement(Modal, { onCancel: onCloseModal, onSubmit: onDeleteMessage, submitText: stringSet2.MESSAGE_MENU__DELETE, titleText: getModalDeleteMessageTitle(stringSet2, message) });
}
var MessageTypes = {
  ADMIN: "ADMIN",
  USER: "USER",
  FILE: "FILE",
  THUMBNAIL: "THUMBNAIL",
  OG: "OG",
  UNKNOWN: "UNKNOWN"
};
var SendingMessageStatus = {
  NONE: "none",
  SUCCEEDED: "succeeded",
  FAILED: "failed",
  PENDING: "pending"
};
var getMessageType = function(message, options) {
  var _a3, _b2;
  var isOgMessageEnabledInOpenChannel = options === null || options === void 0 ? void 0 : options.isOgMessageEnabledInOpenChannel;
  if (((_a3 = message === null || message === void 0 ? void 0 : message.isUserMessage) === null || _a3 === void 0 ? void 0 : _a3.call(message)) || (message === null || message === void 0 ? void 0 : message.messageType) === "user") {
    return (message === null || message === void 0 ? void 0 : message.ogMetaData) && isOgMessageEnabledInOpenChannel ? MessageTypes.OG : MessageTypes.USER;
  }
  if ((_b2 = message === null || message === void 0 ? void 0 : message.isAdminMessage) === null || _b2 === void 0 ? void 0 : _b2.call(message)) {
    return MessageTypes.ADMIN;
  }
  if ((message === null || message === void 0 ? void 0 : message.messageType) === "file") {
    return isImage(message.type) || isVideo(message.type) ? MessageTypes.THUMBNAIL : MessageTypes.FILE;
  }
  return MessageTypes.UNKNOWN;
};
function OpenChannelMessage(props) {
  var _a3;
  var _b2;
  var message = props.message, chainTop = props.chainTop, chainBottom = props.chainBottom, hasSeparator = props.hasSeparator, renderMessage = props.renderMessage;
  var _c = useOpenChannelContext(), currentOpenChannel = _c.currentOpenChannel, deleteMessage = _c.deleteMessage, updateMessage = _c.updateMessage, resendMessage = _c.resendMessage;
  var _d = useLocalization(), dateLocale = _d.dateLocale, stringSet2 = _d.stringSet;
  var editDisabled = currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isFrozen;
  var globalState = useSendbirdStateContext();
  var currentUserId = (_b2 = globalState === null || globalState === void 0 ? void 0 : globalState.config) === null || _b2 === void 0 ? void 0 : _b2.userId;
  var isOgMessageEnabledInOpenChannel = globalState.config.openChannel.enableOgtag;
  var sender;
  if ((message === null || message === void 0 ? void 0 : message.messageType) !== "admin") {
    sender = message === null || message === void 0 ? void 0 : message.sender;
  }
  var _e3 = (0, import_react195.useState)(false), showEdit = _e3[0], setShowEdit = _e3[1];
  var _f = (0, import_react195.useState)(false), showRemove = _f[0], setShowRemove = _f[1];
  var _g2 = (0, import_react195.useState)(false), showFileViewer = _g2[0], setShowFileViewer = _g2[1];
  var editMessageInputRef = (0, import_react195.useRef)(null);
  var isByMe = false;
  if (sender && (message === null || message === void 0 ? void 0 : message.messageType) !== "admin") {
    isByMe = currentUserId === sender.userId || (message === null || message === void 0 ? void 0 : message.sendingStatus) === SendingMessageStatus.PENDING || (message === null || message === void 0 ? void 0 : message.sendingStatus) === SendingMessageStatus.FAILED;
  }
  if (renderMessage) {
    return import_react195.default.createElement("div", { className: "sendbird-msg-hoc sendbird-msg--scroll-ref", "data-testid": "sendbird-message-hoc" }, renderMessage({ message, chainTop, chainBottom }));
  }
  if ((message === null || message === void 0 ? void 0 : message.messageType) === "user" && showEdit) {
    return import_react195.default.createElement(MessageInput, { isEdit: true, channel: currentOpenChannel, disabled: editDisabled, ref: editMessageInputRef, message, onUpdateMessage: function(_a4) {
      var messageId = _a4.messageId, message2 = _a4.message;
      updateMessage(messageId, message2);
      setShowEdit(false);
    }, onCancelEdit: function() {
      setShowEdit(false);
    } });
  }
  return import_react195.default.createElement(
    "div",
    { className: "sendbird-msg-hoc sendbird-msg--scroll-ref", "data-testid": "sendbird-message-hoc" },
    import_react195.default.createElement(
      import_react195.default.Fragment,
      null,
      hasSeparator && (message === null || message === void 0 ? void 0 : message.createdAt) && import_react195.default.createElement(
        DateSeparator,
        null,
        import_react195.default.createElement(Label, { type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, format(message === null || message === void 0 ? void 0 : message.createdAt, stringSet2.DATE_FORMAT__MESSAGE_LIST__DATE_SEPARATOR, { locale: dateLocale }))
      ),
      (_a3 = {}, _a3[MessageTypes.ADMIN] = function() {
        if ((message === null || message === void 0 ? void 0 : message.messageType) === "admin") {
          return import_react195.default.createElement(OpenChannelAdminMessage, { message });
        }
      }(), _a3[MessageTypes.FILE] = function() {
        var _a4;
        if ((message === null || message === void 0 ? void 0 : message.messageType) === "file") {
          return import_react195.default.createElement(OpenChannelFileMessage, { message, isOperator: currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isOperator((_a4 = message === null || message === void 0 ? void 0 : message.sender) === null || _a4 === void 0 ? void 0 : _a4.userId), isEphemeral: currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isEphemeral, disabled: editDisabled, userId: currentUserId, showRemove: setShowRemove, resendMessage, chainTop, chainBottom });
        }
      }(), _a3[MessageTypes.OG] = function() {
        var _a4;
        if ((message === null || message === void 0 ? void 0 : message.messageType) === "user" && isOgMessageEnabledInOpenChannel) {
          return import_react195.default.createElement(OpenChannelOGMessage, { message, isOperator: currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isOperator((_a4 = message === null || message === void 0 ? void 0 : message.sender) === null || _a4 === void 0 ? void 0 : _a4.userId), isEphemeral: currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isEphemeral, userId: currentUserId, showEdit: setShowEdit, disabled: editDisabled, showRemove: setShowRemove, resendMessage, chainTop, chainBottom });
        }
      }(), _a3[MessageTypes.THUMBNAIL] = function() {
        var _a4;
        if ((message === null || message === void 0 ? void 0 : message.messageType) === "file") {
          return import_react195.default.createElement(OpenchannelThumbnailMessage, { message, isOperator: currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isOperator((_a4 = message === null || message === void 0 ? void 0 : message.sender) === null || _a4 === void 0 ? void 0 : _a4.userId), isEphemeral: currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isEphemeral, disabled: editDisabled, userId: currentUserId, showRemove: setShowRemove, resendMessage, onClick: setShowFileViewer, chainTop, chainBottom });
        }
      }(), _a3[MessageTypes.USER] = function() {
        var _a4;
        if ((message === null || message === void 0 ? void 0 : message.messageType) === "user") {
          return import_react195.default.createElement(OpenchannelUserMessage, { message, isOperator: currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isOperator((_a4 = message === null || message === void 0 ? void 0 : message.sender) === null || _a4 === void 0 ? void 0 : _a4.userId), isEphemeral: currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isEphemeral, userId: currentUserId, disabled: editDisabled, showEdit: setShowEdit, showRemove: setShowRemove, resendMessage, chainTop, chainBottom });
        }
      }(), _a3[MessageTypes.UNKNOWN] = /* @__PURE__ */ function() {
      }(), _a3)[getMessageType(message, { isOgMessageEnabledInOpenChannel })],
      showRemove && import_react195.default.createElement(RemoveMessageModal3, { message, onCloseModal: function() {
        return setShowRemove(false);
      }, onDeleteMessage: function() {
        if ((message === null || message === void 0 ? void 0 : message.messageType) !== "admin") {
          deleteMessage(message);
        }
      } }),
      showFileViewer && (message === null || message === void 0 ? void 0 : message.messageType) === "file" && import_react195.default.createElement(FileViewer, { onClose: function() {
        return setShowFileViewer(false);
      }, message, onDelete: function() {
        return deleteMessage(message);
      }, isByMe })
    )
  );
}

// node_modules/@sendbird/uikit-react/OpenChannel/components/OpenChannelMessageList.js
var import_react_dom83 = __toESM(require_react_dom(), 1);
function OpenChannelMessageList(props, ref) {
  var _a3 = useOpenChannelContext(), _b2 = _a3.isMessageGroupingEnabled, isMessageGroupingEnabled = _b2 === void 0 ? true : _b2, allMessages = _a3.allMessages, hasMore = _a3.hasMore, onScroll = _a3.onScroll;
  var store = useSendbirdStateContext();
  var userId = store.config.userId;
  var localRef = (0, import_react196.useRef)(null);
  var scrollRef = ref || localRef;
  var _c = (0, import_react196.useState)(false), showScrollDownButton = _c[0], setShowScrollDownButton = _c[1];
  var scrollToBottom = function() {
    if (scrollRef && "current" in scrollRef && scrollRef.current) {
      scrollRef.current.scrollTo(0, scrollRef.current.scrollHeight);
      setShowScrollDownButton(false);
    }
  };
  var handleOnScroll = useHandleOnScrollCallback({
    setShowScrollDownButton,
    hasMore,
    onScroll,
    scrollRef
  });
  var memoizedMessageList = (0, import_react196.useMemo)(function() {
    var _a4;
    if (allMessages.length > 0) {
      return allMessages.map(function(message, index) {
        var _a5;
        var previousMessage = allMessages[index - 1];
        var nextMessage = allMessages[index - 1];
        var previousMessageCreatedAt = previousMessage && previousMessage.createdAt;
        var currentCreatedAt = message === null || message === void 0 ? void 0 : message.createdAt;
        var hasSeparator = !(previousMessageCreatedAt && isSameDay(currentCreatedAt, previousMessageCreatedAt));
        var _b3 = isMessageGroupingEnabled ? compareMessagesForGrouping(previousMessage, message, nextMessage) : [false, false], chainTop = _b3[0], chainBottom = _b3[1];
        var isByMe = ((_a5 = message === null || message === void 0 ? void 0 : message.sender) === null || _a5 === void 0 ? void 0 : _a5.userId) === userId;
        var key = (message === null || message === void 0 ? void 0 : message.messageId) || (message === null || message === void 0 ? void 0 : message.reqId);
        return import_react196.default.createElement(
          MessageProvider,
          { message, isByMe, key },
          import_react196.default.createElement(OpenChannelMessage, { message, chainTop, chainBottom, hasSeparator, renderMessage: props === null || props === void 0 ? void 0 : props.renderMessage })
        );
      });
    }
    return ((_a4 = props === null || props === void 0 ? void 0 : props.renderPlaceHolderEmptyList) === null || _a4 === void 0 ? void 0 : _a4.call(props)) || import_react196.default.createElement(PlaceHolder, { className: "sendbird-openchannel-conversation-scroll__container__place-holder", type: PlaceHolderTypes.NO_MESSAGES });
  }, [allMessages]);
  return import_react196.default.createElement(
    "div",
    { className: "sendbird-openchannel-conversation-scroll" },
    import_react196.default.createElement(
      "div",
      { className: "sendbird-openchannel-conversation-scroll__container" },
      import_react196.default.createElement("div", { className: "sendbird-openchannel-conversation-scroll__container__padding" }),
      import_react196.default.createElement("div", { className: [
        "sendbird-openchannel-conversation-scroll__container__item-container",
        allMessages.length > 0 ? "" : "no-messages"
      ].join(" "), onScroll: handleOnScroll, ref: scrollRef }, memoizedMessageList)
    ),
    showScrollDownButton && import_react196.default.createElement(
      "div",
      { className: "sendbird-openchannel-conversation-scroll__container__scroll-bottom-button", onClick: scrollToBottom, onKeyDown: scrollToBottom, tabIndex: 0, role: "button" },
      import_react196.default.createElement(Icon, { width: "24px", height: "24px", type: IconTypes.CHEVRON_DOWN, fillColor: IconColors.CONTENT })
    )
  );
}
var OpenChannelMessageList$1 = import_react196.default.forwardRef(OpenChannelMessageList);

// node_modules/@sendbird/uikit-react/OpenChannel/components/OpenChannelUI.js
var import_react_dom84 = __toESM(require_react_dom(), 1);
var COMPONENT_CLASS_NAME = "sendbird-openchannel-conversation";
var OpenChannelUI = function(_a3) {
  var renderMessage = _a3.renderMessage, renderHeader = _a3.renderHeader, renderPlaceHolderEmptyList = _a3.renderPlaceHolderEmptyList, renderPlaceHolderError = _a3.renderPlaceHolderError, renderPlaceHolderLoading = _a3.renderPlaceHolderLoading, renderMessageInput = _a3.renderMessageInput, renderInput = _a3.renderInput;
  var _b2 = useOpenChannelContext(), currentOpenChannel = _b2.currentOpenChannel, amIBanned = _b2.amIBanned, loading = _b2.loading, isInvalid = _b2.isInvalid, messageInputRef = _b2.messageInputRef, conversationScrollRef = _b2.conversationScrollRef;
  if (!currentOpenChannel || !(currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.url) || amIBanned) {
    return (renderPlaceHolderError === null || renderPlaceHolderError === void 0 ? void 0 : renderPlaceHolderError()) || import_react197.default.createElement(
      "div",
      { className: COMPONENT_CLASS_NAME },
      import_react197.default.createElement(PlaceHolder, { type: PlaceHolderTypes.NO_CHANNELS })
    );
  }
  if (loading) {
    return (renderPlaceHolderLoading === null || renderPlaceHolderLoading === void 0 ? void 0 : renderPlaceHolderLoading()) || import_react197.default.createElement(
      "div",
      { className: COMPONENT_CLASS_NAME },
      import_react197.default.createElement(PlaceHolder, { type: PlaceHolderTypes.LOADING })
    );
  }
  if (isInvalid) {
    return (renderPlaceHolderError === null || renderPlaceHolderError === void 0 ? void 0 : renderPlaceHolderError()) || import_react197.default.createElement(
      "div",
      { className: COMPONENT_CLASS_NAME },
      import_react197.default.createElement(PlaceHolder, { type: PlaceHolderTypes.WRONG })
    );
  }
  var renderInputComponent = renderMessageInput || renderInput;
  return import_react197.default.createElement(
    "div",
    { className: COMPONENT_CLASS_NAME },
    (renderHeader === null || renderHeader === void 0 ? void 0 : renderHeader()) || import_react197.default.createElement(OpenchannelConversationHeader, null),
    (currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isFrozen) && import_react197.default.createElement(FrozenNotification2, null),
    import_react197.default.createElement(OpenChannelMessageList$1, { ref: conversationScrollRef, renderMessage, renderPlaceHolderEmptyList }),
    (renderInputComponent === null || renderInputComponent === void 0 ? void 0 : renderInputComponent()) || import_react197.default.createElement(OpenChannelInput, { ref: messageInputRef })
  );
};

// node_modules/@sendbird/uikit-react/OpenChannel.js
var import_react_dom85 = __toESM(require_react_dom(), 1);
var OpenChannel = function(props) {
  return import_react198.default.createElement(
    OpenChannelProvider,
    { channelUrl: props === null || props === void 0 ? void 0 : props.channelUrl, isMessageGroupingEnabled: props === null || props === void 0 ? void 0 : props.isMessageGroupingEnabled, queries: props === null || props === void 0 ? void 0 : props.queries, messageLimit: props === null || props === void 0 ? void 0 : props.messageLimit, onBeforeSendUserMessage: props === null || props === void 0 ? void 0 : props.onBeforeSendUserMessage, onBeforeSendFileMessage: props === null || props === void 0 ? void 0 : props.onBeforeSendFileMessage, onChatHeaderActionClick: props === null || props === void 0 ? void 0 : props.onChatHeaderActionClick, disableUserProfile: props === null || props === void 0 ? void 0 : props.disableUserProfile, renderUserProfile: props === null || props === void 0 ? void 0 : props.renderUserProfile, onBackClick: props === null || props === void 0 ? void 0 : props.onBackClick },
    import_react198.default.createElement(OpenChannelUI, { renderMessage: props === null || props === void 0 ? void 0 : props.renderMessage, renderHeader: props === null || props === void 0 ? void 0 : props.renderHeader, renderInput: props === null || props === void 0 ? void 0 : props.renderInput, renderMessageInput: props === null || props === void 0 ? void 0 : props.renderMessageInput, renderPlaceHolderEmptyList: props === null || props === void 0 ? void 0 : props.renderPlaceHolderEmptyList, renderPlaceHolderError: props === null || props === void 0 ? void 0 : props.renderPlaceHolderError, renderPlaceHolderLoading: props === null || props === void 0 ? void 0 : props.renderPlaceHolderLoading })
  );
};

// node_modules/@sendbird/uikit-react/OpenChannelSettings.js
var import_react208 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/OpenChannelSettings/components/OpenChannelSettingsUI.js
var import_react207 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/OpenChannelSettings/context.js
var import_react199 = __toESM(require_react(), 1);
var import_react_dom86 = __toESM(require_react_dom(), 1);
var OpenChannelSettingsContext = import_react199.default.createContext(null);
var OpenChannelSettingsProvider = function(props) {
  var _a3, _b2, _c, _d, _e3, _f, _g2, _h;
  var children = props.children, channelUrl = props.channelUrl, onCloseClick = props.onCloseClick, onChannelModified = props.onChannelModified, onBeforeUpdateChannel = props.onBeforeUpdateChannel, onDeleteChannel = props.onDeleteChannel;
  var globalStore = useSendbirdStateContext();
  var sdk = (_b2 = (_a3 = globalStore === null || globalStore === void 0 ? void 0 : globalStore.stores) === null || _a3 === void 0 ? void 0 : _a3.sdkStore) === null || _b2 === void 0 ? void 0 : _b2.sdk;
  var isSDKInitialized = (_d = (_c = globalStore === null || globalStore === void 0 ? void 0 : globalStore.stores) === null || _c === void 0 ? void 0 : _c.sdkStore) === null || _d === void 0 ? void 0 : _d.initialized;
  var logger = (_e3 = globalStore === null || globalStore === void 0 ? void 0 : globalStore.config) === null || _e3 === void 0 ? void 0 : _e3.logger;
  var currentUserId = (_f = sdk === null || sdk === void 0 ? void 0 : sdk.currentUser) === null || _f === void 0 ? void 0 : _f.userId;
  var _j = (0, import_react199.useState)(null), currentChannel = _j[0], setChannel = _j[1];
  var _k = (0, import_react199.useState)(false), isChannelInitialized = _k[0], setChannelInitialized = _k[1];
  (0, import_react199.useEffect)(function() {
    if (!channelUrl || !sdk.openChannel) {
      setChannel(null);
      return;
    }
    sdk.openChannel.getChannel(channelUrl).then(function(channel) {
      logger.info("open channel setting: fetched", channel);
      channel.enter().then(function() {
        setChannel(channel);
        logger.info("OpenChannelSettings | Succeeded to enter channel", channel === null || channel === void 0 ? void 0 : channel.url);
        setChannelInitialized(true);
      }).catch(function(error) {
        setChannel(null);
        logger.warning("OpenChannelSettings | Failed to enter channel", error);
      });
    }).catch(function(error) {
      logger.error("open channel setting: error fetching", error);
      setChannel(null);
    });
    return function() {
      if (currentChannel && currentChannel.exit) {
        currentChannel.exit().then(function() {
          logger.info("OpenChannelSettings | Succeeded to exit channel", currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url);
        }).catch(function(error) {
          logger.warning("OpenChannelSettings | Failed to exit channel", error);
        });
      }
    };
  }, [channelUrl, isSDKInitialized]);
  (0, import_react199.useEffect)(function() {
    var _a4;
    var channelHandlerId = uuidv4();
    if (currentChannel !== null && ((_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.openChannel) === null || _a4 === void 0 ? void 0 : _a4.addOpenChannelHandler)) {
      var channelHandlerParams = new Ae2({
        onOperatorUpdated: function(channel) {
          if ((channel === null || channel === void 0 ? void 0 : channel.url) === (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url)) {
            setChannel(channel);
          }
        },
        onUserMuted: function(channel, user) {
          if ((channel === null || channel === void 0 ? void 0 : channel.url) === (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) && (user === null || user === void 0 ? void 0 : user.userId) === currentUserId) {
            setChannel(channel);
          }
        },
        onUserUnmuted: function(channel, user) {
          if ((channel === null || channel === void 0 ? void 0 : channel.url) === (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) && (user === null || user === void 0 ? void 0 : user.userId) === currentUserId) {
            setChannel(channel);
          }
        },
        onUserBanned: function(channel, user) {
          if ((channel === null || channel === void 0 ? void 0 : channel.url) === (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url) && (user === null || user === void 0 ? void 0 : user.userId) === currentUserId) {
            setChannel(null);
          }
        },
        onUserUnbanned: function(channel, user) {
          if ((user === null || user === void 0 ? void 0 : user.userId) === currentUserId) {
            setChannel(channel);
          }
        },
        onChannelChanged: function(channel) {
          if ((channel === null || channel === void 0 ? void 0 : channel.url) === (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url)) {
            setChannel(channel);
          }
        },
        onChannelDeleted: function(channelUrl2) {
          if (channelUrl2 === (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.url)) {
            setChannel(null);
          }
        }
      });
      sdk.openChannel.addOpenChannelHandler(channelHandlerId, channelHandlerParams);
    }
    return function() {
      var _a5, _b3, _c2;
      if (((_a5 = sdk === null || sdk === void 0 ? void 0 : sdk.openChannel) === null || _a5 === void 0 ? void 0 : _a5.removeOpenChannelHandler) && channelHandlerId) {
        logger.info("OpenChannelSettings | Removing channel handlers", channelHandlerId);
        (_c2 = (_b3 = sdk.openChannel).removeOpenChannelHandler) === null || _c2 === void 0 ? void 0 : _c2.call(_b3, channelHandlerId);
      }
    };
  }, [channelUrl]);
  return import_react199.default.createElement(
    OpenChannelSettingsContext.Provider,
    { value: {
      channelUrl,
      channel: currentChannel,
      isChannelInitialized,
      setChannel,
      onCloseClick,
      onChannelModified,
      onBeforeUpdateChannel,
      onDeleteChannel
    } },
    import_react199.default.createElement(UserProfileProvider, { isOpenChannel: true, renderUserProfile: props === null || props === void 0 ? void 0 : props.renderUserProfile, disableUserProfile: (_g2 = props === null || props === void 0 ? void 0 : props.disableUserProfile) !== null && _g2 !== void 0 ? _g2 : (_h = globalStore === null || globalStore === void 0 ? void 0 : globalStore.config) === null || _h === void 0 ? void 0 : _h.disableUserProfile }, children)
  );
};
var useOpenChannelSettingsContext = function() {
  var context = import_react199.default.useContext(OpenChannelSettingsContext);
  if (!context)
    throw new Error("OpenChannelSettingsContext not found. Use within the OpenChannelSettings module.");
  return context;
};

// node_modules/@sendbird/uikit-react/OpenChannelSettings/components/OperatorUI.js
var import_react206 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/OpenChannelSettings/components/OpenChannelProfile.js
var import_react202 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ui/OpenChannelAvatar.js
var import_react200 = __toESM(require_react(), 1);
function ChannelAvatar2(_a3) {
  var channel = _a3.channel, theme = _a3.theme, _b2 = _a3.height, height = _b2 === void 0 ? 56 : _b2, _c = _a3.width, width = _c === void 0 ? 56 : _c;
  var stringSet2 = (0, import_react200.useContext)(LocalizationContext).stringSet;
  var memoizedAvatar = (0, import_react200.useMemo)(function() {
    return import_react200.default.createElement(Avatar$1, { className: "sendbird-chat-header__avatar--open-channel", src: getOpenChannelAvatar(channel), width: "".concat(width, "px"), height: "".concat(height, "px"), alt: (channel === null || channel === void 0 ? void 0 : channel.name) || stringSet2.OPEN_CHANNEL_SETTINGS__NO_TITLE });
  }, [channel === null || channel === void 0 ? void 0 : channel.coverUrl, theme]);
  return import_react200.default.createElement(import_react200.default.Fragment, null, memoizedAvatar);
}

// node_modules/@sendbird/uikit-react/OpenChannelSettings/components/EditDetailsModal.js
var import_react201 = __toESM(require_react(), 1);
var import_react_dom87 = __toESM(require_react_dom(), 1);
var EditDetails2 = function(props) {
  var onCancel = props.onCancel;
  var globalState = useSendbirdStateContext();
  var _a3 = globalState.config, logger = _a3.logger, theme = _a3.theme, pubSub = _a3.pubSub;
  var _b2 = useOpenChannelSettingsContext(), channel = _b2.channel, onBeforeUpdateChannel = _b2.onBeforeUpdateChannel, onChannelModified = _b2.onChannelModified, setChannel = _b2.setChannel;
  var inputRef = (0, import_react201.useRef)(null);
  var formRef = (0, import_react201.useRef)(null);
  var hiddenInputRef = (0, import_react201.useRef)(null);
  var _c = (0, import_react201.useState)(null), currentImg = _c[0], setCurrentImg = _c[1];
  var _d = (0, import_react201.useState)(null), newFile = _d[0], setNewFile = _d[1];
  var stringSet2 = (0, import_react201.useContext)(LocalizationContext).stringSet;
  var title = channel === null || channel === void 0 ? void 0 : channel.name;
  return import_react201.default.createElement(
    Modal,
    { isFullScreenOnMobile: true, titleText: stringSet2.MODAL__CHANNEL_INFORMATION__TITLE, submitText: stringSet2.BUTTON__SAVE, onCancel, onSubmit: function() {
      var _a4, _b3, _c2, _d2, _e3;
      if (title !== "" && !((_a4 = inputRef.current) === null || _a4 === void 0 ? void 0 : _a4.value)) {
        if ((_b3 = formRef.current) === null || _b3 === void 0 ? void 0 : _b3.reportValidity) {
          formRef.current.reportValidity();
        }
        return;
      }
      var currentTitle = (_d2 = (_c2 = inputRef.current) === null || _c2 === void 0 ? void 0 : _c2.value) !== null && _d2 !== void 0 ? _d2 : "";
      var currentImg2 = newFile;
      logger.info("ChannelSettings: Channel information being updated");
      var params = onBeforeUpdateChannel ? onBeforeUpdateChannel(currentTitle, currentImg2, (_e3 = channel === null || channel === void 0 ? void 0 : channel.data) !== null && _e3 !== void 0 ? _e3 : "") : {
        name: currentTitle,
        coverUrlOrImage: currentImg2 !== null && currentImg2 !== void 0 ? currentImg2 : void 0,
        data: channel === null || channel === void 0 ? void 0 : channel.data
      };
      logger.info("ChannelSettings: Updating channel information", params);
      channel === null || channel === void 0 ? void 0 : channel.updateChannel(params).then(function(updatedChannel) {
        logger.info("ChannelSettings: Channel information update succeeded", updatedChannel);
        onChannelModified === null || onChannelModified === void 0 ? void 0 : onChannelModified(updatedChannel);
        setChannel === null || setChannel === void 0 ? void 0 : setChannel(updatedChannel);
        pubSub === null || pubSub === void 0 ? void 0 : pubSub.publish(pubSubTopics.UPDATE_OPEN_CHANNEL, updatedChannel);
      }).catch(function(error) {
        logger.error("ChannelSettings: Channel infomation update failed", error);
        setChannel === null || setChannel === void 0 ? void 0 : setChannel(null);
      });
      onCancel();
    }, type: ButtonTypes.PRIMARY },
    import_react201.default.createElement(
      "form",
      { className: "channel-profile-form", ref: formRef, onSubmit: function(e4) {
        e4.preventDefault();
      } },
      import_react201.default.createElement(
        "div",
        { className: "channel-profile-form__img-section" },
        import_react201.default.createElement(InputLabel2, null, stringSet2.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE),
        import_react201.default.createElement("div", { className: "channel-profile-form__avatar" }, currentImg ? import_react201.default.createElement(Avatar$1, { height: "80px", width: "80px", src: currentImg }) : import_react201.default.createElement(ChannelAvatar2, { height: 80, width: 80, channel, theme })),
        import_react201.default.createElement("input", { ref: hiddenInputRef, type: "file", accept: "image/gif, image/jpeg, image/png", style: { display: "none" }, onChange: function(e4) {
          if (e4.target.files) {
            setCurrentImg(URL.createObjectURL(e4.target.files[0]));
            setNewFile(e4.target.files[0]);
          }
          if (hiddenInputRef.current)
            hiddenInputRef.current.value = "";
        } }),
        import_react201.default.createElement(
          TextButton,
          { className: "channel-profile-form__avatar-button", onClick: function() {
            var _a4;
            return (_a4 = hiddenInputRef.current) === null || _a4 === void 0 ? void 0 : _a4.click();
          }, disableUnderline: true },
          import_react201.default.createElement(Label, { type: LabelTypography.BUTTON_1, color: LabelColors.PRIMARY }, stringSet2.MODAL__CHANNEL_INFORMATION__UPLOAD)
        )
      ),
      import_react201.default.createElement(
        "div",
        { className: "channel-profile-form__name-section" },
        import_react201.default.createElement(InputLabel2, null, stringSet2.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME),
        import_react201.default.createElement(Input, { required: title !== "", name: "channel-profile-form__name", ref: inputRef, value: title, placeHolder: stringSet2.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER })
      )
    )
  );
};

// node_modules/@sendbird/uikit-react/OpenChannelSettings/components/OpenChannelProfile.js
var import_react_dom88 = __toESM(require_react_dom(), 1);
function ChannelProfile2() {
  var _a3, _b2;
  var globalState = useSendbirdStateContext();
  var disabled = !((_a3 = globalState === null || globalState === void 0 ? void 0 : globalState.config) === null || _a3 === void 0 ? void 0 : _a3.isOnline);
  var theme = (_b2 = globalState === null || globalState === void 0 ? void 0 : globalState.config) === null || _b2 === void 0 ? void 0 : _b2.theme;
  var channel = useOpenChannelSettingsContext().channel;
  var title = channel === null || channel === void 0 ? void 0 : channel.name;
  var _c = (0, import_react202.useState)(false), showModal = _c[0], setShowModal = _c[1];
  var stringSet2 = (0, import_react202.useContext)(LocalizationContext).stringSet;
  return import_react202.default.createElement(
    "div",
    { className: "sendbird-openchannel-profile" },
    import_react202.default.createElement(
      "div",
      { className: "sendbird-openchannel-profile--inner" },
      import_react202.default.createElement(
        "div",
        { className: "sendbird-openchannel-profile__avatar" },
        import_react202.default.createElement(ChannelAvatar2, { channel, theme, height: 80, width: 80 })
      ),
      import_react202.default.createElement(Label, { type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_1, className: "sendbird-openchannel-profile__title" }, title || stringSet2.OPEN_CHANNEL_SETTINGS__NO_TITLE),
      import_react202.default.createElement(
        TextButton,
        { disabled, className: "sendbird-openchannel-profile__edit", onClick: function() {
          if (disabled) {
            return;
          }
          setShowModal(true);
        }, disableUnderline: true },
        import_react202.default.createElement(Label, { type: LabelTypography.BUTTON_1, color: disabled ? LabelColors.ONBACKGROUND_2 : LabelColors.PRIMARY }, stringSet2.CHANNEL_SETTING__PROFILE__EDIT)
      ),
      showModal && import_react202.default.createElement(EditDetails2, { onCancel: function() {
        return setShowModal(false);
      } })
    )
  );
}

// node_modules/@sendbird/uikit-react/chunks/bundle-DX03rGyh.js
var import_react204 = __toESM(require_react(), 1);

// node_modules/@sendbird/uikit-react/ui/AccordionGroup.js
var import_react203 = __toESM(require_react(), 1);
var AccordionGroupContext = (0, import_react203.createContext)({
  openedListKeys: [],
  addOpenedListKey: noop,
  removeOpenedListKey: noop,
  clearOpenedListKeys: noop,
  allowMultipleOpen: false
});
var AccordionGroupProvider = function(_a3) {
  var className = _a3.className, children = _a3.children, _b2 = _a3.allowMultipleOpen, allowMultipleOpen = _b2 === void 0 ? false : _b2;
  var _c = (0, import_react203.useState)([]), openedListKeys = _c[0], setOpenedListKeys = _c[1];
  var addOpenedListKey = function(key) {
    setOpenedListKeys(function(prevList) {
      if (!allowMultipleOpen) {
        return [key];
      }
      prevList.push(key);
      return prevList;
    });
  };
  var removeOpenedListKey = function(key) {
    setOpenedListKeys(function(prevList) {
      return prevList.filter(function(k3) {
        return k3 !== key;
      });
    });
  };
  var clearOpenedListKeys = function() {
    setOpenedListKeys([]);
  };
  return import_react203.default.createElement(
    "div",
    { className: "sendbird-accordion-group-provider ".concat(className) },
    import_react203.default.createElement(AccordionGroupContext.Provider, { value: {
      openedListKeys,
      addOpenedListKey,
      removeOpenedListKey,
      clearOpenedListKeys,
      allowMultipleOpen
    } }, children)
  );
};
var useAccordionGroupContext = function() {
  var context = (0, import_react203.useContext)(AccordionGroupContext);
  if (!context)
    throw new Error("No accordion group context available. Make sure you are rending <AccordionGroupContext />.");
  return context;
};

// node_modules/@sendbird/uikit-react/chunks/bundle-DX03rGyh.js
var import_react_dom89 = __toESM(require_react_dom(), 1);
function ParticipantsModal(_a3) {
  var _b2, _c, _d;
  var onCancel = _a3.onCancel;
  var state = useSendbirdStateContext();
  var channel = useOpenChannelSettingsContext().channel;
  var stringSet2 = (0, import_react204.useContext)(LocalizationContext).stringSet;
  var _e3 = (0, import_react204.useState)([]), participants = _e3[0], setParticipants = _e3[1];
  var _f = (0, import_react204.useState)(null), participantListQuery = _f[0], setParticipantListQuery = _f[1];
  var userId = (_b2 = state === null || state === void 0 ? void 0 : state.config) === null || _b2 === void 0 ? void 0 : _b2.userId;
  var sdk = (_d = (_c = state === null || state === void 0 ? void 0 : state.stores) === null || _c === void 0 ? void 0 : _c.sdkStore) === null || _d === void 0 ? void 0 : _d.sdk;
  var isOperatorView = channel === null || channel === void 0 ? void 0 : channel.isOperator(userId);
  (0, import_react204.useEffect)(function() {
    if (!channel || !(channel === null || channel === void 0 ? void 0 : channel.createParticipantListQuery)) {
      return;
    }
    var participantListQuery2 = channel === null || channel === void 0 ? void 0 : channel.createParticipantListQuery({});
    setParticipantListQuery(participantListQuery2);
    participantListQuery2.next().then(function(participantList) {
      setParticipants(participantList);
    });
  }, []);
  return import_react204.default.createElement(
    "div",
    null,
    import_react204.default.createElement(
      Modal,
      { hideFooter: true, isFullScreenOnMobile: true, onCancel: function() {
        return onCancel();
      }, onSubmit: noop, titleText: stringSet2.OPEN_CHANNEL_SETTINGS__ALL_PARTICIPANTS_TITLE },
      import_react204.default.createElement("div", { className: "sendbird-more-members__popup-scroll", onScroll: function(e4) {
        if (participantListQuery) {
          var hasNext = participantListQuery.hasNext;
          var target = e4.target;
          var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;
          if (hasNext && fetchMore) {
            participantListQuery.next().then(function(fetchedParticipants) {
              setParticipants(__spreadArray(__spreadArray([], participants !== null && participants !== void 0 ? participants : [], true), fetchedParticipants, true));
            });
          }
        }
      } }, participants === null || participants === void 0 ? void 0 : participants.map(function(p4) {
        var _a4;
        var isOperator3 = channel === null || channel === void 0 ? void 0 : channel.isOperator(p4.userId);
        return import_react204.default.createElement(UserListItem, { user: p4, key: p4.userId, currentUser: (_a4 = sdk === null || sdk === void 0 ? void 0 : sdk.currentUser) === null || _a4 === void 0 ? void 0 : _a4.userId, action: userId !== p4.userId && isOperatorView ? function(_a5) {
          var actionRef = _a5.actionRef, parentRef = _a5.parentRef;
          return import_react204.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
            return import_react204.default.createElement(
              IconButton,
              { className: "sendbird-user-message__more__menu", width: "32px", height: "32px", onClick: toggleDropdown },
              import_react204.default.createElement(Icon, { width: "24px", height: "24px", type: IconTypes.MORE, fillColor: IconColors.CONTENT_INVERSE })
            );
          }, menuItems: function(closeDropdown) {
            return import_react204.default.createElement(
              MenuItems,
              { parentContainRef: parentRef, parentRef: actionRef, closeDropdown, openLeft: true },
              import_react204.default.createElement(OperatorMenuItem, { channel, user: p4, onChange: function() {
                return closeDropdown();
              }, onError: function() {
                closeDropdown();
              }, testID: "open_channel_setting_participant_context_menu_".concat(isOperator3 ? "unregister_operator" : "register_as_operator") }, isOperator3 ? stringSet2.OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR : stringSet2.OPEN_CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR),
              import_react204.default.createElement(MuteMenuItem, { channel, user: p4, onChange: function() {
                return closeDropdown();
              }, onError: function() {
                closeDropdown();
              }, testID: "open_channel_setting_participant_context_menu_".concat(p4.isMuted ? "unmute" : "mute") }, p4.isMuted ? stringSet2.OPEN_CHANNEL_SETTING__MODERATION__UNMUTE : stringSet2.OPEN_CHANNEL_SETTING__MODERATION__MUTE),
              import_react204.default.createElement(MenuItem, { onClick: function() {
                channel === null || channel === void 0 ? void 0 : channel.banUser(p4).then(function() {
                  closeDropdown();
                });
              }, testID: "open_channel_setting_participant_context_menu_ban" }, stringSet2.OPEN_CHANNEL_SETTING__MODERATION__BAN)
            );
          } });
        } : function() {
          return import_react204.default.createElement(import_react204.default.Fragment, null);
        } });
      }))
    )
  );
}
var UserListItem2 = function(_a3) {
  var user = _a3.user, currentUser = _a3.currentUser, isOperator3 = _a3.isOperator, action = _a3.action;
  var avatarRef = (0, import_react204.useRef)(null);
  var actionRef = (0, import_react204.useRef)(null);
  var _b2 = useUserProfileContext(), disableUserProfile = _b2.disableUserProfile, renderUserProfile = _b2.renderUserProfile;
  var stringSet2 = (0, import_react204.useContext)(LocalizationContext).stringSet;
  return import_react204.default.createElement(
    "div",
    { className: "sendbird-participants-accordion__member" },
    import_react204.default.createElement(
      "div",
      { className: "sendbird-participants-accordion__member-avatar" },
      import_react204.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
        return import_react204.default.createElement(
          import_react204.default.Fragment,
          null,
          import_react204.default.createElement(Avatar$1, { className: "sendbird-participants-accordion__member-avatar__avatar", onClick: function() {
            if (!disableUserProfile) {
              toggleDropdown();
            }
          }, ref: avatarRef, src: user.profileUrl, width: 24, height: 24 }),
          user instanceof Jt && user.isMuted ? import_react204.default.createElement(MutedAvatarOverlay, null) : ""
        );
      }, menuItems: function(closeDropdown) {
        return renderUserProfile ? renderUserProfile({
          user,
          currentUserId: currentUser !== null && currentUser !== void 0 ? currentUser : "",
          close: closeDropdown,
          avatarRef
        }) : import_react204.default.createElement(
          MenuItems,
          {
            openLeft: true,
            parentRef: avatarRef,
            // for catching location(x, y) of MenuItems
            parentContainRef: avatarRef,
            // for toggling more options(menus & reactions)
            closeDropdown,
            style: { paddingTop: "0px", paddingBottom: "0px" }
          },
          import_react204.default.createElement(UserProfile, { disableMessaging: true, user, currentUserId: currentUser, onSuccess: closeDropdown })
        );
      } })
    ),
    import_react204.default.createElement(
      Label,
      { className: "sendbird-participants-accordion__member__title", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_1 },
      user.nickname || stringSet2.NO_NAME,
      currentUser === user.userId && stringSet2.OPEN_CHANNEL_SETTINGS__MEMBERS__YOU
    ),
    // if there is now nickname, display userId
    !user.nickname && import_react204.default.createElement(Label, { className: "sendbird-participants-accordion__member__title user-id", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, user.userId),
    isOperator3 && import_react204.default.createElement(Label, { className: "sendbird-participants-accordion__member__title\n                ".concat((user === null || user === void 0 ? void 0 : user.userId) !== currentUser ? "operator" : "", "\n                ").concat((user === null || user === void 0 ? void 0 : user.userId) === currentUser ? "self-operator" : "", "\n              "), type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_2 }, stringSet2.OPEN_CHANNEL_SETTINGS__MEMBERS__OPERATOR),
    action && import_react204.default.createElement("div", { className: "sendbird-participants-accordion__member__action", ref: actionRef }, action({ actionRef }))
  );
};
function ParticipantList(_a3) {
  var _b2;
  var _c = _a3.isOperatorView, isOperatorView = _c === void 0 ? false : _c;
  var globalState = useSendbirdStateContext();
  var currentUserId = (_b2 = globalState === null || globalState === void 0 ? void 0 : globalState.config) === null || _b2 === void 0 ? void 0 : _b2.userId;
  var channel = useOpenChannelSettingsContext().channel;
  var stringSet2 = (0, import_react204.useContext)(LocalizationContext).stringSet;
  var _d = (0, import_react204.useState)(null), participants = _d[0], setParticipants = _d[1];
  var _e3 = (0, import_react204.useState)(null), participantListQuery = _e3[0], setParticipantListQuery = _e3[1];
  var _f = (0, import_react204.useState)(false), showParticipantsModal = _f[0], setShowParticipantsModal = _f[1];
  (0, import_react204.useEffect)(function() {
    if (!channel || !(channel === null || channel === void 0 ? void 0 : channel.createParticipantListQuery)) {
      return;
    }
    var participantListQuery2 = channel === null || channel === void 0 ? void 0 : channel.createParticipantListQuery({ limit: 10 });
    setParticipantListQuery(participantListQuery2);
    participantListQuery2.next().then(function(participants2) {
      setParticipants(participants2);
    });
  }, [channel]);
  var refreshList = (0, import_react204.useCallback)(function() {
    if (!channel) {
      setParticipants([]);
      return;
    }
    var participantListQuery2 = channel === null || channel === void 0 ? void 0 : channel.createParticipantListQuery({ limit: 10 });
    participantListQuery2.next().then(function(participants2) {
      setParticipants(participants2);
    });
  }, [channel]);
  return import_react204.default.createElement(
    "div",
    { className: "sendbird-openchannel-settings__participant-list", onScroll: function(e4) {
      if (participantListQuery) {
        var hasNext = participantListQuery.hasNext;
        var target = e4.target;
        var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;
        if (hasNext && fetchMore) {
          participantListQuery.next().then(function(fetchedParticipants) {
            setParticipants(__spreadArray(__spreadArray([], participants !== null && participants !== void 0 ? participants : [], true), fetchedParticipants, true));
          });
        }
      }
    } },
    import_react204.default.createElement(
      "div",
      null,
      participants === null || participants === void 0 ? void 0 : participants.map(function(p4) {
        var isOperator3 = channel === null || channel === void 0 ? void 0 : channel.isOperator(p4.userId);
        return import_react204.default.createElement(UserListItem2, { user: p4, currentUser: currentUserId, key: p4.userId, isOperator: isOperator3, action: function(_a4) {
          var actionRef = _a4.actionRef;
          return isOperatorView && currentUserId !== (p4 === null || p4 === void 0 ? void 0 : p4.userId) ? import_react204.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
            return import_react204.default.createElement(
              IconButton,
              { className: "sendbird-openchannel-participant-list__menu", width: "32px", height: "32px", onClick: toggleDropdown },
              import_react204.default.createElement(Icon, { width: "24px", height: "24px", type: IconTypes.MORE, fillColor: IconColors.CONTENT_INVERSE })
            );
          }, menuItems: function(closeDropdown) {
            return import_react204.default.createElement(
              MenuItems,
              { parentRef: actionRef, closeDropdown, openLeft: true },
              import_react204.default.createElement(OperatorMenuItem, { channel, user: p4, onChange: function() {
                closeDropdown();
                refreshList();
              }, onError: function() {
                closeDropdown();
              }, testID: "open_channel_setting_partitipant_conext_menu_".concat(isOperator3 ? "unregister_operator" : "register_as_operator") }, isOperator3 ? stringSet2.OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR : stringSet2.OPEN_CHANNEL_SETTING__MODERATION__REGISTER_AS_OPERATOR),
              import_react204.default.createElement(MuteMenuItem, { channel, user: p4, onChange: function() {
                closeDropdown();
                refreshList();
              }, onError: function() {
                closeDropdown();
              }, testID: "open_channel_setting_partitipant_conext_menu_".concat(p4.isMuted ? "unmute" : "mute") }, p4.isMuted ? stringSet2.OPEN_CHANNEL_SETTING__MODERATION__UNMUTE : stringSet2.OPEN_CHANNEL_SETTING__MODERATION__MUTE),
              import_react204.default.createElement(MenuItem, { onClick: function() {
                channel === null || channel === void 0 ? void 0 : channel.banUser(p4).then(function() {
                  closeDropdown();
                  refreshList();
                });
              }, testID: "open_channel_setting_partitipant_conext_menu_ban" }, stringSet2.OPEN_CHANNEL_SETTING__MODERATION__BAN)
            );
          } }) : null;
        } });
      }),
      participants && participants.length === 0 ? import_react204.default.createElement(Label, { className: "sendbird-channel-settings__empty-list", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_3 }, stringSet2.OPEN_CHANNEL_SETTINGS__EMPTY_LIST) : null,
      import_react204.default.createElement("div", { className: "sendbird-openchannel-participant-list__footer" }, (participantListQuery === null || participantListQuery === void 0 ? void 0 : participantListQuery.hasNext) && import_react204.default.createElement(Button, { type: ButtonTypes.SECONDARY, size: ButtonSizes.SMALL, onClick: function() {
        return setShowParticipantsModal(true);
      } }, stringSet2.OPEN_CHANNEL_SETTINGS__ALL_PARTICIPANTS_TITLE)),
      showParticipantsModal && import_react204.default.createElement(ParticipantsModal, { onCancel: function() {
        setShowParticipantsModal(false);
        refreshList();
      } })
    )
  );
}

// node_modules/@sendbird/uikit-react/ui/Accordion.js
var import_react205 = __toESM(require_react(), 1);
var Accordion = function(_a3) {
  var className = _a3.className, id2 = _a3.id, renderTitle = _a3.renderTitle, renderContent = _a3.renderContent, renderFooter = _a3.renderFooter;
  var _b2 = useAccordionGroupContext(), openedListKeys = _b2.openedListKeys, addOpenedListKey = _b2.addOpenedListKey, removeOpenedListKey = _b2.removeOpenedListKey;
  var isOpened = (0, import_react205.useMemo)(function() {
    return openedListKeys.includes(id2);
  }, [openedListKeys]);
  var handleClick = function() {
    if (isOpened) {
      removeOpenedListKey(id2);
    } else {
      addOpenedListKey(id2);
    }
  };
  return import_react205.default.createElement(
    "div",
    { className: classnames("sendbird-accordion", className, isOpened ? "sendbird-accordion--opened" : "sendbird-accordion--closed") },
    import_react205.default.createElement(
      "div",
      { className: "sendbird-accordion__panel-header", id: id2, role: "switch", "aria-checked": false, onClick: handleClick, onKeyDown: handleClick, tabIndex: 0 },
      renderTitle(),
      import_react205.default.createElement(Icon, { type: IconTypes.CHEVRON_RIGHT, className: [
        "sendbird-accordion__panel-icon-right",
        "sendbird-accordion__panel-icon--chevron",
        isOpened ? "sendbird-accordion__panel-icon--open" : ""
      ].join(" "), height: "24px", width: "24px" })
    ),
    isOpened && import_react205.default.createElement(
      "div",
      { className: "sendbird-accordion-opened-list" },
      import_react205.default.createElement("div", { className: "sendbird-accordion__list" }, renderContent()),
      renderFooter && import_react205.default.createElement("div", { className: "sendbird-accordion__footer" }, renderFooter())
    )
  );
};
var AccordionGroup = AccordionGroupProvider;

// node_modules/@sendbird/uikit-react/OpenChannelSettings/components/OperatorUI.js
var import_react_dom90 = __toESM(require_react_dom(), 1);
function DeleteChannel() {
  var _a3, _b2;
  var _c = (0, import_react206.useState)(false), showDeleteChannelModal = _c[0], setShowDeleteChannelModal = _c[1];
  var stringSet2 = (0, import_react206.useContext)(LocalizationContext).stringSet;
  var globalState = useSendbirdStateContext();
  var isOnline = (_a3 = globalState === null || globalState === void 0 ? void 0 : globalState.config) === null || _a3 === void 0 ? void 0 : _a3.isOnline;
  var logger = (_b2 = globalState === null || globalState === void 0 ? void 0 : globalState.config) === null || _b2 === void 0 ? void 0 : _b2.logger;
  var _d = useOpenChannelSettingsContext(), channel = _d.channel, onDeleteChannel = _d.onDeleteChannel;
  var deleteChannel = function() {
    channel === null || channel === void 0 ? void 0 : channel.delete().then(function(response) {
      logger.info("OpenChannelSettings: Delete channel success", response);
      if (onDeleteChannel) {
        onDeleteChannel(channel);
      }
    }).catch(function(error) {
      logger.warning("OpenChannelSettings: Delete channel failed", error);
    });
  };
  return import_react206.default.createElement(
    import_react206.default.Fragment,
    null,
    import_react206.default.createElement(
      "div",
      { className: "sendbird-openchannel-settings__panel-item\n          sendbird-openchannel-settings__delete-channel\n            ".concat(!isOnline ? "sendbird-openchannel-settings__panel-item__disabled" : ""), role: "button", tabIndex: 0, onKeyDown: function() {
        if (!isOnline) {
          return;
        }
        setShowDeleteChannelModal(true);
      }, onClick: function() {
        if (!isOnline) {
          return;
        }
        setShowDeleteChannelModal(true);
      } },
      import_react206.default.createElement(Icon, { type: IconTypes.DELETE, fillColor: IconColors.ERROR, className: [
        "sendbird-openchannel-settings__panel-icon-left",
        "sendbird-openchannel-settings__panel-icon__delete"
      ].join(" "), height: "24px", width: "24px" }),
      import_react206.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_PANEL)
    ),
    showDeleteChannelModal && import_react206.default.createElement(Modal, { isFullScreenOnMobile: true, onCancel: function() {
      setShowDeleteChannelModal(false);
    }, onSubmit: function() {
      deleteChannel();
    }, titleText: stringSet2.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_TITLE, submitText: stringSet2.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_SUBMIT }, stringSet2.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_CONTEXT)
  );
}
function OperatorListModal(_a3) {
  var _b2;
  var onCancel = _a3.onCancel;
  var _c = (0, import_react206.useState)([]), users = _c[0], setUsers = _c[1];
  var _d = (0, import_react206.useState)(null), operatorQuery = _d[0], setOperatorQuery = _d[1];
  var channel = useOpenChannelSettingsContext().channel;
  var state = useSendbirdStateContext();
  var currentUserId = (_b2 = state === null || state === void 0 ? void 0 : state.config) === null || _b2 === void 0 ? void 0 : _b2.userId;
  var stringSet2 = (0, import_react206.useContext)(LocalizationContext).stringSet;
  (0, import_react206.useEffect)(function() {
    var operatorListQuery = channel === null || channel === void 0 ? void 0 : channel.createOperatorListQuery({
      limit: 20
    });
    if (operatorListQuery) {
      operatorListQuery.next().then(function(participants) {
        setUsers(participants);
      });
      setOperatorQuery(operatorListQuery);
    }
  }, []);
  return import_react206.default.createElement(
    "div",
    null,
    import_react206.default.createElement(
      Modal,
      { hideFooter: true, isFullScreenOnMobile: true, titleText: stringSet2.OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ALL, onCancel },
      import_react206.default.createElement("div", { className: "sendbird-more-users__popup-scroll", onScroll: function(e4) {
        var hasNext = operatorQuery === null || operatorQuery === void 0 ? void 0 : operatorQuery.hasNext;
        var target = e4.target;
        var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;
        if (hasNext && fetchMore) {
          operatorQuery.next().then(function(o3) {
            setUsers(__spreadArray(__spreadArray([], users, true), o3, true));
          });
        }
      } }, users.map(function(operator) {
        return import_react206.default.createElement(UserListItem, { currentUser: currentUserId, user: operator, key: operator.userId, action: function(_a4) {
          var parentRef = _a4.parentRef, actionRef = _a4.actionRef;
          return currentUserId !== (operator === null || operator === void 0 ? void 0 : operator.userId) ? import_react206.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
            return import_react206.default.createElement(
              IconButton,
              { className: "sendbird-user-message__more__menu", width: "32px", height: "32px", onClick: toggleDropdown },
              import_react206.default.createElement(Icon, { width: "24px", height: "24px", type: IconTypes.MORE, fillColor: IconColors.CONTENT_INVERSE })
            );
          }, menuItems: function(closeDropdown) {
            return import_react206.default.createElement(
              MenuItems,
              { parentContainRef: parentRef, parentRef: actionRef, closeDropdown, openLeft: true },
              import_react206.default.createElement(MenuItem, { onClick: function() {
                channel === null || channel === void 0 ? void 0 : channel.removeOperators([operator.userId]).then(function() {
                  setUsers(users.filter(function(_a5) {
                    var userId = _a5.userId;
                    return userId !== operator.userId;
                  }));
                });
                closeDropdown();
              }, testID: "open_channel_setting_operator_context_menu_unregister_operator" }, stringSet2.OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR)
            );
          } }) : import_react206.default.createElement(import_react206.default.Fragment, null);
        } });
      }))
    )
  );
}
function AddOperatorsModal2(_a3) {
  var onCancel = _a3.onCancel, onSubmit = _a3.onSubmit;
  var _b2 = (0, import_react206.useState)([]), participants = _b2[0], setParticipants = _b2[1];
  var _c = (0, import_react206.useState)({}), selectedUsers = _c[0], setSelectedUsers = _c[1];
  var _d = (0, import_react206.useState)(null), participantQuery = _d[0], setParticipantQuery = _d[1];
  var stringSet2 = (0, import_react206.useContext)(LocalizationContext).stringSet;
  var channel = useOpenChannelSettingsContext().channel;
  (0, import_react206.useEffect)(function() {
    var participantListQuery = channel === null || channel === void 0 ? void 0 : channel.createParticipantListQuery({
      limit: 20
    });
    if (participantListQuery) {
      participantListQuery.next().then(function(users) {
        setParticipants(users);
      });
      setParticipantQuery(participantListQuery);
    }
  }, []);
  var selectedCount = Object.keys(selectedUsers).filter(function(m5) {
    return selectedUsers[m5];
  }).length;
  return import_react206.default.createElement(
    import_react206.default.Fragment,
    null,
    import_react206.default.createElement(
      Modal,
      { isFullScreenOnMobile: true, type: ButtonTypes.PRIMARY, submitText: stringSet2.CHANNEL_SETTING__OPERATORS__ADD_BUTTON, onCancel, onSubmit: function() {
        var users = Object.keys(selectedUsers).filter(function(m5) {
          return selectedUsers[m5];
        });
        channel === null || channel === void 0 ? void 0 : channel.addOperators(users).then(function() {
          onSubmit(users);
        });
      }, titleText: stringSet2.OPEN_CHANNEL_CONVERSATION__SELECT_PARTICIPANTS },
      import_react206.default.createElement(Label, { color: selectedCount > 0 ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3, type: LabelTypography.CAPTION_1 }, "".concat(selectedCount, " ").concat(stringSet2.MODAL__INVITE_MEMBER__SELECTED)),
      import_react206.default.createElement("div", { className: "sendbird-more-users__popup-scroll", onScroll: function(e4) {
        var hasNext = participantQuery ? participantQuery.hasNext : false;
        var target = e4.target;
        var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;
        if (hasNext && fetchMore && participantQuery) {
          participantQuery.next().then(function(o3) {
            setParticipants(__spreadArray(__spreadArray([], participants, true), o3, true));
          });
        }
      } }, participants.map(function(participant) {
        var isOperator3 = (channel === null || channel === void 0 ? void 0 : channel.operators.find(function(operator) {
          return (operator === null || operator === void 0 ? void 0 : operator.userId) === (participant === null || participant === void 0 ? void 0 : participant.userId);
        })) ? true : false;
        return import_react206.default.createElement(UserListItem, { user: participant, key: participant.userId, checkBox: true, checked: selectedUsers[participant.userId] || isOperator3, disabled: isOperator3, isOperator: isOperator3, onChange: function(event) {
          var _a4;
          var modifiedSelectedUsers = __assign(__assign({}, selectedUsers), (_a4 = {}, _a4[event.target.id] = event.target.checked, _a4));
          if (!event.target.checked) {
            delete modifiedSelectedUsers[event.target.id];
          }
          setSelectedUsers(modifiedSelectedUsers);
        } });
      }))
    )
  );
}
var OperatorList2 = function() {
  var _a3, _b2;
  var _c = (0, import_react206.useState)(false), showAdd = _c[0], setShowAdd = _c[1];
  var _d = (0, import_react206.useState)(false), showMore = _d[0], setShowMore = _d[1];
  var state = useSendbirdStateContext();
  var currentUserId = (_a3 = state === null || state === void 0 ? void 0 : state.config) === null || _a3 === void 0 ? void 0 : _a3.userId;
  var stringSet2 = (0, import_react206.useContext)(LocalizationContext).stringSet;
  var channel = useOpenChannelSettingsContext().channel;
  return import_react206.default.createElement(
    "div",
    null,
    (_b2 = channel === null || channel === void 0 ? void 0 : channel.operators) === null || _b2 === void 0 ? void 0 : _b2.slice(0, 10).map(function(operator) {
      return import_react206.default.createElement(UserListItem2, { key: operator.userId, user: operator, currentUser: currentUserId, action: function(_a4) {
        var actionRef = _a4.actionRef;
        return currentUserId !== (operator === null || operator === void 0 ? void 0 : operator.userId) ? import_react206.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
          return import_react206.default.createElement(
            IconButton,
            { className: "sendbird-openchannel-operator-list__menu", width: "32px", height: "32px", onClick: toggleDropdown },
            import_react206.default.createElement(Icon, { width: "24px", height: "24px", type: IconTypes.MORE, fillColor: IconColors.CONTENT_INVERSE })
          );
        }, menuItems: function(closeDropdown) {
          return import_react206.default.createElement(
            MenuItems,
            { parentRef: actionRef, closeDropdown, openLeft: true },
            import_react206.default.createElement(MenuItem, { onClick: function() {
              channel === null || channel === void 0 ? void 0 : channel.removeOperators([operator.userId]).then(function() {
                closeDropdown();
              });
            }, testID: "open_channel_setting_operator_context_menu_unregister_operator" }, stringSet2.OPEN_CHANNEL_SETTING__MODERATION__UNREGISTER_OPERATOR),
            import_react206.default.createElement(MuteMenuItem, { channel, user: operator, onChange: function() {
              return closeDropdown();
            }, onError: function() {
              closeDropdown();
            }, testID: "open_channel_setting_operator_context_menu_".concat(operator.isMuted ? "unmute" : "mute") }, operator.isMuted ? stringSet2.OPEN_CHANNEL_SETTING__MODERATION__UNMUTE : stringSet2.OPEN_CHANNEL_SETTING__MODERATION__MUTE),
            import_react206.default.createElement(MenuItem, { onClick: function() {
              channel === null || channel === void 0 ? void 0 : channel.banUser(operator).then(function() {
                closeDropdown();
              });
            }, testID: "open_channel_setting_operator_context_menu_ban" }, stringSet2.OPEN_CHANNEL_SETTING__MODERATION__BAN)
          );
        } }) : import_react206.default.createElement(import_react206.default.Fragment, null);
      } });
    }),
    import_react206.default.createElement(
      "div",
      { className: "sendbird-openchannel-operator-list__footer" },
      import_react206.default.createElement(Button, { type: ButtonTypes.SECONDARY, size: ButtonSizes.SMALL, onClick: function() {
        setShowAdd(true);
      } }, stringSet2.OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ADD),
      (channel === null || channel === void 0 ? void 0 : channel.operators) && channel.operators.length > 10 && import_react206.default.createElement(Button, { type: ButtonTypes.SECONDARY, size: ButtonSizes.SMALL, onClick: function() {
        setShowMore(true);
      } }, stringSet2.OPEN_CHANNEL_SETTINGS__OPERATORS__TITLE_ALL)
    ),
    showMore && import_react206.default.createElement(
      import_react206.default.Fragment,
      null,
      import_react206.default.createElement(OperatorListModal, { onCancel: function() {
        setShowMore(false);
      } })
    ),
    showAdd && import_react206.default.createElement(
      import_react206.default.Fragment,
      null,
      import_react206.default.createElement(AddOperatorsModal2, { onCancel: function() {
        return setShowAdd(false);
      }, onSubmit: function() {
        setShowAdd(false);
      } })
    )
  );
};
function MutedParticipantsModal(_a3) {
  var _b2;
  var onCancel = _a3.onCancel;
  var _c = (0, import_react206.useState)([]), mutedUsers = _c[0], setMutedUsers = _c[1];
  var _d = (0, import_react206.useState)(null), userListQuery = _d[0], setUserListQuery = _d[1];
  var channel = useOpenChannelSettingsContext().channel;
  var state = useSendbirdStateContext();
  var currentUserId = (_b2 = state === null || state === void 0 ? void 0 : state.config) === null || _b2 === void 0 ? void 0 : _b2.userId;
  var stringSet2 = (0, import_react206.useContext)(LocalizationContext).stringSet;
  (0, import_react206.useEffect)(function() {
    var mutedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMutedUserListQuery({
      limit: 10
    });
    mutedUserListQuery === null || mutedUserListQuery === void 0 ? void 0 : mutedUserListQuery.next().then(function(users) {
      setMutedUsers(users);
    });
    if (mutedUserListQuery) {
      setUserListQuery(mutedUserListQuery);
    }
  }, []);
  return import_react206.default.createElement(
    "div",
    null,
    import_react206.default.createElement(
      Modal,
      { isFullScreenOnMobile: true, hideFooter: true, onCancel: function() {
        return onCancel();
      }, onSubmit: noop, titleText: stringSet2.OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE },
      import_react206.default.createElement("div", { className: "sendbird-more-members__popup-scroll", onScroll: function(e4) {
        var hasNext = userListQuery === null || userListQuery === void 0 ? void 0 : userListQuery.hasNext;
        var target = e4.target;
        var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;
        if (hasNext && fetchMore) {
          userListQuery.next().then(function(o3) {
            setMutedUsers(__spreadArray(__spreadArray([], mutedUsers, true), o3, true));
          });
        }
      } }, mutedUsers.map(function(mutedUser) {
        return import_react206.default.createElement(UserListItem, { currentUser: currentUserId, user: mutedUser, key: mutedUser.userId, action: function(_a4) {
          var actionRef = _a4.actionRef;
          return (mutedUser === null || mutedUser === void 0 ? void 0 : mutedUser.userId) !== currentUserId ? import_react206.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
            return import_react206.default.createElement(
              IconButton,
              { className: "sendbird-user-message__more__menu", width: "32px", height: "32px", onClick: toggleDropdown },
              import_react206.default.createElement(Icon, { width: "24px", height: "24px", type: IconTypes.MORE, fillColor: IconColors.CONTENT_INVERSE })
            );
          }, menuItems: function(closeDropdown) {
            return import_react206.default.createElement(
              MenuItems,
              { parentRef: actionRef, closeDropdown, openLeft: true },
              import_react206.default.createElement(MenuItem, { onClick: function() {
                channel === null || channel === void 0 ? void 0 : channel.unmuteUser(mutedUser).then(function() {
                  closeDropdown();
                  setMutedUsers(mutedUsers.filter(function(u4) {
                    return u4.userId !== mutedUser.userId;
                  }));
                });
              }, testID: "open_channel_setting_muted_member_context_menu_unmute" }, stringSet2.OPEN_CHANNEL_SETTING__MODERATION__UNMUTE)
            );
          } }) : import_react206.default.createElement(import_react206.default.Fragment, null);
        } });
      }))
    )
  );
}
var MutedParticipantList = function() {
  var _a3;
  var _b2 = (0, import_react206.useState)([]), mutedUsers = _b2[0], setMutedUsers = _b2[1];
  var _c = (0, import_react206.useState)(false), hasNext = _c[0], setHasNext = _c[1];
  var _d = (0, import_react206.useState)(false), showModal = _d[0], setShowModal = _d[1];
  var channel = useOpenChannelSettingsContext().channel;
  var state = useSendbirdStateContext();
  var currentUserId = (_a3 = state === null || state === void 0 ? void 0 : state.config) === null || _a3 === void 0 ? void 0 : _a3.userId;
  var stringSet2 = (0, import_react206.useContext)(LocalizationContext).stringSet;
  (0, import_react206.useEffect)(function() {
    if (!channel) {
      setMutedUsers([]);
      return;
    }
    var mutedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMutedUserListQuery({
      limit: 10
    });
    mutedUserListQuery.next().then(function(members) {
      setMutedUsers(members);
      setHasNext(mutedUserListQuery.hasNext);
    });
  }, [channel]);
  var refreshList = (0, import_react206.useCallback)(function() {
    if (!channel) {
      setMutedUsers([]);
      return;
    }
    var mutedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMutedUserListQuery({
      limit: 10
    });
    mutedUserListQuery.next().then(function(members) {
      setMutedUsers(members);
      setHasNext(mutedUserListQuery.hasNext);
    });
  }, [channel]);
  return import_react206.default.createElement(
    import_react206.default.Fragment,
    null,
    mutedUsers.map(function(mutedUser) {
      return import_react206.default.createElement(UserListItem2, { key: mutedUser.userId, user: mutedUser, currentUser: currentUserId, isOperator: channel === null || channel === void 0 ? void 0 : channel.isOperator(mutedUser.userId), action: function(_a4) {
        var actionRef = _a4.actionRef;
        return (mutedUser === null || mutedUser === void 0 ? void 0 : mutedUser.userId) !== currentUserId ? import_react206.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
          return import_react206.default.createElement(
            IconButton,
            { className: "sendbird-user-message__more__menu", width: "32px", height: "32px", onClick: toggleDropdown },
            import_react206.default.createElement(Icon, { width: "24px", height: "24px", type: IconTypes.MORE, fillColor: IconColors.CONTENT_INVERSE })
          );
        }, menuItems: function(closeDropdown) {
          return import_react206.default.createElement(
            MenuItems,
            { closeDropdown, openLeft: true, parentRef: actionRef },
            import_react206.default.createElement(MenuItem, { onClick: function() {
              channel === null || channel === void 0 ? void 0 : channel.unmuteUser(mutedUser).then(function() {
                refreshList();
                closeDropdown();
              });
            }, testID: "open_channel_setting_muted_member_context_menu_unmute" }, stringSet2.OPEN_CHANNEL_SETTING__MODERATION__UNMUTE)
          );
        } }) : import_react206.default.createElement(import_react206.default.Fragment, null);
      } });
    }),
    mutedUsers && mutedUsers.length === 0 && import_react206.default.createElement(Label, { className: "sendbird-channel-settings__empty-list", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_3 }, stringSet2.OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__NO_ONE),
    hasNext && import_react206.default.createElement(
      "div",
      { className: "sendbird-channel-settings-muted-participant-list__footer" },
      import_react206.default.createElement(Button, { type: ButtonTypes.SECONDARY, size: ButtonSizes.SMALL, onClick: function() {
        setShowModal(true);
      } }, stringSet2.OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE_ALL)
    ),
    showModal && import_react206.default.createElement(MutedParticipantsModal, { onCancel: function() {
      setShowModal(false);
      refreshList();
    } })
  );
};
function BannedUsersModal2(_a3) {
  var _b2;
  var onCancel = _a3.onCancel;
  var _c = (0, import_react206.useState)([]), bannedUsers = _c[0], setBannedUsers = _c[1];
  var _d = (0, import_react206.useState)(null), userListQuery = _d[0], setUserListQuery = _d[1];
  var channel = useOpenChannelSettingsContext().channel;
  var state = useSendbirdStateContext();
  var stringSet2 = (0, import_react206.useContext)(LocalizationContext).stringSet;
  var currentUserId = (_b2 = state === null || state === void 0 ? void 0 : state.config) === null || _b2 === void 0 ? void 0 : _b2.userId;
  (0, import_react206.useEffect)(function() {
    var bannedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery();
    bannedUserListQuery === null || bannedUserListQuery === void 0 ? void 0 : bannedUserListQuery.next().then(function(users) {
      setBannedUsers(users);
    });
    setUserListQuery(bannedUserListQuery !== null && bannedUserListQuery !== void 0 ? bannedUserListQuery : null);
  }, []);
  return import_react206.default.createElement(
    "div",
    null,
    import_react206.default.createElement(
      Modal,
      { hideFooter: true, isFullScreenOnMobile: true, onCancel: function() {
        return onCancel();
      }, onSubmit: noop, titleText: stringSet2.OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE },
      import_react206.default.createElement("div", { className: "sendbird-more-members__popup-scroll", onScroll: function(e4) {
        var hasNext = userListQuery === null || userListQuery === void 0 ? void 0 : userListQuery.hasNext;
        var target = e4.target;
        var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;
        if (hasNext && fetchMore) {
          userListQuery.next().then(function(o3) {
            setBannedUsers(__spreadArray(__spreadArray([], bannedUsers, true), o3, true));
          });
        }
      } }, bannedUsers.map(function(bannedUser) {
        return import_react206.default.createElement(UserListItem, { user: bannedUser, key: bannedUser.userId, action: function(_a4) {
          var actionRef = _a4.actionRef;
          return (bannedUser === null || bannedUser === void 0 ? void 0 : bannedUser.userId) !== currentUserId ? import_react206.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
            return import_react206.default.createElement(
              IconButton,
              { className: "sendbird-user-message__more__menu", width: "32px", height: "32px", onClick: toggleDropdown },
              import_react206.default.createElement(Icon, { width: "24px", height: "24px", type: IconTypes.MORE, fillColor: IconColors.CONTENT_INVERSE })
            );
          }, menuItems: function(closeDropdown) {
            return import_react206.default.createElement(
              MenuItems,
              { parentRef: actionRef, closeDropdown, openLeft: true },
              import_react206.default.createElement(MenuItem, { onClick: function() {
                channel === null || channel === void 0 ? void 0 : channel.unbanUser(bannedUser).then(function() {
                  closeDropdown();
                  setBannedUsers(bannedUsers.filter(function(u4) {
                    return u4.userId !== bannedUser.userId;
                  }));
                });
              }, testID: "open_channel_setting_banned_user_context_menu_unban" }, stringSet2.OPEN_CHANNEL_SETTING__MODERATION__UNBAN)
            );
          } }) : import_react206.default.createElement(import_react206.default.Fragment, null);
        } });
      }))
    )
  );
}
var BannedUserList2 = function() {
  var _a3;
  var _b2 = (0, import_react206.useState)([]), bannedUsers = _b2[0], setBannedUsers = _b2[1];
  var _c = (0, import_react206.useState)(false), hasNext = _c[0], setHasNext = _c[1];
  var _d = (0, import_react206.useState)(false), showModal = _d[0], setShowModal = _d[1];
  var channel = useOpenChannelSettingsContext().channel;
  var state = useSendbirdStateContext();
  var stringSet2 = (0, import_react206.useContext)(LocalizationContext).stringSet;
  var currentUserId = (_a3 = state === null || state === void 0 ? void 0 : state.config) === null || _a3 === void 0 ? void 0 : _a3.userId;
  (0, import_react206.useEffect)(function() {
    if (!channel) {
      setBannedUsers([]);
      return;
    }
    var bannedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery();
    bannedUserListQuery.next().then(function(users) {
      setBannedUsers(users);
      setHasNext(bannedUserListQuery.hasNext);
    });
  }, [channel]);
  var refreshList = (0, import_react206.useCallback)(function() {
    if (!channel) {
      setBannedUsers([]);
      return;
    }
    var bannedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery();
    bannedUserListQuery.next().then(function(users) {
      setBannedUsers(users);
      setHasNext(bannedUserListQuery.hasNext);
    });
  }, [channel]);
  return import_react206.default.createElement(
    import_react206.default.Fragment,
    null,
    bannedUsers.map(function(bannedUser) {
      return import_react206.default.createElement(UserListItem2, { key: bannedUser.userId, user: bannedUser, isOperator: channel === null || channel === void 0 ? void 0 : channel.isOperator(bannedUser.userId), action: function(_a4) {
        var actionRef = _a4.actionRef;
        return (bannedUser === null || bannedUser === void 0 ? void 0 : bannedUser.userId) !== currentUserId ? import_react206.default.createElement(ContextMenu, { menuTrigger: function(toggleDropdown) {
          return import_react206.default.createElement(
            IconButton,
            { className: "sendbird-user-message__more__menu", width: "32px", height: "32px", onClick: toggleDropdown },
            import_react206.default.createElement(Icon, { width: "24px", height: "24px", type: IconTypes.MORE, fillColor: IconColors.CONTENT_INVERSE })
          );
        }, menuItems: function(closeDropdown) {
          return import_react206.default.createElement(
            MenuItems,
            { parentRef: actionRef, closeDropdown, openLeft: true },
            import_react206.default.createElement(MenuItem, { onClick: function() {
              channel === null || channel === void 0 ? void 0 : channel.unbanUser(bannedUser).then(function() {
                closeDropdown();
                refreshList();
              });
            }, testID: "open_channel_setting_banned_user_context_menu_unban" }, stringSet2.OPEN_CHANNEL_SETTING__MODERATION__UNBAN)
          );
        } }) : import_react206.default.createElement(import_react206.default.Fragment, null);
      } });
    }),
    bannedUsers && bannedUsers.length === 0 && import_react206.default.createElement(Label, { className: "sendbird-channel-settings__empty-list", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_3 }, stringSet2.OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__NO_ONE),
    hasNext && import_react206.default.createElement(
      "div",
      { className: "sendbird-channel-settings-banned-user-list__footer" },
      import_react206.default.createElement(Button, { type: ButtonTypes.SECONDARY, size: ButtonSizes.SMALL, onClick: function() {
        setShowModal(true);
      } }, stringSet2.OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__TITLE_ALL)
    ),
    showModal && import_react206.default.createElement(BannedUsersModal2, { onCancel: function() {
      setShowModal(false);
      refreshList();
    } })
  );
};
var copyToClipboard3 = function(text2) {
  if (window.clipboardData && window.clipboardData.setData) {
    return window.clipboardData.setData("Text", text2);
  }
  if (document.queryCommandSupported && document.queryCommandSupported("copy")) {
    var textarea = document.createElement("textarea");
    textarea.textContent = text2;
    textarea.style.position = "fixed";
    document.body.appendChild(textarea);
    textarea.select();
    try {
      return document.execCommand("copy");
    } catch (ex) {
      return false;
    } finally {
      document.body.removeChild(textarea);
    }
  }
  return false;
};
var OperatorUI = function(_a3) {
  var renderChannelProfile = _a3.renderChannelProfile;
  var stringSet2 = (0, import_react206.useContext)(LocalizationContext).stringSet;
  var _b2 = useOpenChannelSettingsContext(), onCloseClick = _b2.onCloseClick, channel = _b2.channel;
  return import_react206.default.createElement(
    import_react206.default.Fragment,
    null,
    import_react206.default.createElement(
      "div",
      { className: "sendbird-openchannel-settings__header" },
      import_react206.default.createElement(Label, { type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, stringSet2.CHANNEL_SETTING__HEADER__TITLE),
      import_react206.default.createElement(Icon, { className: "sendbird-openchannel-settings__close-icon", type: IconTypes.CLOSE, height: "24px", width: "24px", onClick: function() {
        onCloseClick === null || onCloseClick === void 0 ? void 0 : onCloseClick();
      } })
    ),
    import_react206.default.createElement("div", { className: "sendbird-openchannel-settings__profile" }, (renderChannelProfile === null || renderChannelProfile === void 0 ? void 0 : renderChannelProfile()) || import_react206.default.createElement(ChannelProfile2, null)),
    import_react206.default.createElement(
      "div",
      { className: "sendbird-openchannel-settings__url" },
      import_react206.default.createElement(Icon, { className: "sendbird-openchannel-settings__copy-icon", type: IconTypes.COPY, height: "22px", width: "22px", onClick: function() {
        var _a4;
        copyToClipboard3((_a4 = channel === null || channel === void 0 ? void 0 : channel.url) !== null && _a4 !== void 0 ? _a4 : "");
      } }),
      import_react206.default.createElement(Label, { className: "sendbird-openchannel-settings__url-label", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, stringSet2.OPEN_CHANNEL_SETTINGS__OPERATOR_URL),
      import_react206.default.createElement(Label, { className: "sendbird-openchannel-settings__url-value", type: LabelTypography.SUBTITLE_2 }, channel === null || channel === void 0 ? void 0 : channel.url)
    ),
    import_react206.default.createElement(
      AccordionGroup,
      null,
      import_react206.default.createElement(Accordion, { className: "sendbird-openchannel-settings__operators-list", id: "operators", renderTitle: function() {
        return import_react206.default.createElement(
          import_react206.default.Fragment,
          null,
          import_react206.default.createElement(Icon, { className: "sendbird-openchannel-settings__operator-accordion-icon", type: IconTypes.OPERATOR, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" }),
          import_react206.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.OPEN_CHANNEL_SETTINGS__OPERATORS_TITLE)
        );
      }, renderContent: function() {
        return import_react206.default.createElement(
          import_react206.default.Fragment,
          null,
          import_react206.default.createElement(OperatorList2, null)
        );
      } }),
      import_react206.default.createElement(Accordion, { className: "sendbird-channel-settings__operators-list", id: "participants", renderTitle: function() {
        return import_react206.default.createElement(
          import_react206.default.Fragment,
          null,
          import_react206.default.createElement(Icon, { type: IconTypes.MEMBERS, fillColor: IconColors.PRIMARY, width: 24, height: 24, className: "sendbird-openchannel-settings__operator-accordion-icon" }),
          import_react206.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.OPEN_CHANNEL_SETTINGS__PARTICIPANTS_ACCORDION_TITLE)
        );
      }, renderContent: function() {
        return import_react206.default.createElement(
          import_react206.default.Fragment,
          null,
          import_react206.default.createElement(ParticipantList, { isOperatorView: true })
        );
      } }),
      import_react206.default.createElement(Accordion, { className: "sendbird-channel-settings__operators-list", id: "mutedMembers", renderTitle: function() {
        return import_react206.default.createElement(
          import_react206.default.Fragment,
          null,
          import_react206.default.createElement(Icon, { className: "sendbird-openchannel-settings__operator-accordion-icon", type: IconTypes.MUTE, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" }),
          import_react206.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.OPEN_CHANNEL_SETTINGS__MUTED_MEMBERS__TITLE)
        );
      }, renderContent: function() {
        return import_react206.default.createElement(
          import_react206.default.Fragment,
          null,
          import_react206.default.createElement(MutedParticipantList, null)
        );
      } }),
      import_react206.default.createElement(Accordion, { className: "sendbird-channel-settings__operators-list", id: "bannedUsers", renderTitle: function() {
        return import_react206.default.createElement(
          import_react206.default.Fragment,
          null,
          import_react206.default.createElement(Icon, { className: "sendbird-openchannel-settings__operator-accordion-icon", type: IconTypes.BAN, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" }),
          import_react206.default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet2.OPEN_CHANNEL_SETTINGS__BANNED_MEMBERS__TITLE)
        );
      }, renderContent: function() {
        return import_react206.default.createElement(
          import_react206.default.Fragment,
          null,
          import_react206.default.createElement(BannedUserList2, null)
        );
      } })
    ),
    import_react206.default.createElement(DeleteChannel, null)
  );
};

// node_modules/@sendbird/uikit-react/OpenChannelSettings/components/OpenChannelSettingsUI.js
var import_react_dom91 = __toESM(require_react_dom(), 1);
function InvalidChannel(_a3) {
  var onCloseClick = _a3.onCloseClick;
  var stringSet2 = (0, import_react207.useContext)(LocalizationContext).stringSet;
  return import_react207.default.createElement(
    "div",
    { className: "sendbird-openchannel-settings" },
    import_react207.default.createElement(
      "div",
      { className: "sendbird-openchannel-settings__header" },
      import_react207.default.createElement(Label, { type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, stringSet2.CHANNEL_SETTING__HEADER__TITLE),
      import_react207.default.createElement(Icon, { type: IconTypes.CLOSE, className: "sendbird-openchannel-settings__close-icon", height: "24px", width: "24px", onClick: function() {
        onCloseClick === null || onCloseClick === void 0 ? void 0 : onCloseClick();
      } })
    ),
    import_react207.default.createElement(
      "div",
      { className: "sendbird-openchannel-settings__placeholder" },
      import_react207.default.createElement(PlaceHolder, { type: PlaceHolderTypes.WRONG })
    )
  );
}
var OpenChannelUI2 = function(_a3) {
  var _b2, _c, _d;
  var renderOperatorUI = _a3.renderOperatorUI, renderParticipantList = _a3.renderParticipantList;
  var _e3 = useOpenChannelSettingsContext(), channel = _e3.channel, onCloseClick = _e3.onCloseClick, isChannelInitialized = _e3.isChannelInitialized;
  var globalStore = useSendbirdStateContext();
  var logger = (_b2 = globalStore === null || globalStore === void 0 ? void 0 : globalStore.config) === null || _b2 === void 0 ? void 0 : _b2.logger;
  var user = (_d = (_c = globalStore === null || globalStore === void 0 ? void 0 : globalStore.stores) === null || _c === void 0 ? void 0 : _c.userStore) === null || _d === void 0 ? void 0 : _d.user;
  var stringSet2 = (0, import_react207.useContext)(LocalizationContext).stringSet;
  if (isChannelInitialized && !channel) {
    return import_react207.default.createElement(InvalidChannel, { onCloseClick: function() {
      logger.info("OpenChannelSettings: Click close");
      if (onCloseClick) {
        onCloseClick();
      }
    } });
  }
  return import_react207.default.createElement(
    "div",
    { className: "sendbird-openchannel-settings" },
    (channel === null || channel === void 0 ? void 0 : channel.isOperator(user)) && ((renderOperatorUI === null || renderOperatorUI === void 0 ? void 0 : renderOperatorUI()) || import_react207.default.createElement(OperatorUI, null)),
    !(channel === null || channel === void 0 ? void 0 : channel.isOperator(user)) && import_react207.default.createElement(
      "div",
      { className: "sendbird-openchannel-settings__participant" },
      import_react207.default.createElement(
        "div",
        { className: "sendbird-openchannel-settings__header" },
        import_react207.default.createElement(Label, { type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, stringSet2.OPEN_CHANNEL_SETTINGS__PARTICIPANTS_TITLE),
        import_react207.default.createElement(Icon, { type: IconTypes.CLOSE, className: "sendbird-openchannel-settings__close-icon", height: "24px", width: "24px", onClick: function() {
          onCloseClick === null || onCloseClick === void 0 ? void 0 : onCloseClick();
        } })
      ),
      (renderParticipantList === null || renderParticipantList === void 0 ? void 0 : renderParticipantList()) || import_react207.default.createElement(ParticipantList, null)
    )
  );
};

// node_modules/@sendbird/uikit-react/OpenChannelSettings.js
var import_react_dom92 = __toESM(require_react_dom(), 1);
var OpenChannelSetting = function(props) {
  return import_react208.default.createElement(
    OpenChannelSettingsProvider,
    { channelUrl: props === null || props === void 0 ? void 0 : props.channelUrl, onCloseClick: props === null || props === void 0 ? void 0 : props.onCloseClick, onBeforeUpdateChannel: props === null || props === void 0 ? void 0 : props.onBeforeUpdateChannel, onChannelModified: props === null || props === void 0 ? void 0 : props.onChannelModified, onDeleteChannel: props === null || props === void 0 ? void 0 : props.onDeleteChannel, disableUserProfile: props === null || props === void 0 ? void 0 : props.disableUserProfile, renderUserProfile: props === null || props === void 0 ? void 0 : props.renderUserProfile },
    import_react208.default.createElement(OpenChannelUI2, { renderOperatorUI: props === null || props === void 0 ? void 0 : props.renderOperatorUI, renderParticipantList: props === null || props === void 0 ? void 0 : props.renderParticipantList })
  );
};

// node_modules/@sendbird/uikit-react/index.js
var import_react209 = __toESM(require_react());
var import_react_dom93 = __toESM(require_react_dom());
export {
  App,
  Channel,
  ChannelList,
  ChannelSettings,
  MessageSearchPannel as MessageSearch,
  OpenChannel,
  OpenChannelSetting as OpenChannelSettings,
  SendbirdProvider as SendBirdProvider,
  TypingIndicatorType,
  getStringSet,
  sendbirdSelectors as sendBirdSelectors,
  sendbirdSelectors,
  useSendbirdStateContext,
  withSendbirdContext as withSendBird
};
/*! Bundled license information:

css-vars-ponyfill/dist/css-vars-ponyfill.esm.js:
  (*!
   * css-vars-ponyfill
   * v2.4.9
   * https://jhildenbiddle.github.io/css-vars-ponyfill/
   * (c) 2018-2024 John Hildenbiddle <http://hildenbiddle.com>
   * MIT license
   *)
  (*!
   * get-css-data
   * v2.1.0
   * https://github.com/jhildenbiddle/get-css-data
   * (c) 2018-2022 John Hildenbiddle <http://hildenbiddle.com>
   * MIT license
   *)
  (**
   * Gets CSS data from <style> and <link> nodes (including @imports), then
   * returns data in order processed by DOM. Allows specifying nodes to
   * include/exclude and filtering CSS data using RegEx.
   *
   * @preserve
   * @param {object}   [options] The options object
   * @param {object}   [options.rootElement=document] Root element to traverse for
   *                   <link> and <style> nodes.
   * @param {string}   [options.include] CSS selector matching <link> and <style>
   *                   nodes to include
   * @param {string}   [options.exclude] CSS selector matching <link> and <style>
   *                   nodes to exclude
   * @param {object}   [options.filter] Regular expression used to filter node CSS
   *                   data. Each block of CSS data is tested against the filter,
   *                   and only matching data is included.
   * @param {boolean}  [options.skipDisabled=true] Determines if disabled
   *                   stylesheets will be skipped while collecting CSS data.
   * @param {boolean}  [options.useCSSOM=false] Determines if CSS data will be
   *                   collected from a stylesheet's runtime values instead of its
   *                   text content. This is required to get accurate CSS data
   *                   when a stylesheet has been modified using the deleteRule()
   *                   or insertRule() methods because these modifications will
   *                   not be reflected in the stylesheet's text content.
   * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes
   *                   1) the XHR object, 2) source node reference, and 3) the
   *                   source URL as arguments.
   * @param {function} [options.onSuccess] Callback on each CSS node read. Passes
   *                   1) CSS text, 2) source node reference, and 3) the source
   *                   URL as arguments.
   * @param {function} [options.onError] Callback on each error. Passes 1) the XHR
   *                   object for inspection, 2) soure node reference, and 3) the
   *                   source URL that failed (either a <link> href or an @import)
   *                   as arguments
   * @param {function} [options.onComplete] Callback after all nodes have been
   *                   processed. Passes 1) concatenated CSS text, 2) an array of
   *                   CSS text in DOM order, and 3) an array of nodes in DOM
   *                   order as arguments.
   *
   * @example
   *
   *   getCssData({
   *     rootElement : document,
   *     include     : 'style,link[rel="stylesheet"]',
   *     exclude     : '[href="skip.css"]',
   *     filter      : /red/,
   *     skipDisabled: true,
   *     useCSSOM    : false,
   *     onBeforeSend(xhr, node, url) {
   *       // ...
   *     }
   *     onSuccess(cssText, node, url) {
   *       // ...
   *     }
   *     onError(xhr, node, url) {
   *       // ...
   *     },
   *     onComplete(cssText, cssArray, nodeArray) {
   *       // ...
   *     }
   *   });
   *)
  (**
   * Fetches, parses, and transforms CSS custom properties from specified
   * <style> and <link> elements into static values, then appends a new <style>
   * element with static values to the DOM to provide CSS custom property
   * compatibility for legacy browsers. Also provides a single interface for
   * live updates of runtime values in both modern and legacy browsers.
   *
   * @preserve
   * @param {object}   [options] Options object
   * @param {object}   [options.rootElement=document] Root element to traverse for
   *                   <link> and <style> nodes
   * @param {boolean}  [options.shadowDOM=false] Determines if shadow DOM <link>
   *                   and <style> nodes will be processed.
   * @param {string}   [options.include="style,link[rel=stylesheet]"] CSS selector
   *                   matching <link re="stylesheet"> and <style> nodes to
   *                   process
   * @param {string}   [options.exclude] CSS selector matching <link
   *                   rel="stylehseet"> and <style> nodes to exclude from those
   *                   matches by options.include
   * @param {object}   [options.variables] A map of custom property name/value
   *                   pairs. Property names can omit or include the leading
   *                   double-hyphen (—), and values specified will override
   *                   previous values
   * @param {boolean}  [options.onlyLegacy=true] Determines if the ponyfill will
   *                   only generate legacy-compatible CSS in browsers that lack
   *                   native support (i.e., legacy browsers)
   * @param {boolean}  [options.preserveStatic=true] Determines if CSS
   *                   declarations that do not reference a custom property will
   *                   be preserved in the transformed CSS
   * @param {boolean}  [options.preserveVars=false] Determines if CSS custom
   *                   property declarations will be preserved in the transformed
   *                   CSS
   * @param {boolean}  [options.silent=false] Determines if warning and error
   *                   messages will be displayed on the console
   * @param {boolean}  [options.updateDOM=true] Determines if the ponyfill will
   *                   update the DOM after processing CSS custom properties
   * @param {boolean}  [options.updateURLs=true] Determines if relative url()
   *                   paths will be converted to absolute urls in external CSS
   * @param {boolean}  [options.watch=false] Determines if a MutationObserver will
   *                   be created that will execute the ponyfill when a <link> or
   *                   <style> DOM mutation is observed
   * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes
   *                   1) the XHR object, 2) source node reference, and 3) the
   *                   source URL as arguments
   * @param {function} [options.onError] Callback after a CSS parsing error has
   *                   occurred or an XHR request has failed. Passes 1) an error
   *                   message, and 2) source node reference, 3) xhr, and 4 url as
   *                   arguments.
   * @param {function} [options.onWarning] Callback after each CSS parsing warning
   *                   has occurred. Passes 1) a warning message as an argument.
   * @param {function} [options.onSuccess] Callback after CSS data has been
   *                   collected from each node and before CSS custom properties
   *                   have been transformed. Allows modifying the CSS data before
   *                   it is transformed by returning any string value (or false
   *                   to skip). Passes 1) CSS text, 2) source node reference, and
   *                   3) the source URL as arguments.
   * @param {function} [options.onComplete] Callback after all CSS has been
   *                   processed, legacy-compatible CSS has been generated, and
   *                   (optionally) the DOM has been updated. Passes 1) a CSS
   *                   string with CSS variable values resolved, 2) an array of
   *                   output <style> node references that have been appended to
   *                   the DOM, 3) an object containing all custom properies names
   *                   and values, and 4) the ponyfill execution time in
   *                   milliseconds.
   * @param {function} [options.onFinally] Callback in modern and legacy browsers
   *                   after the ponyfill has finished all tasks. Passes 1) a
   *                   boolean indicating if the last ponyfill call resulted in a
   *                   style change, 2) a boolean indicating if the current
   *                   browser provides native support for CSS custom properties,
   *                   and 3) the ponyfill execution time in milliseconds.
   * @example
   *
   *   cssVars({
   *     rootElement   : document,
   *     shadowDOM     : false,
   *     include       : 'style,link[rel="stylesheet"]',
   *     exclude       : '',
   *     variables     : {},
   *     onlyLegacy    : true,
   *     preserveStatic: true,
   *     preserveVars  : false,
   *     silent        : false,
   *     updateDOM     : true,
   *     updateURLs    : true,
   *     watch         : false,
   *     onBeforeSend(xhr, node, url) {},
   *     onError(message, node, xhr, url) {},
   *     onWarning(message) {},
   *     onSuccess(cssText, node, url) {},
   *     onComplete(cssText, styleNode, cssVariables, benchmark) {},
   *     onFinally(hasChanged, hasNativeSupport, benchmark)
   *   });
   *)

dompurify/dist/purify.es.mjs:
  (*! @license DOMPurify 3.1.7 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.1.7/LICENSE *)
*/
//# sourceMappingURL=@sendbird_uikit-react.js.map
